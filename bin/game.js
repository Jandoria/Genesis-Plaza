/*! decentraland-ecs@6.6.0 */;
!function(t,e){for(var n in e)t[n]=e[n]}(this,function(t){var e={};function n(o){if(e[o])return e[o].exports;var r=e[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(o,r,function(e){return t[e]}.bind(null,r));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=30)}([function(t,e,n){"use strict";var o=this&&this.__assign||function(){return(o=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var r in e=arguments[n])Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t}).apply(this,arguments)},r=this&&this.__decorate||function(t,e,n,o){var r,i=arguments.length,s=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var a=t.length-1;a>=0;a--)(r=t[a])&&(s=(i<3?r(s):i>3?r(e,n,s):r(e,n))||s);return i>3&&s&&Object.defineProperty(e,n,s),s},i=this&&this.__read||function(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var o,r,i=n.call(t),s=[];try{for(;(void 0===e||e-- >0)&&!(o=i.next()).done;)s.push(o.value)}catch(t){r={error:t}}finally{try{o&&!o.done&&(n=i.return)&&n.call(i)}finally{if(r)throw r.error}}return s},s=this&&this.__spread||function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(i(arguments[e]));return t};Object.defineProperty(e,"__esModule",{value:!0});var a=n(1),p=n(8),u=n(18),l=function(){function t(t,e,n){this.componentId=t,this.componentName=e,this.classId=n}return t=r([p.EventConstructor()],t)}();e.DisposableComponentCreated=l;var c=function(){function t(t){this.componentId=t}return t=r([p.EventConstructor()],t)}();e.DisposableComponentRemoved=c;var h=function(){function t(t,e){this.componentId=t,this.component=e}return t=r([p.EventConstructor()],t)}();function d(t,e){return function(n){if(n.isComponent)throw new TypeError("You cannot extend a component. Trying to extend "+n.originalClassName+" with: "+t);if("number"!=typeof e||isNaN(e))throw new Error("classId: "+e+" is an invalid integer");var o=n,r=function(){if(!d.engine)throw new Error("You need to set a DisposableComponent.engine before creating disposable components");var n=Array.prototype.slice.call(arguments),r=new(o.bind.apply(o,s([void 0],n))),i=a.newId("C");return Object.defineProperty(r,"__name__symbol_",{enumerable:!1,writable:!1,configurable:!1,value:t}),Object.defineProperty(r,"__component__id_",{enumerable:!1,writable:!1,configurable:!1,value:i}),void 0!==e&&Object.defineProperty(r,"__classId__symbol_",{enumerable:!1,writable:!1,configurable:!1,value:e}),d.engine&&d.engine.registerComponent(r),r};return void 0!==e&&(r.__classId__symbol_=e),r.__name__symbol_=t,r.isComponent=!0,r.isDisposableComponent=!0,r.originalClassName=t,(r.prototype=n.prototype).constructor=n,r}}function f(t){if(!t)throw new TypeError(t+" is not a component.");if(t.__component__id_)return t.__component__id_;throw new TypeError(t+" is not a registered disposable component.")}e.DisposableComponentUpdated=h,e.Component=function(t,e){return function(n){if(n.isComponent)throw new TypeError("You cannot extend a component. Trying to extend "+n.originalClassName+" with: "+t);var o=n,r=function(){var n=Array.prototype.slice.call(arguments),r=new(o.bind.apply(o,s([void 0],n)));return Object.defineProperty(r,"__name__symbol_",{enumerable:!1,writable:!1,configurable:!1,value:t}),void 0!==e&&Object.defineProperty(r,"__classId__symbol_",{enumerable:!1,writable:!1,configurable:!1,value:e}),r};return void 0!==e&&(r.__classId__symbol_=e),r.__name__symbol_=t,r.isComponent=!0,r.originalClassName=t,(r.prototype=n.prototype).constructor=n,r}},e.DisposableComponent=d,function(t){t.engine=null}(d=e.DisposableComponent||(e.DisposableComponent={})),e.getComponentName=function(t){if(!t)throw new TypeError(t+" is not a component.");if(t.__name__symbol_)return t.__name__symbol_;throw new TypeError(t+" is not a registered component.")},e.getComponentClassId=function(t){if(!t)throw new TypeError(t+" is not a component.");if(t.__classId__symbol_)return t.__classId__symbol_;if(!t.__name__symbol_)throw new TypeError(t+" is not a registered component.");return null},e.getComponentId=f;var y=function(){function t(){this.dirty=!1,this.data={},this.subscriptions=[]}return t.component=function(t,e){if(delete t[e]){var n=e+"_"+Math.random();t[n]=void 0,Object.defineProperty(t,n,o(o({},Object.getOwnPropertyDescriptor(t,n)),{enumerable:!1})),Object.defineProperty(t,e.toString(),{get:function(){return this[n]},set:function(t){var o=this[n];if(this.data[e]=t?f(t):null,this[n]=t,t!==o){this.dirty=!0;for(var r=0;r<this.subscriptions.length;r++)this.subscriptions[r](e,t,o)}},enumerable:!0})}},t.field=function(t,e){delete t[e]&&Object.defineProperty(t,e.toString(),{get:function(){return this.data[e]},set:function(t){var n=this.data[e];if(this.data[e]=t,t!==n){this.dirty=!0;for(var o=0;o<this.subscriptions.length;o++)this.subscriptions[o](e,t,n)}},enumerable:!0})},t.uiValue=function(t,e){delete t[e]&&Object.defineProperty(t,e.toString(),{get:function(){return this.data[e].toString()},set:function(t){var n=this.data[e],o=new u.UIValue(t);if(this.data[e]=o,o!==n){this.dirty=!0;for(var r=0;r<this.subscriptions.length;r++)this.subscriptions[r](e,o,n)}},enumerable:!0})},t.readonly=function(t,e){delete t[e]&&Object.defineProperty(t,e.toString(),{get:function(){if(e in this.data==!1)throw new Error("The field "+e+" is uninitialized");return this.data[e]},set:function(t){if(e in this.data)throw new Error("The field "+e+" is readonly");this.data[e]=t,this.dirty=!0},enumerable:!0,configurable:!1})},t.prototype.onChange=function(t){return this.subscriptions.push(t),this},t.prototype.toJSON=function(){return this.data},t}();e.ObservableComponent=y,e.isDisposableComponent=function(t){return"__component__id_"in t}},function(t,e,n){"use strict";var o=this&&this.__read||function(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var o,r,i=n.call(t),s=[];try{for(;(void 0===e||e-- >0)&&!(o=i.next()).done;)s.push(o.value)}catch(t){r={error:t}}finally{try{o&&!o.done&&(n=i.return)&&n.call(i)}finally{if(r)throw r.error}}return s},r=this&&this.__spread||function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(o(arguments[e]));return t};Object.defineProperty(e,"__esModule",{value:!0});var i=0;e.log=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];"undefined"!=typeof dcl?dcl.log.apply(dcl,r(t)):console.log.apply(console,r(["DEBUG:"],t))},e.error=function(t,e){"undefined"!=typeof dcl?dcl.error(t,e):console.error("ERROR:",t,e)},e.newId=function(t){if(i++,0===t.length)throw new Error("newId(type: string): type cannot be empty");return t+i.toString(36)},e.uuid=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(t){var e=16*Math.random()|0;return("x"===t?e:3&e|8).toString(16)}))},e.buildArray=function(t,e){for(var n=[],o=0;o<t;++o)n.push(e());return n},e.openExternalURL=function(t){"undefined"!=typeof dcl?dcl.openExternalUrl(t):console.error("ERROR: openExternalURL dcl is undefined")},e.openNFTDialog=function(t,e){if(void 0===e&&(e=null),"undefined"!=typeof dcl){var n=t.match(/ethereum:\/\/(.+)\/(.+)/);if(!n||n.length<3)return;dcl.openNFTDialog(n[1],n[2],e)}else console.error("ERROR: openNFTDialog dcl is undefined")}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.CW=0]="CW",t[t.CCW=1]="CCW"}(e.Orientation||(e.Orientation={})),function(t){t[t.LOCAL=0]="LOCAL",t[t.WORLD=1]="WORLD",t[t.BONE=2]="BONE"}(e.Space||(e.Space={})),e.ToGammaSpace=1/2.2,e.ToLinearSpace=2.2,e.Epsilon=1e-6,e.DEG2RAD=Math.PI/180,e.RAD2DEG=360/(2*Math.PI)},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(9),r=n(2),i=n(10),s=n(6),a=function(){function t(t,e,n){void 0===t&&(t=0),void 0===e&&(e=0),void 0===n&&(n=0),this.x=t,this.y=e,this.z=n}return Object.defineProperty(t.prototype,"isNonUniform",{get:function(){var t=Math.abs(this.x),e=Math.abs(this.y);if(t!==e)return!0;var n=Math.abs(this.z);return t!==n||e!==n},enumerable:!0,configurable:!0}),t.Add=function(e,n){return new t(e.x,e.y,e.z).addInPlace(n)},t.GetClipFactor=function(e,n,o,r){var i=t.Dot(e,o)-r;return i/(i-(t.Dot(n,o)-r))},t.GetAngleBetweenVectors=function(e,n,r){var i=e.normalizeToRef(o.MathTmp.Vector3[1]),s=n.normalizeToRef(o.MathTmp.Vector3[2]),a=t.Dot(i,s),p=o.MathTmp.Vector3[3];return t.CrossToRef(i,s,p),t.Dot(p,r)>0?Math.acos(a):-Math.acos(a)},t.FromArray=function(e,n){return void 0===n&&(n=0),new t(e[n],e[n+1],e[n+2])},t.FromFloatArray=function(e,n){return t.FromArray(e,n)},t.FromArrayToRef=function(t,e,n){n.x=t[e],n.y=t[e+1],n.z=t[e+2]},t.FromFloatArrayToRef=function(e,n,o){return t.FromArrayToRef(e,n,o)},t.FromFloatsToRef=function(t,e,n,o){o.copyFromFloats(t,e,n)},t.Zero=function(){return new t(0,0,0)},t.One=function(){return new t(1,1,1)},t.Up=function(){return new t(0,1,0)},t.Down=function(){return new t(0,-1,0)},t.Forward=function(){return new t(0,0,1)},t.Backward=function(){return new t(0,0,-1)},t.Right=function(){return new t(1,0,0)},t.Left=function(){return new t(-1,0,0)},t.TransformCoordinates=function(e,n){var o=t.Zero();return t.TransformCoordinatesToRef(e,n,o),o},t.TransformCoordinatesToRef=function(e,n,o){return t.TransformCoordinatesFromFloatsToRef(e.x,e.y,e.z,n,o)},t.TransformCoordinatesFromFloatsToRef=function(t,e,n,o,r){var i=o.m,s=t*i[0]+e*i[4]+n*i[8]+i[12],a=t*i[1]+e*i[5]+n*i[9]+i[13],p=t*i[2]+e*i[6]+n*i[10]+i[14],u=1/(t*i[3]+e*i[7]+n*i[11]+i[15]);r.x=s*u,r.y=a*u,r.z=p*u},t.TransformNormal=function(e,n){var o=t.Zero();return t.TransformNormalToRef(e,n,o),o},t.TransformNormalToRef=function(t,e,n){this.TransformNormalFromFloatsToRef(t.x,t.y,t.z,e,n)},t.TransformNormalFromFloatsToRef=function(t,e,n,o,r){var i=o.m;r.x=t*i[0]+e*i[4]+n*i[8],r.y=t*i[1]+e*i[5]+n*i[9],r.z=t*i[2]+e*i[6]+n*i[10]},t.CatmullRom=function(e,n,o,r,i){var s=i*i,a=i*s;return new t(.5*(2*n.x+(-e.x+o.x)*i+(2*e.x-5*n.x+4*o.x-r.x)*s+(-e.x+3*n.x-3*o.x+r.x)*a),.5*(2*n.y+(-e.y+o.y)*i+(2*e.y-5*n.y+4*o.y-r.y)*s+(-e.y+3*n.y-3*o.y+r.y)*a),.5*(2*n.z+(-e.z+o.z)*i+(2*e.z-5*n.z+4*o.z-r.z)*s+(-e.z+3*n.z-3*o.z+r.z)*a))},t.Clamp=function(e,n,o){var r=new t;return t.ClampToRef(e,n,o,r),r},t.ClampToRef=function(t,e,n,o){var r=t.x;r=(r=r>n.x?n.x:r)<e.x?e.x:r;var i=t.y;i=(i=i>n.y?n.y:i)<e.y?e.y:i;var s=t.z;s=(s=s>n.z?n.z:s)<e.z?e.z:s,o.copyFromFloats(r,i,s)},t.Hermite=function(e,n,o,r,i){var s=i*i,a=i*s,p=2*a-3*s+1,u=-2*a+3*s,l=a-2*s+i,c=a-s;return new t(e.x*p+o.x*u+n.x*l+r.x*c,e.y*p+o.y*u+n.y*l+r.y*c,e.z*p+o.z*u+n.z*l+r.z*c)},t.Lerp=function(e,n,o){var r=new t(0,0,0);return t.LerpToRef(e,n,o,r),r},t.LerpToRef=function(t,e,n,o){o.x=t.x+(e.x-t.x)*n,o.y=t.y+(e.y-t.y)*n,o.z=t.z+(e.z-t.z)*n},t.Dot=function(t,e){return t.x*e.x+t.y*e.y+t.z*e.z},t.Cross=function(e,n){var o=t.Zero();return t.CrossToRef(e,n,o),o},t.CrossToRef=function(t,e,n){var o=t.y*e.z-t.z*e.y,r=t.z*e.x-t.x*e.z,i=t.x*e.y-t.y*e.x;n.copyFromFloats(o,r,i)},t.Normalize=function(e){var n=t.Zero();return t.NormalizeToRef(e,n),n},t.NormalizeToRef=function(t,e){t.normalizeToRef(e)},t.Minimize=function(e,n){var o=new t(e.x,e.y,e.z);return o.minimizeInPlace(n),o},t.Maximize=function(e,n){var o=new t(e.x,e.y,e.z);return o.maximizeInPlace(n),o},t.Distance=function(e,n){return Math.sqrt(t.DistanceSquared(e,n))},t.DistanceSquared=function(t,e){var n=t.x-e.x,o=t.y-e.y,r=t.z-e.z;return n*n+o*o+r*r},t.Center=function(e,n){var o=t.Add(e,n);return o.scaleInPlace(.5),o},t.RotationFromAxis=function(e,n,o){var r=t.Zero();return t.RotationFromAxisToRef(e,n,o,r),r},t.RotationFromAxisToRef=function(t,e,n,r){var s=o.MathTmp.Quaternion[0];i.Quaternion.RotationQuaternionFromAxisToRef(t,e,n,s),r.copyFrom(s.eulerAngles)},t.prototype.toString=function(){return"("+this.x+", "+this.y+", "+this.z+")"},t.prototype.getClassName=function(){return"Vector3"},t.prototype.getHashCode=function(){var t=this.x||0;return t=397*(t=397*t^(this.y||0))^(this.z||0)},t.prototype.asArray=function(){var t=[];return this.toArray(t,0),t},t.prototype.toArray=function(t,e){return void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,this},t.prototype.toQuaternion=function(){return i.Quaternion.Identity.setEuler(this.y,this.x,this.z)},t.prototype.addInPlace=function(t){return this.addInPlaceFromFloats(t.x,t.y,t.z)},t.prototype.addInPlaceFromFloats=function(t,e,n){return this.x+=t,this.y+=e,this.z+=n,this},t.prototype.add=function(e){return new t(this.x+e.x,this.y+e.y,this.z+e.z)},t.prototype.addToRef=function(t,e){return e.copyFromFloats(this.x+t.x,this.y+t.y,this.z+t.z)},t.prototype.subtractInPlace=function(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this},t.prototype.subtract=function(e){return new t(this.x-e.x,this.y-e.y,this.z-e.z)},t.prototype.subtractToRef=function(t,e){return this.subtractFromFloatsToRef(t.x,t.y,t.z,e)},t.prototype.subtractFromFloats=function(e,n,o){return new t(this.x-e,this.y-n,this.z-o)},t.prototype.subtractFromFloatsToRef=function(t,e,n,o){return o.copyFromFloats(this.x-t,this.y-e,this.z-n)},t.prototype.applyMatrix4=function(t){this.applyMatrix4ToRef(t,this)},t.prototype.applyMatrix4ToRef=function(t,e){var n=this.x,o=this.y,r=this.z,i=t.m,s=1/(i[3]*n+i[7]*o+i[11]*r+i[15]);return e.x=(i[0]*n+i[4]*o+i[8]*r+i[12])*s,e.y=(i[1]*n+i[5]*o+i[9]*r+i[13])*s,e.z=(i[2]*n+i[6]*o+i[10]*r+i[14])*s,e},t.prototype.rotate=function(t){return this.rotateToRef(t,this)},t.prototype.rotateToRef=function(t,e){var n=this.x,o=this.y,r=this.z,i=t.x,s=t.y,a=t.z,p=t.w,u=p*n+s*r-a*o,l=p*o+a*n-i*r,c=p*r+i*o-s*n,h=-i*n-s*o-a*r;return e.x=u*p+h*-i+l*-a-c*-s,e.y=l*p+h*-s+c*-i-u*-a,e.z=c*p+h*-a+u*-s-l*-i,e},t.prototype.negate=function(){return new t(-this.x,-this.y,-this.z)},t.prototype.scaleInPlace=function(t){return this.x*=t,this.y*=t,this.z*=t,this},t.prototype.scale=function(e){return new t(this.x*e,this.y*e,this.z*e)},t.prototype.scaleToRef=function(t,e){return e.copyFromFloats(this.x*t,this.y*t,this.z*t)},t.prototype.scaleAndAddToRef=function(t,e){return e.addInPlaceFromFloats(this.x*t,this.y*t,this.z*t)},t.prototype.equals=function(t){return t&&this.x===t.x&&this.y===t.y&&this.z===t.z},t.prototype.equalsWithEpsilon=function(t,e){return void 0===e&&(e=r.Epsilon),t&&s.Scalar.WithinEpsilon(this.x,t.x,e)&&s.Scalar.WithinEpsilon(this.y,t.y,e)&&s.Scalar.WithinEpsilon(this.z,t.z,e)},t.prototype.equalsToFloats=function(t,e,n){return this.x===t&&this.y===e&&this.z===n},t.prototype.multiplyInPlace=function(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this},t.prototype.multiply=function(t){return this.multiplyByFloats(t.x,t.y,t.z)},t.prototype.multiplyToRef=function(t,e){return e.copyFromFloats(this.x*t.x,this.y*t.y,this.z*t.z)},t.prototype.multiplyByFloats=function(e,n,o){return new t(this.x*e,this.y*n,this.z*o)},t.prototype.divide=function(e){return new t(this.x/e.x,this.y/e.y,this.z/e.z)},t.prototype.divideToRef=function(t,e){return e.copyFromFloats(this.x/t.x,this.y/t.y,this.z/t.z)},t.prototype.divideInPlace=function(t){return this.divideToRef(t,this)},t.prototype.minimizeInPlace=function(t){return this.minimizeInPlaceFromFloats(t.x,t.y,t.z)},t.prototype.maximizeInPlace=function(t){return this.maximizeInPlaceFromFloats(t.x,t.y,t.z)},t.prototype.minimizeInPlaceFromFloats=function(t,e,n){return t<this.x&&(this.x=t),e<this.y&&(this.y=e),n<this.z&&(this.z=n),this},t.prototype.maximizeInPlaceFromFloats=function(t,e,n){return t>this.x&&(this.x=t),e>this.y&&(this.y=e),n>this.z&&(this.z=n),this},t.prototype.floor=function(){return new t(Math.floor(this.x),Math.floor(this.y),Math.floor(this.z))},t.prototype.fract=function(){return new t(this.x-Math.floor(this.x),this.y-Math.floor(this.y),this.z-Math.floor(this.z))},t.prototype.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},t.prototype.lengthSquared=function(){return this.x*this.x+this.y*this.y+this.z*this.z},t.prototype.normalize=function(){return this.normalizeFromLength(this.length())},t.prototype.normalizeFromLength=function(t){return 0===t||1===t?this:this.scaleInPlace(1/t)},t.prototype.normalizeToNew=function(){var e=new t(0,0,0);return this.normalizeToRef(e),e},t.prototype.normalizeToRef=function(t){var e=this.length();return 0===e||1===e?t.copyFromFloats(this.x,this.y,this.z):this.scaleToRef(1/e,t)},t.prototype.clone=function(){return new t(this.x,this.y,this.z)},t.prototype.copyFrom=function(t){return this.copyFromFloats(t.x,t.y,t.z)},t.prototype.copyFromFloats=function(t,e,n){return this.x=t,this.y=e,this.z=n,this},t.prototype.set=function(t,e,n){return this.copyFromFloats(t,e,n)},t.prototype.setAll=function(t){return this.x=this.y=this.z=t,this},t}();e.Vector3=a},function(t,e,n){"use strict";var o,r=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),i=this&&this.__assign||function(){return(i=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var r in e=arguments[n])Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t}).apply(this,arguments)},s=this&&this.__decorate||function(t,e,n,o){var r,i=arguments.length,s=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var a=t.length-1;a>=0;a--)(r=t[a])&&(s=(i<3?r(s):i>3?r(e,n,s):r(e,n))||s);return i>3&&s&&Object.defineProperty(e,n,s),s};Object.defineProperty(e,"__esModule",{value:!0});var a,p=n(0),u=n(5),l=n(26),c=n(1),h=n(16);!function(t){t[t.TRANSFORM=1]="TRANSFORM",t[t.UUID_CALLBACK=8]="UUID_CALLBACK",t[t.BOX_SHAPE=16]="BOX_SHAPE",t[t.SPHERE_SHAPE=17]="SPHERE_SHAPE",t[t.PLANE_SHAPE=18]="PLANE_SHAPE",t[t.CONE_SHAPE=19]="CONE_SHAPE",t[t.CYLINDER_SHAPE=20]="CYLINDER_SHAPE",t[t.TEXT_SHAPE=21]="TEXT_SHAPE",t[t.NFT_SHAPE=22]="NFT_SHAPE",t[t.UI_WORLD_SPACE_SHAPE=23]="UI_WORLD_SPACE_SHAPE",t[t.UI_SCREEN_SPACE_SHAPE=24]="UI_SCREEN_SPACE_SHAPE",t[t.UI_CONTAINER_RECT=25]="UI_CONTAINER_RECT",t[t.UI_CONTAINER_STACK=26]="UI_CONTAINER_STACK",t[t.UI_TEXT_SHAPE=27]="UI_TEXT_SHAPE",t[t.UI_INPUT_TEXT_SHAPE=28]="UI_INPUT_TEXT_SHAPE",t[t.UI_IMAGE_SHAPE=29]="UI_IMAGE_SHAPE",t[t.UI_SLIDER_SHAPE=30]="UI_SLIDER_SHAPE",t[t.CIRCLE_SHAPE=31]="CIRCLE_SHAPE",t[t.BILLBOARD=32]="BILLBOARD",t[t.ANIMATION=33]="ANIMATION",t[t.FONT=34]="FONT",t[t.UI_FULLSCREEN_SHAPE=40]="UI_FULLSCREEN_SHAPE",t[t.UI_BUTTON_SHAPE=41]="UI_BUTTON_SHAPE",t[t.GLTF_SHAPE=54]="GLTF_SHAPE",t[t.OBJ_SHAPE=55]="OBJ_SHAPE",t[t.AVATAR_SHAPE=56]="AVATAR_SHAPE",t[t.BASIC_MATERIAL=64]="BASIC_MATERIAL",t[t.PBR_MATERIAL=65]="PBR_MATERIAL",t[t.HIGHLIGHT_ENTITY=66]="HIGHLIGHT_ENTITY",t[t.SOUND=67]="SOUND",t[t.TEXTURE=68]="TEXTURE",t[t.VIDEO_CLIP=70]="VIDEO_CLIP",t[t.VIDEO_TEXTURE=71]="VIDEO_TEXTURE",t[t.AUDIO_CLIP=200]="AUDIO_CLIP",t[t.AUDIO_SOURCE=201]="AUDIO_SOURCE",t[t.AUDIO_STREAM=202]="AUDIO_STREAM",t[t.GIZMOS=203]="GIZMOS",t[t.SMART_ITEM=204]="SMART_ITEM",t[t.AVATAR_MODIFIER_AREA=205]="AVATAR_MODIFIER_AREA"}(a=e.CLASS_ID||(e.CLASS_ID={})),function(t){t.HIDE_AVATARS="HIDE_AVATARS",t.DISABLE_PASSPORTS="DISABLE_PASSPORTS"}(e.AvatarModifiers||(e.AvatarModifiers={}));var d=function(t){function e(e){var n=t.call(this)||this;return n.area=e.area,n.modifiers=e.modifiers,n}return r(e,t),s([p.ObservableComponent.field],e.prototype,"area",void 0),s([p.ObservableComponent.field],e.prototype,"modifiers",void 0),e=s([p.Component("engine.avatarModifierArea",a.AVATAR_MODIFIER_AREA)],e)}(p.ObservableComponent);e.AvatarModifierArea=d;var f=function(t){function e(e){void 0===e&&(e={});var n=t.call(this)||this;return n.position=e.position||u.Vector3.Zero(),n.rotation=e.rotation||u.Quaternion.Identity,n.scale=e.scale||new u.Vector3(1,1,1),n}return r(e,t),Object.defineProperty(e.prototype,"eulerAngles",{get:function(){return this.rotation.eulerAngles},enumerable:!0,configurable:!0}),e.prototype.lookAt=function(t,e){void 0===e&&(e=u.MathTmp.staticUp);var n=new u.Matrix;return u.Matrix.LookAtLHToRef(this.position,t,e,n),n.invert(),u.Quaternion.FromRotationMatrixToRef(n,this.rotation),this},e.prototype.rotate=function(t,e){return this.rotation.multiplyInPlace(this.rotation.angleAxis(e,t)),this},e.prototype.translate=function(t){return this.position.addInPlace(t),this},s([p.ObservableComponent.field],e.prototype,"position",void 0),s([p.ObservableComponent.field],e.prototype,"rotation",void 0),s([p.ObservableComponent.field],e.prototype,"scale",void 0),e=s([p.Component("engine.transform",a.TRANSFORM)],e)}(p.ObservableComponent);e.Transform=f;var y=function(t){function e(e,n,o){void 0===e&&(e=!0),void 0===n&&(n=!0),void 0===o&&(o=!0);var r=t.call(this)||this;return r.x=!0,r.y=!0,r.z=!0,r.x=e,r.y=n,r.z=o,r}return r(e,t),s([p.ObservableComponent.field],e.prototype,"x",void 0),s([p.ObservableComponent.field],e.prototype,"y",void 0),s([p.ObservableComponent.field],e.prototype,"z",void 0),e=s([p.Component("engine.billboard",a.BILLBOARD)],e)}(p.ObservableComponent);e.Billboard=y;var v=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.withCollisions=!0,e.isPointerBlocker=!0,e.visible=!0,e}return r(e,t),s([p.ObservableComponent.field],e.prototype,"withCollisions",void 0),s([p.ObservableComponent.field],e.prototype,"isPointerBlocker",void 0),s([p.ObservableComponent.field],e.prototype,"visible",void 0),e}(p.ObservableComponent);e.Shape=v;var m=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return r(e,t),e=s([p.DisposableComponent("engine.shape",a.BOX_SHAPE)],e)}(v);e.BoxShape=m;var b=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return r(e,t),e=s([p.DisposableComponent("engine.shape",a.SPHERE_SHAPE)],e)}(v);e.SphereShape=b;var g=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return r(e,t),s([p.ObservableComponent.field],e.prototype,"segments",void 0),s([p.ObservableComponent.field],e.prototype,"arc",void 0),e=s([p.DisposableComponent("engine.shape",a.CIRCLE_SHAPE)],e)}(v);e.CircleShape=g;var _=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.width=1,e.height=1,e}return r(e,t),s([p.ObservableComponent.field],e.prototype,"width",void 0),s([p.ObservableComponent.field],e.prototype,"height",void 0),s([p.ObservableComponent.field],e.prototype,"uvs",void 0),e=s([p.DisposableComponent("engine.shape",a.PLANE_SHAPE)],e)}(v);e.PlaneShape=_;var C=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.radiusTop=0,e.radiusBottom=1,e.segmentsHeight=1,e.segmentsRadial=36,e.openEnded=!1,e.radius=null,e.arc=360,e}return r(e,t),s([p.ObservableComponent.field],e.prototype,"radiusTop",void 0),s([p.ObservableComponent.field],e.prototype,"radiusBottom",void 0),s([p.ObservableComponent.field],e.prototype,"segmentsHeight",void 0),s([p.ObservableComponent.field],e.prototype,"segmentsRadial",void 0),s([p.ObservableComponent.field],e.prototype,"openEnded",void 0),s([p.ObservableComponent.field],e.prototype,"radius",void 0),s([p.ObservableComponent.field],e.prototype,"arc",void 0),e=s([p.DisposableComponent("engine.shape",a.CONE_SHAPE)],e)}(v);e.ConeShape=C;var O=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.radiusTop=1,e.radiusBottom=1,e.segmentsHeight=1,e.segmentsRadial=36,e.openEnded=!1,e.radius=null,e.arc=360,e}return r(e,t),s([p.ObservableComponent.field],e.prototype,"radiusTop",void 0),s([p.ObservableComponent.field],e.prototype,"radiusBottom",void 0),s([p.ObservableComponent.field],e.prototype,"segmentsHeight",void 0),s([p.ObservableComponent.field],e.prototype,"segmentsRadial",void 0),s([p.ObservableComponent.field],e.prototype,"openEnded",void 0),s([p.ObservableComponent.field],e.prototype,"radius",void 0),s([p.ObservableComponent.field],e.prototype,"arc",void 0),e=s([p.DisposableComponent("engine.shape",a.CYLINDER_SHAPE)],e)}(v);e.CylinderShape=O;var x,w=function(t){function e(e){var n=t.call(this)||this;return n.src=e,n}return r(e,t),s([v.readonly],e.prototype,"src",void 0),e=s([p.DisposableComponent("engine.shape",a.GLTF_SHAPE)],e)}(v);e.GLTFShape=w,function(t){t[t.Classic=0]="Classic",t[t.Baroque_Ornament=1]="Baroque_Ornament",t[t.Diamond_Ornament=2]="Diamond_Ornament",t[t.Minimal_Wide=3]="Minimal_Wide",t[t.Minimal_Grey=4]="Minimal_Grey",t[t.Blocky=5]="Blocky",t[t.Gold_Edges=6]="Gold_Edges",t[t.Gold_Carved=7]="Gold_Carved",t[t.Gold_Wide=8]="Gold_Wide",t[t.Gold_Rounded=9]="Gold_Rounded",t[t.Metal_Medium=10]="Metal_Medium",t[t.Metal_Wide=11]="Metal_Wide",t[t.Metal_Slim=12]="Metal_Slim",t[t.Metal_Rounded=13]="Metal_Rounded",t[t.Pins=14]="Pins",t[t.Minimal_Black=15]="Minimal_Black",t[t.Minimal_White=16]="Minimal_White",t[t.Tape=17]="Tape",t[t.Wood_Slim=18]="Wood_Slim",t[t.Wood_Wide=19]="Wood_Wide",t[t.Wood_Twigs=20]="Wood_Twigs",t[t.Canvas=21]="Canvas"}(x=e.PictureFrameStyle||(e.PictureFrameStyle={}));var T=function(t){function e(e,n){void 0===n&&(n={});var o=t.call(this)||this;o.src=e;var r=new u.Color3(.6404918,.611472,.8584906),i=x.Classic;return n instanceof u.Color3?r=n:null!=n&&(n.color&&(r=n.color),n.style&&(i=n.style)),o.color=r,o.style=i,o}return r(e,t),s([v.readonly],e.prototype,"src",void 0),s([v.readonly],e.prototype,"style",void 0),s([p.ObservableComponent.field],e.prototype,"color",void 0),e=s([p.DisposableComponent("engine.shape",a.NFT_SHAPE)],e)}(v);e.NFTShape=T;var R=function(t){function e(e,n){var o=t.call(this)||this;if(o.src=e,n)for(var r in n){o[r]=n[r]}return o}return r(e,t),s([p.ObservableComponent.readonly],e.prototype,"src",void 0),s([p.ObservableComponent.readonly],e.prototype,"samplingMode",void 0),s([p.ObservableComponent.readonly],e.prototype,"wrap",void 0),s([p.ObservableComponent.readonly],e.prototype,"hasAlpha",void 0),e=s([p.DisposableComponent("engine.texture",a.TEXTURE)],e)}(p.ObservableComponent);e.Texture=R;var A=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.states=[],e}return r(e,t),e.prototype.addClip=function(t){var e=this;return this.states.push(t),t.onChange((function(){e.dirty=!0})),this},e.prototype.getClip=function(t){for(var e=0;e<this.states.length;e++){var n=this.states[e];if(n.clip===t)return n}var o=new l.AnimationState(t);return this.addClip(o),o},s([p.ObservableComponent.readonly],e.prototype,"states",void 0),e=s([p.Component("engine.animator",a.ANIMATION)],e)}(v);e.Animator=A;var E=function(t){function e(e){var n=t.call(this)||this;return n.src=e,n}return r(e,t),s([p.ObservableComponent.readonly],e.prototype,"src",void 0),e=s([p.DisposableComponent("engine.shape",a.OBJ_SHAPE)],e)}(v);e.OBJShape=E;var P=function(t){function e(e){void 0===e&&(e="");var n=t.call(this)||this;return n.src=e,n}return r(e,t),s([p.ObservableComponent.readonly],e.prototype,"src",void 0),e=s([p.DisposableComponent("engine.font",a.FONT)],e)}(p.ObservableComponent);e.Font=P,function(t){t.SanFrancisco="builtin:SF-UI-Text-Regular SDF",t.SanFrancisco_Heavy="builtin:SF-UI-Text-Heavy SDF",t.SanFrancisco_Semibold="builtin:SF-UI-Text-Semibold SDF",t.LiberationSans="builtin:LiberationSans SDF"}(e.Fonts||(e.Fonts={}));var S,I=function(t){function e(e){var n=t.call(this)||this;return n.outlineWidth=0,n.outlineColor=new u.Color3(1,1,1),n.color=new u.Color3(1,1,1),n.fontSize=10,n.fontWeight="normal",n.opacity=1,n.value="",n.lineSpacing="0px",n.lineCount=0,n.resizeToFit=!1,n.textWrapping=!1,n.shadowBlur=0,n.shadowOffsetX=0,n.shadowOffsetY=0,n.shadowColor=new u.Color3(1,1,1),n.zIndex=0,n.hTextAlign="center",n.vTextAlign="center",n.width=1,n.height=1,n.paddingTop=0,n.paddingRight=0,n.paddingBottom=0,n.paddingLeft=0,n.isPickable=!1,n.billboard=!1,e&&(n.value=e),n}return r(e,t),s([p.ObservableComponent.field],e.prototype,"outlineWidth",void 0),s([p.ObservableComponent.field],e.prototype,"outlineColor",void 0),s([p.ObservableComponent.field],e.prototype,"color",void 0),s([p.ObservableComponent.field],e.prototype,"fontSize",void 0),s([p.ObservableComponent.field],e.prototype,"fontWeight",void 0),s([p.ObservableComponent.component],e.prototype,"font",void 0),s([p.ObservableComponent.field],e.prototype,"opacity",void 0),s([p.ObservableComponent.field],e.prototype,"value",void 0),s([p.ObservableComponent.field],e.prototype,"lineSpacing",void 0),s([p.ObservableComponent.field],e.prototype,"lineCount",void 0),s([p.ObservableComponent.field],e.prototype,"resizeToFit",void 0),s([p.ObservableComponent.field],e.prototype,"textWrapping",void 0),s([p.ObservableComponent.field],e.prototype,"shadowBlur",void 0),s([p.ObservableComponent.field],e.prototype,"shadowOffsetX",void 0),s([p.ObservableComponent.field],e.prototype,"shadowOffsetY",void 0),s([p.ObservableComponent.field],e.prototype,"shadowColor",void 0),s([p.ObservableComponent.field],e.prototype,"zIndex",void 0),s([p.ObservableComponent.field],e.prototype,"hTextAlign",void 0),s([p.ObservableComponent.field],e.prototype,"vTextAlign",void 0),s([p.ObservableComponent.field],e.prototype,"width",void 0),s([p.ObservableComponent.field],e.prototype,"height",void 0),s([p.ObservableComponent.field],e.prototype,"paddingTop",void 0),s([p.ObservableComponent.field],e.prototype,"paddingRight",void 0),s([p.ObservableComponent.field],e.prototype,"paddingBottom",void 0),s([p.ObservableComponent.field],e.prototype,"paddingLeft",void 0),s([p.ObservableComponent.field],e.prototype,"isPickable",void 0),s([p.ObservableComponent.field],e.prototype,"billboard",void 0),e=s([p.Component("engine.text",a.TEXT_SHAPE)],e)}(v);e.TextShape=I,function(t){t[t.OPAQUE=0]="OPAQUE",t[t.ALPHA_TEST=1]="ALPHA_TEST",t[t.ALPHA_BLEND=2]="ALPHA_BLEND",t[t.ALPHA_TEST_AND_BLEND=3]="ALPHA_TEST_AND_BLEND",t[t.AUTO=4]="AUTO"}(S=e.TransparencyMode||(e.TransparencyMode={}));var z=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.alphaTest=.5,e.castShadows=!0,e.transparencyMode=S.AUTO,e}return r(e,t),s([p.ObservableComponent.field],e.prototype,"alphaTest",void 0),s([p.ObservableComponent.field],e.prototype,"albedoColor",void 0),s([p.ObservableComponent.field],e.prototype,"emissiveColor",void 0),s([p.ObservableComponent.field],e.prototype,"metallic",void 0),s([p.ObservableComponent.field],e.prototype,"roughness",void 0),s([p.ObservableComponent.field],e.prototype,"ambientColor",void 0),s([p.ObservableComponent.field],e.prototype,"reflectionColor",void 0),s([p.ObservableComponent.field],e.prototype,"reflectivityColor",void 0),s([p.ObservableComponent.field],e.prototype,"directIntensity",void 0),s([p.ObservableComponent.field],e.prototype,"microSurface",void 0),s([p.ObservableComponent.field],e.prototype,"emissiveIntensity",void 0),s([p.ObservableComponent.field],e.prototype,"environmentIntensity",void 0),s([p.ObservableComponent.field],e.prototype,"specularIntensity",void 0),s([p.ObservableComponent.component],e.prototype,"albedoTexture",void 0),s([p.ObservableComponent.component],e.prototype,"alphaTexture",void 0),s([p.ObservableComponent.component],e.prototype,"emissiveTexture",void 0),s([p.ObservableComponent.component],e.prototype,"bumpTexture",void 0),s([p.ObservableComponent.component],e.prototype,"refractionTexture",void 0),s([p.ObservableComponent.field],e.prototype,"castShadows",void 0),s([p.ObservableComponent.field],e.prototype,"transparencyMode",void 0),e=s([p.DisposableComponent("engine.material",a.PBR_MATERIAL)],e)}(p.ObservableComponent);e.Material=z;var M=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.alphaTest=.5,e.castShadows=!0,e}return r(e,t),s([p.ObservableComponent.component],e.prototype,"texture",void 0),s([p.ObservableComponent.field],e.prototype,"alphaTest",void 0),s([p.ObservableComponent.field],e.prototype,"castShadows",void 0),e=s([p.DisposableComponent("engine.material",a.BASIC_MATERIAL)],e)}(p.ObservableComponent);e.BasicMaterial=M;var D=function(t){function e(e){var n=t.call(this)||this;if(n.uuid=c.newId("UUID"),!e||!("apply"in e)||!("call"in e))throw new Error("Callback is not a function");return n.callback=e,n}return r(e,t),e.uuidEvent=function(t,n){if(delete t[n]){var o=n+"_"+Math.random();t[o]=void 0,Object.defineProperty(t,o,i(i({},Object.getOwnPropertyDescriptor(t,o)),{enumerable:!1})),Object.defineProperty(t,n.toString(),{get:function(){return this[o]},set:function(t){var r=this[o];if(t){if(!(t instanceof e))throw new Error("value is not an OnUUIDEvent");this.data[n]=t.uuid}else this.data[n]=null;if(this[o]=t,t!==r){this.dirty=!0;for(var i=0;i<this.subscriptions.length;i++)this.subscriptions[i](n,t,r)}},enumerable:!0})}},e.prototype.toJSON=function(){return{uuid:this.uuid,type:this.type}},s([p.ObservableComponent.field],e.prototype,"callback",void 0),e}(p.ObservableComponent);e.OnUUIDEvent=D;var F=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.button=h.ActionButton.ANY,e.hoverText="Interact",e.distance=10,e.showFeedback=!0,e}return r(e,t),e.prototype.toJSON=function(){return{uuid:this.uuid,type:this.type,button:this.button,hoverText:this.hoverText,distance:this.distance,showFeedback:this.showFeedback}},s([p.ObservableComponent.field],e.prototype,"button",void 0),s([p.ObservableComponent.field],e.prototype,"hoverText",void 0),s([p.ObservableComponent.field],e.prototype,"distance",void 0),s([p.ObservableComponent.field],e.prototype,"showFeedback",void 0),e}(D);e.OnPointerUUIDEvent=F;var L=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.type="onPointerLock",e}return r(e,t),s([p.ObservableComponent.readonly],e.prototype,"type",void 0),e=s([p.Component("engine.onPointerLock",a.UUID_CALLBACK)],e)}(D);e.OnPointerLock=L;var U=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.type="onAnimationEnd",e}return r(e,t),s([p.ObservableComponent.readonly],e.prototype,"type",void 0),e=s([p.Component("engine.onAnimationEnd",a.UUID_CALLBACK)],e)}(D);e.OnAnimationEnd=U;var N=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return r(e,t),e=s([p.Component("engine.smartItem",a.SMART_ITEM)],e)}(p.ObservableComponent);e.SmartItem=N;var V=function(t){function e(e){var n=t.call(this)||this;return n.url=e,n}return r(e,t),s([p.ObservableComponent.readonly],e.prototype,"url",void 0),e=s([p.DisposableComponent("engine.VideoClip",a.VIDEO_CLIP)],e)}(p.ObservableComponent);e.VideoClip=V;var H=function(t){function e(e,n){var o=t.call(this)||this;if(o.volume=1,o.playbackRate=1,o.loop=!1,o.seek=-1,o.playing=!1,!(e instanceof V))throw new Error("Trying to create VideoTexture(VideoClip) with an invalid VideoClip");if(o.videoClipId=p.getComponentId(e),n)for(var r in n){o[r]=n[r]}return o}return r(e,t),e.prototype.play=function(){this.playing=!0},e.prototype.pause=function(){this.playing=!1},e.prototype.reset=function(){this.seekTime(0)},e.prototype.seekTime=function(t){this.seek=t,this.dirty=!0,this.data.nonce=Math.random()},e.prototype.toJSON=function(){if(this.seek<0)return t.prototype.toJSON.call(this);var e=JSON.parse(JSON.stringify(t.prototype.toJSON.call(this)));return this.seek=-1,e},s([p.ObservableComponent.readonly],e.prototype,"videoClipId",void 0),s([p.ObservableComponent.readonly],e.prototype,"samplingMode",void 0),s([p.ObservableComponent.readonly],e.prototype,"wrap",void 0),s([p.ObservableComponent.field],e.prototype,"volume",void 0),s([p.ObservableComponent.field],e.prototype,"playbackRate",void 0),s([p.ObservableComponent.field],e.prototype,"loop",void 0),s([p.ObservableComponent.field],e.prototype,"seek",void 0),s([p.ObservableComponent.field],e.prototype,"playing",void 0),e=s([p.DisposableComponent("engine.VideoTexture",a.VIDEO_TEXTURE)],e)}(p.ObservableComponent);e.VideoTexture=H},function(t,e,n){"use strict";function o(t){for(var n in t)e.hasOwnProperty(n)||(e[n]=t[n])}Object.defineProperty(e,"__esModule",{value:!0}),o(n(2)),o(n(9)),o(n(22)),o(n(23)),o(n(36)),o(n(37)),o(n(38)),o(n(24)),o(n(39)),o(n(40)),o(n(11)),o(n(41)),o(n(42)),o(n(25)),o(n(10)),o(n(6)),o(n(43)),o(n(15)),o(n(3)),o(n(21)),o(n(5))},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=function(){function t(){}return t.WithinEpsilon=function(t,e,n){void 0===n&&(n=1401298e-51);var o=t-e;return-n<=o&&o<=n},t.ToHex=function(t){var e=t.toString(16);return t<=15?("0"+e).toUpperCase():e.toUpperCase()},t.Sign=function(t){var e=+t;return 0===e||isNaN(e)?e:e>0?1:-1},t.Clamp=function(t,e,n){return void 0===e&&(e=0),void 0===n&&(n=1),Math.min(n,Math.max(e,t))},t.Log2=function(t){return Math.log(t)*Math.LOG2E},t.Repeat=function(t,e){return t-Math.floor(t/e)*e},t.Normalize=function(t,e,n){return(t-e)/(n-e)},t.Denormalize=function(t,e,n){return t*(n-e)+e},t.DeltaAngle=function(e,n){var o=t.Repeat(n-e,360);return o>180&&(o-=360),o},t.PingPong=function(e,n){var o=t.Repeat(e,2*n);return n-Math.abs(o-n)},t.SmoothStep=function(e,n,o){var r=t.Clamp(o);return n*(r=-2*r*r*r+3*r*r)+e*(1-r)},t.MoveTowards=function(e,n,o){return Math.abs(n-e)<=o?n:e+t.Sign(n-e)*o},t.MoveTowardsAngle=function(e,n,o){var r=t.DeltaAngle(e,n);return-o<r&&r<o?n:t.MoveTowards(e,e+r,o)},t.Lerp=function(t,e,n){return t+(e-t)*n},t.LerpAngle=function(e,n,o){var r=t.Repeat(n-e,360);return r>180&&(r-=360),e+r*t.Clamp(o)},t.InverseLerp=function(e,n,o){return e!==n?t.Clamp((o-e)/(n-e)):0},t.Hermite=function(t,e,n,o,r){var i=r*r,s=r*i;return t*(2*s-3*i+1)+n*(-2*s+3*i)+e*(s-2*i+r)+o*(s-i)},t.RandomRange=function(t,e){return t===e?t:Math.random()*(e-t)+t},t.RangeToPercent=function(t,e,n){return(t-e)/(n-e)},t.PercentToRange=function(t,e,n){return(n-e)*t+e},t.NormalizeRadians=function(e){return e-t.TwoPi*Math.floor((e+Math.PI)/t.TwoPi)},t.TwoPi=2*Math.PI,t}();e.Scalar=o},function(t,e,n){"use strict";var o=this&&this.__decorate||function(t,e,n,o){var r,i=arguments.length,s=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var a=t.length-1;a>=0;a--)(r=t[a])&&(s=(i<3?r(s):i>3?r(e,n,s):r(e,n))||s);return i>3&&s&&Object.defineProperty(e,n,s),s};Object.defineProperty(e,"__esModule",{value:!0});var r=n(8),i=function(){function t(t,e,n){this.entity=t,this.componentName=e,this.component=n}return t=o([r.EventConstructor()],t)}();e.ComponentRemoved=i;var s=function(){function t(t,e,n){this.entity=t,this.componentName=e,this.classId=n}return t=o([r.EventConstructor()],t)}();e.ComponentAdded=s;var a=function(){function t(t,e){this.entity=t,this.parent=e}return t=o([r.EventConstructor()],t)}();e.ParentChanged=a},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1),r=[];function i(t){if(!("__event_name__"in t)||"string"!=typeof t.__event_name__)throw new Error("The EventConstructor is not registered");return t.__event_name__}var s=function(){function t(){this.listeners={}}return t.prototype.addListener=function(t,e,n){if(!t||"function"!=typeof t)throw new Error("Invalid EventConstructor");var o=i(t),r=this.listeners[o];r||(r=this.listeners[o]=[]);for(var s=0;s<r.length;s++){if(r[s].listener===e)throw new Error("The provided listener is already registered")}return r.push({listener:e,fn:n}),this},t.prototype.removeListener=function(t,e){if(!e||"function"!=typeof e)throw new Error("Invalid EventConstructor");var n=i(e),o=this.listeners[n];if(!o)return!1;for(var r=0;r<o.length;r++){if(o[r].listener===t)return o.splice(r,1),!0}return!1},t.prototype.fireEvent=function(t){var e=i(t.constructor),n=this.listeners[e];if(n)for(var r=0;r<n.length;r++)try{var s=n[r];s.fn.call(s.listener,t)}catch(t){o.error(t)}return this},t}();e.EventManager=s,e.EventConstructor=function(){var t=o.newId("EV");if(-1!==r.indexOf(t))throw new Error("The event name "+t+" is already taken");return r.push(t),function(e){return e.__event_name__=t,e}}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1),r=n(3),i=n(10),s=n(11);e.MathTmp={Vector3:o.buildArray(6,r.Vector3.Zero),Matrix:o.buildArray(2,s.Matrix.Identity),Quaternion:o.buildArray(3,i.Quaternion.Zero),staticUp:r.Vector3.Up(),tmpMatrix:s.Matrix.Zero()}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(11),r=n(3),i=n(9),s=n(2),a=function(){function t(t,e,n,o){void 0===t&&(t=0),void 0===e&&(e=0),void 0===n&&(n=0),void 0===o&&(o=1),this.x=t,this.y=e,this.z=n,this.w=o}return t.FromRotationMatrix=function(e){var n=new t;return t.FromRotationMatrixToRef(e,n),n},t.FromRotationMatrixToRef=function(t,e){var n,o=t.m,r=o[0],i=o[4],s=o[8],a=o[1],p=o[5],u=o[9],l=o[2],c=o[6],h=o[10],d=r+p+h;d>0?(n=.5/Math.sqrt(d+1),e.w=.25/n,e.x=(c-u)*n,e.y=(s-l)*n,e.z=(a-i)*n):r>p&&r>h?(n=2*Math.sqrt(1+r-p-h),e.w=(c-u)/n,e.x=.25*n,e.y=(i+a)/n,e.z=(s+l)/n):p>h?(n=2*Math.sqrt(1+p-r-h),e.w=(s-l)/n,e.x=(i+a)/n,e.y=.25*n,e.z=(u+c)/n):(n=2*Math.sqrt(1+h-r-p),e.w=(a-i)/n,e.x=(s+l)/n,e.y=(u+c)/n,e.z=.25*n)},t.Dot=function(t,e){return t.x*e.x+t.y*e.y+t.z*e.z+t.w*e.w},t.AreClose=function(e,n){return t.Dot(e,n)>=0},t.Zero=function(){return new t(0,0,0,0)},t.Inverse=function(e){return new t(-e.x,-e.y,-e.z,e.w)},t.IsIdentity=function(t){return t&&0===t.x&&0===t.y&&0===t.z&&1===t.w},t.RotationAxis=function(e,n){var o=n*s.DEG2RAD;return t.RotationAxisToRef(e,o,new t)},t.RotationAxisToRef=function(t,e,n){var o=e*s.DEG2RAD,r=Math.sin(o/2);return t.normalize(),n.w=Math.cos(o/2),n.x=t.x*r,n.y=t.y*r,n.z=t.z*r,n},t.FromArray=function(e,n){return void 0===n&&(n=0),new t(e[n],e[n+1],e[n+2],e[n+3])},t.FromEulerAnglesRef=function(e,n,o,r){return t.RotationYawPitchRollToRef(n*s.DEG2RAD,e*s.DEG2RAD,o*s.DEG2RAD,r)},t.RotationYawPitchRoll=function(e,n,o){var r=new t;return t.RotationYawPitchRollToRef(e,n,o,r),r},t.RotationYawPitchRollToRef=function(t,e,n,o){var r=.5*n,i=.5*e,s=.5*t,a=Math.cos(i),p=Math.cos(s),u=Math.cos(r),l=Math.sin(i),c=Math.sin(s),h=Math.sin(r);o.x=l*p*u+a*c*h,o.y=a*c*u-l*p*h,o.z=a*p*h+l*c*u,o.w=a*p*u-l*c*h},t.RotationAlphaBetaGamma=function(e,n,o){var r=new t;return t.RotationAlphaBetaGammaToRef(e,n,o,r),r},t.RotationAlphaBetaGammaToRef=function(t,e,n,o){var r=.5*(n+t),i=.5*(n-t),s=.5*e;o.x=Math.cos(i)*Math.sin(s),o.y=Math.sin(i)*Math.sin(s),o.z=Math.sin(r)*Math.cos(s),o.w=Math.cos(r)*Math.cos(s)},t.RotationQuaternionFromAxis=function(e,n,o){var r=new t(0,0,0,0);return t.RotationQuaternionFromAxisToRef(e,n,o,r),r},t.RotationQuaternionFromAxisToRef=function(e,n,r,s){var a=i.MathTmp.Matrix[0];o.Matrix.FromXYZAxesToRef(e.normalize(),n.normalize(),r.normalize(),a),t.FromRotationMatrixToRef(a,s)},t.Slerp=function(e,n,o){var r=t.Identity;return t.SlerpToRef(e,n,o,r),r},t.SlerpToRef=function(t,e,n,o){var r,i,s=t.x*e.x+t.y*e.y+t.z*e.z+t.w*e.w,a=!1;if(s<0&&(a=!0,s=-s),s>.999999)i=1-n,r=a?-n:n;else{var p=Math.acos(s),u=1/Math.sin(p);i=Math.sin((1-n)*p)*u,r=a?-Math.sin(n*p)*u:Math.sin(n*p)*u}o.x=i*t.x+r*e.x,o.y=i*t.y+r*e.y,o.z=i*t.z+r*e.z,o.w=i*t.w+r*e.w},t.Hermite=function(e,n,o,r,i){var s=i*i,a=i*s,p=2*a-3*s+1,u=-2*a+3*s,l=a-2*s+i,c=a-s;return new t(e.x*p+o.x*u+n.x*l+r.x*c,e.y*p+o.y*u+n.y*l+r.y*c,e.z*p+o.z*u+n.z*l+r.z*c,e.w*p+o.w*u+n.w*l+r.w*c)},Object.defineProperty(t,"Identity",{get:function(){return new t(0,0,0,1)},enumerable:!0,configurable:!0}),t.Angle=function(e,n){var o=t.Dot(e,n);return 2*Math.acos(Math.min(Math.abs(o),1))*s.RAD2DEG},t.Euler=function(e,n,o){return t.RotationYawPitchRoll(n*s.DEG2RAD,e*s.DEG2RAD,o*s.DEG2RAD)},t.LookRotation=function(e,n){void 0===n&&(n=i.MathTmp.staticUp);var o=r.Vector3.Normalize(e),s=r.Vector3.Normalize(r.Vector3.Cross(n,o)),a=r.Vector3.Cross(o,s),p=s.x,u=s.y,l=s.z,c=a.x,h=a.y,d=a.z,f=o.x,y=o.y,v=o.z,m=p+h+v,b=new t;if(m>0){var g=Math.sqrt(m+1);return b.w=.5*g,g=.5/g,b.x=(d-y)*g,b.y=(f-l)*g,b.z=(u-c)*g,b}if(p>=h&&p>=v){var _=Math.sqrt(1+p-h-v),C=.5/_;return b.x=.5*_,b.y=(u+c)*C,b.z=(l+f)*C,b.w=(d-y)*C,b}if(h>v){var O=Math.sqrt(1+h-p-v),x=.5/O;return b.x=(c+u)*x,b.y=.5*O,b.z=(y+d)*x,b.w=(f-l)*x,b}var w=Math.sqrt(1+v-p-h),T=.5/w;return b.x=(f+l)*T,b.y=(y+d)*T,b.z=.5*w,b.w=(u-c)*T,b},t.RotateTowards=function(e,n,o){var r=t.Angle(e,n);if(0===r)return n;var i=Math.min(1,o/r);return t.Slerp(e,n,i)},t.FromToRotation=function(e,n){var o=new t,i=e.normalize(),a=n.normalize(),p=r.Vector3.Dot(i,a);if(p>-1+s.Epsilon){var u=Math.sqrt(2*(1+p)),l=1/u,c=r.Vector3.Cross(i,a).scaleInPlace(l);o.set(c.x,c.y,c.z,.5*u)}else{if(p>1-s.Epsilon)return new t(0,0,0,1);var h=r.Vector3.Cross(r.Vector3.Right(),i);h.lengthSquared()<s.Epsilon&&(h=r.Vector3.Cross(r.Vector3.Forward(),i)),o.set(h.x,h.y,h.z,0)}return o.normalize()},Object.defineProperty(t.prototype,"normalized",{get:function(){return this.normalize()},enumerable:!0,configurable:!0}),t.prototype.setFromToRotation=function(e,n,r){void 0===r&&(r=i.MathTmp.staticUp),i.MathTmp.tmpMatrix=o.Matrix.Zero(),o.Matrix.LookAtLHToRef(e,n,r,i.MathTmp.tmpMatrix),i.MathTmp.tmpMatrix.invert(),t.FromRotationMatrixToRef(i.MathTmp.tmpMatrix,this)},Object.defineProperty(t.prototype,"eulerAngles",{get:function(){var t=new r.Vector3,e=new o.Matrix;this.toRotationMatrix(e);var n=o.Matrix.GetAsMatrix3x3(e);return t.y=s.RAD2DEG*Math.asin(Math.max(-1,Math.min(1,n[6]))),Math.abs(n[6])<.99999?(t.x=s.RAD2DEG*Math.atan2(-n[7],n[8]),t.z=s.RAD2DEG*Math.atan2(-n[3],n[0])):(t.x=s.RAD2DEG*Math.atan2(n[5],n[4]),t.z=0),t},set:function(t){this.setEuler(t.x,t.y,t.z)},enumerable:!0,configurable:!0}),t.prototype.toString=function(){return"("+this.x+", "+this.y+", "+this.z+", "+this.w+")"},Object.defineProperty(t.prototype,"length",{get:function(){return Math.sqrt(this.lengthSquared)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"lengthSquared",{get:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},enumerable:!0,configurable:!0}),t.prototype.getClassName=function(){return"Quaternion"},t.prototype.getHashCode=function(){var t=this.x||0;return t=397*(t=397*(t=397*t^(this.y||0))^(this.z||0))^(this.w||0)},t.prototype.asArray=function(){return[this.x,this.y,this.z,this.w]},t.prototype.equals=function(t){return t&&this.x===t.x&&this.y===t.y&&this.z===t.z&&this.w===t.w},t.prototype.clone=function(){return new t(this.x,this.y,this.z,this.w)},t.prototype.copyFrom=function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this},t.prototype.copyFromFloats=function(t,e,n,o){return this.x=t,this.y=e,this.z=n,this.w=o,this},t.prototype.set=function(t,e,n,o){return this.copyFromFloats(t,e,n,o)},t.prototype.setEuler=function(e,n,o){return t.RotationYawPitchRollToRef(n*s.DEG2RAD,e*s.DEG2RAD,o*s.DEG2RAD,this),this},t.prototype.add=function(e){return new t(this.x+e.x,this.y+e.y,this.z+e.z,this.w+e.w)},t.prototype.addInPlace=function(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this},t.prototype.subtract=function(e){return new t(this.x-e.x,this.y-e.y,this.z-e.z,this.w-e.w)},t.prototype.scale=function(e){return new t(this.x*e,this.y*e,this.z*e,this.w*e)},t.prototype.scaleToRef=function(t,e){return e.x=this.x*t,e.y=this.y*t,e.z=this.z*t,e.w=this.w*t,this},t.prototype.scaleInPlace=function(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},t.prototype.scaleAndAddToRef=function(t,e){return e.x+=this.x*t,e.y+=this.y*t,e.z+=this.z*t,e.w+=this.w*t,this},t.prototype.multiply=function(e){var n=new t(0,0,0,1);return this.multiplyToRef(e,n),n},t.prototype.multiplyToRef=function(t,e){var n=this.x*t.w+this.y*t.z-this.z*t.y+this.w*t.x,o=-this.x*t.z+this.y*t.w+this.z*t.x+this.w*t.y,r=this.x*t.y-this.y*t.x+this.z*t.w+this.w*t.z,i=-this.x*t.x-this.y*t.y-this.z*t.z+this.w*t.w;return e.copyFromFloats(n,o,r,i),this},t.prototype.multiplyInPlace=function(t){return this.multiplyToRef(t,this),this},t.prototype.conjugateToRef=function(t){return t.copyFromFloats(-this.x,-this.y,-this.z,this.w),this},t.prototype.conjugateInPlace=function(){return this.x*=-1,this.y*=-1,this.z*=-1,this},t.prototype.conjugate=function(){return new t(-this.x,-this.y,-this.z,this.w)},t.prototype.normalize=function(){var t=1/this.length;return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},t.prototype.angleAxis=function(e,n){if(0===n.lengthSquared())return t.Identity;var o=t.Identity,r=e*s.DEG2RAD;r*=.5;var i=n.normalize();return i=n.scaleInPlace(Math.sin(r)),o.x=i.x,o.y=i.y,o.z=i.z,o.w=Math.cos(r),o.normalize()},t.prototype.toRotationMatrix=function(t){return o.Matrix.FromQuaternionToRef(this,t),this},t.prototype.fromRotationMatrix=function(e){return t.FromRotationMatrixToRef(e,this),this},t}();e.Quaternion=a},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(3),r=n(10),i=n(9),s=n(21),a=function(){function t(){this._isIdentity=!1,this._isIdentityDirty=!0,this._isIdentity3x2=!0,this._isIdentity3x2Dirty=!0,this._m=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],this._updateIdentityStatus(!1)}return Object.defineProperty(t.prototype,"m",{get:function(){return this._m},enumerable:!0,configurable:!0}),Object.defineProperty(t,"IdentityReadOnly",{get:function(){return t._identityReadOnly},enumerable:!0,configurable:!0}),t.FromArray=function(e,n){void 0===n&&(n=0);var o=new t;return t.FromArrayToRef(e,n,o),o},t.FromArrayToRef=function(t,e,n){for(var o=0;o<16;o++)n._m[o]=t[o+e];n._markAsUpdated()},t.FromFloatArrayToRefScaled=function(t,e,n,o){for(var r=0;r<16;r++)o._m[r]=t[r+e]*n;o._markAsUpdated()},t.FromValuesToRef=function(t,e,n,o,r,i,s,a,p,u,l,c,h,d,f,y,v){var m=v._m;m[0]=t,m[1]=e,m[2]=n,m[3]=o,m[4]=r,m[5]=i,m[6]=s,m[7]=a,m[8]=p,m[9]=u,m[10]=l,m[11]=c,m[12]=h,m[13]=d,m[14]=f,m[15]=y,v._markAsUpdated()},t.FromValues=function(e,n,o,r,i,s,a,p,u,l,c,h,d,f,y,v){var m=new t,b=m._m;return b[0]=e,b[1]=n,b[2]=o,b[3]=r,b[4]=i,b[5]=s,b[6]=a,b[7]=p,b[8]=u,b[9]=l,b[10]=c,b[11]=h,b[12]=d,b[13]=f,b[14]=y,b[15]=v,m._markAsUpdated(),m},t.Compose=function(e,n,o){var r=new t;return t.ComposeToRef(e,n,o,r),r},t.ComposeToRef=function(e,n,o,r){t.ScalingToRef(e.x,e.y,e.z,i.MathTmp.Matrix[1]),n.toRotationMatrix(i.MathTmp.Matrix[0]),i.MathTmp.Matrix[1].multiplyToRef(i.MathTmp.Matrix[0],r),r.setTranslation(o)},t.Identity=function(){var e=t.FromValues(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return e._updateIdentityStatus(!0),e},t.IdentityToRef=function(e){t.FromValuesToRef(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,e),e._updateIdentityStatus(!0)},t.Zero=function(){var e=t.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);return e._updateIdentityStatus(!1),e},t.RotationX=function(e){var n=new t;return t.RotationXToRef(e,n),n},t.Invert=function(e){var n=new t;return e.invertToRef(n),n},t.RotationXToRef=function(e,n){var o=Math.sin(e),r=Math.cos(e);t.FromValuesToRef(1,0,0,0,0,r,o,0,0,-o,r,0,0,0,0,1,n),n._updateIdentityStatus(1===r&&0===o)},t.RotationY=function(e){var n=new t;return t.RotationYToRef(e,n),n},t.RotationYToRef=function(e,n){var o=Math.sin(e),r=Math.cos(e);t.FromValuesToRef(r,0,-o,0,0,1,0,0,o,0,r,0,0,0,0,1,n),n._updateIdentityStatus(1===r&&0===o)},t.RotationZ=function(e){var n=new t;return t.RotationZToRef(e,n),n},t.RotationZToRef=function(e,n){var o=Math.sin(e),r=Math.cos(e);t.FromValuesToRef(r,o,0,0,-o,r,0,0,0,0,1,0,0,0,0,1,n),n._updateIdentityStatus(1===r&&0===o)},t.RotationAxis=function(e,n){var o=new t;return t.RotationAxisToRef(e,n,o),o},t.RotationAxisToRef=function(t,e,n){var o=Math.sin(-e),r=Math.cos(-e),i=1-r;t.normalize();var s=n._m;s[0]=t.x*t.x*i+r,s[1]=t.x*t.y*i-t.z*o,s[2]=t.x*t.z*i+t.y*o,s[3]=0,s[4]=t.y*t.x*i+t.z*o,s[5]=t.y*t.y*i+r,s[6]=t.y*t.z*i-t.x*o,s[7]=0,s[8]=t.z*t.x*i-t.y*o,s[9]=t.z*t.y*i+t.x*o,s[10]=t.z*t.z*i+r,s[11]=0,s[12]=0,s[13]=0,s[14]=0,s[15]=1,n._markAsUpdated()},t.RotationYawPitchRoll=function(e,n,o){var r=new t;return t.RotationYawPitchRollToRef(e,n,o,r),r},t.RotationYawPitchRollToRef=function(t,e,n,o){r.Quaternion.RotationYawPitchRollToRef(t,e,n,i.MathTmp.Quaternion[0]),i.MathTmp.Quaternion[0].toRotationMatrix(o)},t.Scaling=function(e,n,o){var r=new t;return t.ScalingToRef(e,n,o,r),r},t.ScalingToRef=function(e,n,o,r){t.FromValuesToRef(e,0,0,0,0,n,0,0,0,0,o,0,0,0,0,1,r),r._updateIdentityStatus(1===e&&1===n&&1===o)},t.Translation=function(e,n,o){var r=new t;return t.TranslationToRef(e,n,o,r),r},t.TranslationToRef=function(e,n,o,r){t.FromValuesToRef(1,0,0,0,0,1,0,0,0,0,1,0,e,n,o,1,r),r._updateIdentityStatus(0===e&&0===n&&0===o)},t.Lerp=function(e,n,o){var r=new t;return t.LerpToRef(e,n,o,r),r},t.LerpToRef=function(t,e,n,o){for(var r=0;r<16;r++)o._m[r]=t._m[r]*(1-n)+e._m[r]*n;o._markAsUpdated()},t.DecomposeLerp=function(e,n,o){var r=new t;return t.DecomposeLerpToRef(e,n,o,r),r},t.DecomposeLerpToRef=function(e,n,s,a){var p=i.MathTmp.Vector3[0],u=i.MathTmp.Quaternion[0],l=i.MathTmp.Vector3[1];e.decompose(p,u,l);var c=i.MathTmp.Vector3[2],h=i.MathTmp.Quaternion[1],d=i.MathTmp.Vector3[3];n.decompose(c,h,d);var f=i.MathTmp.Vector3[4];o.Vector3.LerpToRef(p,c,s,f);var y=i.MathTmp.Quaternion[2];r.Quaternion.SlerpToRef(u,h,s,y);var v=i.MathTmp.Vector3[5];o.Vector3.LerpToRef(l,d,s,v),t.ComposeToRef(f,y,v,a)},t.LookAtLH=function(e,n,o){var r=new t;return t.LookAtLHToRef(e,n,o,r),r},t.LookAtLHToRef=function(e,n,r,s){var a=i.MathTmp.Vector3[0],p=i.MathTmp.Vector3[1],u=i.MathTmp.Vector3[2];n.subtractToRef(e,u),u.normalize(),o.Vector3.CrossToRef(r,u,a);var l=a.lengthSquared();0===l?a.x=1:a.normalizeFromLength(Math.sqrt(l)),o.Vector3.CrossToRef(u,a,p),p.normalize();var c=-o.Vector3.Dot(a,e),h=-o.Vector3.Dot(p,e),d=-o.Vector3.Dot(u,e);t.FromValuesToRef(a.x,p.x,u.x,0,a.y,p.y,u.y,0,a.z,p.z,u.z,0,c,h,d,1,s)},t.LookAtRH=function(e,n,o){var r=new t;return t.LookAtRHToRef(e,n,o,r),r},t.LookAtRHToRef=function(e,n,r,s){var a=i.MathTmp.Vector3[0],p=i.MathTmp.Vector3[1],u=i.MathTmp.Vector3[2];e.subtractToRef(n,u),u.normalize(),o.Vector3.CrossToRef(r,u,a);var l=a.lengthSquared();0===l?a.x=1:a.normalizeFromLength(Math.sqrt(l)),o.Vector3.CrossToRef(u,a,p),p.normalize();var c=-o.Vector3.Dot(a,e),h=-o.Vector3.Dot(p,e),d=-o.Vector3.Dot(u,e);t.FromValuesToRef(a.x,p.x,u.x,0,a.y,p.y,u.y,0,a.z,p.z,u.z,0,c,h,d,1,s)},t.OrthoLH=function(e,n,o,r){var i=new t;return t.OrthoLHToRef(e,n,o,r,i),i},t.OrthoLHToRef=function(e,n,o,r,i){var s=2/e,a=2/n,p=2/(r-o),u=-(r+o)/(r-o);t.FromValuesToRef(s,0,0,0,0,a,0,0,0,0,p,0,0,0,u,1,i),i._updateIdentityStatus(1===s&&1===a&&1===p&&0===u)},t.OrthoOffCenterLH=function(e,n,o,r,i,s){var a=new t;return t.OrthoOffCenterLHToRef(e,n,o,r,i,s,a),a},t.OrthoOffCenterLHToRef=function(e,n,o,r,i,s,a){var p=2/(n-e),u=2/(r-o),l=2/(s-i),c=-(s+i)/(s-i),h=(e+n)/(e-n),d=(r+o)/(o-r);t.FromValuesToRef(p,0,0,0,0,u,0,0,0,0,l,0,h,d,c,1,a),a._markAsUpdated()},t.OrthoOffCenterRH=function(e,n,o,r,i,s){var a=new t;return t.OrthoOffCenterRHToRef(e,n,o,r,i,s,a),a},t.OrthoOffCenterRHToRef=function(e,n,o,r,i,s,a){t.OrthoOffCenterLHToRef(e,n,o,r,i,s,a),a._m[10]*=-1},t.PerspectiveLH=function(e,n,o,r){var i=new t,s=2*o/e,a=2*o/n,p=(r+o)/(r-o),u=-2*r*o/(r-o);return t.FromValuesToRef(s,0,0,0,0,a,0,0,0,0,p,1,0,0,u,0,i),i._updateIdentityStatus(!1),i},t.PerspectiveFovLH=function(e,n,o,r){var i=new t;return t.PerspectiveFovLHToRef(e,n,o,r,i),i},t.PerspectiveFovLHToRef=function(e,n,o,r,i,s){void 0===s&&(s=!0);var a=o,p=r,u=1/Math.tan(.5*e),l=s?u/n:u,c=s?u:u*n,h=(p+a)/(p-a),d=-2*p*a/(p-a);t.FromValuesToRef(l,0,0,0,0,c,0,0,0,0,h,1,0,0,d,0,i),i._updateIdentityStatus(!1)},t.PerspectiveFovRH=function(e,n,o,r){var i=new t;return t.PerspectiveFovRHToRef(e,n,o,r,i),i},t.PerspectiveFovRHToRef=function(e,n,o,r,i,s){void 0===s&&(s=!0);var a=o,p=r,u=1/Math.tan(.5*e),l=s?u/n:u,c=s?u:u*n,h=-(p+a)/(p-a),d=-2*p*a/(p-a);t.FromValuesToRef(l,0,0,0,0,c,0,0,0,0,h,-1,0,0,d,0,i),i._updateIdentityStatus(!1)},t.PerspectiveFovWebVRToRef=function(t,e,n,o,r){void 0===r&&(r=!1);var i=r?-1:1,s=Math.tan(t.upDegrees*Math.PI/180),a=Math.tan(t.downDegrees*Math.PI/180),p=Math.tan(t.leftDegrees*Math.PI/180),u=Math.tan(t.rightDegrees*Math.PI/180),l=2/(p+u),c=2/(s+a),h=o._m;h[0]=l,h[1]=h[2]=h[3]=h[4]=0,h[5]=c,h[6]=h[7]=0,h[8]=(p-u)*l*.5,h[9]=-(s-a)*c*.5,h[10]=-n/(e-n),h[11]=1*i,h[12]=h[13]=h[15]=0,h[14]=-2*n*e/(n-e),o._markAsUpdated()},t.GetAsMatrix2x2=function(t){return[t._m[0],t._m[1],t._m[4],t._m[5]]},t.GetAsMatrix3x3=function(t){return[t._m[0],t._m[1],t._m[2],t._m[4],t._m[5],t._m[6],t._m[8],t._m[9],t._m[10]]},t.Transpose=function(e){var n=new t;return t.TransposeToRef(e,n),n},t.TransposeToRef=function(t,e){var n=e._m,o=t._m;n[0]=o[0],n[1]=o[4],n[2]=o[8],n[3]=o[12],n[4]=o[1],n[5]=o[5],n[6]=o[9],n[7]=o[13],n[8]=o[2],n[9]=o[6],n[10]=o[10],n[11]=o[14],n[12]=o[3],n[13]=o[7],n[14]=o[11],n[15]=o[15],e._updateIdentityStatus(t._isIdentity,t._isIdentityDirty)},t.Reflection=function(e){var n=new t;return t.ReflectionToRef(e,n),n},t.ReflectionToRef=function(e,n){e.normalize();var o=e.normal.x,r=e.normal.y,i=e.normal.z,s=-2*o,a=-2*r,p=-2*i;t.FromValuesToRef(s*o+1,a*o,p*o,0,s*r,a*r+1,p*r,0,s*i,a*i,p*i+1,0,s*e.d,a*e.d,p*e.d,1,n)},t.FromXYZAxesToRef=function(e,n,o,r){t.FromValuesToRef(e.x,e.y,e.z,0,n.x,n.y,n.z,0,o.x,o.y,o.z,0,0,0,0,1,r)},t.FromQuaternionToRef=function(t,e){var n=t.x*t.x,o=t.y*t.y,r=t.z*t.z,i=t.x*t.y,s=t.z*t.w,a=t.z*t.x,p=t.y*t.w,u=t.y*t.z,l=t.x*t.w;e._m[0]=1-2*(o+r),e._m[1]=2*(i+s),e._m[2]=2*(a-p),e._m[3]=0,e._m[4]=2*(i-s),e._m[5]=1-2*(r+n),e._m[6]=2*(u+l),e._m[7]=0,e._m[8]=2*(a+p),e._m[9]=2*(u-l),e._m[10]=1-2*(o+n),e._m[11]=0,e._m[12]=0,e._m[13]=0,e._m[14]=0,e._m[15]=1,e._markAsUpdated()},t.prototype._markAsUpdated=function(){this.updateFlag=t._updateFlagSeed++,this._isIdentity=!1,this._isIdentity3x2=!1,this._isIdentityDirty=!0,this._isIdentity3x2Dirty=!0},t.prototype.isIdentity=function(){if(this._isIdentityDirty){this._isIdentityDirty=!1;var t=this._m;this._isIdentity=1===t[0]&&0===t[1]&&0===t[2]&&0===t[3]&&0===t[4]&&1===t[5]&&0===t[6]&&0===t[7]&&0===t[8]&&0===t[9]&&1===t[10]&&0===t[11]&&0===t[12]&&0===t[13]&&0===t[14]&&1===t[15]}return this._isIdentity},t.prototype.isIdentityAs3x2=function(){return this._isIdentity3x2Dirty&&(this._isIdentity3x2Dirty=!1,1!==this._m[0]||1!==this._m[5]||1!==this._m[15]||0!==this._m[1]||0!==this._m[2]||0!==this._m[3]||0!==this._m[4]||0!==this._m[6]||0!==this._m[7]||0!==this._m[8]||0!==this._m[9]||0!==this._m[10]||0!==this._m[11]||0!==this._m[12]||0!==this._m[13]||0!==this._m[14]?this._isIdentity3x2=!1:this._isIdentity3x2=!0),this._isIdentity3x2},t.prototype.determinant=function(){if(!0===this._isIdentity)return 1;var t=this._m,e=t[0],n=t[1],o=t[2],r=t[3],i=t[4],s=t[5],a=t[6],p=t[7],u=t[8],l=t[9],c=t[10],h=t[11],d=t[12],f=t[13],y=t[14],v=t[15],m=c*v-y*h,b=l*v-f*h,g=l*y-f*c,_=u*v-d*h,C=u*y-c*d,O=u*f-d*l;return e*+(s*m-a*b+p*g)+n*-(i*m-a*_+p*C)+o*+(i*b-s*_+p*O)+r*-(i*g-s*C+a*O)},t.prototype.toArray=function(){return this._m},t.prototype.asArray=function(){return this._m},t.prototype.invert=function(){return this.invertToRef(this),this},t.prototype.reset=function(){return t.FromValuesToRef(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,this),this._updateIdentityStatus(!1),this},t.prototype.add=function(e){var n=new t;return this.addToRef(e,n),n},t.prototype.addToRef=function(t,e){for(var n=0;n<16;n++)e._m[n]=this._m[n]+t._m[n];return e._markAsUpdated(),this},t.prototype.addToSelf=function(t){for(var e=0;e<16;e++)this._m[e]+=t._m[e];return this._markAsUpdated(),this},t.prototype.invertToRef=function(e){if(!0===this._isIdentity)return t.IdentityToRef(e),this;var n=this._m,o=n[0],r=n[1],i=n[2],s=n[3],a=n[4],p=n[5],u=n[6],l=n[7],c=n[8],h=n[9],d=n[10],f=n[11],y=n[12],v=n[13],m=n[14],b=n[15],g=d*b-m*f,_=h*b-v*f,C=h*m-v*d,O=c*b-y*f,x=c*m-d*y,w=c*v-y*h,T=+(p*g-u*_+l*C),R=-(a*g-u*O+l*x),A=+(a*_-p*O+l*w),E=-(a*C-p*x+u*w),P=o*T+r*R+i*A+s*E;if(0===P)return e.copyFrom(this),this;var S=1/P,I=u*b-m*l,z=p*b-v*l,M=p*m-v*u,D=a*b-y*l,F=a*m-y*u,L=a*v-y*p,U=u*f-d*l,N=p*f-h*l,V=p*d-h*u,H=a*f-c*l,j=a*d-c*u,B=a*h-c*p,k=-(r*g-i*_+s*C),W=+(o*g-i*O+s*x),G=-(o*_-r*O+s*w),q=+(o*C-r*x+i*w),Y=+(r*I-i*z+s*M),X=-(o*I-i*D+s*F),Z=+(o*z-r*D+s*L),Q=-(o*M-r*F+i*L),J=-(r*U-i*N+s*V),K=+(o*U-i*H+s*j),$=-(o*N-r*H+s*B),tt=+(o*V-r*j+i*B);return t.FromValuesToRef(T*S,k*S,Y*S,J*S,R*S,W*S,X*S,K*S,A*S,G*S,Z*S,$*S,E*S,q*S,Q*S,tt*S,e),this},t.prototype.addAtIndex=function(t,e){return this._m[t]+=e,this._markAsUpdated(),this},t.prototype.multiplyAtIndex=function(t,e){return this._m[t]*=e,this._markAsUpdated(),this},t.prototype.setTranslationFromFloats=function(t,e,n){return this._m[12]=t,this._m[13]=e,this._m[14]=n,this._markAsUpdated(),this},t.prototype.setTranslation=function(t){return this.setTranslationFromFloats(t.x,t.y,t.z)},t.prototype.getTranslation=function(){return new o.Vector3(this._m[12],this._m[13],this._m[14])},t.prototype.getTranslationToRef=function(t){return t.x=this._m[12],t.y=this._m[13],t.z=this._m[14],this},t.prototype.removeRotationAndScaling=function(){var e=this.m;return t.FromValuesToRef(1,0,0,0,0,1,0,0,0,0,1,0,e[12],e[13],e[14],e[15],this),this._updateIdentityStatus(0===e[12]&&0===e[13]&&0===e[14]&&1===e[15]),this},t.prototype.multiply=function(e){var n=new t;return this.multiplyToRef(e,n),n},t.prototype.copyFrom=function(t){t.copyToArray(this._m);var e=t;return this._updateIdentityStatus(e._isIdentity,e._isIdentityDirty,e._isIdentity3x2,e._isIdentity3x2Dirty),this},t.prototype.copyToArray=function(t,e){void 0===e&&(e=0);for(var n=0;n<16;n++)t[e+n]=this._m[n];return this},t.prototype.multiplyToRef=function(t,e){return this._isIdentity?(e.copyFrom(t),this):t._isIdentity?(e.copyFrom(this),this):(this.multiplyToArray(t,e._m,0),e._markAsUpdated(),this)},t.prototype.multiplyToArray=function(t,e,n){var o=this._m,r=t.m,i=o[0],s=o[1],a=o[2],p=o[3],u=o[4],l=o[5],c=o[6],h=o[7],d=o[8],f=o[9],y=o[10],v=o[11],m=o[12],b=o[13],g=o[14],_=o[15],C=r[0],O=r[1],x=r[2],w=r[3],T=r[4],R=r[5],A=r[6],E=r[7],P=r[8],S=r[9],I=r[10],z=r[11],M=r[12],D=r[13],F=r[14],L=r[15];return e[n]=i*C+s*T+a*P+p*M,e[n+1]=i*O+s*R+a*S+p*D,e[n+2]=i*x+s*A+a*I+p*F,e[n+3]=i*w+s*E+a*z+p*L,e[n+4]=u*C+l*T+c*P+h*M,e[n+5]=u*O+l*R+c*S+h*D,e[n+6]=u*x+l*A+c*I+h*F,e[n+7]=u*w+l*E+c*z+h*L,e[n+8]=d*C+f*T+y*P+v*M,e[n+9]=d*O+f*R+y*S+v*D,e[n+10]=d*x+f*A+y*I+v*F,e[n+11]=d*w+f*E+y*z+v*L,e[n+12]=m*C+b*T+g*P+_*M,e[n+13]=m*O+b*R+g*S+_*D,e[n+14]=m*x+b*A+g*I+_*F,e[n+15]=m*w+b*E+g*z+_*L,this},t.prototype.equals=function(t){var e=t;if(!e)return!1;if((this._isIdentity||e._isIdentity)&&!this._isIdentityDirty&&!e._isIdentityDirty)return this._isIdentity&&e._isIdentity;var n=this.m,o=e.m;return n[0]===o[0]&&n[1]===o[1]&&n[2]===o[2]&&n[3]===o[3]&&n[4]===o[4]&&n[5]===o[5]&&n[6]===o[6]&&n[7]===o[7]&&n[8]===o[8]&&n[9]===o[9]&&n[10]===o[10]&&n[11]===o[11]&&n[12]===o[12]&&n[13]===o[13]&&n[14]===o[14]&&n[15]===o[15]},t.prototype.clone=function(){var e=new t;return e.copyFrom(this),e},t.prototype.getClassName=function(){return"Matrix"},t.prototype.getHashCode=function(){for(var t=this._m[0]||0,e=1;e<16;e++)t=397*t^(this._m[e]||0);return t},t.prototype.decompose=function(e,n,o){if(this._isIdentity)return o&&o.setAll(0),e&&e.setAll(1),n&&n.copyFromFloats(0,0,0,1),!0;var s=this._m;o&&o.copyFromFloats(s[12],s[13],s[14]);var a=e||i.MathTmp.Vector3[0];if(a.x=Math.sqrt(s[0]*s[0]+s[1]*s[1]+s[2]*s[2]),a.y=Math.sqrt(s[4]*s[4]+s[5]*s[5]+s[6]*s[6]),a.z=Math.sqrt(s[8]*s[8]+s[9]*s[9]+s[10]*s[10]),this.determinant()<=0&&(a.y*=-1),0===a.x||0===a.y||0===a.z)return n&&n.copyFromFloats(0,0,0,1),!1;if(n){var p=1/a.x,u=1/a.y,l=1/a.z;t.FromValuesToRef(s[0]*p,s[1]*p,s[2]*p,0,s[4]*u,s[5]*u,s[6]*u,0,s[8]*l,s[9]*l,s[10]*l,0,0,0,0,1,i.MathTmp.Matrix[0]),r.Quaternion.FromRotationMatrixToRef(i.MathTmp.Matrix[0],n)}return!0},t.prototype.getRow=function(t){if(t<0||t>3)return null;var e=4*t;return new s.Vector4(this._m[e+0],this._m[e+1],this._m[e+2],this._m[e+3])},t.prototype.setRow=function(t,e){return this.setRowFromFloats(t,e.x,e.y,e.z,e.w)},t.prototype.transpose=function(){return t.Transpose(this)},t.prototype.transposeToRef=function(e){return t.TransposeToRef(this,e),this},t.prototype.setRowFromFloats=function(t,e,n,o,r){if(t<0||t>3)return this;var i=4*t;return this._m[i+0]=e,this._m[i+1]=n,this._m[i+2]=o,this._m[i+3]=r,this._markAsUpdated(),this},t.prototype.scale=function(e){var n=new t;return this.scaleToRef(e,n),n},t.prototype.scaleToRef=function(t,e){for(var n=0;n<16;n++)e._m[n]=this._m[n]*t;return e._markAsUpdated(),this},t.prototype.scaleAndAddToRef=function(t,e){for(var n=0;n<16;n++)e._m[n]+=this._m[n]*t;return e._markAsUpdated(),this},t.prototype.toNormalMatrix=function(e){var n=i.MathTmp.Matrix[0];this.invertToRef(n),n.transposeToRef(e);var o=e._m;t.FromValuesToRef(o[0],o[1],o[2],0,o[4],o[5],o[6],0,o[8],o[9],o[10],0,0,0,0,1,e)},t.prototype.getRotationMatrix=function(){var e=new t;return this.getRotationMatrixToRef(e),e},t.prototype.getRotationMatrixToRef=function(e){var n=i.MathTmp.Vector3[0];if(!this.decompose(n))return t.IdentityToRef(e),this;var o=this._m,r=1/n.x,s=1/n.y,a=1/n.z;return t.FromValuesToRef(o[0]*r,o[1]*r,o[2]*r,0,o[4]*s,o[5]*s,o[6]*s,0,o[8]*a,o[9]*a,o[10]*a,0,0,0,0,1,e),this},t.prototype.toggleModelMatrixHandInPlace=function(){var t=this._m;t[2]*=-1,t[6]*=-1,t[8]*=-1,t[9]*=-1,t[14]*=-1,this._markAsUpdated()},t.prototype.toggleProjectionMatrixHandInPlace=function(){var t=this._m;t[8]*=-1,t[9]*=-1,t[10]*=-1,t[11]*=-1,this._markAsUpdated()},t.prototype._updateIdentityStatus=function(e,n,o,r){void 0===n&&(n=!1),void 0===o&&(o=!1),void 0===r&&(r=!0),this.updateFlag=t._updateFlagSeed++,this._isIdentity=e,this._isIdentity3x2=e||o,this._isIdentityDirty=!this._isIdentity&&n,this._isIdentity3x2Dirty=!this._isIdentity3x2&&r},t._updateFlagSeed=0,t._identityReadOnly=t.Identity(),t}();e.Matrix=a},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(0),r=n(7),i=n(1),s=function(){function t(t){this.name=t,this.children={},this.eventManager=null,this.alive=!1,this.uuid=i.newId("E"),this.components={},this.engine=null,this._parent=null}return t.prototype.addComponentOrReplace=function(t){if("function"==typeof t)throw new Error("You passed a function or class as a component, an instance of component is expected");if("object"!=typeof t)throw new Error("You passed a "+typeof t+", an instance of component is expected");var e=o.getComponentName(t);if(this.components[e]){if(this.components[e]===t)return t;this.removeComponent(this.components[e],!1)}return this.addComponent(t)},t.prototype.hasComponent=function(t){var e=typeof t;if("string"!==e&&"object"!==e&&"function"!==e)throw new Error("Entity#has(component): component is not a class, name or instance");if(null==t)return!1;var n="string"===e?t:o.getComponentName(t),r=this.components[n];return!!r&&("object"===e?r===t:"function"!==e||r instanceof t)},t.prototype.getComponent=function(t){var e=typeof t;if("string"!==e&&"function"!==e)throw new Error("Entity#get(component): component is not a class or name");var n="string"===e?t:o.getComponentName(t),r=this.components[n];if(!r)throw new Error('Can not get component "'+n+'" from entity "'+this.identifier+'"');if("function"===e){if(r instanceof t)return r;throw new Error('Can not get component "'+n+'" from entity "'+this.identifier+'" (by instance)')}return r},t.prototype.getComponentOrNull=function(t){var e=typeof t;if("string"!==e&&"function"!==e)throw new Error("Entity#getOrNull(component): component is not a class or name");var n="string"===e?t:o.getComponentName(t),r=this.components[n];return r?"function"===e?r instanceof t?r:null:r:null},t.prototype.getComponentOrCreate=function(t){if("function"!=typeof t)throw new Error("Entity#getOrCreate(component): component is not a class");var e=this.getComponentOrNull(t);return e||(e=new t,o.getComponentName(e),this.addComponentOrReplace(e)),e},t.prototype.addComponent=function(t){if("object"!=typeof t)throw new Error("Entity#add(component): You passed a function or class as a component, an instance of component is expected");var e=o.getComponentName(t),n=o.getComponentClassId(t);if(this.components[e])throw new Error('A component of type "'+e+'" is already present in entity "'+this.identifier+'"');this.components[e]=t,this.eventManager&&this.eventManager.fireEvent(new r.ComponentAdded(this,e,n));var i=t;return"function"==typeof i.addedToEntity&&i.addedToEntity(this),t},t.prototype.removeComponent=function(t,e){void 0===e&&(e=!0);var n=typeof t;if("string"!==n&&"function"!==n&&"object"!==n)throw new Error("Entity#remove(component): component is not a class, class or name");var s="string"===n?t:o.getComponentName(t),a=this.components[s];if(a){if("function"===n)return a instanceof t?(delete this.components[s],void(a&&(e&&this.eventManager&&this.eventManager.fireEvent(new r.ComponentRemoved(this,s,a)),"function"==typeof a.removedFromEntity&&a.removedFromEntity(this)))):void i.log('Entity Warning: Trying to remove wrong (by constructor) component "'+s+'" from entity "'+this.identifier+'"');delete this.components[s],a&&(e&&this.eventManager&&this.eventManager.fireEvent(new r.ComponentRemoved(this,s,a)),"function"==typeof a.removedFromEntity&&a.removedFromEntity(this))}else i.log('Entity Warning: Trying to remove inexisting component "'+s+'" from entity "'+this.identifier+'"')},t.prototype.isAddedToEngine=function(){return!(!this.engine||!(this.uuid in this.engine.entities)&&this.engine.rootEntity!==this)},t.prototype.setParent=function(t){var e;if(t&&"getEntityRepresentation"in t){if(!this.engine)throw new Error("In order to set an attachable as parent, you first need to add the entity to the engine.");e=t.getEntityRepresentation(this.engine)}else e=!t&&this.engine?this.engine.rootEntity:t;var n=this.getParent();if(e===this)throw new Error('Failed to set parent for entity "'+this.identifier+"\": An entity can't set itself as a its own parent");if(e===n)return this;var o=this.getCircularAncestor(e);if(o)throw new Error('Failed to set parent for entity "'+this.identifier+'": Circular parent references are not allowed (See entity "'+o+'")');return n&&delete n.children[this.uuid],null!==e&&"0"!==e.uuid&&(!e.isAddedToEngine()&&this.isAddedToEngine()&&this.engine.removeEntity(this),e.isAddedToEngine()&&!this.isAddedToEngine()&&e.engine.addEntity(this)),this._parent=e||null,this.registerAsChild(),this.eventManager&&this.engine&&this.eventManager.fireEvent(new r.ParentChanged(this,e)),this},t.prototype.getParent=function(){return this._parent},Object.defineProperty(t.prototype,"identifier",{get:function(){return this.name||this.uuid},enumerable:!0,configurable:!0}),t.prototype.getCircularAncestor=function(t){for(var e=this.engine?this.engine.rootEntity:null,n=t;n&&n!==e;){var o=n.getParent();if(o===this)return n.uuid;n=o}return null},t.prototype.registerAsChild=function(){var t=this.getParent();this.uuid&&t&&(t.children[this.uuid]=this)},t}();e.Entity=s},function(t,e,n){"use strict";var o=this&&this.__decorate||function(t,e,n,o){var r,i=arguments.length,s=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var a=t.length-1;a>=0;a--)(r=t[a])&&(s=(i<3?r(s):i>3?r(e,n,s):r(e,n))||s);return i>3&&s&&Object.defineProperty(e,n,s),s};Object.defineProperty(e,"__esModule",{value:!0});var r=n(8),i=function(){function t(t,e){this.uuid=t,this.payload=e}return t=o([r.EventConstructor()],t)}();e.UUIDEvent=i;var s=function(){function t(t){this.payload=t}return t=o([r.EventConstructor()],t)}();e.RaycastResponse=s;var a=function(){function t(t){this.payload=t}return t=o([r.EventConstructor()],t)}();e.PointerEvent=a},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(13),r=n(4),i=n(7),s=n(16),a=n(28),p=function(){function t(){}return t.prototype.activate=function(t){t.eventManager.addListener(o.RaycastResponse,this,(function(t){"HitFirst"===t.payload.queryType?a.PhysicsCast.instance.handleRaycastHitFirstResponse(t):"HitAll"===t.payload.queryType&&a.PhysicsCast.instance.handleRaycastHitAllResponse(t)})),"undefined"!=typeof dcl&&dcl.subscribe("raycastResponse")},t.prototype.deactivate=function(){"undefined"!=typeof dcl&&dcl.unsubscribe("raycastResponse")},t}();e.RaycastEventSystem=p,e.raycastEventSystem=new p;var u=function(){function t(){}return t.prototype.activate=function(t){t.eventManager.addListener(o.PointerEvent,this,(function(t){s.Input.instance.handlePointerEvent(t.payload)})),"undefined"!=typeof dcl&&(dcl.subscribe("pointerUp"),dcl.subscribe("pointerDown"),dcl.subscribe("pointerEvent"))},t.prototype.deactivate=function(){"undefined"!=typeof dcl&&(dcl.unsubscribe("pointerUp"),dcl.unsubscribe("pointerDown"),dcl.unsubscribe("pointerEvent"))},t}();e.PointerEventSystem=u,e.pointerEventSystem=new u;var l=function(){function t(){this.handlerMap={}}return t.prototype.activate=function(t){t.eventManager.addListener(o.UUIDEvent,this,this.handleEvent),t.eventManager.addListener(i.ComponentAdded,this,this.componentAdded),t.eventManager.addListener(i.ComponentRemoved,this,this.componentRemoved),"undefined"!=typeof dcl&&dcl.subscribe("uuidEvent")},t.prototype.deactivate=function(){"undefined"!=typeof dcl&&dcl.unsubscribe("uuidEvent")},t.prototype.onAddEntity=function(t){for(var e in t.components){var n=t.components[e];n instanceof r.OnUUIDEvent&&(this.handlerMap[n.uuid]=n)}},t.prototype.onRemoveEntity=function(t){for(var e in t.components){var n=t.components[e];n instanceof r.OnUUIDEvent&&delete this.handlerMap[n.uuid]}},t.prototype.componentAdded=function(t){if(t.entity.isAddedToEngine()){var e=t.entity.components[t.componentName];e instanceof r.OnUUIDEvent&&(this.handlerMap[e.uuid]=e)}},t.prototype.componentRemoved=function(t){t.entity.isAddedToEngine()&&t.component instanceof r.OnUUIDEvent&&delete this.handlerMap[t.component.uuid]},t.prototype.handleEvent=function(t){if(t.uuid in this.handlerMap){var e=this.handlerMap[t.uuid];e&&e.callback&&"call"in e.callback&&e.callback(t.payload)}},t}();e.UUIDEventSystem=l,e.uuidEventSystem=new l},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(2),r=n(6),i=function(){function t(t,e){void 0===t&&(t=0),void 0===e&&(e=0),this.x=t,this.y=e}return t.Zero=function(){return new t(0,0)},t.One=function(){return new t(1,1)},t.Add=function(e,n){return new t(e.x,e.y).addInPlace(n)},t.FromArray=function(e,n){return void 0===n&&(n=0),new t(e[n],e[n+1])},t.FromArrayToRef=function(t,e,n){n.x=t[e],n.y=t[e+1]},t.CatmullRom=function(e,n,o,r,i){var s=i*i,a=i*s;return new t(.5*(2*n.x+(-e.x+o.x)*i+(2*e.x-5*n.x+4*o.x-r.x)*s+(-e.x+3*n.x-3*o.x+r.x)*a),.5*(2*n.y+(-e.y+o.y)*i+(2*e.y-5*n.y+4*o.y-r.y)*s+(-e.y+3*n.y-3*o.y+r.y)*a))},t.Clamp=function(e,n,o){var r=e.x;r=(r=r>o.x?o.x:r)<n.x?n.x:r;var i=e.y;return new t(r,i=(i=i>o.y?o.y:i)<n.y?n.y:i)},t.Hermite=function(e,n,o,r,i){var s=i*i,a=i*s,p=2*a-3*s+1,u=-2*a+3*s,l=a-2*s+i,c=a-s;return new t(e.x*p+o.x*u+n.x*l+r.x*c,e.y*p+o.y*u+n.y*l+r.y*c)},t.Lerp=function(e,n,o){return new t(e.x+(n.x-e.x)*o,e.y+(n.y-e.y)*o)},t.Dot=function(t,e){return t.x*e.x+t.y*e.y},t.Normalize=function(e){var n=new t(e.x,e.y);return n.normalize(),n},t.Minimize=function(e,n){return new t(e.x<n.x?e.x:n.x,e.y<n.y?e.y:n.y)},t.Maximize=function(e,n){return new t(e.x>n.x?e.x:n.x,e.y>n.y?e.y:n.y)},t.Transform=function(e,n){var o=t.Zero();return t.TransformToRef(e,n,o),o},t.TransformToRef=function(t,e,n){var o=e.m,r=t.x*o[0]+t.y*o[4]+o[12],i=t.x*o[1]+t.y*o[5]+o[13];n.x=r,n.y=i},t.PointInTriangle=function(t,e,n,o){var r=.5*(-n.y*o.x+e.y*(-n.x+o.x)+e.x*(n.y-o.y)+n.x*o.y),i=r<0?-1:1,s=(e.y*o.x-e.x*o.y+(o.y-e.y)*t.x+(e.x-o.x)*t.y)*i,a=(e.x*n.y-e.y*n.x+(e.y-n.y)*t.x+(n.x-e.x)*t.y)*i;return s>0&&a>0&&s+a<2*r*i},t.Distance=function(e,n){return Math.sqrt(t.DistanceSquared(e,n))},t.DistanceSquared=function(t,e){var n=t.x-e.x,o=t.y-e.y;return n*n+o*o},t.Center=function(e,n){var o=t.Add(e,n);return o.scaleInPlace(.5),o},t.DistanceOfPointFromSegment=function(e,n,o){var r=t.DistanceSquared(n,o);if(0===r)return t.Distance(e,n);var i=o.subtract(n),s=Math.max(0,Math.min(1,t.Dot(e.subtract(n),i)/r)),a=n.add(i.multiplyByFloats(s,s));return t.Distance(e,a)},t.prototype.toString=function(){return"{X: "+this.x+" Y:"+this.y+"}"},t.prototype.getClassName=function(){return"Vector2"},t.prototype.getHashCode=function(){var t=this.x||0;return t=397*t^(this.y||0)},t.prototype.toArray=function(t,e){return void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,this},t.prototype.asArray=function(){var t=new Array;return this.toArray(t,0),t},t.prototype.copyFrom=function(t){return this.x=t.x,this.y=t.y,this},t.prototype.copyFromFloats=function(t,e){return this.x=t,this.y=e,this},t.prototype.set=function(t,e){return this.copyFromFloats(t,e)},t.prototype.add=function(e){return new t(this.x+e.x,this.y+e.y)},t.prototype.addToRef=function(t,e){return e.x=this.x+t.x,e.y=this.y+t.y,this},t.prototype.addInPlace=function(t){return this.x+=t.x,this.y+=t.y,this},t.prototype.addVector3=function(e){return new t(this.x+e.x,this.y+e.y)},t.prototype.subtract=function(e){return new t(this.x-e.x,this.y-e.y)},t.prototype.subtractToRef=function(t,e){return e.x=this.x-t.x,e.y=this.y-t.y,this},t.prototype.subtractInPlace=function(t){return this.x-=t.x,this.y-=t.y,this},t.prototype.multiplyInPlace=function(t){return this.x*=t.x,this.y*=t.y,this},t.prototype.multiply=function(e){return new t(this.x*e.x,this.y*e.y)},t.prototype.multiplyToRef=function(t,e){return e.x=this.x*t.x,e.y=this.y*t.y,this},t.prototype.multiplyByFloats=function(e,n){return new t(this.x*e,this.y*n)},t.prototype.divide=function(e){return new t(this.x/e.x,this.y/e.y)},t.prototype.divideToRef=function(t,e){return e.x=this.x/t.x,e.y=this.y/t.y,this},t.prototype.divideInPlace=function(t){return this.divideToRef(t,this)},t.prototype.negate=function(){return new t(-this.x,-this.y)},t.prototype.scaleInPlace=function(t){return this.x*=t,this.y*=t,this},t.prototype.scale=function(e){var n=new t(0,0);return this.scaleToRef(e,n),n},t.prototype.scaleToRef=function(t,e){return e.x=this.x*t,e.y=this.y*t,this},t.prototype.scaleAndAddToRef=function(t,e){return e.x+=this.x*t,e.y+=this.y*t,this},t.prototype.equals=function(t){return t&&this.x===t.x&&this.y===t.y},t.prototype.equalsWithEpsilon=function(t,e){return void 0===e&&(e=o.Epsilon),t&&r.Scalar.WithinEpsilon(this.x,t.x,e)&&r.Scalar.WithinEpsilon(this.y,t.y,e)},t.prototype.floor=function(){return new t(Math.floor(this.x),Math.floor(this.y))},t.prototype.fract=function(){return new t(this.x-Math.floor(this.x),this.y-Math.floor(this.y))},t.prototype.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y)},t.prototype.lengthSquared=function(){return this.x*this.x+this.y*this.y},t.prototype.normalize=function(){var t=this.length();if(0===t)return this;var e=1/t;return this.x*=e,this.y*=e,this},t.prototype.clone=function(){return new t(this.x,this.y)},t}();e.Vector2=i},function(t,e,n){"use strict";var o,r=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),i=this&&this.__assign||function(){return(i=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var r in e=arguments[n])Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t}).apply(this,arguments)},s=this&&this.__decorate||function(t,e,n,o){var r,i=arguments.length,s=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var a=t.length-1;a>=0;a--)(r=t[a])&&(s=(i<3?r(s):i>3?r(e,n,s):r(e,n))||s);return i>3&&s&&Object.defineProperty(e,n,s),s};Object.defineProperty(e,"__esModule",{value:!0});var a,p=n(27),u=n(5),l=n(0);!function(t){t.POINTER="POINTER",t.PRIMARY="PRIMARY",t.SECONDARY="SECONDARY",t.ANY="ANY"}(a=e.ActionButton||(e.ActionButton={}));var c=function(t){if(this.callback=t,!t||!("apply"in t)||!("call"in t))throw new Error("Callback is not a function");y.ensureInstance()};e.PointerEventComponent=c;var h=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return r(e,t),e=s([l.Component("pointerDown")],e)}(c);e.GlobalPointerDown=h;var d=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return r(e,t),e=s([l.Component("pointerUp")],e)}(c);e.GlobalPointerUp=d;var f=function(t,e){this.fn=t,this.useRaycast=e},y=function(){function t(){var t,e;this.subscriptions=((t={})[a.POINTER]={BUTTON_DOWN:[],BUTTON_UP:[]},t[a.PRIMARY]={BUTTON_DOWN:[],BUTTON_UP:[]},t[a.SECONDARY]={BUTTON_DOWN:[],BUTTON_UP:[]},t[a.ANY]={BUTTON_DOWN:[],BUTTON_UP:[]},t),this.internalState=((e={})[a.POINTER]={BUTTON_DOWN:!1},e[a.PRIMARY]={BUTTON_DOWN:!1},e[a.SECONDARY]={BUTTON_DOWN:!1},e[a.ANY]={BUTTON_DOWN:!1},e)}return Object.defineProperty(t,"instance",{get:function(){return t.ensureInstance(),t._instance},enumerable:!0,configurable:!0}),t.ensureInstance=function(){t._instance||(t._instance=new t)},t.prototype.isButtonPressed=function(t){return this.internalState[t]},t.prototype.subscribe=function(t,e,n,o){var r=this;return this.subscriptions[e][t].push(new f(o,n)),function(){return r.unsubscribe(t,e,o)}},t.prototype.unsubscribe=function(t,e,n){var o=this.getSubscriptionId(t,e,n);return o>-1&&this.subscriptions[e][t].splice(o,1)},t.prototype.handlePointerEvent=function(t){var e=this.getPointerById(t.buttonId),n=i(i({},t),{button:e,direction:(new u.Vector3).copyFrom(t.direction),origin:(new u.Vector3).copyFrom(t.origin),hit:void 0}),o=t.hit?i(i({},t.hit),{hitPoint:(new u.Vector3).copyFrom(t.hit.hitPoint),normal:(new u.Vector3).copyFrom(t.hit.normal),worldNormal:(new u.Vector3).copyFrom(t.hit.worldNormal)}):void 0;if(t.type===p.InputEventType.DOWN){this.internalState[e].BUTTON_DOWN=!0;for(var r=0;r<this.subscriptions[e].BUTTON_DOWN.length;r++){(s=this.subscriptions[e].BUTTON_DOWN[r]).useRaycast?n.hit=o:n.hit=void 0,s.fn(n)}if(o&&o.entityId&&l.DisposableComponent.engine)(c=(a=l.DisposableComponent.engine.entities[o.entityId])&&a.getComponentOrNull(h))&&(n.hit=o,c.callback(n))}else{this.internalState[e].BUTTON_DOWN=!1;for(r=0;r<this.subscriptions[e].BUTTON_UP.length;r++){var s;(s=this.subscriptions[e].BUTTON_UP[r]).useRaycast?n.hit=o:n.hit=void 0,s.fn(n)}var a,c;if(o&&o.entityId&&l.DisposableComponent.engine)(c=(a=l.DisposableComponent.engine.entities[o.entityId])&&a.getComponentOrNull(d))&&(n.hit=o,c.callback(n))}},t.prototype.getSubscriptionId=function(t,e,n){for(var o=0;o<this.subscriptions[e][t].length;o++)if(this.subscriptions[e][t][o].fn===n)return o;return-1},t.prototype.getPointerById=function(t){return 0===t?a.POINTER:1===t?a.PRIMARY:a.SECONDARY},t}();e.Input=y},function(t,e,n){"use strict";var o=this&&this.__read||function(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var o,r,i=n.call(t),s=[];try{for(;(void 0===e||e-- >0)&&!(o=i.next()).done;)s.push(o.value)}catch(t){r={error:t}}finally{try{o&&!o.done&&(n=i.return)&&n.call(i)}finally{if(r)throw r.error}}return s},r=this&&this.__spread||function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(o(arguments[e]));return t};Object.defineProperty(e,"__esModule",{value:!0});var i=n(7),s=n(0),a=n(8),p=n(32),u=n(1),l=n(12),c=function(){function t(t){this.eventManager=new a.EventManager,this.systems=[],this.entityLists={},this.addedSystems=[],this._entities={},this._disposableComponents={},this._componentGroups={},this.simpleSystems=[],this.eventManager.addListener(i.ComponentAdded,this,this.componentAddedHandler),this.eventManager.addListener(i.ComponentRemoved,this,this.componentRemovedHandler),this.rootEntity=t,this.firstPersonCameraEntity=new l.Entity,this.firstPersonCameraEntity.uuid="FirstPersonCameraEntityReference",this.addEntity(this.firstPersonCameraEntity),this.avatarEntity=new l.Entity,this.avatarEntity.uuid="AvatarEntityReference",this.addEntity(this.avatarEntity)}return Object.defineProperty(t.prototype,"entities",{get:function(){return this._entities},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"disposableComponents",{get:function(){return this._disposableComponents},enumerable:!0,configurable:!0}),t.prototype.addEntity=function(t){var e=t.getParent();if(t.isAddedToEngine())return t;for(var n in t.eventManager=this.eventManager,t.engine=this,this._entities[t.uuid]=t,this.checkRequirementsAndAdd(t),e?e.isAddedToEngine()||e===this.rootEntity||u.log("Engine: warning, added an entity with a parent not present in the engine. Parent id: "+e.uuid):t.setParent(this.rootEntity),t.alive=!0,t.children){var o=t.children[n];o&&(o.isAddedToEngine()||this.addEntity(o))}return t},t.prototype.removeEntity=function(t){var e=t.uuid;if(t.isAddedToEngine()){for(var n in t.components){var o=this._componentGroups[n];if(o)for(var r in o)o[r].removeEntity(t);delete this.entityLists[n][e]}for(var i=0;i<this.simpleSystems.length;i++){var s=this.simpleSystems[i];s.onRemoveEntity&&s.onRemoveEntity(t)}for(var i in t.children){var a=t.children[i];a&&this.removeEntity(a)}return t.alive=!1,t.eventManager=null,delete this._entities[e],!0}for(var n in u.log("Engine: Trying to remove non existent entity from engine."),t.isAddedToEngine()?u.log("Engine: Entity id: "+e):u.log('Engine: Entity "'+t.uuid+'" has not been added to any engine yet.'),u.log("Engine: Entity's components:"),t.components)u.log(n);return!1},t.prototype.addSystem=function(t,e){if(void 0===e&&(e=0),-1!==this.addedSystems.indexOf(t))return u.log("Engine: Trying to add a system that is already added. Aborting"),t;if(this.systems.length>0)for(var n=0;n<this.systems.length;n++){var o=this.systems[n],r=n===this.systems.length-1;if(o.priority>e){this.addedSystems.push(t),this.systems.splice(n,0,{system:t,priority:e});break}if(r){this.addedSystems.push(t),this.systems.splice(n+1,0,{system:t,priority:e});break}}else this.addedSystems.push(t),this.systems.splice(1,0,{system:t,priority:e});return this.registerSystem(t),t},t.prototype.removeSystem=function(t){var e=this.addedSystems.indexOf(t);if(-1!==e){t.active=!1,t.deactivate&&t.deactivate(),this.addedSystems.splice(e,1);for(var n=0;n<this.systems.length;n++){this.systems[n].system===t&&this.systems.splice(n,1)}return!0}return!1},t.prototype.update=function(t){for(var e in this.systems){var n=this.systems[e].system;if(n.active&&n.update)try{n.update(t)}catch(t){u.error(t)}}return this},t.prototype.getEntitiesWithComponent=function(t){var e="string"==typeof t?t:s.getComponentName(t);return e in this.entityLists?this.entityLists[e]:this.entityLists[e]={}},t.prototype.registerComponent=function(t){var e=s.getComponentId(t),n=s.getComponentName(t),o=s.getComponentClassId(t);this._disposableComponents[e]=t,null!==o&&(this.eventManager.fireEvent(new s.DisposableComponentCreated(e,n,o)),this.eventManager.fireEvent(new s.DisposableComponentUpdated(e,t)))},t.prototype.disposeComponent=function(t){var e=s.getComponentId(t);return delete this._disposableComponents[e]&&(this.eventManager.fireEvent(new s.DisposableComponentRemoved(e)),t.onDispose&&t.onDispose(),!0)},t.prototype.updateComponent=function(t){this.eventManager.fireEvent(new s.DisposableComponentUpdated(s.getComponentId(t),t))},t.prototype.getComponentGroup=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n=new(p.ComponentGroup.bind.apply(p.ComponentGroup,r([void 0],t)));n.active=!0;for(var o=n.requiresNames,i=0;i<o.length;i++){var s=o[i],a=this._componentGroups[s];a||(this._componentGroups[s]=a=[]),-1===a.indexOf(n)&&a.push(n)}for(var u in this._entities)this.checkRequirements(this._entities[u],n);return n},t.prototype.removeComponentGroup=function(t){if(t.active){t.active=!1;for(var e=t.requiresNames,n=0;n<e.length;n++){var o=e[n],r=this._componentGroups[o];if(r){var i=r.indexOf(t);-1!==i&&r.splice(i,1)}}return!0}return!1},t.prototype.registerSystem=function(t){t.active=!0,t.activate&&t.activate(this),this.simpleSystems.push(t)},t.prototype.checkRequirementsAndAdd=function(t){if(t.isAddedToEngine()){for(var e in t.components){e in this.entityLists||(this.entityLists[e]={}),this.entityLists[e][t.uuid]=t;var n=this._componentGroups[e];if(n)for(var o in n)this.checkRequirements(t,n[o])}for(var r=0;r<this.simpleSystems.length;r++){var i=this.simpleSystems[r];i.onAddEntity&&i.onAddEntity(t)}}},t.prototype.checkRequirements=function(t,e){e.meetsRequirements(t)?e.hasEntity(t)||e.addEntity(t):e.hasEntity(t)&&e.removeEntity(t)},t.prototype.componentAddedHandler=function(t){var e,n=t.entity,o=t.componentName;if(n.isAddedToEngine()){this.entityLists[o]?this.entityLists[o][n.uuid]=n:this.entityLists[o]=((e={})[n.uuid]=n,e);var r=this._componentGroups[o];if(r)for(var i in r)this.checkRequirements(n,r[i])}},t.prototype.componentRemovedHandler=function(t){var e=t.entity,n=t.componentName;if(e.isAddedToEngine()){delete this.entityLists[n][e.uuid];var o=this._componentGroups[n];if(o)for(var r in o)this.checkRequirements(e,o[r])}},t}();e.Engine=c},function(t,e,n){"use strict";var o;Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.PERCENT=0]="PERCENT",t[t.PIXELS=1]="PIXELS"}(o=e.UIValueType||(e.UIValueType={}));var r=function(){function t(t){if(this.type=o.PIXELS,"string"==typeof t){var e=t;e.indexOf("px")>-1?this.type=o.PIXELS:e.indexOf("%")>-1&&(this.type=o.PERCENT),this.value=parseFloat(e)}else this.value=t}return t.prototype.toString=function(){var t=this.value.toString();return this.type===o.PERCENT?t+="%":t+="px",t},t}();e.UIValue=r},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1),r=Promise.resolve().then.bind(Promise.resolve());e.executeTask=function(t){var e=r(t);return e.isComplete=!1,e.then((function(t){e.isComplete=!0,e.result=t,e.didFail=!1})).catch((function(t){e.isComplete=!0,e.error=t,e.didFail=!0,o.error("executeTask: FAILED "+t.toString(),t)})),e}},function(t,e,n){"use strict";var o=this&&this.__awaiter||function(t,e,n,o){return new(n||(n=Promise))((function(r,i){function s(t){try{p(o.next(t))}catch(t){i(t)}}function a(t){try{p(o.throw(t))}catch(t){i(t)}}function p(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,a)}p((o=o.apply(t,e||[])).next())}))},r=this&&this.__generator||function(t,e){var n,o,r,i,s={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(i){return function(a){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,o&&(r=2&i[0]?o.return:i[0]?o.throw||((r=o.return)&&r.call(o),0):o.next)&&!(r=r.call(o,i[1])).done)return r;switch(o=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,o=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(r=s.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){s=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){s.label=i[1];break}if(6===i[0]&&s.label<r[1]){s.label=r[1],r=i;break}if(r&&s.label<r[2]){s.label=r[2],s.ops.push(i);break}r[2]&&s.ops.pop(),s.trys.pop();continue}i=e.call(t,s)}catch(t){i=[6,t],o=0}finally{n=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,a])}}},i=this&&this.__values||function(t){var e="function"==typeof Symbol&&Symbol.iterator,n=e&&t[e],o=0;if(n)return n.call(t);if(t&&"number"==typeof t.length)return{next:function(){return t&&o>=t.length&&(t=void 0),{value:t&&t[o++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(e,"__esModule",{value:!0});var s=n(19),a=function(){function t(t,e,n,o){void 0===e&&(e=!1),this.initalize(t,e,n,o)}return t.prototype.initalize=function(t,e,n,o){return void 0===e&&(e=!1),this.mask=t,this.skipNextObservers=e,this.target=n,this.currentTarget=o,this},t}();e.ObserverEventState=a;var p=function(t,e,n){void 0===n&&(n=null),this.callback=t,this.mask=e,this.scope=n,this.unregisterOnNextCall=!1,this._willBeUnregistered=!1};e.Observer=p;var u=function(){function t(){this._observers=null,this._observables=null}return t.Watch=function(e,n,o,r){var s,a;void 0===o&&(o=-1),void 0===r&&(r=null);var p=new t;p._observers=new Array,p._observables=e;try{for(var u=i(e),l=u.next();!l.done;l=u.next()){var c=l.value.add(n,o,!1,r);c&&p._observers.push(c)}}catch(t){s={error:t}}finally{try{l&&!l.done&&(a=u.return)&&a.call(u)}finally{if(s)throw s.error}}return p},t.prototype.dispose=function(){if(this._observers&&this._observables)for(var t=0;t<this._observers.length;t++)this._observables[t].remove(this._observers[t]);this._observers=null,this._observables=null},t}();e.MultiObserver=u;var l=function(){function t(t){this._observers=new Array,this._onObserverAdded=null,this._eventState=new a(0),t&&(this._onObserverAdded=t)}return t.prototype.add=function(t,e,n,o,r){if(void 0===e&&(e=-1),void 0===n&&(n=!1),void 0===o&&(o=null),void 0===r&&(r=!1),!t)return null;var i=new p(t,e,o);return i.unregisterOnNextCall=r,n?this._observers.unshift(i):this._observers.push(i),this._onObserverAdded&&this._onObserverAdded(i),i},t.prototype.addOnce=function(t){return this.add(t,void 0,void 0,void 0,!0)},t.prototype.remove=function(t){return!!t&&(-1!==this._observers.indexOf(t)&&(this._deferUnregister(t),!0))},t.prototype.removeCallback=function(t,e){for(var n=0;n<this._observers.length;n++)if(this._observers[n].callback===t&&(!e||e===this._observers[n].scope))return this._deferUnregister(this._observers[n]),!0;return!1},t.prototype.notifyObservers=function(t,e,n,o){var r,s;if(void 0===e&&(e=-1),!this._observers.length)return!0;var a=this._eventState;a.mask=e,a.target=n,a.currentTarget=o,a.skipNextObservers=!1,a.lastReturnValue=t;try{for(var p=i(this._observers),u=p.next();!u.done;u=p.next()){var l=u.value;if(!l._willBeUnregistered&&(l.mask&e&&(l.scope?a.lastReturnValue=l.callback.apply(l.scope,[t,a]):a.lastReturnValue=l.callback(t,a),l.unregisterOnNextCall&&this._deferUnregister(l)),a.skipNextObservers))return!1}}catch(t){r={error:t}}finally{try{u&&!u.done&&(s=p.return)&&s.call(p)}finally{if(r)throw r.error}}return!0},t.prototype.notifyObserversWithPromise=function(t,e,n,o){var r=this;void 0===e&&(e=-1);var i=Promise.resolve(t);if(!this._observers.length)return i;var s=this._eventState;return s.mask=e,s.target=n,s.currentTarget=o,s.skipNextObservers=!1,this._observers.forEach((function(n){s.skipNextObservers||n._willBeUnregistered||n.mask&e&&(i=n.scope?i.then((function(e){return s.lastReturnValue=e,n.callback.apply(n.scope,[t,s])})):i.then((function(e){return s.lastReturnValue=e,n.callback(t,s)})),n.unregisterOnNextCall&&r._deferUnregister(n))})),i.then((function(){return t}))},t.prototype.notifyObserver=function(t,e,n){void 0===n&&(n=-1);var o=this._eventState;o.mask=n,o.skipNextObservers=!1,t.callback(e,o)},t.prototype.hasObservers=function(){return this._observers.length>0},t.prototype.clear=function(){this._observers=new Array,this._onObserverAdded=null},t.prototype.clone=function(){var e=new t;return e._observers=this._observers.slice(0),e},t.prototype.hasSpecificMask=function(t){var e,n;void 0===t&&(t=-1);try{for(var o=i(this._observers),r=o.next();!r.done;r=o.next()){var s=r.value;if(s.mask&t||s.mask===t)return!0}}catch(t){e={error:t}}finally{try{r&&!r.done&&(n=o.return)&&n.call(o)}finally{if(e)throw e.error}}return!1},t.prototype._deferUnregister=function(t){var e=this;t.unregisterOnNextCall=!1,t._willBeUnregistered=!0,s.executeTask((function(){return o(e,void 0,void 0,(function(){return r(this,(function(e){return[2,this._remove(t)]}))}))}))},t.prototype._remove=function(t){if(!t)return!1;var e=this._observers.indexOf(t);return-1!==e&&(this._observers.splice(e,1),!0)},t}();e.Observable=l},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(2),r=n(6),i=n(3),s=function(){function t(t,e,n,o){this.x=t,this.y=e,this.z=n,this.w=o}return t.Add=function(e,n){return new t(e.x,e.y,e.z,e.w).addInPlace(n)},t.FromArray=function(e,n){return void 0===n&&(n=0),new t(e[n],e[n+1],e[n+2],e[n+3])},t.FromArrayToRef=function(t,e,n){n.x=t[e],n.y=t[e+1],n.z=t[e+2],n.w=t[e+3]},t.FromFloatArrayToRef=function(e,n,o){t.FromArrayToRef(e,n,o)},t.FromFloatsToRef=function(t,e,n,o,r){r.x=t,r.y=e,r.z=n,r.w=o},t.Zero=function(){return new t(0,0,0,0)},t.One=function(){return new t(1,1,1,1)},t.Normalize=function(e){var n=t.Zero();return t.NormalizeToRef(e,n),n},t.NormalizeToRef=function(t,e){e.copyFrom(t),e.normalize()},t.Minimize=function(e,n){var o=new t(e.x,e.y,e.z,e.w);return o.minimizeInPlace(n),o},t.Maximize=function(e,n){var o=new t(e.x,e.y,e.z,e.w);return o.maximizeInPlace(n),o},t.Distance=function(e,n){return Math.sqrt(t.DistanceSquared(e,n))},t.DistanceSquared=function(t,e){var n=t.x-e.x,o=t.y-e.y,r=t.z-e.z,i=t.w-e.w;return n*n+o*o+r*r+i*i},t.Center=function(e,n){var o=t.Add(e,n);return o.scaleInPlace(.5),o},t.TransformNormal=function(e,n){var o=t.Zero();return t.TransformNormalToRef(e,n,o),o},t.TransformNormalToRef=function(t,e,n){var o=e.m,r=t.x*o[0]+t.y*o[4]+t.z*o[8],i=t.x*o[1]+t.y*o[5]+t.z*o[9],s=t.x*o[2]+t.y*o[6]+t.z*o[10];n.x=r,n.y=i,n.z=s,n.w=t.w},t.TransformNormalFromFloatsToRef=function(t,e,n,o,r,i){var s=r.m;i.x=t*s[0]+e*s[4]+n*s[8],i.y=t*s[1]+e*s[5]+n*s[9],i.z=t*s[2]+e*s[6]+n*s[10],i.w=o},t.prototype.toString=function(){return"{X: "+this.x+" Y:"+this.y+" Z:"+this.z+" W:"+this.w+"}"},t.prototype.getClassName=function(){return"Vector4"},t.prototype.getHashCode=function(){var t=this.x||0;return t=397*(t=397*(t=397*t^(this.y||0))^(this.z||0))^(this.w||0)},t.prototype.asArray=function(){var t=new Array;return this.toArray(t,0),t},t.prototype.toArray=function(t,e){return void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,this},t.prototype.addInPlace=function(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this},t.prototype.add=function(e){return new t(this.x+e.x,this.y+e.y,this.z+e.z,this.w+e.w)},t.prototype.addToRef=function(t,e){return e.x=this.x+t.x,e.y=this.y+t.y,e.z=this.z+t.z,e.w=this.w+t.w,this},t.prototype.subtractInPlace=function(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this},t.prototype.subtract=function(e){return new t(this.x-e.x,this.y-e.y,this.z-e.z,this.w-e.w)},t.prototype.subtractToRef=function(t,e){return e.x=this.x-t.x,e.y=this.y-t.y,e.z=this.z-t.z,e.w=this.w-t.w,this},t.prototype.subtractFromFloats=function(e,n,o,r){return new t(this.x-e,this.y-n,this.z-o,this.w-r)},t.prototype.subtractFromFloatsToRef=function(t,e,n,o,r){return r.x=this.x-t,r.y=this.y-e,r.z=this.z-n,r.w=this.w-o,this},t.prototype.negate=function(){return new t(-this.x,-this.y,-this.z,-this.w)},t.prototype.scaleInPlace=function(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},t.prototype.scale=function(e){return new t(this.x*e,this.y*e,this.z*e,this.w*e)},t.prototype.scaleToRef=function(t,e){return e.x=this.x*t,e.y=this.y*t,e.z=this.z*t,e.w=this.w*t,this},t.prototype.scaleAndAddToRef=function(t,e){return e.x+=this.x*t,e.y+=this.y*t,e.z+=this.z*t,e.w+=this.w*t,this},t.prototype.equals=function(t){return t&&this.x===t.x&&this.y===t.y&&this.z===t.z&&this.w===t.w},t.prototype.equalsWithEpsilon=function(t,e){return void 0===e&&(e=o.Epsilon),t&&r.Scalar.WithinEpsilon(this.x,t.x,e)&&r.Scalar.WithinEpsilon(this.y,t.y,e)&&r.Scalar.WithinEpsilon(this.z,t.z,e)&&r.Scalar.WithinEpsilon(this.w,t.w,e)},t.prototype.equalsToFloats=function(t,e,n,o){return this.x===t&&this.y===e&&this.z===n&&this.w===o},t.prototype.multiplyInPlace=function(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this},t.prototype.multiply=function(e){return new t(this.x*e.x,this.y*e.y,this.z*e.z,this.w*e.w)},t.prototype.multiplyToRef=function(t,e){return e.x=this.x*t.x,e.y=this.y*t.y,e.z=this.z*t.z,e.w=this.w*t.w,this},t.prototype.multiplyByFloats=function(e,n,o,r){return new t(this.x*e,this.y*n,this.z*o,this.w*r)},t.prototype.divide=function(e){return new t(this.x/e.x,this.y/e.y,this.z/e.z,this.w/e.w)},t.prototype.divideToRef=function(t,e){return e.x=this.x/t.x,e.y=this.y/t.y,e.z=this.z/t.z,e.w=this.w/t.w,this},t.prototype.divideInPlace=function(t){return this.divideToRef(t,this)},t.prototype.minimizeInPlace=function(t){return t.x<this.x&&(this.x=t.x),t.y<this.y&&(this.y=t.y),t.z<this.z&&(this.z=t.z),t.w<this.w&&(this.w=t.w),this},t.prototype.maximizeInPlace=function(t){return t.x>this.x&&(this.x=t.x),t.y>this.y&&(this.y=t.y),t.z>this.z&&(this.z=t.z),t.w>this.w&&(this.w=t.w),this},t.prototype.floor=function(){return new t(Math.floor(this.x),Math.floor(this.y),Math.floor(this.z),Math.floor(this.w))},t.prototype.fract=function(){return new t(this.x-Math.floor(this.x),this.y-Math.floor(this.y),this.z-Math.floor(this.z),this.w-Math.floor(this.w))},t.prototype.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},t.prototype.lengthSquared=function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},t.prototype.normalize=function(){var t=this.length();return 0===t?this:this.scaleInPlace(1/t)},t.prototype.toVector3=function(){return new i.Vector3(this.x,this.y,this.z)},t.prototype.clone=function(){return new t(this.x,this.y,this.z,this.w)},t.prototype.copyFrom=function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this},t.prototype.copyFromFloats=function(t,e,n,o){return this.x=t,this.y=e,this.z=n,this.w=o,this},t.prototype.set=function(t,e,n,o){return this.copyFromFloats(t,e,n,o)},t.prototype.setAll=function(t){return this.x=this.y=this.z=this.w=t,this},t}();e.Vector4=s},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=function(){function t(t){this._radians=t,this._radians<0&&(this._radians+=2*Math.PI)}return t.BetweenTwoPoints=function(e,n){var o=n.subtract(e);return new t(Math.atan2(o.y,o.x))},t.FromRadians=function(e){return new t(e)},t.FromDegrees=function(e){return new t(e*Math.PI/180)},t.prototype.degrees=function(){return 180*this._radians/Math.PI},t.prototype.radians=function(){return this._radians},t}();e.Angle=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(22),r=n(15),i=n(2),s=function(t,e,n){this.startPoint=t,this.midPoint=e,this.endPoint=n;var s=Math.pow(e.x,2)+Math.pow(e.y,2),a=(Math.pow(t.x,2)+Math.pow(t.y,2)-s)/2,p=(s-Math.pow(n.x,2)-Math.pow(n.y,2))/2,u=(t.x-e.x)*(e.y-n.y)-(e.x-n.x)*(t.y-e.y);this.centerPoint=new r.Vector2((a*(e.y-n.y)-p*(t.y-e.y))/u,((t.x-e.x)*p-(e.x-n.x)*a)/u),this.radius=this.centerPoint.subtract(this.startPoint).length(),this.startAngle=o.Angle.BetweenTwoPoints(this.centerPoint,this.startPoint);var l=this.startAngle.degrees(),c=o.Angle.BetweenTwoPoints(this.centerPoint,this.midPoint).degrees(),h=o.Angle.BetweenTwoPoints(this.centerPoint,this.endPoint).degrees();c-l>180&&(c-=360),c-l<-180&&(c+=360),h-c>180&&(h-=360),h-c<-180&&(h+=360),this.orientation=c-l<0?i.Orientation.CW:i.Orientation.CCW,this.angle=o.Angle.FromDegrees(this.orientation===i.Orientation.CW?l-h:h-l)};e.Arc2=s},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(6),r=n(2),i=function(){function t(t,e,n,o){void 0===t&&(t=0),void 0===e&&(e=0),void 0===n&&(n=0),void 0===o&&(o=1),this.r=t,this.g=e,this.b=n,this.a=o}return t.FromHexString=function(e){if("#"!==e.substring(0,1)||9!==e.length)return new t(0,0,0,0);var n=parseInt(e.substring(1,3),16),o=parseInt(e.substring(3,5),16),r=parseInt(e.substring(5,7),16),i=parseInt(e.substring(7,9),16);return t.FromInts(n,o,r,i)},t.Lerp=function(e,n,o){var r=new t(0,0,0,0);return t.LerpToRef(e,n,o,r),r},t.LerpToRef=function(t,e,n,o){o.r=t.r+(e.r-t.r)*n,o.g=t.g+(e.g-t.g)*n,o.b=t.b+(e.b-t.b)*n,o.a=t.a+(e.a-t.a)*n},t.Red=function(){return new t(1,0,0,1)},t.Green=function(){return new t(0,1,0,1)},t.Blue=function(){return new t(0,0,1,1)},t.Black=function(){return new t(0,0,0,1)},t.White=function(){return new t(1,1,1,1)},t.Purple=function(){return new t(.5,0,.5,1)},t.Magenta=function(){return new t(1,0,1,1)},t.Yellow=function(){return new t(1,1,0,1)},t.Gray=function(){return new t(.5,.5,.5,1)},t.Teal=function(){return new t(0,1,1,1)},t.Clear=function(){return new t(0,0,0,0)},t.FromColor3=function(e,n){return void 0===n&&(n=1),new t(e.r,e.g,e.b,n)},t.FromArray=function(e,n){return void 0===n&&(n=0),new t(e[n],e[n+1],e[n+2],e[n+3])},t.FromInts=function(e,n,o,r){return new t(e/255,n/255,o/255,r/255)},t.CheckColors4=function(t,e){if(t.length===3*e){for(var n=[],o=0;o<t.length;o+=3){var r=o/3*4;n[r]=t[o],n[r+1]=t[o+1],n[r+2]=t[o+2],n[r+3]=1}return n}return t},t.prototype.addInPlace=function(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this.a+=t.a,this},t.prototype.asArray=function(){var t=new Array;return this.toArray(t,0),t},t.prototype.toArray=function(t,e){return void 0===e&&(e=0),t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t[e+3]=this.a,this},t.prototype.add=function(e){return new t(this.r+e.r,this.g+e.g,this.b+e.b,this.a+e.a)},t.prototype.subtract=function(e){return new t(this.r-e.r,this.g-e.g,this.b-e.b,this.a-e.a)},t.prototype.subtractToRef=function(t,e){return e.r=this.r-t.r,e.g=this.g-t.g,e.b=this.b-t.b,e.a=this.a-t.a,this},t.prototype.scale=function(e){return new t(this.r*e,this.g*e,this.b*e,this.a*e)},t.prototype.scaleToRef=function(t,e){return e.r=this.r*t,e.g=this.g*t,e.b=this.b*t,e.a=this.a*t,this},t.prototype.scaleAndAddToRef=function(t,e){return e.r+=this.r*t,e.g+=this.g*t,e.b+=this.b*t,e.a+=this.a*t,this},t.prototype.clampToRef=function(t,e,n){return void 0===t&&(t=0),void 0===e&&(e=1),n.r=o.Scalar.Clamp(this.r,t,e),n.g=o.Scalar.Clamp(this.g,t,e),n.b=o.Scalar.Clamp(this.b,t,e),n.a=o.Scalar.Clamp(this.a,t,e),this},t.prototype.multiply=function(e){return new t(this.r*e.r,this.g*e.g,this.b*e.b,this.a*e.a)},t.prototype.multiplyToRef=function(t,e){return e.r=this.r*t.r,e.g=this.g*t.g,e.b=this.b*t.b,e.a=this.a*t.a,e},t.prototype.toString=function(){return"{R: "+this.r+" G:"+this.g+" B:"+this.b+" A:"+this.a+"}"},t.prototype.getClassName=function(){return"Color4"},t.prototype.getHashCode=function(){var t=this.r||0;return t=397*(t=397*(t=397*t^(this.g||0))^(this.b||0))^(this.a||0)},t.prototype.clone=function(){return new t(this.r,this.g,this.b,this.a)},t.prototype.copyFrom=function(t){return this.r=t.r,this.g=t.g,this.b=t.b,this.a=t.a,this},t.prototype.copyFromFloats=function(t,e,n,o){return this.r=t,this.g=e,this.b=n,this.a=o,this},t.prototype.set=function(t,e,n,o){return this.copyFromFloats(t,e,n,o)},t.prototype.toHexString=function(){var t=255*this.r|0,e=255*this.g|0,n=255*this.b|0,r=255*this.a|0;return"#"+o.Scalar.ToHex(t)+o.Scalar.ToHex(e)+o.Scalar.ToHex(n)+o.Scalar.ToHex(r)},t.prototype.toLinearSpace=function(){var e=new t;return this.toLinearSpaceToRef(e),e},t.prototype.toLinearSpaceToRef=function(t){return t.r=Math.pow(this.r,r.ToLinearSpace),t.g=Math.pow(this.g,r.ToLinearSpace),t.b=Math.pow(this.b,r.ToLinearSpace),t.a=this.a,this},t.prototype.toGammaSpace=function(){var e=new t;return this.toGammaSpaceToRef(e),e},t.prototype.toGammaSpaceToRef=function(t){return t.r=Math.pow(this.r,r.ToGammaSpace),t.g=Math.pow(this.g,r.ToGammaSpace),t.b=Math.pow(this.b,r.ToGammaSpace),t.a=this.a,this},t}();e.Color4=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(3),r=n(11),i=n(9),s=function(){function t(t,e,n,r){this.normal=new o.Vector3(t,e,n),this.d=r}return t.FromArray=function(e){return new t(e[0],e[1],e[2],e[3])},t.FromPoints=function(e,n,o){var r=new t(0,0,0,0);return r.copyFromPoints(e,n,o),r},t.FromPositionAndNormal=function(e,n){var o=new t(0,0,0,0);return n.normalize(),o.normal=n,o.d=-(n.x*e.x+n.y*e.y+n.z*e.z),o},t.SignedDistanceToPlaneFromPositionAndNormal=function(t,e,n){var r=-(e.x*t.x+e.y*t.y+e.z*t.z);return o.Vector3.Dot(n,e)+r},t.prototype.asArray=function(){return[this.normal.x,this.normal.y,this.normal.z,this.d]},t.prototype.clone=function(){return new t(this.normal.x,this.normal.y,this.normal.z,this.d)},t.prototype.getClassName=function(){return"Plane"},t.prototype.getHashCode=function(){var t=this.normal.getHashCode();return t=397*t^(this.d||0)},t.prototype.normalize=function(){var t=Math.sqrt(this.normal.x*this.normal.x+this.normal.y*this.normal.y+this.normal.z*this.normal.z),e=0;return 0!==t&&(e=1/t),this.normal.x*=e,this.normal.y*=e,this.normal.z*=e,this.d*=e,this},t.prototype.transform=function(e){var n=i.MathTmp.Matrix[0];r.Matrix.TransposeToRef(e,n);var o=n.m,s=this.normal.x,a=this.normal.y,p=this.normal.z,u=this.d;return new t(s*o[0]+a*o[1]+p*o[2]+u*o[3],s*o[4]+a*o[5]+p*o[6]+u*o[7],s*o[8]+a*o[9]+p*o[10]+u*o[11],s*o[12]+a*o[13]+p*o[14]+u*o[15])},t.prototype.dotCoordinate=function(t){return this.normal.x*t.x+this.normal.y*t.y+this.normal.z*t.z+this.d},t.prototype.copyFromPoints=function(t,e,n){var o,r=e.x-t.x,i=e.y-t.y,s=e.z-t.z,a=n.x-t.x,p=n.y-t.y,u=n.z-t.z,l=i*u-s*p,c=s*a-r*u,h=r*p-i*a,d=Math.sqrt(l*l+c*c+h*h);return o=0!==d?1/d:0,this.normal.x=l*o,this.normal.y=c*o,this.normal.z=h*o,this.d=-(this.normal.x*t.x+this.normal.y*t.y+this.normal.z*t.z),this},t.prototype.isFrontFacingTo=function(t,e){return o.Vector3.Dot(this.normal,t)<=e},t.prototype.signedDistanceTo=function(t){return o.Vector3.Dot(t,this.normal)+this.d},t}();e.Plane=s},function(t,e,n){"use strict";var o,r=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),i=this&&this.__assign||function(){return(i=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var r in e=arguments[n])Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t}).apply(this,arguments)},s=this&&this.__decorate||function(t,e,n,o){var r,i=arguments.length,s=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var a=t.length-1;a>=0;a--)(r=t[a])&&(s=(i<3?r(s):i>3?r(e,n,s):r(e,n))||s);return i>3&&s&&Object.defineProperty(e,n,s),s};Object.defineProperty(e,"__esModule",{value:!0});var a=n(0),p=n(1),u={looping:!0,speed:1,weight:1},l=function(t){function e(e,n){void 0===n&&(n=u);var o=t.call(this)||this;return o.isAnimationClip=!0,o.looping=u.looping,o.weight=u.weight,o.playing=!1,o.shouldReset=!1,o.speed=u.speed,o.name=p.newId("AnimClip"),o.clip=e,o.setParams(i({},n)),o}return r(e,t),e.prototype.setParams=function(t){return this.looping=void 0!==t.looping?t.looping:this.looping,this.speed=t.speed||this.speed,this},e.prototype.toJSON=function(){var e=JSON.parse(JSON.stringify(t.prototype.toJSON.call(this)));return this.shouldReset&&(this.shouldReset=!1),e},e.prototype.play=function(){this.playing=!0},e.prototype.pause=function(){this.playing=!1},e.prototype.reset=function(){this.shouldReset=!0},e.prototype.stop=function(){this.reset(),this.pause()},s([a.ObservableComponent.readonly],e.prototype,"clip",void 0),s([a.ObservableComponent.field],e.prototype,"looping",void 0),s([a.ObservableComponent.field],e.prototype,"weight",void 0),s([a.ObservableComponent.field],e.prototype,"playing",void 0),s([a.ObservableComponent.field],e.prototype,"shouldReset",void 0),s([a.ObservableComponent.field],e.prototype,"speed",void 0),s([a.ObservableComponent.readonly],e.prototype,"name",void 0),e}(a.ObservableComponent);e.AnimationState=l},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.DOWN=0]="DOWN",t[t.UP=1]="UP"}(e.InputEventType||(e.InputEventType={})),e.AVATAR_OBSERVABLE="AVATAR_OBSERVABLE"},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o,r=n(5),i=n(1),s=n(29);!function(t){t.HitFirst="rqhf",t.HitAll="rqha"}(o||(o={}));var a=function(){function t(){this.queries={}}return Object.defineProperty(t,"instance",{get:function(){return t.ensureInstance(),t._instance},enumerable:!0,configurable:!0}),t.ensureInstance=function(){t._instance||(t._instance=new t)},t.prototype.getRayFromCamera=function(t){var e=s.Camera.instance.rotation,n=r.Matrix.Identity();e.toRotationMatrix(n);var o=r.Vector3.TransformCoordinates(r.Vector3.Forward(),n);return{origin:s.Camera.instance.position,direction:o,distance:t}},t.prototype.getRayFromPositions=function(t,e){var n=e.subtract(t),o=n.length();return{origin:t,direction:n.normalize(),distance:o}},t.prototype.hitFirst=function(t,e,n){var r="number"==typeof n?o.HitFirst+n:i.uuid();this.queries[r]=e,dcl&&dcl.query("raycast",{queryId:r,queryType:"HitFirst",ray:t})},t.prototype.hitAll=function(t,e,n){var r="number"==typeof n?o.HitAll+n:i.uuid();this.queries[r]=e,dcl&&dcl.query("raycast",{queryId:r,queryType:"HitAll",ray:t})},t.prototype.hitFirstAvatar=function(t,e){i.log("not implemented yet")},t.prototype.hitAllAvatars=function(t,e){i.log("not implemented yet")},t.prototype.handleRaycastHitFirstResponse=function(t){this.queries[t.payload.queryId](t.payload.payload),delete this.queries[t.payload.queryId]},t.prototype.handleRaycastHitAllResponse=function(t){this.queries[t.payload.queryId](t.payload.payload),delete this.queries[t.payload.queryId]},t}();e.PhysicsCast=a},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(5),r=function(){function t(){var t=this;this.position=new o.Vector3,this.rotation=new o.Quaternion,this.feetPosition=new o.Vector3,this.worldPosition=new o.Vector3,this.lastEventPosition={x:0,y:0,z:0},this.lastEventWorldPosition={x:0,y:0,z:0},this.lastEventRotation={x:0,y:0,z:0,w:1},this._playerHeight=1.6,"undefined"!=typeof dcl&&(dcl.subscribe("positionChanged"),dcl.subscribe("rotationChanged"),dcl.onEvent((function(e){switch(e.type){case"positionChanged":t.positionChanged(e.data);break;case"rotationChanged":t.rotationChanged(e.data)}}))),Object.defineProperty(this.position,"x",{get:function(){return t.lastEventPosition.x}}),Object.defineProperty(this.position,"y",{get:function(){return t.lastEventPosition.y}}),Object.defineProperty(this.position,"z",{get:function(){return t.lastEventPosition.z}}),Object.defineProperty(this.worldPosition,"x",{get:function(){return t.lastEventWorldPosition.x}}),Object.defineProperty(this.worldPosition,"y",{get:function(){return t.lastEventWorldPosition.y}}),Object.defineProperty(this.worldPosition,"z",{get:function(){return t.lastEventWorldPosition.z}}),Object.defineProperty(this.feetPosition,"x",{get:function(){return t.lastEventPosition.x}}),Object.defineProperty(this.feetPosition,"y",{get:function(){return t.lastEventPosition.y-t.playerHeight}}),Object.defineProperty(this.feetPosition,"z",{get:function(){return t.lastEventPosition.z}}),Object.defineProperty(this.rotation,"x",{get:function(){return t.lastEventRotation.x}}),Object.defineProperty(this.rotation,"y",{get:function(){return t.lastEventRotation.y}}),Object.defineProperty(this.rotation,"z",{get:function(){return t.lastEventRotation.z}}),Object.defineProperty(this.rotation,"w",{get:function(){return t.lastEventRotation.w}})}return Object.defineProperty(t,"instance",{get:function(){return t._instance||(t._instance=new t),t._instance},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"playerHeight",{get:function(){return this._playerHeight},enumerable:!0,configurable:!0}),t.prototype.positionChanged=function(t){this.lastEventPosition=t.position,this.lastEventWorldPosition=t.cameraPosition,this._playerHeight=t.playerHeight},t.prototype.rotationChanged=function(t){this.lastEventRotation=t.quaternion},t}();e.Camera=r},function(t,e,n){"use strict";function o(t){for(var n in t)e.hasOwnProperty(n)||(e[n]=t[n])}Object.defineProperty(e,"__esModule",{value:!0}),o(n(31)),o(n(17)),o(n(0)),o(n(12)),o(n(7)),o(n(19)),o(n(1)),o(n(20)),o(n(18)),o(n(8)),o(n(33)),o(n(34));var r=n(35),i=n(17),s=new(n(12).Entity)("scene");s.uuid="0";var a=new i.Engine(s);e.engine=a,n(0).DisposableComponent.engine=a,"undefined"!=typeof dcl&&a.addSystem(new r.DecentralandSynchronizationSystem(dcl),1/0);var p=n(14);a.addSystem(p.uuidEventSystem),a.addSystem(p.pointerEventSystem),a.addSystem(p.raycastEventSystem),o(n(27)),o(n(4)),o(n(14)),o(n(13)),o(n(29)),o(n(5)),o(n(26)),o(n(16)),o(n(44)),o(n(45)),o(n(46)),o(n(47)),o(n(48)),o(n(49)),o(n(28))},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=function(){function t(){}return t.AVATAR={getEntityRepresentation:function(t){return t.avatarEntity}},t.FIRST_PERSON_CAMERA={getEntityRepresentation:function(t){return t.firstPersonCameraEntity}},t}();e.Attachable=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(0),r=function(){function t(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];if(this.entities=[],this.active=!1,this._requiresNames=[],!t)throw new Error("ComponentGroup: Could not load the requires list");if(!(t instanceof Array))throw new Error("ComponentGroup: requires list is not an Array");Object.defineProperty(this,"requires",{get:function(){return t.slice()}}),Object.defineProperty(this,"requiresNames",{get:function(){return this._requiresNames.slice()}});for(var n=function(e){var n=t[e],i=null;if(!n)throw new Error("ComponentGroup: the required component at location "+e+" is invalid");try{i=o.getComponentName(n)}catch(t){throw new Error("ComponentGroup: the required component at location "+e+" is not registered as a @Component. Remember to provide the class of the component, not the name")}if(r._requiresNames.some((function(t){return t===i})))throw new Error("ComponentGroup: the required component list has a repeated name "+i);r._requiresNames.push(i)},r=this,i=0;i<t.length;i++)n(i)}return t.prototype.hasEntity=function(t){return!!t.isAddedToEngine()&&-1!==this.entities.indexOf(t)},t.prototype.addEntity=function(t){if(!t.isAddedToEngine())throw new TypeError("ComponentGroup: Cannot add a entity that is not added to the engine");-1===this.entities.indexOf(t)&&this.entities.push(t)},t.prototype.removeEntity=function(t){var e=this.entities.indexOf(t);-1!==e&&this.entities.splice(e,1)},t.prototype.componentRemoved=function(t,e){-1!==this._requiresNames.indexOf(e)&&this.removeEntity(t)},t.prototype.meetsRequirements=function(t){for(var e=0;e<this._requiresNames.length;e++){if(!(this._requiresNames[e]in t.components))return!1}return!0},t}();e.ComponentGroup=r},function(t,e,n){"use strict";var o;Object.defineProperty(e,"__esModule",{value:!0}),e.teleportTo=function(t){var e,n;e="requestTeleport",n=[t],void 0===o&&"undefined"!=typeof dcl&&(o=dcl.loadModule("@decentraland/UserActionModule")),void 0!==o&&"undefined"!=typeof dcl&&o.then((function(t){dcl.callRpc(t.rpcHandle,e,n)}))}},function(t,e,n){"use strict";var o;Object.defineProperty(e,"__esModule",{value:!0}),e.movePlayerTo=function(t,e){var n,r;n="movePlayerTo",r=[t,e],void 0===o&&"undefined"!=typeof dcl&&(o=dcl.loadModule("@decentraland/RestrictedActionModule")),void 0!==o&&"undefined"!=typeof dcl&&o.then((function(t){dcl.callRpc(t.rpcHandle,n,r)}))}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(0),r=n(7),i=n(13),s=function(){function t(t){this.dcl=t,this.cachedComponents={}}return t.prototype.activate=function(t){var e=this;this.engine=t,t.eventManager.addListener(r.ComponentAdded,this,this.componentAdded),t.eventManager.addListener(r.ComponentRemoved,this,this.componentRemoved),t.eventManager.addListener(o.DisposableComponentCreated,this,this.disposableComponentCreated),t.eventManager.addListener(o.DisposableComponentRemoved,this,this.disposableComponentRemoved),t.eventManager.addListener(o.DisposableComponentUpdated,this,this.disposableComponentUpdated),t.eventManager.addListener(r.ParentChanged,this,this.parentChanged);var n=t.rootEntity.uuid;this.dcl.addEntity(n),this.dcl.onUpdate((function(n){t.update(n),e.presentEntities()})),this.dcl.onEvent((function(e){var n=e.data;switch(e.type){case"uuidEvent":t.eventManager.fireEvent(new i.UUIDEvent(n.uuid,n.payload));break;case"raycastResponse":("HitFirst"===n.queryType||"HitAll"===n.queryType)&&t.eventManager.fireEvent(new i.RaycastResponse(n));break;case"pointerEvent":t.eventManager.fireEvent(new i.PointerEvent(n.payload))}}))},t.prototype.onAddEntity=function(t){if(t&&t.isAddedToEngine()){var e=t.uuid,n=t.getParent();for(var r in this.dcl.addEntity(e),n&&this.dcl.setParent(e,n.uuid),this.cachedComponents[e]={},t.components){var i=t.components[r],s=o.getComponentClassId(i);if(null!==s)if(o.isDisposableComponent(i))this.dcl.attachEntityComponent(t.uuid,r,o.getComponentId(i));else{var a=JSON.stringify(i);this.dcl.updateEntityComponent(e,r,s,a),this.cachedComponents[e][r]=a}}}},t.prototype.onRemoveEntity=function(t){if(t.isAddedToEngine()){var e=t.uuid;this.dcl.removeEntity(e),delete this.cachedComponents[e]}},t.prototype.presentEntities=function(){for(var t in this.engine.entities){var e=this.engine.entities[t];for(var n in e.components){var r=e.components[n],i=o.getComponentClassId(r);if(null!==i&&!o.isDisposableComponent(r)){var s=this.getJsonIfDirty(e.uuid,n,r);s&&(this.dcl.updateEntityComponent(e.uuid,n,i,s),this.clearDirty(e.uuid,n,r,s))}}}for(var a in this.engine.disposableComponents){(r=this.engine.disposableComponents[a])instanceof o.ObservableComponent&&r.dirty&&(this.dcl.componentUpdated(a,JSON.stringify(r)),r.dirty=!1)}},t.prototype.componentAdded=function(t){if(t.entity.isAddedToEngine()){var e=t.entity.components[t.componentName];if(o.isDisposableComponent(e))this.dcl.attachEntityComponent(t.entity.uuid,t.componentName,o.getComponentId(e));else if(null!==t.classId){var n=JSON.stringify(e);this.dcl.updateEntityComponent(t.entity.uuid,t.componentName,t.classId,n),this.cachedComponents[t.entity.uuid][t.componentName]=n}}},t.prototype.componentRemoved=function(t){t.entity.isAddedToEngine()&&(this.dcl.removeEntityComponent(t.entity.uuid,t.componentName),delete this.cachedComponents[t.entity.uuid][t.componentName])},t.prototype.disposableComponentCreated=function(t){this.dcl.componentCreated(t.componentId,t.componentName,t.classId)},t.prototype.disposableComponentRemoved=function(t){this.dcl.componentDisposed(t.componentId)},t.prototype.disposableComponentUpdated=function(t){this.dcl.componentUpdated(t.componentId,JSON.stringify(t.component))},t.prototype.parentChanged=function(t){this.dcl.setParent(t.entity.uuid,t.parent?t.parent.uuid:"0")},t.prototype.getJsonIfDirty=function(t,e,n){var o=JSON.stringify(n);return o!==this.cachedComponents[t][e]&&o},t.prototype.clearDirty=function(t,e,n,o){this.cachedComponents[t][e]=o},t}();e.DecentralandSynchronizationSystem=s},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(3),r=function(){function t(){}return t.X=new o.Vector3(1,0,0),t.Y=new o.Vector3(0,1,0),t.Z=new o.Vector3(0,0,1),t}();e.Axis=r},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=function(){function t(){}return t.Interpolate=function(t,e,n,o,r){for(var i=1-3*o+3*e,s=3*o-6*e,a=3*e,p=t,u=0;u<5;u++){var l=p*p;p-=(i*(l*p)+s*l+a*p-t)*(1/(3*i*l+2*s*p+a)),p=Math.min(1,Math.max(0,p))}return 3*Math.pow(1-p,2)*p*n+3*(1-p)*Math.pow(p,2)*r+Math.pow(p,3)},t}();e.BezierCurve=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(2),r=n(24),i=n(6),s=function(){function t(t,e,n){void 0===t&&(t=0),void 0===e&&(e=0),void 0===n&&(n=0),this.r=t,this.g=e,this.b=n}return t.FromHexString=function(e){if("#"!==e.substring(0,1)||7!==e.length)return new t(0,0,0);var n=parseInt(e.substring(1,3),16),o=parseInt(e.substring(3,5),16),r=parseInt(e.substring(5,7),16);return t.FromInts(n,o,r)},t.FromArray=function(e,n){return void 0===n&&(n=0),new t(e[n],e[n+1],e[n+2])},t.FromInts=function(e,n,o){return new t(e/255,n/255,o/255)},t.Lerp=function(e,n,o){var r=new t(0,0,0);return t.LerpToRef(e,n,o,r),r},t.LerpToRef=function(t,e,n,o){o.r=t.r+(e.r-t.r)*n,o.g=t.g+(e.g-t.g)*n,o.b=t.b+(e.b-t.b)*n},t.Red=function(){return new t(1,0,0)},t.Green=function(){return new t(0,1,0)},t.Blue=function(){return new t(0,0,1)},t.Black=function(){return new t(0,0,0)},t.White=function(){return new t(1,1,1)},t.Purple=function(){return new t(.5,0,.5)},t.Magenta=function(){return new t(1,0,1)},t.Yellow=function(){return new t(1,1,0)},t.Gray=function(){return new t(.5,.5,.5)},t.Teal=function(){return new t(0,1,1)},t.Random=function(){return new t(Math.random(),Math.random(),Math.random())},t.prototype.toString=function(){return"{R: "+this.r+" G:"+this.g+" B:"+this.b+"}"},t.prototype.getClassName=function(){return"Color3"},t.prototype.getHashCode=function(){var t=this.r||0;return t=397*(t=397*t^(this.g||0))^(this.b||0)},t.prototype.toArray=function(t,e){return void 0===e&&(e=0),t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,this},t.prototype.toColor4=function(t){return void 0===t&&(t=1),new r.Color4(this.r,this.g,this.b,t)},t.prototype.asArray=function(){var t=new Array;return this.toArray(t,0),t},t.prototype.toLuminance=function(){return.3*this.r+.59*this.g+.11*this.b},t.prototype.multiply=function(e){return new t(this.r*e.r,this.g*e.g,this.b*e.b)},t.prototype.multiplyToRef=function(t,e){return e.r=this.r*t.r,e.g=this.g*t.g,e.b=this.b*t.b,this},t.prototype.equals=function(t){return t&&this.r===t.r&&this.g===t.g&&this.b===t.b},t.prototype.equalsFloats=function(t,e,n){return this.r===t&&this.g===e&&this.b===n},t.prototype.scale=function(e){return new t(this.r*e,this.g*e,this.b*e)},t.prototype.scaleToRef=function(t,e){return e.r=this.r*t,e.g=this.g*t,e.b=this.b*t,this},t.prototype.scaleAndAddToRef=function(t,e){return e.r+=this.r*t,e.g+=this.g*t,e.b+=this.b*t,this},t.prototype.clampToRef=function(t,e,n){return void 0===t&&(t=0),void 0===e&&(e=1),n.r=i.Scalar.Clamp(this.r,t,e),n.g=i.Scalar.Clamp(this.g,t,e),n.b=i.Scalar.Clamp(this.b,t,e),this},t.prototype.add=function(e){return new t(this.r+e.r,this.g+e.g,this.b+e.b)},t.prototype.addToRef=function(t,e){return e.r=this.r+t.r,e.g=this.g+t.g,e.b=this.b+t.b,this},t.prototype.subtract=function(e){return new t(this.r-e.r,this.g-e.g,this.b-e.b)},t.prototype.subtractToRef=function(t,e){return e.r=this.r-t.r,e.g=this.g-t.g,e.b=this.b-t.b,this},t.prototype.clone=function(){return new t(this.r,this.g,this.b)},t.prototype.copyFrom=function(t){return this.r=t.r,this.g=t.g,this.b=t.b,this},t.prototype.copyFromFloats=function(t,e,n){return this.r=t,this.g=e,this.b=n,this},t.prototype.set=function(t,e,n){return this.copyFromFloats(t,e,n)},t.prototype.toHexString=function(){var t=255*this.r|0,e=255*this.g|0,n=255*this.b|0;return"#"+i.Scalar.ToHex(t)+i.Scalar.ToHex(e)+i.Scalar.ToHex(n)},t.prototype.toLinearSpace=function(){var e=new t;return this.toLinearSpaceToRef(e),e},t.prototype.toLinearSpaceToRef=function(t){return t.r=Math.pow(this.r,o.ToLinearSpace),t.g=Math.pow(this.g,o.ToLinearSpace),t.b=Math.pow(this.b,o.ToLinearSpace),this},t.prototype.toGammaSpace=function(){var e=new t;return this.toGammaSpaceToRef(e),e},t.prototype.toGammaSpaceToRef=function(t){return t.r=Math.pow(this.r,o.ToGammaSpace),t.g=Math.pow(this.g,o.ToGammaSpace),t.b=Math.pow(this.b,o.ToGammaSpace),this},t.prototype.toJSON=function(){return{r:this.r,g:this.g,b:this.b}},t}();e.Color3=s},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(3),r=function(){function t(t){this._length=0,this._points=t,this._length=this._computeLength(t)}return t.CreateQuadraticBezier=function(e,n,r,i){i=i>2?i:3;for(var s=new Array,a=function(t,e,n,o){return(1-t)*(1-t)*e+2*t*(1-t)*n+t*t*o},p=0;p<=i;p++)s.push(new o.Vector3(a(p/i,e.x,n.x,r.x),a(p/i,e.y,n.y,r.y),a(p/i,e.z,n.z,r.z)));return new t(s)},t.CreateCubicBezier=function(e,n,r,i,s){s=s>3?s:4;for(var a=new Array,p=function(t,e,n,o,r){return(1-t)*(1-t)*(1-t)*e+3*t*(1-t)*(1-t)*n+3*t*t*(1-t)*o+t*t*t*r},u=0;u<=s;u++)a.push(new o.Vector3(p(u/s,e.x,n.x,r.x,i.x),p(u/s,e.y,n.y,r.y,i.y),p(u/s,e.z,n.z,r.z,i.z)));return new t(a)},t.CreateHermiteSpline=function(e,n,r,i,s){for(var a=new Array,p=1/s,u=0;u<=s;u++)a.push(o.Vector3.Hermite(e,n,r,i,u*p));return new t(a)},t.CreateCatmullRomSpline=function(e,n,r){var i=new Array,s=1/n,a=0;if(r){for(var p=e.length,u=0;u<p;u++){a=0;for(var l=0;l<n;l++)i.push(o.Vector3.CatmullRom(e[u%p],e[(u+1)%p],e[(u+2)%p],e[(u+3)%p],a)),a+=s}i.push(i[0])}else{var c=new Array;c.push(e[0].clone()),Array.prototype.push.apply(c,e),c.push(e[e.length-1].clone());u=0;for(u=0;u<c.length-3;u++){a=0;for(l=0;l<n;l++)i.push(o.Vector3.CatmullRom(c[u],c[u+1],c[u+2],c[u+3],a)),a+=s}u--,i.push(o.Vector3.CatmullRom(c[u],c[u+1],c[u+2],c[u+3],a))}return new t(i)},t.prototype.getPoints=function(){return this._points},t.prototype.length=function(){return this._length},t.prototype.continue=function(e){for(var n=this._points[this._points.length-1],o=this._points.slice(),r=e.getPoints(),i=1;i<r.length;i++)o.push(r[i].subtract(r[0]).add(n));return new t(o)},t.prototype._computeLength=function(t){for(var e=0,n=1;n<t.length;n++)e+=t[n].subtract(t[n-1]).length();return e},t}();e.Curve3=r},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(25),r=function(){function t(){}return t.GetPlanes=function(e){for(var n=[],r=0;r<6;r++)n.push(new o.Plane(0,0,0,0));return t.GetPlanesToRef(e,n),n},t.GetNearPlaneToRef=function(t,e){var n=t.m;e.normal.x=n[3]+n[2],e.normal.y=n[7]+n[6],e.normal.z=n[11]+n[10],e.d=n[15]+n[14],e.normalize()},t.GetFarPlaneToRef=function(t,e){var n=t.m;e.normal.x=n[3]-n[2],e.normal.y=n[7]-n[6],e.normal.z=n[11]-n[10],e.d=n[15]-n[14],e.normalize()},t.GetLeftPlaneToRef=function(t,e){var n=t.m;e.normal.x=n[3]+n[0],e.normal.y=n[7]+n[4],e.normal.z=n[11]+n[8],e.d=n[15]+n[12],e.normalize()},t.GetRightPlaneToRef=function(t,e){var n=t.m;e.normal.x=n[3]-n[0],e.normal.y=n[7]-n[4],e.normal.z=n[11]-n[8],e.d=n[15]-n[12],e.normalize()},t.GetTopPlaneToRef=function(t,e){var n=t.m;e.normal.x=n[3]-n[1],e.normal.y=n[7]-n[5],e.normal.z=n[11]-n[9],e.d=n[15]-n[13],e.normalize()},t.GetBottomPlaneToRef=function(t,e){var n=t.m;e.normal.x=n[3]+n[1],e.normal.y=n[7]+n[5],e.normal.z=n[11]+n[9],e.d=n[15]+n[13],e.normalize()},t.GetPlanesToRef=function(e,n){t.GetNearPlaneToRef(e,n[0]),t.GetFarPlaneToRef(e,n[1]),t.GetLeftPlaneToRef(e,n[2]),t.GetRightPlaneToRef(e,n[3]),t.GetTopPlaneToRef(e,n[4]),t.GetBottomPlaneToRef(e,n[5])},t}();e.Frustum=r},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(15),r=n(23),i=n(2),s=function(){function t(t,e){this.closed=!1,this._points=new Array,this._length=0,this._points.push(new o.Vector2(t,e))}return t.StartingAt=function(e,n){return new t(e,n)},t.prototype.addLineTo=function(t,e){if(this.closed)return this;var n=new o.Vector2(t,e),r=this._points[this._points.length-1];return this._points.push(n),this._length+=n.subtract(r).length(),this},t.prototype.addArcTo=function(t,e,n,s,a){if(void 0===a&&(a=36),this.closed)return this;var p=this._points[this._points.length-1],u=new o.Vector2(t,e),l=new o.Vector2(n,s),c=new r.Arc2(p,u,l),h=c.angle.radians()/a;c.orientation===i.Orientation.CW&&(h*=-1);for(var d=c.startAngle.radians()+h,f=0;f<a;f++){var y=Math.cos(d)*c.radius+c.centerPoint.x,v=Math.sin(d)*c.radius+c.centerPoint.y;this.addLineTo(y,v),d+=h}return this},t.prototype.close=function(){return this.closed=!0,this},t.prototype.length=function(){var t=this._length;if(!this.closed){var e=this._points[this._points.length-1];t+=this._points[0].subtract(e).length()}return t},t.prototype.getPoints=function(){return this._points},t.prototype.getPointAtLengthPosition=function(t){if(t<0||t>1)return o.Vector2.Zero();for(var e=t*this.length(),n=0,r=0;r<this._points.length;r++){var i=(r+1)%this._points.length,s=this._points[r],a=this._points[i].subtract(s),p=a.length()+n;if(e>=n&&e<=p){var u=a.normalize(),l=e-n;return new o.Vector2(s.x+u.x*l,s.y+u.y*l)}n=p}return o.Vector2.Zero()},t}();e.Path2=s},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(3),r=n(2),i=n(6),s=function(){function t(t,e,n){void 0===e&&(e=null),this.path=t,this._curve=new Array,this._distances=new Array,this._tangents=new Array,this._normals=new Array,this._binormals=new Array;for(var o=0;o<t.length;o++)this._curve[o]=t[o].clone();this._raw=n||!1,this._compute(e)}return t.prototype.getCurve=function(){return this._curve},t.prototype.getTangents=function(){return this._tangents},t.prototype.getNormals=function(){return this._normals},t.prototype.getBinormals=function(){return this._binormals},t.prototype.getDistances=function(){return this._distances},t.prototype.update=function(t,e){void 0===e&&(e=null);for(var n=0;n<t.length;n++)this._curve[n].x=t[n].x,this._curve[n].y=t[n].y,this._curve[n].z=t[n].z;return this._compute(e),this},t.prototype._compute=function(t){var e=this._curve.length;this._tangents[0]=this._getFirstNonNullVector(0),this._raw||this._tangents[0].normalize(),this._tangents[e-1]=this._curve[e-1].subtract(this._curve[e-2]),this._raw||this._tangents[e-1].normalize();var n,r,i,s,a=this._tangents[0],p=this._normalVector(this._curve[0],a,t);this._normals[0]=p,this._raw||this._normals[0].normalize(),this._binormals[0]=o.Vector3.Cross(a,this._normals[0]),this._raw||this._binormals[0].normalize(),this._distances[0]=0;for(var u=1;u<e;u++)n=this._getLastNonNullVector(u),u<e-1&&(r=this._getFirstNonNullVector(u),this._tangents[u]=n.add(r),this._tangents[u].normalize()),this._distances[u]=this._distances[u-1]+n.length(),i=this._tangents[u],s=this._binormals[u-1],this._normals[u]=o.Vector3.Cross(s,i),this._raw||this._normals[u].normalize(),this._binormals[u]=o.Vector3.Cross(i,this._normals[u]),this._raw||this._binormals[u].normalize()},t.prototype._getFirstNonNullVector=function(t){for(var e=1,n=this._curve[t+e].subtract(this._curve[t]);0===n.length()&&t+e+1<this._curve.length;)e++,n=this._curve[t+e].subtract(this._curve[t]);return n},t.prototype._getLastNonNullVector=function(t){for(var e=1,n=this._curve[t].subtract(this._curve[t-e]);0===n.length()&&t>e+1;)e++,n=this._curve[t].subtract(this._curve[t-e]);return n},t.prototype._normalVector=function(t,e,n){var s,a=e.length();if(0===a&&(a=1),null==n){var p=void 0;p=i.Scalar.WithinEpsilon(Math.abs(e.y)/a,1,r.Epsilon)?i.Scalar.WithinEpsilon(Math.abs(e.x)/a,1,r.Epsilon)?i.Scalar.WithinEpsilon(Math.abs(e.z)/a,1,r.Epsilon)?o.Vector3.Zero():new o.Vector3(0,0,1):new o.Vector3(1,0,0):new o.Vector3(0,-1,0),s=o.Vector3.Cross(e,p)}else s=o.Vector3.Cross(e,n),o.Vector3.CrossToRef(s,e,s);return s.normalize(),s},t}();e.Path3D=s},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=function(){function t(t,e){this.width=t,this.height=e}return Object.defineProperty(t.prototype,"surface",{get:function(){return this.width*this.height},enumerable:!0,configurable:!0}),t.Zero=function(){return new t(0,0)},t.Lerp=function(e,n,o){return new t(e.width+(n.width-e.width)*o,e.height+(n.height-e.height)*o)},t.prototype.toString=function(){return"{W: "+this.width+", H: "+this.height+"}"},t.prototype.getClassName=function(){return"Size"},t.prototype.getHashCode=function(){var t=this.width||0;return t=397*t^(this.height||0)},t.prototype.copyFrom=function(t){this.width=t.width,this.height=t.height},t.prototype.copyFromFloats=function(t,e){return this.width=t,this.height=e,this},t.prototype.set=function(t,e){return this.copyFromFloats(t,e)},t.prototype.multiplyByFloats=function(e,n){return new t(this.width*e,this.height*n)},t.prototype.clone=function(){return new t(this.width,this.height)},t.prototype.equals=function(t){return!!t&&(this.width===t.width&&this.height===t.height)},t.prototype.add=function(e){return new t(this.width+e.width,this.height+e.height)},t.prototype.subtract=function(e){return new t(this.width-e.width,this.height-e.height)},t}();e.Size=o},function(t,e,n){"use strict";var o,r=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),i=this&&this.__decorate||function(t,e,n,o){var r,i=arguments.length,s=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var a=t.length-1;a>=0;a--)(r=t[a])&&(s=(i<3?r(s):i>3?r(e,n,s):r(e,n))||s);return i>3&&s&&Object.defineProperty(e,n,s),s};Object.defineProperty(e,"__esModule",{value:!0});var s=n(0),a=n(4),p=function(t){function e(e){var n=t.call(this)||this;return n.loop=!1,n.volume=1,n.url=e,n}return r(e,t),i([s.ObservableComponent.readonly],e.prototype,"url",void 0),i([s.ObservableComponent.field],e.prototype,"loop",void 0),i([s.ObservableComponent.field],e.prototype,"loadingCompleteEventId",void 0),i([s.ObservableComponent.field],e.prototype,"volume",void 0),e=i([s.DisposableComponent("engine.AudioClip",a.CLASS_ID.AUDIO_CLIP)],e)}(s.ObservableComponent);e.AudioClip=p;var u=function(t){function e(e){var n=t.call(this)||this;if(n.audioClip=e,n.loop=!1,n.volume=1,n.playing=!1,n.pitch=1,!(e instanceof p))throw new Error("Trying to create AudioSource(AudioClip) with an invalid AudioClip");return n.audioClipId=s.getComponentId(e),n}return r(e,t),e.prototype.playOnce=function(){return this.playing=!0,this.dirty=!0,this.data.nonce=Math.random(),this},i([s.ObservableComponent.readonly],e.prototype,"audioClipId",void 0),i([s.ObservableComponent.field],e.prototype,"loop",void 0),i([s.ObservableComponent.field],e.prototype,"volume",void 0),i([s.ObservableComponent.field],e.prototype,"playing",void 0),i([s.ObservableComponent.field],e.prototype,"pitch",void 0),e=i([s.Component("engine.AudioSource",a.CLASS_ID.AUDIO_SOURCE)],e)}(s.ObservableComponent);e.AudioSource=u;var l=function(t){function e(e){var n=t.call(this)||this;return n.playing=!1,n.volume=1,n.url=e,n.playing=!0,n}return r(e,t),i([s.ObservableComponent.readonly],e.prototype,"url",void 0),i([s.ObservableComponent.field],e.prototype,"playing",void 0),i([s.ObservableComponent.field],e.prototype,"volume",void 0),e=i([s.Component("engine.AudioStream",a.CLASS_ID.AUDIO_STREAM)],e)}(s.ObservableComponent);e.AudioStream=l},function(t,e,n){"use strict";var o,r=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),i=this&&this.__decorate||function(t,e,n,o){var r,i=arguments.length,s=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var a=t.length-1;a>=0;a--)(r=t[a])&&(s=(i<3?r(s):i>3?r(e,n,s):r(e,n))||s);return i>3&&s&&Object.defineProperty(e,n,s),s};Object.defineProperty(e,"__esModule",{value:!0});var s=n(0),a=n(4);!function(t){t.MOVE="MOVE",t.ROTATE="ROTATE",t.SCALE="SCALE",t.NONE="NONE"}(e.Gizmo||(e.Gizmo={}));var p=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.type="gizmoEvent",e}return r(e,t),i([s.ObservableComponent.readonly],e.prototype,"type",void 0),e=i([s.Component("engine.gizmoEvent",a.CLASS_ID.UUID_CALLBACK)],e)}(a.OnUUIDEvent);e.OnGizmoEvent=p;var u=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.position=!0,e.rotation=!0,e.scale=!0,e.cycle=!0,e.localReference=!1,e}return r(e,t),i([s.ObservableComponent.field],e.prototype,"position",void 0),i([s.ObservableComponent.field],e.prototype,"rotation",void 0),i([s.ObservableComponent.field],e.prototype,"scale",void 0),i([s.ObservableComponent.field],e.prototype,"cycle",void 0),i([s.ObservableComponent.field],e.prototype,"selectedGizmo",void 0),i([s.ObservableComponent.field],e.prototype,"localReference",void 0),e=i([s.Component("engine.gizmos",a.CLASS_ID.GIZMOS)],e)}(s.ObservableComponent);e.Gizmos=u},function(t,e,n){"use strict";var o,r=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),i=this&&this.__decorate||function(t,e,n,o){var r,i=arguments.length,s=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var a=t.length-1;a>=0;a--)(r=t[a])&&(s=(i<3?r(s):i>3?r(e,n,s):r(e,n))||s);return i>3&&s&&Object.defineProperty(e,n,s),s};Object.defineProperty(e,"__esModule",{value:!0});var s=n(0),a=n(4),p=n(5),u=function(t){function e(e){var n=t.call(this)||this;return n.name=null,n.visible=!0,n.opacity=1,n.hAlign="center",n.vAlign="center",n.width="100px",n.height="50px",n.positionX="0px",n.positionY="0px",n.isPointerBlocker=!0,e&&(n._parent=e,n.data.parentComponent=s.getComponentId(e)),n}return r(e,t),Object.defineProperty(e.prototype,"parent",{get:function(){return this._parent},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"parentComponent",{get:function(){return this.data.parentComponent},enumerable:!0,configurable:!0}),i([s.ObservableComponent.field],e.prototype,"name",void 0),i([s.ObservableComponent.field],e.prototype,"visible",void 0),i([s.ObservableComponent.field],e.prototype,"opacity",void 0),i([s.ObservableComponent.field],e.prototype,"hAlign",void 0),i([s.ObservableComponent.field],e.prototype,"vAlign",void 0),i([s.ObservableComponent.uiValue],e.prototype,"width",void 0),i([s.ObservableComponent.uiValue],e.prototype,"height",void 0),i([s.ObservableComponent.uiValue],e.prototype,"positionX",void 0),i([s.ObservableComponent.uiValue],e.prototype,"positionY",void 0),i([s.ObservableComponent.field],e.prototype,"isPointerBlocker",void 0),e}(s.ObservableComponent);e.UIShape=u;var l=function(t){function e(){return t.call(this,null)||this}return r(e,t),e=i([s.DisposableComponent("engine.shape",a.CLASS_ID.UI_FULLSCREEN_SHAPE)],e)}(u);e.UIFullScreen=l;var c=function(t){function e(){return t.call(this,null)||this}return r(e,t),e=i([s.DisposableComponent("engine.shape",a.CLASS_ID.UI_WORLD_SPACE_SHAPE)],e)}(u);e.UIWorldSpace=c;var h=function(t){function e(){return t.call(this,null)||this}return r(e,t),e=i([s.DisposableComponent("engine.shape",a.CLASS_ID.UI_SCREEN_SPACE_SHAPE)],e)}(u);e.UICanvas=h;var d,f=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.adaptWidth=!1,e.adaptHeight=!1,e.thickness=0,e.color=p.Color4.Clear(),e.alignmentUsesSize=!0,e}return r(e,t),i([s.ObservableComponent.field],e.prototype,"adaptWidth",void 0),i([s.ObservableComponent.field],e.prototype,"adaptHeight",void 0),i([s.ObservableComponent.field],e.prototype,"thickness",void 0),i([s.ObservableComponent.field],e.prototype,"color",void 0),i([s.ObservableComponent.field],e.prototype,"alignmentUsesSize",void 0),e=i([s.DisposableComponent("engine.shape",a.CLASS_ID.UI_CONTAINER_RECT)],e)}(u);e.UIContainerRect=f,function(t){t[t.VERTICAL=0]="VERTICAL",t[t.HORIZONTAL=1]="HORIZONTAL"}(d=e.UIStackOrientation||(e.UIStackOrientation={}));var y=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.adaptWidth=!0,e.adaptHeight=!0,e.color=p.Color4.Clear(),e.stackOrientation=d.VERTICAL,e.spacing=0,e}return r(e,t),i([s.ObservableComponent.field],e.prototype,"adaptWidth",void 0),i([s.ObservableComponent.field],e.prototype,"adaptHeight",void 0),i([s.ObservableComponent.field],e.prototype,"color",void 0),i([s.ObservableComponent.field],e.prototype,"stackOrientation",void 0),i([s.ObservableComponent.field],e.prototype,"spacing",void 0),e=i([s.DisposableComponent("engine.shape",a.CLASS_ID.UI_CONTAINER_STACK)],e)}(u);e.UIContainerStack=y;var v=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.fontSize=10,e.fontWeight="normal",e.thickness=0,e.cornerRadius=0,e.color=p.Color4.White(),e.background=p.Color4.White(),e.paddingTop=0,e.paddingRight=0,e.paddingBottom=0,e.paddingLeft=0,e.shadowBlur=0,e.shadowOffsetX=0,e.shadowOffsetY=0,e.shadowColor=p.Color4.Black(),e.text="button",e}return r(e,t),i([s.ObservableComponent.field],e.prototype,"fontSize",void 0),i([s.ObservableComponent.field],e.prototype,"fontWeight",void 0),i([s.ObservableComponent.field],e.prototype,"thickness",void 0),i([s.ObservableComponent.field],e.prototype,"cornerRadius",void 0),i([s.ObservableComponent.field],e.prototype,"color",void 0),i([s.ObservableComponent.field],e.prototype,"background",void 0),i([s.ObservableComponent.field],e.prototype,"paddingTop",void 0),i([s.ObservableComponent.field],e.prototype,"paddingRight",void 0),i([s.ObservableComponent.field],e.prototype,"paddingBottom",void 0),i([s.ObservableComponent.field],e.prototype,"paddingLeft",void 0),i([s.ObservableComponent.field],e.prototype,"shadowBlur",void 0),i([s.ObservableComponent.field],e.prototype,"shadowOffsetX",void 0),i([s.ObservableComponent.field],e.prototype,"shadowOffsetY",void 0),i([s.ObservableComponent.field],e.prototype,"shadowColor",void 0),i([s.ObservableComponent.field],e.prototype,"text",void 0),e=i([s.DisposableComponent("engine.shape",a.CLASS_ID.UI_BUTTON_SHAPE)],e)}(u);e.UIButton=v;var m=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.outlineWidth=0,e.outlineColor=p.Color4.White(),e.color=p.Color4.White(),e.fontSize=10,e.fontAutoSize=!1,e.fontWeight="normal",e.value="",e.lineSpacing=0,e.lineCount=0,e.adaptWidth=!1,e.adaptHeight=!1,e.textWrapping=!1,e.shadowBlur=0,e.shadowOffsetX=0,e.shadowOffsetY=0,e.shadowColor=p.Color4.Black(),e.hTextAlign="left",e.vTextAlign="bottom",e.paddingTop=0,e.paddingRight=0,e.paddingBottom=0,e.paddingLeft=0,e}return r(e,t),i([s.ObservableComponent.field],e.prototype,"outlineWidth",void 0),i([s.ObservableComponent.field],e.prototype,"outlineColor",void 0),i([s.ObservableComponent.field],e.prototype,"color",void 0),i([s.ObservableComponent.field],e.prototype,"fontSize",void 0),i([s.ObservableComponent.field],e.prototype,"fontAutoSize",void 0),i([s.ObservableComponent.field],e.prototype,"fontWeight",void 0),i([s.ObservableComponent.component],e.prototype,"font",void 0),i([s.ObservableComponent.field],e.prototype,"value",void 0),i([s.ObservableComponent.field],e.prototype,"lineSpacing",void 0),i([s.ObservableComponent.field],e.prototype,"lineCount",void 0),i([s.ObservableComponent.field],e.prototype,"adaptWidth",void 0),i([s.ObservableComponent.field],e.prototype,"adaptHeight",void 0),i([s.ObservableComponent.field],e.prototype,"textWrapping",void 0),i([s.ObservableComponent.field],e.prototype,"shadowBlur",void 0),i([s.ObservableComponent.field],e.prototype,"shadowOffsetX",void 0),i([s.ObservableComponent.field],e.prototype,"shadowOffsetY",void 0),i([s.ObservableComponent.field],e.prototype,"shadowColor",void 0),i([s.ObservableComponent.field],e.prototype,"hTextAlign",void 0),i([s.ObservableComponent.field],e.prototype,"vTextAlign",void 0),i([s.ObservableComponent.field],e.prototype,"paddingTop",void 0),i([s.ObservableComponent.field],e.prototype,"paddingRight",void 0),i([s.ObservableComponent.field],e.prototype,"paddingBottom",void 0),i([s.ObservableComponent.field],e.prototype,"paddingLeft",void 0),e=i([s.DisposableComponent("engine.shape",a.CLASS_ID.UI_TEXT_SHAPE)],e)}(u);e.UIText=m;var b=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.outlineWidth=0,e.outlineColor=p.Color4.Black(),e.color=p.Color4.Clear(),e.thickness=1,e.fontSize=10,e.fontWeight="normal",e.value="",e.placeholderColor=p.Color4.White(),e.placeholder="",e.margin=10,e.maxWidth=100,e.hTextAlign="left",e.vTextAlign="bottom",e.autoStretchWidth=!0,e.background=p.Color4.Black(),e.focusedBackground=p.Color4.Black(),e.textWrapping=!1,e.shadowBlur=0,e.shadowOffsetX=0,e.shadowOffsetY=0,e.shadowColor=p.Color4.White(),e.paddingTop=0,e.paddingRight=0,e.paddingBottom=0,e.paddingLeft=0,e.onTextSubmit=null,e.onChanged=null,e.onFocus=null,e.onBlur=null,e}return r(e,t),i([s.ObservableComponent.field],e.prototype,"outlineWidth",void 0),i([s.ObservableComponent.field],e.prototype,"outlineColor",void 0),i([s.ObservableComponent.field],e.prototype,"color",void 0),i([s.ObservableComponent.field],e.prototype,"thickness",void 0),i([s.ObservableComponent.field],e.prototype,"fontSize",void 0),i([s.ObservableComponent.field],e.prototype,"fontWeight",void 0),i([s.ObservableComponent.component],e.prototype,"font",void 0),i([s.ObservableComponent.field],e.prototype,"value",void 0),i([s.ObservableComponent.field],e.prototype,"placeholderColor",void 0),i([s.ObservableComponent.field],e.prototype,"placeholder",void 0),i([s.ObservableComponent.field],e.prototype,"margin",void 0),i([s.ObservableComponent.field],e.prototype,"maxWidth",void 0),i([s.ObservableComponent.field],e.prototype,"hTextAlign",void 0),i([s.ObservableComponent.field],e.prototype,"vTextAlign",void 0),i([s.ObservableComponent.field],e.prototype,"autoStretchWidth",void 0),i([s.ObservableComponent.field],e.prototype,"background",void 0),i([s.ObservableComponent.field],e.prototype,"focusedBackground",void 0),i([s.ObservableComponent.field],e.prototype,"textWrapping",void 0),i([s.ObservableComponent.field],e.prototype,"shadowBlur",void 0),i([s.ObservableComponent.field],e.prototype,"shadowOffsetX",void 0),i([s.ObservableComponent.field],e.prototype,"shadowOffsetY",void 0),i([s.ObservableComponent.field],e.prototype,"shadowColor",void 0),i([s.ObservableComponent.field],e.prototype,"paddingTop",void 0),i([s.ObservableComponent.field],e.prototype,"paddingRight",void 0),i([s.ObservableComponent.field],e.prototype,"paddingBottom",void 0),i([s.ObservableComponent.field],e.prototype,"paddingLeft",void 0),i([a.OnUUIDEvent.uuidEvent],e.prototype,"onTextSubmit",void 0),i([a.OnUUIDEvent.uuidEvent],e.prototype,"onChanged",void 0),i([a.OnUUIDEvent.uuidEvent],e.prototype,"onFocus",void 0),i([a.OnUUIDEvent.uuidEvent],e.prototype,"onBlur",void 0),e=i([s.DisposableComponent("engine.shape",a.CLASS_ID.UI_INPUT_TEXT_SHAPE)],e)}(u);e.UIInputText=b;var g=function(t){function e(e,n){var o=t.call(this,e)||this;return o.sourceLeft=0,o.sourceTop=0,o.sourceWidth=1,o.sourceHeight=1,o.paddingTop=0,o.paddingRight=0,o.paddingBottom=0,o.paddingLeft=0,o.sizeInPixels=!0,o.onClick=null,o.source=n,o}return r(e,t),i([s.ObservableComponent.field],e.prototype,"sourceLeft",void 0),i([s.ObservableComponent.field],e.prototype,"sourceTop",void 0),i([s.ObservableComponent.field],e.prototype,"sourceWidth",void 0),i([s.ObservableComponent.field],e.prototype,"sourceHeight",void 0),i([s.ObservableComponent.component],e.prototype,"source",void 0),i([s.ObservableComponent.field],e.prototype,"paddingTop",void 0),i([s.ObservableComponent.field],e.prototype,"paddingRight",void 0),i([s.ObservableComponent.field],e.prototype,"paddingBottom",void 0),i([s.ObservableComponent.field],e.prototype,"paddingLeft",void 0),i([s.ObservableComponent.field],e.prototype,"sizeInPixels",void 0),i([a.OnUUIDEvent.uuidEvent],e.prototype,"onClick",void 0),e=i([s.DisposableComponent("engine.shape",a.CLASS_ID.UI_IMAGE_SHAPE)],e)}(u);e.UIImage=g;var _=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.valueX=0,e.valueY=0,e.borderColor=p.Color4.White(),e.backgroundColor=p.Color4.Clear(),e.isHorizontal=!1,e.isVertical=!1,e.paddingTop=0,e.paddingRight=0,e.paddingBottom=0,e.paddingLeft=0,e.onChanged=null,e}return r(e,t),i([s.ObservableComponent.field],e.prototype,"valueX",void 0),i([s.ObservableComponent.field],e.prototype,"valueY",void 0),i([s.ObservableComponent.field],e.prototype,"borderColor",void 0),i([s.ObservableComponent.field],e.prototype,"backgroundColor",void 0),i([s.ObservableComponent.field],e.prototype,"isHorizontal",void 0),i([s.ObservableComponent.field],e.prototype,"isVertical",void 0),i([s.ObservableComponent.field],e.prototype,"paddingTop",void 0),i([s.ObservableComponent.field],e.prototype,"paddingRight",void 0),i([s.ObservableComponent.field],e.prototype,"paddingBottom",void 0),i([s.ObservableComponent.field],e.prototype,"paddingLeft",void 0),i([a.OnUUIDEvent.uuidEvent],e.prototype,"onChanged",void 0),e=i([s.DisposableComponent("engine.shape",a.CLASS_ID.UI_SLIDER_SHAPE)],e)}(u);e.UIScrollRect=_},function(t,e,n){"use strict";var o,r=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),i=this&&this.__decorate||function(t,e,n,o){var r,i=arguments.length,s=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var a=t.length-1;a>=0;a--)(r=t[a])&&(s=(i<3?r(s):i>3?r(e,n,s):r(e,n))||s);return i>3&&s&&Object.defineProperty(e,n,s),s};Object.defineProperty(e,"__esModule",{value:!0});var s=n(0),a=n(4),p=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.useDummyModel=!1,e.talking=!1,e}var n;return r(e,t),n=e,e.Dummy=function(){var t=new n;return t.useDummyModel=!0,t},i([s.ObservableComponent.field],e.prototype,"id",void 0),i([s.ObservableComponent.field],e.prototype,"name",void 0),i([s.ObservableComponent.field],e.prototype,"expressionTriggerId",void 0),i([s.ObservableComponent.field],e.prototype,"expressionTriggerTimestamp",void 0),i([s.ObservableComponent.field],e.prototype,"bodyShape",void 0),i([s.ObservableComponent.field],e.prototype,"wearables",void 0),i([s.ObservableComponent.field],e.prototype,"skinColor",void 0),i([s.ObservableComponent.field],e.prototype,"hairColor",void 0),i([s.ObservableComponent.field],e.prototype,"eyeColor",void 0),i([s.ObservableComponent.field],e.prototype,"useDummyModel",void 0),i([s.ObservableComponent.field],e.prototype,"talking",void 0),e=n=i([s.Component("engine.avatarShape",a.CLASS_ID.AVATAR_SHAPE)],e)}(s.ObservableComponent);e.AvatarShape=p},function(t,e,n){"use strict";var o,r=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),i=this&&this.__decorate||function(t,e,n,o){var r,i=arguments.length,s=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var a=t.length-1;a>=0;a--)(r=t[a])&&(s=(i<3?r(s):i>3?r(e,n,s):r(e,n))||s);return i>3&&s&&Object.defineProperty(e,n,s),s};Object.defineProperty(e,"__esModule",{value:!0});var s=n(0),a=n(14),p=n(4),u=function(t){function e(e){var n=t.call(this,e)||this;return n.type="onFocus",a.uuidEventSystem.handlerMap[n.uuid]=n,n}return r(e,t),i([s.ObservableComponent.readonly],e.prototype,"type",void 0),e=i([s.Component("engine.onFocus",p.CLASS_ID.UUID_CALLBACK)],e)}(p.OnUUIDEvent);e.OnFocus=u;var l=function(t){function e(e){var n=t.call(this,e)||this;return n.type="onTextSubmit",a.uuidEventSystem.handlerMap[n.uuid]=n,n}return r(e,t),i([s.ObservableComponent.readonly],e.prototype,"type",void 0),e=i([s.Component("engine.onTextSubmit",p.CLASS_ID.UUID_CALLBACK)],e)}(p.OnUUIDEvent);e.OnTextSubmit=l;var c=function(t){function e(e){var n=t.call(this,e)||this;return n.type="onBlur",a.uuidEventSystem.handlerMap[n.uuid]=n,n}return r(e,t),i([s.ObservableComponent.readonly],e.prototype,"type",void 0),e=i([s.Component("engine.onBlur",p.CLASS_ID.UUID_CALLBACK)],e)}(p.OnUUIDEvent);e.OnBlur=c;var h=function(t){function e(e){var n=t.call(this,e)||this;return n.type="onEnter",a.uuidEventSystem.handlerMap[n.uuid]=n,n}return r(e,t),i([s.ObservableComponent.readonly],e.prototype,"type",void 0),e=i([s.Component("engine.onEnter",p.CLASS_ID.UUID_CALLBACK)],e)}(p.OnUUIDEvent);e.OnEnter=h;var d=function(t){function e(e){var n=t.call(this,e)||this;return n.type="onChange",a.uuidEventSystem.handlerMap[n.uuid]=n,n}return r(e,t),i([s.ObservableComponent.readonly],e.prototype,"type",void 0),e=i([s.Component("engine.onChange",p.CLASS_ID.UUID_CALLBACK)],e)}(p.OnUUIDEvent);e.OnChanged=d;var f=function(t){function e(e,n){var o=t.call(this,e)||this;return o.type="onClick",a.uuidEventSystem.handlerMap[o.uuid]=o,n&&(o.showFeedback=!(!1===n.showFeedback),n.button&&(o.button=n.button),n.hoverText&&(o.hoverText=n.hoverText),n.distance&&(o.distance=n.distance)),o}return r(e,t),i([s.ObservableComponent.readonly],e.prototype,"type",void 0),e=i([s.Component("engine.onClick",p.CLASS_ID.UUID_CALLBACK)],e)}(p.OnPointerUUIDEvent);e.OnClick=f;var y=function(t){function e(e,n){var o=t.call(this,e)||this;return o.type="pointerDown",a.uuidEventSystem.handlerMap[o.uuid]=o,n&&(o.showFeedback=!(!1===n.showFeedback),n.button&&(o.button=n.button),n.hoverText&&(o.hoverText=n.hoverText),n.distance&&(o.distance=n.distance)),o}return r(e,t),i([s.ObservableComponent.readonly],e.prototype,"type",void 0),e=i([s.Component("engine.pointerDown",p.CLASS_ID.UUID_CALLBACK)],e)}(p.OnPointerUUIDEvent);e.OnPointerDown=y;var v=function(t){function e(e,n){var o=t.call(this,e)||this;return o.type="pointerUp",a.uuidEventSystem.handlerMap[o.uuid]=o,n&&(o.showFeedback=!(!1===n.showFeedback),n.button&&(o.button=n.button),n.hoverText&&(o.hoverText=n.hoverText),n.distance&&(o.distance=n.distance)),o}return r(e,t),i([s.ObservableComponent.readonly],e.prototype,"type",void 0),e=i([s.Component("engine.pointerUp",p.CLASS_ID.UUID_CALLBACK)],e)}(p.OnPointerUUIDEvent);e.OnPointerUp=v},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(20),r=n(1),i=null,s=null,a=null;function p(){return a||(a=new o.Observable),a}e.getMessageObserver=p;var u=function(){function t(){var t=this;this.messageQueue=[],this.connected=!1,this.flushing=!1,function(){if(!s){(s=dcl.loadModule("@decentraland/CommunicationsController")).then((function(t){i=t}));var t=p();dcl.subscribe("comms"),dcl.onEvent((function(e){"comms"===e.type&&t.notifyObservers(e.data)}))}return s}().then((function(e){t.connected=!0,t.flush()}))}return t.prototype.on=function(t,e){return p().add((function(n){try{var o=JSON.parse(n.message);o.message===t&&e(o.payload,n.sender)}catch(n){dcl.error("Error parsing comms message "+n.message,n)}}))},t.prototype.sendRaw=function(t){this.messageQueue.push(t),this.connected&&this.flush()},t.prototype.emit=function(t,e){var n=JSON.stringify({message:t,payload:e});this.sendRaw(n),p().notifyObservers({message:n,sender:"self"})},t.prototype.flush=function(){var t=this;if(0!==this.messageQueue.length&&this.connected&&i&&!this.flushing){var e=this.messageQueue.shift();this.flushing=!0,dcl.callRpc(i.rpcHandle,"send",[e]).then((function(e){t.flushing=!1,t.flush()}),(function(e){t.flushing=!1,r.error("Error flushing MessageBus",e)}))}},t}();e.MessageBus=u}]));;
/*! dcl-amd */;
var loader;(function(e){"use strict";var t=1;var d=2;var o=[];var f={baseUrl:""};var s={};function n(e){if(typeof e==="object"){for(var n in e){if(e.hasOwnProperty(n)){f[n]=e[n]}}}}e.config=n;function u(e,n,r){if(r===void 0){r=[]}return{name:e,dclamd:t,handlers:r,context:n,exports:{}}}function r(a,e,l){var n=arguments.length;if(n===1){l=a;e=["require","exports","module"];a=null}else if(n===2){if(f.toString.call(a)==="[object Array]"){l=e;e=a;a=null}else{l=e;e=["require","exports","module"]}}if(!a){o.push([e,l]);return}function r(){var e,n;if(s[a]){e=s[a].handlers;n=s[a].context}else{s[a]=u(a)}var r=s[a];r.exports=typeof l==="function"?l.apply(null,o.slice.call(arguments,0))||s[a].exports||{}:l;r.dclamd=d;r.context=n;for(var t=0,i=e?e.length:0;t<i;t++){e[t](r.exports)}}if(!s[a])s[a]=u(a);i(a);s[a].dependencies=e.map(function(e){return h(e,a)});p(e,r,a)}e.define=r;function i(e){var n;var r=e.split("/");if(r[r.length-1]==="index"&&r.length>1){r.pop();var t=r.join("/");var i=s[t];s[t]=s[e];if(i){s[t].context=i.context;(n=s[t].handlers).push.apply(n,i.handlers)}}}(function(e){e.amd={}})(r=e.define||(e.define={}));function c(e,n){if(!s[e]||!s[e].dependencies){return false}var r=s[e].dependencies;var t=[e,"require","exports","module"];if(t.indexOf(n)!==-1)return true;var i=r.filter(function(e){return t.indexOf(e)===-1});while(i.length>0){if(i.indexOf(n)!==-1)return true;var a=i.shift();t.push(a);var l=s[a];if(l&&l.dependencies){for(var o=0;o<l.dependencies.length;o++){var f=l.dependencies[o];if(t.indexOf(f)===-1&&i.indexOf(f)===-1){i.push(f)}}}}return false}function p(r,t,i){var a=[];var l=0;var o=false;if(typeof r==="string"){if(s[r]&&s[r].dclamd===d){return s[r]}throw new Error(r+" has not been defined. Please include it as a dependency in "+i+"'s define()")}var f=r.length;var e=function(n){switch(r[n]){case"require":var e=function(e,n){return p(e,n,i)};e.toUrl=function(e){return h(e,i)};a[n]=e;l++;break;case"exports":a[n]=s[i].exports;l++;break;case"module":a[n]={id:i,uri:h(i)};l++;break;default:if(c(r[n],i)){a[n]=s[r[n]].exports;l++}else{v(r[n],function(e){a[n]=e;l++;if(l===f&&t){o=true;t.apply(null,a)}},i)}}};for(var n=0;n<f;n++){e(n)}if(!o&&l===f&&t){t.apply(null,a)}}e.require=p;function l(e,n){return function(){return dcl.callRpc(e,n.name,o.slice.call(arguments,0))}}function v(e,n,r){e=r?h(e,r):e;if(s[e]){if(s[e].dclamd===t){n&&s[e].handlers.push(n)}else{n&&n(s[e].exports)}}else{var a=s[e]=u(e,r,[n]);if(e.indexOf("@")===0){if(typeof dcl!=="undefined"){dcl.loadModule(e).then(function(e){var n={};for(var r in e.methods){var t=e.methods[r];n[t.name]=l(e.rpcHandle,t)}a.dclamd=d;a.exports=n;var i=a.handlers;for(var r=0;r<i.length;r++){i[r](n)}})}}}}if(typeof dcl!=="undefined"){dcl.onStart(function(){var e=[];for(var n in s){if(s[n]&&s[n].dclamd===t){e.push(s[n])}}if(e.length){throw new Error("These modules didn't load: "+e.map(function(e){return e.name}).join(", "))}})}function h(e,n){var r=false;switch(e){case"require":case"exports":case"module":return e}var t=(n||f.baseUrl).split("/");t.pop();var i=e.split("/");var a=i.length;while(--a){switch(i[0]){case"..":t.pop();case".":case"":i.shift();r=true}}return(t.length&&r?t.join("/")+"/":"")+i.join("/")}p.toUrl=h})(loader||(loader={}));global=typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof this!=="undefined"?this:null;if(!global)throw new Error("unknown global context");global.define=loader.define;global.dclamd=loader;;
/*! code */;
eval("var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __values = (this && this.__values) || function(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __read = (this && this.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\nvar __spread = (this && this.__spread) || function () {\r\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n};\r\ndefine(\"src/modules/messageboard\", [\"require\", \"exports\", \"src/modules/ui\", \"src/modules/serverHandler\"], function (require, exports, ui_1, serverHandler_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.serverChecker = exports.setTowerText = exports.ArtichokeFloatingTextShape = exports.MessageBoards = void 0;\r\n    var SFHeavyFont = new Font(Fonts.SanFrancisco_Heavy);\r\n    var MessageBoards;\r\n    (function (MessageBoards) {\r\n        MessageBoards[\"ARTICHOKE\"] = \"artichoke\";\r\n        MessageBoards[\"TOWER\"] = \"tower\";\r\n    })(MessageBoards = exports.MessageBoards || (exports.MessageBoards = {}));\r\n    /// ARTICHOKE\r\n    var ArtichokeFloatingText = new Entity();\r\n    exports.ArtichokeFloatingTextShape = new TextShape('Write something');\r\n    exports.ArtichokeFloatingTextShape.color = Color3.FromHexString('#8040E2');\r\n    exports.ArtichokeFloatingTextShape.font = SFHeavyFont;\r\n    ArtichokeFloatingText.addComponent(exports.ArtichokeFloatingTextShape);\r\n    ArtichokeFloatingText.addComponent(new Transform({\r\n        position: new Vector3(51, 15.5, 31.7),\r\n        scale: new Vector3(1, 1, 1),\r\n        rotation: Quaternion.Euler(0, 180, 0),\r\n    }));\r\n    engine.addEntity(ArtichokeFloatingText);\r\n    ArtichokeFloatingText.getComponent(Transform).rotate(new Vector3(1, 0, 0), -15);\r\n    // TOWER\r\n    var TowerFloatingText = new Entity();\r\n    TowerFloatingText.addComponent(new Transform({\r\n        position: new Vector3(48.6, 21, 116.6),\r\n        scale: new Vector3(1, 1, 1),\r\n        rotation: Quaternion.Euler(0, 0, 0),\r\n    }));\r\n    engine.addEntity(TowerFloatingText);\r\n    var bkgModel = new Entity();\r\n    bkgModel.addComponent(new GLTFShape('models/screen-moon.glb'));\r\n    bkgModel.setParent(TowerFloatingText);\r\n    engine.addEntity(bkgModel);\r\n    var towerLetters = [];\r\n    var distanceMultiplier = 9;\r\n    var maxCharacters = 40;\r\n    for (var i = 0; i < maxCharacters; i++) {\r\n        var angle = 360 - (i * 360) / maxCharacters;\r\n        var radAngle = angle * (Math.PI / 180);\r\n        var letter = new Entity();\r\n        letter.setParent(TowerFloatingText);\r\n        letter.addComponent(new TextShape(''));\r\n        letter.getComponent(TextShape).fontSize = 22;\r\n        letter.getComponent(TextShape).color = Color3.White(); //Color3.Blue()\r\n        letter.getComponent(TextShape).font = SFHeavyFont;\r\n        letter.addComponent(new Transform({\r\n            position: new Vector3(Math.sin(radAngle) * distanceMultiplier, 0, Math.cos(radAngle) * distanceMultiplier),\r\n            rotation: Quaternion.Euler(0, angle - 180, 0),\r\n        }));\r\n        engine.addEntity(letter);\r\n        towerLetters.push(letter);\r\n    }\r\n    var ArtichokeUIOpener = new Entity();\r\n    ArtichokeUIOpener.addComponent(new GLTFShape('models/artichoke_message.glb')); // GLTFShape('models/Message.glb'))\r\n    ArtichokeUIOpener.addComponent(new Transform({\r\n        position: new Vector3(42, 8.4, 43),\r\n        scale: new Vector3(1, 1, 1),\r\n    }));\r\n    ArtichokeUIOpener.addComponent(new OnPointerDown(function (e) {\r\n        ui_1.openMessageBoardUI(ArtichokeUIOpener, MessageBoards.ARTICHOKE);\r\n    }, {\r\n        button: ActionButton.PRIMARY,\r\n        hoverText: 'Write something',\r\n    }));\r\n    engine.addEntity(ArtichokeUIOpener);\r\n    var TowerUIOpener = new Entity();\r\n    TowerUIOpener.addComponent(new GLTFShape('models/message_booth.glb'));\r\n    TowerUIOpener.addComponent(new Transform({\r\n        position: new Vector3(43.8, 37.4, 122.4),\r\n        scale: new Vector3(1, 1, 1),\r\n    }));\r\n    TowerUIOpener.addComponent(new OnPointerDown(function (e) {\r\n        ui_1.openMessageBoardUI(TowerUIOpener, MessageBoards.TOWER);\r\n    }, {\r\n        button: ActionButton.PRIMARY,\r\n        hoverText: 'Write something',\r\n    }));\r\n    engine.addEntity(TowerUIOpener);\r\n    function setTowerText(text) {\r\n        for (var i = 0; i <= maxCharacters - 1; i++) {\r\n            var letter = towerLetters[i];\r\n            var textShape = letter.getComponent(TextShape);\r\n            if (i < text.length) {\r\n                textShape.value = text[i];\r\n            }\r\n            else {\r\n                textShape.value = '';\r\n            }\r\n        }\r\n    }\r\n    exports.setTowerText = setTowerText;\r\n    var SpinTextSystem = /** @class */ (function () {\r\n        function SpinTextSystem() {\r\n        }\r\n        SpinTextSystem.prototype.update = function (dt) {\r\n            var transform = TowerFloatingText.getComponent(Transform);\r\n            transform.rotate(Vector3.Up(), dt * 10);\r\n        };\r\n        return SpinTextSystem;\r\n    }());\r\n    engine.addSystem(new SpinTextSystem());\r\n    //// FETCH CURRENT MESSAGES EN MESSAGE BOARDS\r\n    // how often to refresh scene, in seconds\r\n    var messageRefreshInterval = 30;\r\n    // start system\r\n    exports.serverChecker = new serverHandler_1.CheckServer(messageRefreshInterval);\r\n    engine.addSystem(exports.serverChecker);\r\n});\r\ndefine(\"node_modules/decentraland-ecs-utils/transform/component/itransformcomponent\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n});\r\ndefine(\"node_modules/decentraland-ecs-utils/transform/math/interpolation\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.Interpolate = exports.InterpolationType = void 0;\r\n    var InterpolationType;\r\n    (function (InterpolationType) {\r\n        InterpolationType[InterpolationType[\"LINEAR\"] = 0] = \"LINEAR\";\r\n        InterpolationType[InterpolationType[\"EASEINQUAD\"] = 1] = \"EASEINQUAD\";\r\n        InterpolationType[InterpolationType[\"EASEOUTQUAD\"] = 2] = \"EASEOUTQUAD\";\r\n        InterpolationType[InterpolationType[\"EASEQUAD\"] = 3] = \"EASEQUAD\";\r\n    })(InterpolationType = exports.InterpolationType || (exports.InterpolationType = {}));\r\n    function Interpolate(type, t) {\r\n        switch (type) {\r\n            case InterpolationType.LINEAR:\r\n                return InterpolateLinear(t);\r\n            case InterpolationType.EASEINQUAD:\r\n                return InterpolateEaseInQuad(t);\r\n            case InterpolationType.EASEOUTQUAD:\r\n                return InterpolateEaseOutQuad(t);\r\n            case InterpolationType.EASEQUAD:\r\n                return InterpolateEaseQuad(t);\r\n            default:\r\n                return InterpolateLinear(t);\r\n        }\r\n    }\r\n    exports.Interpolate = Interpolate;\r\n    function InterpolateLinear(t) {\r\n        return t;\r\n    }\r\n    function InterpolateEaseInQuad(t) {\r\n        return t * t;\r\n    }\r\n    function InterpolateEaseOutQuad(t) {\r\n        return t * (2 - t);\r\n    }\r\n    function InterpolateEaseQuad(t) {\r\n        return (t * t) / (2.0 * (t * t - t) + 1.0);\r\n    }\r\n});\r\ndefine(\"node_modules/decentraland-ecs-utils/transform/component/rotate\", [\"require\", \"exports\", \"node_modules/decentraland-ecs-utils/transform/system/transfromSystem\", \"node_modules/decentraland-ecs-utils/transform/math/interpolation\"], function (require, exports, transfromSystem_1, interpolation_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.RotateTransformComponent = void 0;\r\n    /**\r\n     * Component to rotate entity from one rotation (start) to another (end) in an amount of time\r\n     */\r\n    var RotateTransformComponent = /** @class */ (function () {\r\n        /**\r\n         * Create a RotateTransformComponent instance to add as a component to a Entity\r\n         * @param start starting rotation\r\n         * @param end ending rotation\r\n         * @param duration duration (in seconds) of start to end rotation\r\n         * @param onFinishCallback called when rotation ends\r\n         * @param interpolationType type of interpolation to be used (default: LINEAR)\r\n         */\r\n        function RotateTransformComponent(start, end, duration, onFinishCallback, interpolationType) {\r\n            if (interpolationType === void 0) { interpolationType = interpolation_1.InterpolationType.LINEAR; }\r\n            this.start = start;\r\n            this.end = end;\r\n            this.normalizedTime = 0;\r\n            this.lerpTime = 0;\r\n            this.onFinishCallback = onFinishCallback;\r\n            this.interpolationType = interpolationType;\r\n            if (duration != 0) {\r\n                this.speed = 1 / duration;\r\n            }\r\n            else {\r\n                this.speed = 0;\r\n                this.normalizedTime = 1;\r\n                this.lerpTime = 1;\r\n            }\r\n            transfromSystem_1.TransformSystem.createAndAddToEngine();\r\n        }\r\n        RotateTransformComponent.prototype.update = function (dt) {\r\n            this.normalizedTime = Scalar.Clamp(this.normalizedTime + dt * this.speed, 0, 1);\r\n            this.lerpTime = interpolation_1.Interpolate(this.interpolationType, this.normalizedTime);\r\n        };\r\n        RotateTransformComponent.prototype.hasFinished = function () {\r\n            return this.normalizedTime >= 1;\r\n        };\r\n        RotateTransformComponent.prototype.assignValueToTransform = function (transform) {\r\n            transform.rotation = Quaternion.Slerp(this.start, this.end, this.lerpTime);\r\n        };\r\n        RotateTransformComponent = __decorate([\r\n            Component('rotateTransformComponent'),\r\n            __metadata(\"design:paramtypes\", [Object, Object, Number, Function, Number])\r\n        ], RotateTransformComponent);\r\n        return RotateTransformComponent;\r\n    }());\r\n    exports.RotateTransformComponent = RotateTransformComponent;\r\n});\r\ndefine(\"node_modules/decentraland-ecs-utils/transform/component/scale\", [\"require\", \"exports\", \"node_modules/decentraland-ecs-utils/transform/system/transfromSystem\", \"node_modules/decentraland-ecs-utils/transform/math/interpolation\"], function (require, exports, transfromSystem_2, interpolation_2) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.ScaleTransformComponent = void 0;\r\n    /**\r\n     * Component to scale entity from one value (start) to another (end) in an amount of time\r\n     */\r\n    var ScaleTransformComponent = /** @class */ (function () {\r\n        /**\r\n         * Create a ScaleTransformComponent instance to add as a component to a Entity\r\n         * @param start starting scale\r\n         * @param end ending scale\r\n         * @param duration duration (in seconds) of start to end scaling\r\n         * @param onFinishCallback called when scaling ends\r\n         * @param interpolationType type of interpolation to be used (default: LINEAR)\r\n         */\r\n        function ScaleTransformComponent(start, end, duration, onFinishCallback, interpolationType) {\r\n            if (interpolationType === void 0) { interpolationType = interpolation_2.InterpolationType.LINEAR; }\r\n            this.start = start;\r\n            this.end = end;\r\n            this.normalizedTime = 0;\r\n            this.lerpTime = 0;\r\n            this.onFinishCallback = onFinishCallback;\r\n            this.interpolationType = interpolationType;\r\n            if (duration != 0) {\r\n                this.speed = 1 / duration;\r\n            }\r\n            else {\r\n                this.speed = 0;\r\n                this.normalizedTime = 1;\r\n                this.lerpTime = 1;\r\n            }\r\n            transfromSystem_2.TransformSystem.createAndAddToEngine();\r\n        }\r\n        ScaleTransformComponent.prototype.update = function (dt) {\r\n            this.normalizedTime = Scalar.Clamp(this.normalizedTime + dt * this.speed, 0, 1);\r\n            this.lerpTime = interpolation_2.Interpolate(this.interpolationType, this.normalizedTime);\r\n        };\r\n        ScaleTransformComponent.prototype.hasFinished = function () {\r\n            return this.normalizedTime >= 1;\r\n        };\r\n        ScaleTransformComponent.prototype.assignValueToTransform = function (transform) {\r\n            transform.scale = Vector3.Lerp(this.start, this.end, this.lerpTime);\r\n        };\r\n        ScaleTransformComponent = __decorate([\r\n            Component('scaleTransformComponent'),\r\n            __metadata(\"design:paramtypes\", [Object, Object, Number, Function, Number])\r\n        ], ScaleTransformComponent);\r\n        return ScaleTransformComponent;\r\n    }());\r\n    exports.ScaleTransformComponent = ScaleTransformComponent;\r\n});\r\ndefine(\"node_modules/decentraland-ecs-utils/transform/component/followpath\", [\"require\", \"exports\", \"node_modules/decentraland-ecs-utils/transform/system/transfromSystem\"], function (require, exports, transfromSystem_3) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.FollowPathComponent = void 0;\r\n    /**\r\n     * Component to move a entity down a fixed path in an amount of time\r\n     */\r\n    var FollowPathComponent = /** @class */ (function () {\r\n        /**\r\n         * Create a FollowPathComponent instance to add as a component to a Entity\r\n         * @param points array of points for the path\r\n         * @param duration duration of the movement through the path\r\n         * @param onFinishCallback called when movement ends\r\n         * @param onPointReachedCallback called everytime an entity reaches a point of the path\r\n         */\r\n        function FollowPathComponent(points, duration, onFinishCallback, onPointReachedCallback) {\r\n            this.speed = [];\r\n            this.normalizedTime = 0;\r\n            this.currentIndex = 0;\r\n            this.points = points;\r\n            this.onFinishCallback = onFinishCallback;\r\n            this.onPointReachedCallback = onPointReachedCallback;\r\n            if (points.length < 2) {\r\n                throw new Error('At least 2 points are needed for FollowPathComponent.');\r\n            }\r\n            if (duration > 0) {\r\n                var sqTotalDist = 0;\r\n                var sqPointsDist = [];\r\n                for (var i = 0; i < points.length - 1; i++) {\r\n                    var sqDist = Vector3.DistanceSquared(points[i], points[i + 1]);\r\n                    sqTotalDist += sqDist;\r\n                    sqPointsDist.push(sqDist);\r\n                }\r\n                for (var i = 0; i < sqPointsDist.length; i++) {\r\n                    this.speed.push(1 / ((sqPointsDist[i] / sqTotalDist) * duration));\r\n                }\r\n            }\r\n            else {\r\n                this.normalizedTime = 1;\r\n                this.currentIndex = points.length - 2;\r\n            }\r\n            transfromSystem_3.TransformSystem.createAndAddToEngine();\r\n        }\r\n        FollowPathComponent.prototype.update = function (dt) {\r\n            this.normalizedTime = Scalar.Clamp(this.normalizedTime + dt * this.speed[this.currentIndex], 0, 1);\r\n            if (this.normalizedTime >= 1 &&\r\n                this.currentIndex < this.points.length - 2) {\r\n                this.currentIndex++;\r\n                this.normalizedTime = 0;\r\n                if (this.onPointReachedCallback &&\r\n                    this.currentIndex < this.points.length - 1)\r\n                    this.onPointReachedCallback(this.points[this.currentIndex], this.points[this.currentIndex + 1]);\r\n            }\r\n        };\r\n        FollowPathComponent.prototype.hasFinished = function () {\r\n            return (this.currentIndex >= this.points.length - 2 && this.normalizedTime >= 1);\r\n        };\r\n        FollowPathComponent.prototype.assignValueToTransform = function (transform) {\r\n            transform.position = Vector3.Lerp(this.points[this.currentIndex], this.points[this.currentIndex + 1], this.normalizedTime);\r\n        };\r\n        FollowPathComponent = __decorate([\r\n            Component('followPathComponent'),\r\n            __metadata(\"design:paramtypes\", [Array, Number, Function, Function])\r\n        ], FollowPathComponent);\r\n        return FollowPathComponent;\r\n    }());\r\n    exports.FollowPathComponent = FollowPathComponent;\r\n});\r\ndefine(\"node_modules/decentraland-ecs-utils/transform/component/keeprotating\", [\"require\", \"exports\", \"node_modules/decentraland-ecs-utils/transform/system/transfromSystem\"], function (require, exports, transfromSystem_4) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.KeepRotatingComponent = void 0;\r\n    /**\r\n     * Component to rotate entity indefinitely until stop is called\r\n     */\r\n    var KeepRotatingComponent = /** @class */ (function () {\r\n        /**\r\n         * Rotates an entity continuously. The entity will keep rotating forever until it's explicitly stopped or the component is removed.\r\n         * @param rotationVelocity a quaternion describing the desired rotation to perform each second second\r\n         * @param onFinishCallback called when rotation ends\r\n         */\r\n        function KeepRotatingComponent(rotationVelocity, onFinishCallback) {\r\n            this.rotationVelocity = rotationVelocity;\r\n            this.onFinishCallback = onFinishCallback;\r\n            this.rotation = Quaternion.Identity;\r\n            this.finished = false;\r\n            transfromSystem_4.TransformSystem.createAndAddToEngine();\r\n        }\r\n        KeepRotatingComponent.prototype.update = function (dt) {\r\n            this.rotation = Quaternion.Slerp(Quaternion.Identity, this.rotationVelocity, dt);\r\n        };\r\n        KeepRotatingComponent.prototype.hasFinished = function () {\r\n            return this.finished;\r\n        };\r\n        KeepRotatingComponent.prototype.assignValueToTransform = function (transform) {\r\n            transform.rotation = transform.rotation.multiply(this.rotation);\r\n        };\r\n        KeepRotatingComponent.prototype.stop = function () {\r\n            this.finished = true;\r\n        };\r\n        KeepRotatingComponent = __decorate([\r\n            Component('keepRotatingComponent'),\r\n            __metadata(\"design:paramtypes\", [Quaternion, Function])\r\n        ], KeepRotatingComponent);\r\n        return KeepRotatingComponent;\r\n    }());\r\n    exports.KeepRotatingComponent = KeepRotatingComponent;\r\n});\r\ndefine(\"node_modules/decentraland-ecs-utils/transform/system/transfromSystem\", [\"require\", \"exports\", \"node_modules/decentraland-ecs-utils/transform/component/move\", \"node_modules/decentraland-ecs-utils/transform/component/rotate\", \"node_modules/decentraland-ecs-utils/transform/component/scale\", \"node_modules/decentraland-ecs-utils/transform/component/followpath\", \"node_modules/decentraland-ecs-utils/transform/component/keeprotating\"], function (require, exports, move_1, rotate_1, scale_1, followpath_1, keeprotating_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.TransformSystem = void 0;\r\n    var TransformSystem = /** @class */ (function () {\r\n        function TransformSystem() {\r\n            this._components = [];\r\n            TransformSystem._instance = this;\r\n            this._components.push(move_1.MoveTransformComponent);\r\n            this._components.push(rotate_1.RotateTransformComponent);\r\n            this._components.push(scale_1.ScaleTransformComponent);\r\n            this._components.push(followpath_1.FollowPathComponent);\r\n            this._components.push(keeprotating_1.KeepRotatingComponent);\r\n        }\r\n        TransformSystem.createAndAddToEngine = function () {\r\n            if (this._instance == null) {\r\n                this._instance = new TransformSystem();\r\n                engine.addSystem(this._instance);\r\n            }\r\n            return this._instance;\r\n        };\r\n        TransformSystem.registerCustomComponent = function (component) {\r\n            this.createAndAddToEngine()._components.push(component);\r\n        };\r\n        TransformSystem.prototype.update = function (dt) {\r\n            var _this = this;\r\n            this._components.forEach(function (component) {\r\n                _this.updateComponent(dt, component);\r\n            });\r\n        };\r\n        TransformSystem.prototype.updateComponent = function (dt, component) {\r\n            var group = engine.getComponentGroup(component, Transform);\r\n            group.entities.forEach(function (entity) {\r\n                var transform = entity.getComponent(Transform);\r\n                var comp = entity.getComponent(component);\r\n                comp.update(dt);\r\n                comp.assignValueToTransform(transform);\r\n                if (comp.hasFinished()) {\r\n                    entity.removeComponent(comp);\r\n                    if (comp.onFinishCallback != null)\r\n                        comp.onFinishCallback();\r\n                }\r\n            });\r\n        };\r\n        TransformSystem._instance = null;\r\n        return TransformSystem;\r\n    }());\r\n    exports.TransformSystem = TransformSystem;\r\n});\r\ndefine(\"node_modules/decentraland-ecs-utils/transform/component/move\", [\"require\", \"exports\", \"node_modules/decentraland-ecs-utils/transform/system/transfromSystem\", \"node_modules/decentraland-ecs-utils/transform/math/interpolation\"], function (require, exports, transfromSystem_5, interpolation_3) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.MoveTransformComponent = void 0;\r\n    /**\r\n     * Component to translate entity from one position (start) to another (end) in an amount of time\r\n     */\r\n    var MoveTransformComponent = /** @class */ (function () {\r\n        /**\r\n         * Create a MoveTransformComponent instance to add as a component to a Entity\r\n         * @param start starting position\r\n         * @param end ending position\r\n         * @param duration duration (in seconds) of start to end translation\r\n         * @param onFinishCallback called when translation ends\r\n         * @param interpolationType type of interpolation to be used (default: LINEAR)\r\n         */\r\n        function MoveTransformComponent(start, end, duration, onFinishCallback, interpolationType) {\r\n            if (interpolationType === void 0) { interpolationType = interpolation_3.InterpolationType.LINEAR; }\r\n            this.start = start;\r\n            this.end = end;\r\n            this.normalizedTime = 0;\r\n            this.lerpTime = 0;\r\n            this.onFinishCallback = onFinishCallback;\r\n            this.interpolationType = interpolationType;\r\n            if (duration != 0) {\r\n                this.speed = 1 / duration;\r\n            }\r\n            else {\r\n                this.speed = 0;\r\n                this.normalizedTime = 1;\r\n                this.lerpTime = 1;\r\n            }\r\n            transfromSystem_5.TransformSystem.createAndAddToEngine();\r\n        }\r\n        MoveTransformComponent.prototype.update = function (dt) {\r\n            this.normalizedTime = Scalar.Clamp(this.normalizedTime + dt * this.speed, 0, 1);\r\n            this.lerpTime = interpolation_3.Interpolate(this.interpolationType, this.normalizedTime);\r\n        };\r\n        MoveTransformComponent.prototype.hasFinished = function () {\r\n            return this.normalizedTime >= 1;\r\n        };\r\n        MoveTransformComponent.prototype.assignValueToTransform = function (transform) {\r\n            transform.position = Vector3.Lerp(this.start, this.end, this.lerpTime);\r\n        };\r\n        MoveTransformComponent = __decorate([\r\n            Component('moveTransformComponent'),\r\n            __metadata(\"design:paramtypes\", [Object, Object, Number, Function, Number])\r\n        ], MoveTransformComponent);\r\n        return MoveTransformComponent;\r\n    }());\r\n    exports.MoveTransformComponent = MoveTransformComponent;\r\n});\r\ndefine(\"node_modules/decentraland-ecs-utils/toggle/toggleComponent\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.ToggleComponent = exports.ToggleState = void 0;\r\n    var ToggleState;\r\n    (function (ToggleState) {\r\n        ToggleState[ToggleState[\"Off\"] = 0] = \"Off\";\r\n        ToggleState[ToggleState[\"On\"] = 1] = \"On\";\r\n    })(ToggleState = exports.ToggleState || (exports.ToggleState = {}));\r\n    /**\r\n     * Toggle component for entities with two states (ON or OFF)\r\n     */\r\n    var ToggleComponent = /** @class */ (function () {\r\n        /**\r\n         * Create an instance of a ToggleComponent\r\n         * @param startingState starting state of the toggle (ON or OFF)\r\n         * @param onValueChangedCallback called when toggle state changed\r\n         */\r\n        function ToggleComponent(startingState, onValueChangedCallback) {\r\n            if (startingState === void 0) { startingState = ToggleState.On; }\r\n            this.enabled = true;\r\n            this.state = ToggleState.Off;\r\n            this.set(startingState);\r\n            if (onValueChangedCallback)\r\n                this.setCallback(onValueChangedCallback);\r\n        }\r\n        /**\r\n         * Set trigger to a state\r\n         * @param state new state\r\n         */\r\n        ToggleComponent.prototype.set = function (state) {\r\n            this.state = state;\r\n            if (this.onValueChangedCallback)\r\n                this.onValueChangedCallback(state);\r\n        };\r\n        /**\r\n         * Toggle state of ToggleComponent\r\n         */\r\n        ToggleComponent.prototype.toggle = function () {\r\n            if (this.enabled) {\r\n                this.set(1 - this.state);\r\n            }\r\n        };\r\n        /**\r\n         * Get if current toggle state is ON\r\n         */\r\n        ToggleComponent.prototype.isOn = function () {\r\n            return this.state == ToggleState.On;\r\n        };\r\n        /**\r\n         * Set callback for when ToggleComponent state changed\r\n         * @param onValueChangedCallback callback\r\n         */\r\n        ToggleComponent.prototype.setCallback = function (onValueChangedCallback) {\r\n            this.onValueChangedCallback = onValueChangedCallback;\r\n        };\r\n        ToggleComponent = __decorate([\r\n            Component('toggle'),\r\n            __metadata(\"design:paramtypes\", [Number, Function])\r\n        ], ToggleComponent);\r\n        return ToggleComponent;\r\n    }());\r\n    exports.ToggleComponent = ToggleComponent;\r\n    exports.default = {\r\n        ToggleComponent: ToggleComponent,\r\n        ToggleState: ToggleState\r\n    };\r\n});\r\ndefine(\"node_modules/decentraland-ecs-utils/timer/component/itimercomponent\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n});\r\ndefine(\"node_modules/decentraland-ecs-utils/timer/component/interval\", [\"require\", \"exports\", \"node_modules/decentraland-ecs-utils/timer/system/timerSystem\"], function (require, exports, timerSystem_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.Interval = void 0;\r\n    /**\r\n     * Execute every X milliseconds\r\n     */\r\n    var Interval = /** @class */ (function () {\r\n        /**\r\n         * @param millisecs amount of time in milliseconds\r\n         * @param onTimeReachedCallback callback for when time is reached\r\n         */\r\n        function Interval(millisecs, onTimeReachedCallback) {\r\n            var _this = this;\r\n            timerSystem_1.TimerSystem.createAndAddToEngine();\r\n            this.elapsedTime = 0;\r\n            this.targetTime = millisecs / 1000;\r\n            this.onTimeReachedCallback = onTimeReachedCallback;\r\n            this.onTargetTimeReached = function () {\r\n                _this.elapsedTime = 0;\r\n                if (_this.onTimeReachedCallback)\r\n                    _this.onTimeReachedCallback();\r\n            };\r\n        }\r\n        Interval.prototype.setCallback = function (onTimeReachedCallback) {\r\n            this.onTimeReachedCallback = onTimeReachedCallback;\r\n        };\r\n        Interval = __decorate([\r\n            Component('timerInterval'),\r\n            __metadata(\"design:paramtypes\", [Number, Function])\r\n        ], Interval);\r\n        return Interval;\r\n    }());\r\n    exports.Interval = Interval;\r\n});\r\ndefine(\"node_modules/decentraland-ecs-utils/timer/component/expire\", [\"require\", \"exports\", \"node_modules/decentraland-ecs-utils/timer/system/timerSystem\"], function (require, exports, timerSystem_2) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.ExpireIn = void 0;\r\n    /**\r\n     * Remove entity after X milliseconds\r\n     */\r\n    var ExpireIn = /** @class */ (function () {\r\n        /**\r\n         * @param millisecs amount of time in milliseconds\r\n         * @param onTimeReachedCallback callback for when time is reached\r\n         */\r\n        function ExpireIn(millisecs, onTimeReachedCallback) {\r\n            var _this = this;\r\n            timerSystem_2.TimerSystem.createAndAddToEngine();\r\n            this.elapsedTime = 0;\r\n            this.targetTime = millisecs / 1000;\r\n            this.onTimeReachedCallback = onTimeReachedCallback;\r\n            this.onTargetTimeReached = function (entity) {\r\n                if (_this.onTimeReachedCallback)\r\n                    _this.onTimeReachedCallback();\r\n                entity.removeComponent(_this);\r\n                engine.removeEntity(entity);\r\n            };\r\n        }\r\n        ExpireIn.prototype.setCallback = function (onTimeReachedCallback) {\r\n            this.onTimeReachedCallback = onTimeReachedCallback;\r\n        };\r\n        ExpireIn = __decorate([\r\n            Component('timerExpireIn'),\r\n            __metadata(\"design:paramtypes\", [Number, Function])\r\n        ], ExpireIn);\r\n        return ExpireIn;\r\n    }());\r\n    exports.ExpireIn = ExpireIn;\r\n});\r\ndefine(\"node_modules/decentraland-ecs-utils/timer/system/timerSystem\", [\"require\", \"exports\", \"node_modules/decentraland-ecs-utils/timer/component/interval\", \"node_modules/decentraland-ecs-utils/timer/component/delay\", \"node_modules/decentraland-ecs-utils/timer/component/expire\"], function (require, exports, interval_1, delay_1, expire_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.TimerSystem = void 0;\r\n    var TimerSystem = /** @class */ (function () {\r\n        function TimerSystem() {\r\n            this._components = [];\r\n            TimerSystem._instance = this;\r\n            this._components.push(interval_1.Interval);\r\n            this._components.push(delay_1.Delay);\r\n            this._components.push(expire_1.ExpireIn);\r\n        }\r\n        TimerSystem.createAndAddToEngine = function () {\r\n            if (this._instance == null) {\r\n                this._instance = new TimerSystem();\r\n                engine.addSystem(this._instance);\r\n            }\r\n            return this._instance;\r\n        };\r\n        TimerSystem.registerCustomComponent = function (component) {\r\n            this.createAndAddToEngine()._components.push(component);\r\n        };\r\n        TimerSystem.prototype.update = function (dt) {\r\n            var _this = this;\r\n            this._components.forEach(function (component) {\r\n                _this.updateComponent(dt, component);\r\n            });\r\n        };\r\n        TimerSystem.prototype.updateComponent = function (dt, component) {\r\n            var record = engine.getEntitiesWithComponent(component);\r\n            for (var key in record) {\r\n                if (record.hasOwnProperty(key)) {\r\n                    var entity = record[key];\r\n                    var timerComponent = entity.getComponent(component);\r\n                    timerComponent.elapsedTime += dt;\r\n                    if (timerComponent.elapsedTime >= timerComponent.targetTime) {\r\n                        timerComponent.onTargetTimeReached(entity);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        TimerSystem._instance = null;\r\n        return TimerSystem;\r\n    }());\r\n    exports.TimerSystem = TimerSystem;\r\n});\r\ndefine(\"node_modules/decentraland-ecs-utils/timer/component/delay\", [\"require\", \"exports\", \"node_modules/decentraland-ecs-utils/timer/system/timerSystem\"], function (require, exports, timerSystem_3) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.Delay = void 0;\r\n    /**\r\n     * Execute once after X milliseconds\r\n     */\r\n    var Delay = /** @class */ (function () {\r\n        /**\r\n         * @param millisecs amount of time in milliseconds\r\n         * @param onTimeReachedCallback callback for when time is reached\r\n         */\r\n        function Delay(millisecs, onTimeReachedCallback) {\r\n            var _this = this;\r\n            timerSystem_3.TimerSystem.createAndAddToEngine();\r\n            this.elapsedTime = 0;\r\n            this.targetTime = millisecs / 1000;\r\n            this.onTimeReachedCallback = onTimeReachedCallback;\r\n            this.onTargetTimeReached = function (entity) {\r\n                if (_this.onTimeReachedCallback)\r\n                    _this.onTimeReachedCallback();\r\n                entity.removeComponent(_this);\r\n            };\r\n        }\r\n        Delay.prototype.setCallback = function (onTimeReachedCallback) {\r\n            this.onTimeReachedCallback = onTimeReachedCallback;\r\n        };\r\n        Delay = __decorate([\r\n            Component('timerDelay'),\r\n            __metadata(\"design:paramtypes\", [Number, Function])\r\n        ], Delay);\r\n        return Delay;\r\n    }());\r\n    exports.Delay = Delay;\r\n});\r\ndefine(\"node_modules/decentraland-ecs-utils/triggers/triggerSystem\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.TriggerSphereShape = exports.TriggerBoxShape = exports.TriggerComponent = exports.TriggerSystem = void 0;\r\n    var TriggerSystem = /** @class */ (function () {\r\n        function TriggerSystem() {\r\n            this._triggers = {};\r\n            TriggerSystem._instance = this;\r\n            this._cameraTriggerWrapper = new CameraTrigger(new TriggerBoxShape(new Vector3(0.5, 1.8, 0.5), new Vector3(0, 0.91, 0)));\r\n        }\r\n        Object.defineProperty(TriggerSystem, \"instance\", {\r\n            get: function () {\r\n                return this.createAndAddToEngine();\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        TriggerSystem.createAndAddToEngine = function () {\r\n            if (this._instance == null) {\r\n                this._instance = new TriggerSystem();\r\n                engine.addSystem(this._instance);\r\n            }\r\n            return this._instance;\r\n        };\r\n        /**\r\n         * set a custom trigger's shape for the camera\r\n         * @param shape custom trigger's shape\r\n         */\r\n        TriggerSystem.prototype.setCameraTriggerShape = function (shape) {\r\n            this._cameraTriggerWrapper.setShape(shape);\r\n        };\r\n        TriggerSystem.prototype.update = function () {\r\n            var _this = this;\r\n            //get entities with trigger component\r\n            var entitiesWithTriggers = engine.getComponentGroup(TriggerComponent)\r\n                .entities;\r\n            //iterate through all entities with triggers and wrap entities that weren't wrapped yet\r\n            entitiesWithTriggers.forEach(function (entity) {\r\n                if (_this.shouldWrapTriggerEntity(entity)) {\r\n                    _this.wrapTriggerEntity(entity);\r\n                }\r\n            });\r\n            //iterate through wrapped entities\r\n            for (var key in this._triggers) {\r\n                if (this._triggers.hasOwnProperty(key)) {\r\n                    var wrapper = this._triggers[key];\r\n                    //update debug entity\r\n                    if (wrapper.isDebugging()) {\r\n                        wrapper.updateDebugEntity();\r\n                    }\r\n                    if (!wrapper.isInEngine()) {\r\n                        //remove debugging\r\n                        if (wrapper.isDebugging()) {\r\n                            wrapper.removeDebugEntity();\r\n                        }\r\n                        //remove old collisions\r\n                        TriggerSystem.removeTriggerFromSystem(wrapper);\r\n                        //remove from record\r\n                        delete this._triggers[key];\r\n                    }\r\n                    else if (wrapper.trigger != null && wrapper.trigger.enabled) {\r\n                        //if was set as enabled in last frame\r\n                        if (!wrapper.wasEnabled) {\r\n                            if (wrapper.isDebugging()) {\r\n                                wrapper.addDebugEntity();\r\n                            }\r\n                        }\r\n                        //set as enabled\r\n                        wrapper.wasEnabled = true;\r\n                        //check collision camera\r\n                        if (wrapper.trigger.onCameraEnter || wrapper.trigger.onCameraExit) {\r\n                            this.checkCollisionAgainstCamera(wrapper);\r\n                        }\r\n                        //check collision with others\r\n                        if (wrapper.trigger.onTriggerEnter || wrapper.trigger.onTriggerExit) {\r\n                            this.checkCollisionAgainstOtherTriggers(wrapper);\r\n                        }\r\n                    }\r\n                    else if (wrapper.wasEnabled) {\r\n                        wrapper.wasEnabled = false;\r\n                        //remove debugging\r\n                        if (wrapper.isDebugging()) {\r\n                            wrapper.removeDebugEntity();\r\n                        }\r\n                        TriggerSystem.removeTriggerFromSystem(wrapper);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        TriggerSystem.prototype.shouldWrapTriggerEntity = function (entity) {\r\n            return (this._triggers[entity.uuid] == undefined ||\r\n                this._triggers[entity.uuid] == null);\r\n        };\r\n        TriggerSystem.prototype.wrapTriggerEntity = function (entity) {\r\n            this._triggers[entity.uuid] = new TriggerWrapper(entity);\r\n        };\r\n        TriggerSystem.removeTriggerFromSystem = function (wrapper) {\r\n            var activeCollisions = wrapper.getActiveCollisions();\r\n            for (var i = 0; i < activeCollisions.length; i++) {\r\n                if (activeCollisions[i].trigger.onTriggerExit && wrapper.entity)\r\n                    activeCollisions[i].trigger.onTriggerExit(wrapper.entity);\r\n                activeCollisions[i].disengageActiveCollision(wrapper);\r\n                wrapper.disengageActiveCollision(activeCollisions[i]);\r\n            }\r\n        };\r\n        TriggerSystem.disengageCollision = function (t1, t2) {\r\n            t1.disengageActiveCollision(t2);\r\n            t2.disengageActiveCollision(t1);\r\n            if (t1.trigger.onTriggerExit && t2.entity)\r\n                t1.trigger.onTriggerExit(t2.entity);\r\n            if (t2.trigger.onTriggerExit && t1.entity)\r\n                t2.trigger.onTriggerExit(t1.entity);\r\n        };\r\n        TriggerSystem.engageCollision = function (t1, t2) {\r\n            t1.engageCollision(t2);\r\n            t2.engageCollision(t1);\r\n            if (t1.trigger.onTriggerEnter && t2.entity)\r\n                t1.trigger.onTriggerEnter(t2.entity);\r\n            if (t2.trigger.onTriggerEnter && t1.entity)\r\n                t2.trigger.onTriggerEnter(t1.entity);\r\n        };\r\n        TriggerSystem.prototype.checkCollisionAgainstCamera = function (wrapper) {\r\n            var wereColliding = wrapper.hasActiveCollision(this._cameraTriggerWrapper);\r\n            var areColliding = TriggerSystem.areColliding(wrapper, this._cameraTriggerWrapper);\r\n            if (wereColliding && !areColliding) {\r\n                wrapper.disengageActiveCollision(this._cameraTriggerWrapper);\r\n                if (wrapper.trigger.onCameraExit)\r\n                    wrapper.trigger.onCameraExit();\r\n            }\r\n            else if (!wereColliding && areColliding) {\r\n                wrapper.engageCollision(this._cameraTriggerWrapper);\r\n                if (wrapper.trigger.onCameraEnter)\r\n                    wrapper.trigger.onCameraEnter();\r\n            }\r\n        };\r\n        TriggerSystem.prototype.checkCollisionAgainstOtherTriggers = function (wrapper) {\r\n            for (var key in this._triggers) {\r\n                if (this._triggers.hasOwnProperty(key)) {\r\n                    if (key != wrapper.uuid && this._triggers[key].trigger.enabled) {\r\n                        if (TriggerSystem.canTriggersCollide(wrapper, this._triggers[key])) {\r\n                            var wereColliding = wrapper.hasActiveCollision(this._triggers[key]);\r\n                            var areColliding = TriggerSystem.areColliding(wrapper, this._triggers[key]);\r\n                            if (wereColliding && !areColliding)\r\n                                TriggerSystem.disengageCollision(wrapper, this._triggers[key]);\r\n                            else if (!wereColliding && areColliding)\r\n                                TriggerSystem.engageCollision(wrapper, this._triggers[key]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        TriggerSystem.canTriggersCollide = function (t1, t2) {\r\n            if (t1.trigger.triggeredByLayer == 0)\r\n                return true;\r\n            return (t2.trigger.layer & t1.trigger.triggeredByLayer) != 0;\r\n        };\r\n        TriggerSystem.areColliding = function (t1, t2) {\r\n            if (t1.getShape() instanceof TriggerBoxShape &&\r\n                t2.getShape() instanceof TriggerBoxShape) {\r\n                return TriggerSystem.areCollidingAABB(t1.getGlobalPosition(), t1.getShape(), t2.getGlobalPosition(), t2.getShape());\r\n            }\r\n            else if (t1.getShape() instanceof TriggerSphereShape &&\r\n                t2.getShape() instanceof TriggerSphereShape) {\r\n                return TriggerSystem.areCollidingSphere(t1.getGlobalPosition(), t1.getShape(), t2.getGlobalPosition(), t2.getShape());\r\n            }\r\n            else if (t1.getShape() instanceof TriggerBoxShape &&\r\n                t2.getShape() instanceof TriggerSphereShape) {\r\n                return TriggerSystem.areCollidingAABBSphere(t1.getGlobalPosition(), t1.getShape(), t2.getGlobalPosition(), t2.getShape());\r\n            }\r\n            else if (t1.getShape() instanceof TriggerSphereShape &&\r\n                t2.getShape() instanceof TriggerBoxShape) {\r\n                return TriggerSystem.areCollidingAABBSphere(t2.getGlobalPosition(), t2.getShape(), t1.getGlobalPosition(), t1.getShape());\r\n            }\r\n            return false;\r\n        };\r\n        TriggerSystem.areCollidingAABB = function (t1GlobalPosition, t1Shape, t2GlobalPosition, t2Shape) {\r\n            var t1 = TriggerSystem.getBoxShapeValues(t1GlobalPosition, t1Shape);\r\n            var t2 = TriggerSystem.getBoxShapeValues(t2GlobalPosition, t2Shape);\r\n            return (t1.min.x <= t2.max.x &&\r\n                t1.max.x >= t2.min.x &&\r\n                t1.min.y <= t2.max.y && t1.max.y >= t2.min.y &&\r\n                t1.min.z <= t2.max.z && t1.max.z >= t2.min.z);\r\n        };\r\n        TriggerSystem.areCollidingSphere = function (t1GlobalPosition, t1Shape, t2GlobalPosition, t2Shape) {\r\n            var sqDist = Vector3.DistanceSquared(t1GlobalPosition.add(t1Shape.position), t2GlobalPosition.add(t2Shape.position));\r\n            return (sqDist < t1Shape.radius * t1Shape.radius + t2Shape.radius * t2Shape.radius);\r\n        };\r\n        TriggerSystem.areCollidingAABBSphere = function (t1GlobalPosition, t1Shape, t2GlobalPosition, t2Shape) {\r\n            var box = TriggerSystem.getBoxShapeValues(t1GlobalPosition, t1Shape);\r\n            var sphere = {\r\n                center: t2GlobalPosition.add(t2Shape.position),\r\n                radius: t2Shape.radius\r\n            };\r\n            var dmin = 0;\r\n            if (sphere.center.x < box.min.x)\r\n                dmin += (box.min.x - sphere.center.x) * (box.min.x - sphere.center.x);\r\n            if (sphere.center.x > box.max.x)\r\n                dmin += (sphere.center.x - box.max.x) * (sphere.center.x - box.max.x);\r\n            if (sphere.center.y < box.min.y)\r\n                dmin += (box.min.y - sphere.center.y) * (box.min.y - sphere.center.y);\r\n            if (sphere.center.y > box.max.y)\r\n                dmin += (sphere.center.y - box.max.y) * (sphere.center.y - box.max.y);\r\n            if (sphere.center.z < box.min.z)\r\n                dmin += (box.min.z - sphere.center.z) * (box.min.z - sphere.center.z);\r\n            if (sphere.center.z > box.max.z)\r\n                dmin += (sphere.center.z - box.max.z) * (sphere.center.z - box.max.z);\r\n            return dmin < sphere.radius * sphere.radius;\r\n        };\r\n        TriggerSystem.getBoxShapeValues = function (entityGlobalPosition, shape) {\r\n            var center = entityGlobalPosition.add(shape.position);\r\n            return {\r\n                center: center,\r\n                min: center.subtract(shape.size.scale(0.5)),\r\n                max: center.add(shape.size.scale(0.5))\r\n            };\r\n        };\r\n        TriggerSystem._instance = null;\r\n        return TriggerSystem;\r\n    }());\r\n    exports.TriggerSystem = TriggerSystem;\r\n    var TriggerWrapper = /** @class */ (function () {\r\n        function TriggerWrapper(entity) {\r\n            this.wasEnabled = true;\r\n            this._uuid = '';\r\n            this._collidingWith = {};\r\n            this._isDebug = false;\r\n            this._debugEntity = null;\r\n            this._entity = entity;\r\n            if (entity) {\r\n                this._trigger = entity.getComponent(TriggerComponent);\r\n                this._uuid = entity.uuid;\r\n                this._isDebug = this._trigger.debugEnabled;\r\n                if (this._isDebug) {\r\n                    this.addDebugEntity();\r\n                }\r\n            }\r\n        }\r\n        Object.defineProperty(TriggerWrapper.prototype, \"entity\", {\r\n            get: function () {\r\n                return this._entity;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(TriggerWrapper.prototype, \"trigger\", {\r\n            get: function () {\r\n                return this._trigger;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(TriggerWrapper.prototype, \"uuid\", {\r\n            get: function () {\r\n                return this._uuid;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        TriggerWrapper.prototype.getGlobalPosition = function () {\r\n            if (this._entity)\r\n                return TriggerWrapper.getEntityWorldPosition(this._entity);\r\n            return Vector3.Zero();\r\n        };\r\n        TriggerWrapper.prototype.getShape = function () {\r\n            return this._trigger.shape;\r\n        };\r\n        TriggerWrapper.prototype.isInEngine = function () {\r\n            return this._entity != null && this._entity.isAddedToEngine();\r\n        };\r\n        TriggerWrapper.prototype.getActiveCollisions = function () {\r\n            var ret = [];\r\n            for (var key in this._collidingWith) {\r\n                if (this._collidingWith.hasOwnProperty(key)) {\r\n                    ret.push(this._collidingWith[key]);\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n        TriggerWrapper.prototype.hasActiveCollision = function (other) {\r\n            return (this._collidingWith[other.uuid] != undefined &&\r\n                this._collidingWith[other.uuid] != null);\r\n        };\r\n        TriggerWrapper.prototype.disengageActiveCollision = function (other) {\r\n            delete this._collidingWith[other.uuid];\r\n        };\r\n        TriggerWrapper.prototype.engageCollision = function (other) {\r\n            this._collidingWith[other.uuid] = other;\r\n        };\r\n        TriggerWrapper.prototype.isDebugging = function () {\r\n            return this._isDebug;\r\n        };\r\n        TriggerWrapper.prototype.addDebugEntity = function () {\r\n            if (!TriggerWrapper._debugMaterial) {\r\n                TriggerWrapper._debugMaterial = new Material();\r\n                TriggerWrapper._debugMaterial.alphaTest = 0.5;\r\n            }\r\n            if (this._debugEntity == null) {\r\n                this._debugEntity = new Entity();\r\n                var transform = new Transform();\r\n                this._debugEntity.addComponent(transform);\r\n                this._debugEntity.addComponent(TriggerWrapper._debugMaterial);\r\n                if (this.getShape() instanceof TriggerBoxShape) {\r\n                    var shape = new BoxShape();\r\n                    shape.withCollisions = false;\r\n                    this._debugEntity.addComponent(shape);\r\n                    transform.scale = this.getShape().size;\r\n                }\r\n                if (this.getShape() instanceof TriggerSphereShape) {\r\n                    var shape = new SphereShape();\r\n                    shape.withCollisions = false;\r\n                    this._debugEntity.addComponent(shape);\r\n                    var rad = this.getShape().radius;\r\n                    transform.scale = new Vector3(rad, rad, rad);\r\n                }\r\n            }\r\n            engine.addEntity(this._debugEntity);\r\n        };\r\n        TriggerWrapper.prototype.removeDebugEntity = function () {\r\n            if (this._debugEntity != null)\r\n                engine.removeEntity(this._debugEntity);\r\n        };\r\n        TriggerWrapper.prototype.updateDebugEntity = function () {\r\n            if (this._debugEntity) {\r\n                this._debugEntity.getComponent(Transform).position = this.getGlobalPosition().add(this.getShape().position);\r\n            }\r\n        };\r\n        TriggerWrapper.getEntityWorldPosition = function (entity) {\r\n            var entityPosition = entity.hasComponent(Transform)\r\n                ? entity.getComponent(Transform).position\r\n                : Vector3.Zero();\r\n            var parentEntity = entity.getParent();\r\n            if (parentEntity != null) {\r\n                var parentRotation = parentEntity.hasComponent(Transform)\r\n                    ? parentEntity.getComponent(Transform).rotation\r\n                    : Quaternion.Identity;\r\n                return this.getEntityWorldPosition(parentEntity).add(entityPosition.rotate(parentRotation));\r\n            }\r\n            return entityPosition;\r\n        };\r\n        TriggerWrapper._debugMaterial = null;\r\n        return TriggerWrapper;\r\n    }());\r\n    var CameraTrigger = /** @class */ (function (_super) {\r\n        __extends(CameraTrigger, _super);\r\n        function CameraTrigger(shape) {\r\n            var _this = _super.call(this) || this;\r\n            _this._shape = shape;\r\n            _this._uuid = 'cameraTrigger';\r\n            return _this;\r\n        }\r\n        CameraTrigger.prototype.getGlobalPosition = function () {\r\n            return Camera.instance.position;\r\n        };\r\n        CameraTrigger.prototype.getShape = function () {\r\n            return this._shape;\r\n        };\r\n        CameraTrigger.prototype.setShape = function (shape) {\r\n            this._shape = shape;\r\n        };\r\n        CameraTrigger.prototype.isInEngine = function () {\r\n            return false;\r\n        };\r\n        CameraTrigger.prototype.hasActiveCollision = function (other) {\r\n            return false;\r\n        };\r\n        CameraTrigger.prototype.disengageActiveCollision = function (other) { };\r\n        CameraTrigger.prototype.engageCollision = function (other) { };\r\n        CameraTrigger.prototype.isDebugging = function () {\r\n            return false;\r\n        };\r\n        return CameraTrigger;\r\n    }(TriggerWrapper));\r\n    var TriggerComponent = /** @class */ (function () {\r\n        /**\r\n         *\r\n         * @param shape shape of the triggering collider area\r\n         * @param layer layer of the Trigger, useful to discriminate between trigger events. You can set multiple layers by using a | symbol.\r\n         * @param triggeredByLayer against which layers to check collisions\r\n         * @param onTriggerEnter callback when an entity of a valid layer enters the trigger area\r\n         * @param onTriggerExit callback when an entity of a valid layer leaves the trigger area\r\n         * @param onCameraEnter callback when the player enters the trigger area\r\n         * @param onCameraExit callback when the player leaves the trigger area\r\n         * @param enableDebug when true makes the trigger area visible for debug purposes.\r\n         */\r\n        function TriggerComponent(shape, layer, triggeredByLayer, onTriggerEnter, onTriggerExit, onCameraEnter, onCameraExit, enableDebug) {\r\n            if (layer === void 0) { layer = 0; }\r\n            if (triggeredByLayer === void 0) { triggeredByLayer = 0; }\r\n            if (enableDebug === void 0) { enableDebug = false; }\r\n            /**\r\n             * is trigger enable?\r\n             */\r\n            this.enabled = true;\r\n            /**\r\n             * bit layer of the Tigger (usefull to discriminate between trigger events)\r\n             */\r\n            this.layer = 0;\r\n            /**\r\n             * against which layer are we going to check trigger's collisions\r\n             */\r\n            this.triggeredByLayer = 0;\r\n            TriggerSystem.createAndAddToEngine();\r\n            this.shape = shape;\r\n            this.layer = layer;\r\n            this.triggeredByLayer = triggeredByLayer;\r\n            this.onTriggerEnter = onTriggerEnter;\r\n            this.onTriggerExit = onTriggerExit;\r\n            this.onCameraEnter = onCameraEnter;\r\n            this.onCameraExit = onCameraExit;\r\n            this._debugEnabled = enableDebug;\r\n        }\r\n        Object.defineProperty(TriggerComponent.prototype, \"debugEnabled\", {\r\n            /**\r\n             * get if debug is enabled\r\n             */\r\n            get: function () {\r\n                return this._debugEnabled;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        TriggerComponent = __decorate([\r\n            Component('triggerComponent'),\r\n            __metadata(\"design:paramtypes\", [Object, Number, Number, Function, Function, Function, Function, Boolean])\r\n        ], TriggerComponent);\r\n        return TriggerComponent;\r\n    }());\r\n    exports.TriggerComponent = TriggerComponent;\r\n    var TriggerBoxShape = /** @class */ (function () {\r\n        function TriggerBoxShape(size, position) {\r\n            this.size = size;\r\n            this.position = position;\r\n        }\r\n        return TriggerBoxShape;\r\n    }());\r\n    exports.TriggerBoxShape = TriggerBoxShape;\r\n    var TriggerSphereShape = /** @class */ (function () {\r\n        function TriggerSphereShape(radius, position) {\r\n            this.radius = radius;\r\n            this.position = position;\r\n        }\r\n        return TriggerSphereShape;\r\n    }());\r\n    exports.TriggerSphereShape = TriggerSphereShape;\r\n});\r\ndefine(\"node_modules/decentraland-ecs-utils/actionsSequenceSystem/actionsSequenceSystem\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.ActionsSequenceSystem = void 0;\r\n    var ActionsSequenceSystem = /** @class */ (function () {\r\n        function ActionsSequenceSystem(sequenceBuilt) {\r\n            this.beginSequenceNode = null;\r\n            this.currentSequenceNode = null;\r\n            this.running = false;\r\n            this.started = false;\r\n            if (sequenceBuilt) {\r\n                this.startSequence(sequenceBuilt);\r\n            }\r\n        }\r\n        ActionsSequenceSystem.prototype.startSequence = function (sequenceBuilt) {\r\n            this.beginSequenceNode = sequenceBuilt.beginSequenceNode;\r\n            this.currentSequenceNode = this.beginSequenceNode;\r\n            this.running = true;\r\n            this.started = false;\r\n        };\r\n        ActionsSequenceSystem.prototype.setOnFinishCallback = function (onFinishCallback) {\r\n            this.onFinishCallback = onFinishCallback;\r\n        };\r\n        ActionsSequenceSystem.prototype.isRunning = function () {\r\n            return this.running;\r\n        };\r\n        ActionsSequenceSystem.prototype.stop = function () {\r\n            this.running = false;\r\n        };\r\n        ActionsSequenceSystem.prototype.resume = function () {\r\n            if (this.beginSequenceNode != null) {\r\n                this.running = true;\r\n            }\r\n        };\r\n        ActionsSequenceSystem.prototype.reset = function () {\r\n            this.currentSequenceNode = this.beginSequenceNode;\r\n            this.running = true;\r\n            this.started = false;\r\n        };\r\n        ActionsSequenceSystem.prototype.getRunningAction = function () {\r\n            var currentNode = this.currentSequenceNode;\r\n            if (this.currentSequenceNode instanceof SubSequenceNode) {\r\n                do {\r\n                    currentNode = currentNode.currentInnerSequence;\r\n                } while (currentNode instanceof SubSequenceNode);\r\n            }\r\n            return currentNode.action;\r\n        };\r\n        ActionsSequenceSystem.prototype.update = function (dt) {\r\n            if (this.running) {\r\n                if (!this.started) {\r\n                    ;\r\n                    this.currentSequenceNode.onStart();\r\n                    this.started = true;\r\n                }\r\n                else {\r\n                    if (!this.currentSequenceNode.hasFinish()) {\r\n                        ;\r\n                        this.currentSequenceNode.update(dt);\r\n                    }\r\n                    else {\r\n                        ;\r\n                        this.currentSequenceNode.onFinish();\r\n                        this.currentSequenceNode = this\r\n                            .currentSequenceNode.next;\r\n                        if (this.currentSequenceNode) {\r\n                            this.currentSequenceNode.onStart();\r\n                        }\r\n                        else {\r\n                            this.running = false;\r\n                            if (this.onFinishCallback)\r\n                                this.onFinishCallback();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        return ActionsSequenceSystem;\r\n    }());\r\n    exports.ActionsSequenceSystem = ActionsSequenceSystem;\r\n    (function (ActionsSequenceSystem) {\r\n        var SequenceBuilder = /** @class */ (function () {\r\n            function SequenceBuilder() {\r\n                this.currentSequenceNode = null;\r\n                this.beginSequenceNode = null;\r\n                this.whileNodeStack = [];\r\n            }\r\n            SequenceBuilder.prototype.then = function (action) {\r\n                if (this.currentSequenceNode == null) {\r\n                    this.currentSequenceNode = new SequenceNode();\r\n                    this.currentSequenceNode.action = action;\r\n                    this.beginSequenceNode = this.currentSequenceNode;\r\n                }\r\n                else {\r\n                    var next = new SequenceNode();\r\n                    next.action = action;\r\n                    this.currentSequenceNode = this.currentSequenceNode.then(next);\r\n                }\r\n                return this;\r\n            };\r\n            SequenceBuilder.prototype.if = function (condition) {\r\n                var ifSeq = new IfSequenceNode(condition);\r\n                if (this.currentSequenceNode == null) {\r\n                    this.currentSequenceNode = ifSeq;\r\n                    this.beginSequenceNode = ifSeq;\r\n                }\r\n                else {\r\n                    this.currentSequenceNode = this.currentSequenceNode.then(ifSeq);\r\n                }\r\n                return this;\r\n            };\r\n            SequenceBuilder.prototype.else = function () {\r\n                var seq = this.currentSequenceNode.getSequence();\r\n                if (seq instanceof IfSequenceNode) {\r\n                    seq.closed = true;\r\n                    var elseSeq = new ElseSequenceNode(seq);\r\n                    this.currentSequenceNode = this\r\n                        .currentSequenceNode.then(elseSeq);\r\n                }\r\n                else {\r\n                    throw new Error('IF statement is needed to be called before ELSE statement.');\r\n                }\r\n                return this;\r\n            };\r\n            SequenceBuilder.prototype.endIf = function () {\r\n                var seq = this.currentSequenceNode.getSequence();\r\n                if (seq instanceof IfSequenceNode || seq instanceof ElseSequenceNode) {\r\n                    seq.closed = true;\r\n                }\r\n                else {\r\n                    throw new Error('IF statement is needed to be called before ENDIF statement.');\r\n                }\r\n                return this;\r\n            };\r\n            SequenceBuilder.prototype.while = function (condition) {\r\n                var whileSeq = new WhileSequenceNode(condition);\r\n                if (this.currentSequenceNode == null) {\r\n                    this.currentSequenceNode = whileSeq;\r\n                    this.beginSequenceNode = whileSeq;\r\n                }\r\n                else {\r\n                    this.currentSequenceNode = this.currentSequenceNode.then(whileSeq);\r\n                }\r\n                this.whileNodeStack.push(whileSeq);\r\n                return this;\r\n            };\r\n            SequenceBuilder.prototype.endWhile = function () {\r\n                var seq = this.currentSequenceNode.getSequence();\r\n                if (seq instanceof WhileSequenceNode) {\r\n                    seq.closed = true;\r\n                    if (this.whileNodeStack.length > 0) {\r\n                        this.whileNodeStack.splice(this.whileNodeStack.length - 1, 1);\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('WHILE statement is needed to be called before ENDWHILE statement.');\r\n                }\r\n                return this;\r\n            };\r\n            SequenceBuilder.prototype.breakWhile = function () {\r\n                if (this.whileNodeStack.length > 0) {\r\n                    this.currentSequenceNode = this\r\n                        .currentSequenceNode.then(new BreakWhileSequenceNode(this.whileNodeStack[this.whileNodeStack.length - 1]));\r\n                }\r\n                else {\r\n                    throw new Error('WHILE statement is needed to be called before BREAKWHILE statement.');\r\n                }\r\n                return this;\r\n            };\r\n            return SequenceBuilder;\r\n        }());\r\n        ActionsSequenceSystem.SequenceBuilder = SequenceBuilder;\r\n    })(ActionsSequenceSystem = exports.ActionsSequenceSystem || (exports.ActionsSequenceSystem = {}));\r\n    exports.ActionsSequenceSystem = ActionsSequenceSystem;\r\n    var SequenceNode = /** @class */ (function () {\r\n        function SequenceNode() {\r\n            this.action = null;\r\n            this.next = null;\r\n        }\r\n        SequenceNode.prototype.then = function (next) {\r\n            this.next = next;\r\n            return next;\r\n        };\r\n        SequenceNode.prototype.onStart = function () {\r\n            if (this.action)\r\n                this.action.onStart();\r\n        };\r\n        SequenceNode.prototype.update = function (dt) {\r\n            if (this.action)\r\n                this.action.update(dt);\r\n        };\r\n        SequenceNode.prototype.onFinish = function () {\r\n            if (this.action)\r\n                this.action.onFinish();\r\n        };\r\n        SequenceNode.prototype.hasFinish = function () {\r\n            if (this.action)\r\n                return this.action.hasFinished;\r\n            else\r\n                return true;\r\n        };\r\n        SequenceNode.prototype.getSequence = function () {\r\n            return this;\r\n        };\r\n        return SequenceNode;\r\n    }());\r\n    var SubSequenceNode = /** @class */ (function (_super) {\r\n        __extends(SubSequenceNode, _super);\r\n        function SubSequenceNode() {\r\n            var _this = _super !== null && _super.apply(this, arguments) || this;\r\n            _this.currentInnerSequence = null;\r\n            _this.startingInnerSequence = null;\r\n            _this.closed = false;\r\n            return _this;\r\n        }\r\n        SubSequenceNode.prototype.then = function (next) {\r\n            if (this.currentInnerSequence == null) {\r\n                this.currentInnerSequence = next;\r\n                this.startingInnerSequence = next;\r\n            }\r\n            else {\r\n                if (this.closed) {\r\n                    this.next = next;\r\n                    return next;\r\n                }\r\n                else {\r\n                    this.currentInnerSequence = this.currentInnerSequence.then(next);\r\n                }\r\n            }\r\n            return this;\r\n        };\r\n        SubSequenceNode.prototype.onStart = function () {\r\n            this.currentInnerSequence = this.startingInnerSequence;\r\n            if (this.currentInnerSequence)\r\n                this.currentInnerSequence.onStart();\r\n        };\r\n        SubSequenceNode.prototype.update = function (dt) {\r\n            if (this.currentInnerSequence) {\r\n                if (!this.currentInnerSequence.hasFinish()) {\r\n                    this.currentInnerSequence.update(dt);\r\n                }\r\n                else {\r\n                    this.currentInnerSequence.onFinish();\r\n                    this.currentInnerSequence = this.currentInnerSequence.next;\r\n                    if (this.currentInnerSequence)\r\n                        this.currentInnerSequence.onStart();\r\n                }\r\n            }\r\n        };\r\n        SubSequenceNode.prototype.onFinish = function () {\r\n            if (this.currentInnerSequence)\r\n                this.currentInnerSequence.onFinish();\r\n        };\r\n        SubSequenceNode.prototype.hasFinish = function () {\r\n            return this.currentInnerSequence == null;\r\n        };\r\n        SubSequenceNode.prototype.getSequence = function () {\r\n            if (this.currentInnerSequence) {\r\n                var innerSeq = this.currentInnerSequence.getSequence();\r\n                if (innerSeq instanceof SubSequenceNode) {\r\n                    if (!innerSeq.closed) {\r\n                        return innerSeq;\r\n                    }\r\n                }\r\n            }\r\n            return this;\r\n        };\r\n        return SubSequenceNode;\r\n    }(SequenceNode));\r\n    var IfSequenceNode = /** @class */ (function (_super) {\r\n        __extends(IfSequenceNode, _super);\r\n        function IfSequenceNode(condition) {\r\n            var _this = _super.call(this) || this;\r\n            _this.result = false;\r\n            _this.condition = condition;\r\n            return _this;\r\n        }\r\n        IfSequenceNode.prototype.onStart = function () {\r\n            this.result = this.condition();\r\n            if (this.result)\r\n                _super.prototype.onStart.call(this);\r\n            else\r\n                this.currentInnerSequence = null;\r\n        };\r\n        return IfSequenceNode;\r\n    }(SubSequenceNode));\r\n    var ElseSequenceNode = /** @class */ (function (_super) {\r\n        __extends(ElseSequenceNode, _super);\r\n        function ElseSequenceNode(ifSequence) {\r\n            var _this = _super.call(this) || this;\r\n            _this.ifSequence = null;\r\n            _this.ifSequence = ifSequence;\r\n            return _this;\r\n        }\r\n        ElseSequenceNode.prototype.onStart = function () {\r\n            if (this.ifSequence && !this.ifSequence.result)\r\n                _super.prototype.onStart.call(this);\r\n            else\r\n                this.currentInnerSequence = null;\r\n        };\r\n        return ElseSequenceNode;\r\n    }(SubSequenceNode));\r\n    var WhileSequenceNode = /** @class */ (function (_super) {\r\n        __extends(WhileSequenceNode, _super);\r\n        function WhileSequenceNode(condition) {\r\n            var _this = _super.call(this) || this;\r\n            _this.breakWhile = false;\r\n            _this.condition = condition;\r\n            return _this;\r\n        }\r\n        WhileSequenceNode.prototype.onStart = function () {\r\n            this.breakWhile = false;\r\n            if (this.condition())\r\n                _super.prototype.onStart.call(this);\r\n            else\r\n                this.currentInnerSequence = null;\r\n        };\r\n        WhileSequenceNode.prototype.update = function (dt) {\r\n            if (this.currentInnerSequence) {\r\n                if (!this.currentInnerSequence.hasFinish()) {\r\n                    this.currentInnerSequence.update(dt);\r\n                }\r\n                else {\r\n                    this.currentInnerSequence.onFinish();\r\n                    this.currentInnerSequence = this.currentInnerSequence.next;\r\n                    if (this.currentInnerSequence == null)\r\n                        this.currentInnerSequence = this.startingInnerSequence;\r\n                    if (this.currentInnerSequence)\r\n                        this.currentInnerSequence.onStart();\r\n                }\r\n            }\r\n        };\r\n        WhileSequenceNode.prototype.hasFinish = function () {\r\n            return this.breakWhile || !this.condition();\r\n        };\r\n        return WhileSequenceNode;\r\n    }(SubSequenceNode));\r\n    var BreakWhileSequenceNode = /** @class */ (function (_super) {\r\n        __extends(BreakWhileSequenceNode, _super);\r\n        function BreakWhileSequenceNode(whileNode) {\r\n            var _this = _super.call(this) || this;\r\n            _this.whileNode = whileNode;\r\n            return _this;\r\n        }\r\n        BreakWhileSequenceNode.prototype.onStart = function () {\r\n            this.whileNode.breakWhile = true;\r\n        };\r\n        return BreakWhileSequenceNode;\r\n    }(SequenceNode));\r\n});\r\ndefine(\"node_modules/decentraland-ecs-utils/index\", [\"require\", \"exports\", \"node_modules/decentraland-ecs-utils/transform/component/move\", \"node_modules/decentraland-ecs-utils/transform/component/rotate\", \"node_modules/decentraland-ecs-utils/transform/component/scale\", \"node_modules/decentraland-ecs-utils/transform/component/followpath\", \"node_modules/decentraland-ecs-utils/transform/component/keeprotating\", \"node_modules/decentraland-ecs-utils/transform/system/transfromSystem\", \"node_modules/decentraland-ecs-utils/transform/math/interpolation\", \"node_modules/decentraland-ecs-utils/toggle/toggleComponent\", \"node_modules/decentraland-ecs-utils/timer/component/delay\", \"node_modules/decentraland-ecs-utils/timer/component/expire\", \"node_modules/decentraland-ecs-utils/timer/component/interval\", \"node_modules/decentraland-ecs-utils/triggers/triggerSystem\", \"node_modules/decentraland-ecs-utils/actionsSequenceSystem/actionsSequenceSystem\"], function (require, exports, move_2, rotate_2, scale_2, followpath_2, keeprotating_2, transfromSystem_6, interpolation_4, toggleComponent_1, delay_2, expire_2, interval_2, triggerSystem_1, actionsSequenceSystem_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.default = {\r\n        TransformSystem: transfromSystem_6.TransformSystem,\r\n        MoveTransformComponent: move_2.MoveTransformComponent,\r\n        RotateTransformComponent: rotate_2.RotateTransformComponent,\r\n        ScaleTransformComponent: scale_2.ScaleTransformComponent,\r\n        FollowPathComponent: followpath_2.FollowPathComponent,\r\n        KeepRotatingComponent: keeprotating_2.KeepRotatingComponent,\r\n        Interpolate: interpolation_4.Interpolate,\r\n        InterpolationType: interpolation_4.InterpolationType,\r\n        ToggleComponent: toggleComponent_1.ToggleComponent,\r\n        ToggleState: toggleComponent_1.ToggleState,\r\n        Delay: delay_2.Delay,\r\n        ExpireIn: expire_2.ExpireIn,\r\n        Interval: interval_2.Interval,\r\n        TriggerComponent: triggerSystem_1.TriggerComponent,\r\n        TriggerSystem: triggerSystem_1.TriggerSystem,\r\n        TriggerSphereShape: triggerSystem_1.TriggerSphereShape,\r\n        TriggerBoxShape: triggerSystem_1.TriggerBoxShape,\r\n        ActionsSequenceSystem: actionsSequenceSystem_1.ActionsSequenceSystem\r\n    };\r\n});\r\ndefine(\"src/modules/npcRobot\", [\"require\", \"exports\", \"node_modules/decentraland-ecs-utils/index\"], function (require, exports, index_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.Robot = exports.RobotID = void 0;\r\n    // For dialog windows\r\n    var RobotID;\r\n    (function (RobotID) {\r\n        RobotID[RobotID[\"Main\"] = 0] = \"Main\";\r\n        RobotID[RobotID[\"Shell\"] = 1] = \"Shell\";\r\n        RobotID[RobotID[\"Agora\"] = 2] = \"Agora\";\r\n        RobotID[RobotID[\"Garden\"] = 3] = \"Garden\";\r\n        RobotID[RobotID[\"Trade\"] = 4] = \"Trade\";\r\n        RobotID[RobotID[\"Artichoke\"] = 5] = \"Artichoke\";\r\n        RobotID[RobotID[\"Whale\"] = 6] = \"Whale\";\r\n    })(RobotID = exports.RobotID || (exports.RobotID = {}));\r\n    var Robot = /** @class */ (function (_super) {\r\n        __extends(Robot, _super);\r\n        function Robot(robotModel, robotTransform, robotID, robotSound) {\r\n            var _this = _super.call(this) || this;\r\n            engine.addEntity(_this);\r\n            _this.addComponent(robotModel);\r\n            _this.addComponent(robotTransform);\r\n            _this.robotID = robotID;\r\n            // Sound\r\n            _this.addComponent(new AudioSource(robotSound));\r\n            // Animations\r\n            _this.addComponent(new Animator());\r\n            _this.getComponent(Animator).addClip(new AnimationState(\"Idle\", { looping: true }));\r\n            _this.getComponent(Animator).addClip(new AnimationState(\"Talk\", { looping: true }));\r\n            _this.getComponent(Animator).getClip(\"Idle\").play();\r\n            _this.getComponent(Animator).addClip(new AnimationState(\"Hello\", { looping: false }));\r\n            _this.getComponent(Animator).addClip(new AnimationState(\"Goodbye\", { looping: false }));\r\n            _this.getComponent(Animator).getClip(\"Idle\").play();\r\n            return _this;\r\n        }\r\n        Robot.prototype.playIdle = function () {\r\n            this.stopAnimations();\r\n            this.getComponent(Animator).getClip(\"Idle\").play();\r\n        };\r\n        Robot.prototype.playTalk = function () {\r\n            this.stopAnimations();\r\n            this.getComponent(Animator).getClip(\"Talk\").play();\r\n        };\r\n        Robot.prototype.playHello = function () {\r\n            var _this = this;\r\n            this.stopAnimations();\r\n            this.getComponent(Animator).getClip(\"Hello\").play();\r\n            this.addComponentOrReplace(new index_1.default.Delay(2000, function () {\r\n                _this.stopAnimations();\r\n                _this.getComponent(Animator).getClip(\"Talk\").play();\r\n            }));\r\n        };\r\n        Robot.prototype.playGoodbye = function () {\r\n            var _this = this;\r\n            this.stopAnimations();\r\n            this.getComponent(Animator).getClip(\"Goodbye\").play();\r\n            this.addComponentOrReplace(new index_1.default.Delay(2000, function () {\r\n                _this.stopAnimations();\r\n                _this.getComponent(Animator).getClip(\"Idle\").play();\r\n            }));\r\n        };\r\n        Robot.prototype.stopAnimations = function () {\r\n            this.getComponent(Animator).getClip(\"Idle\").stop();\r\n            this.getComponent(Animator).getClip(\"Talk\").stop();\r\n            this.getComponent(Animator).getClip(\"Hello\").stop();\r\n            this.getComponent(Animator).getClip(\"Goodbye\").stop();\r\n        };\r\n        return Robot;\r\n    }(Entity));\r\n    exports.Robot = Robot;\r\n});\r\ndefine(\"src/resources\", [\"require\", \"exports\", \"node_modules/decentraland-ecs-utils/index\"], function (require, exports, index_2) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.default = {\r\n        sounds: {\r\n            robots: {\r\n                alice: new AudioClip('sounds/alice.mp3'),\r\n                bela: new AudioClip('sounds/bela.mp3'),\r\n                betty: new AudioClip('sounds/betty.mp3'),\r\n                bob: new AudioClip('sounds/bob.mp3'),\r\n                charlie: new AudioClip('sounds/charlie.mp3'),\r\n                marsha: new AudioClip('sounds/marsha.mp3'),\r\n                ron: new AudioClip('sounds/ron.mp3'),\r\n            },\r\n            ui: {\r\n                navigationForward: new AudioClip('sounds/navigationForward.mp3'),\r\n                navigationBackward: new AudioClip('sounds/navigationBackward.mp3'),\r\n            },\r\n            piano: {\r\n                whiteKeys: {\r\n                    c3: new AudioClip('sounds/piano/c3.mp3'),\r\n                    d3: new AudioClip('sounds/piano/d3.mp3'),\r\n                    e3: new AudioClip('sounds/piano/e3.mp3'),\r\n                    f3: new AudioClip('sounds/piano/f3.mp3'),\r\n                    g3: new AudioClip('sounds/piano/g3.mp3'),\r\n                    a3: new AudioClip('sounds/piano/a3.mp3'),\r\n                    b3: new AudioClip('sounds/piano/b3.mp3'),\r\n                    c4: new AudioClip('sounds/piano/c4.mp3'),\r\n                    d4: new AudioClip('sounds/piano/d4.mp3'),\r\n                    e4: new AudioClip('sounds/piano/e4.mp3'),\r\n                    f4: new AudioClip('sounds/piano/f4.mp3'),\r\n                    g4: new AudioClip('sounds/piano/g4.mp3'),\r\n                    a4: new AudioClip('sounds/piano/a4.mp3'),\r\n                    b4: new AudioClip('sounds/piano/b4.mp3'),\r\n                    c5: new AudioClip('sounds/piano/c5.mp3'),\r\n                    d5: new AudioClip('sounds/piano/d5.mp3'),\r\n                    e5: new AudioClip('sounds/piano/e5.mp3'),\r\n                    f5: new AudioClip('sounds/piano/f5.mp3'),\r\n                    g5: new AudioClip('sounds/piano/g5.mp3'),\r\n                    a5: new AudioClip('sounds/piano/a5.mp3'),\r\n                    b5: new AudioClip('sounds/piano/b5.mp3'),\r\n                },\r\n                blackKeys: {\r\n                    cSharp3: new AudioClip('sounds/piano/cSharp3.mp3'),\r\n                    dSharp3: new AudioClip('sounds/piano/dSharp3.mp3'),\r\n                    fSharp3: new AudioClip('sounds/piano/fSharp3.mp3'),\r\n                    gSharp3: new AudioClip('sounds/piano/gSharp3.mp3'),\r\n                    aSharp3: new AudioClip('sounds/piano/aSharp3.mp3'),\r\n                    cSharp4: new AudioClip('sounds/piano/cSharp4.mp3'),\r\n                    dSharp4: new AudioClip('sounds/piano/dSharp4.mp3'),\r\n                    fSharp4: new AudioClip('sounds/piano/fSharp4.mp3'),\r\n                    gSharp4: new AudioClip('sounds/piano/gSharp4.mp3'),\r\n                    aSharp4: new AudioClip('sounds/piano/aSharp4.mp3'),\r\n                    cSharp5: new AudioClip('sounds/piano/cSharp5.mp3'),\r\n                    dSharp5: new AudioClip('sounds/piano/dSharp5.mp3'),\r\n                    fSharp5: new AudioClip('sounds/piano/fSharp5.mp3'),\r\n                    gSharp5: new AudioClip('sounds/piano/gSharp5.mp3'),\r\n                    aSharp5: new AudioClip('sounds/piano/aSharp5.mp3'),\r\n                },\r\n            },\r\n        },\r\n        models: {\r\n            standard: {\r\n                pianoBase: new GLTFShape(\"models/piano/pianoBase.glb\"),\r\n                muralWall: new GLTFShape(\"models/mural/muralWall.glb\"),\r\n            },\r\n            robots: {\r\n                alice: new GLTFShape('models/robots/alice.glb'),\r\n                bela: new GLTFShape('models/robots/bela.glb'),\r\n                betty: new GLTFShape('models/robots/betty.glb'),\r\n                bob: new GLTFShape('models/robots/bob.glb'),\r\n                charlie: new GLTFShape('models/robots/charlie.glb'),\r\n                marsha: new GLTFShape('models/robots/marsha.glb'),\r\n                ron: new GLTFShape('models/robots/ron.glb'),\r\n                rings: new GLTFShape('models/robots/rings.glb'),\r\n            },\r\n        },\r\n        textures: {\r\n            blank: new Texture('images/ui/blank.png'),\r\n            buttonE: new Texture('images/ui/buttonE.png'),\r\n            buttonF: new Texture('images/ui/buttonF.png'),\r\n            leftClickIcon: new Texture('images/ui/leftClickIcon.png'),\r\n            textPanel: new Texture('images/ui/textPanel.png'),\r\n            nftPanel: new Texture('images/ui/nftPanel.png'),\r\n            closeButton: new Texture('images/ui/closeButton.png'),\r\n            placeholder: new Texture('images/ui/placeholder.png'),\r\n        },\r\n        trigger: {\r\n            triggerShape: new index_2.default.TriggerSphereShape(8, Vector3.Zero()),\r\n            triggerWhitePianoKey: new index_2.default.TriggerBoxShape(new Vector3(0.35, 3, 2), new Vector3(0, 0, -1)),\r\n            triggerBlackPianoKey: new index_2.default.TriggerBoxShape(new Vector3(0.35, 3, 2), Vector3.Zero()),\r\n        },\r\n    };\r\n});\r\ndefine(\"src/modules/npcFaceUserSystem\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.addFaceUserSystem = exports.TrackUserSlerp = void 0;\r\n    var TrackUserSlerp = /** @class */ (function () {\r\n        function TrackUserSlerp() {\r\n            this.fraction = 0;\r\n        }\r\n        TrackUserSlerp = __decorate([\r\n            Component(\"trackUserSlerp\")\r\n        ], TrackUserSlerp);\r\n        return TrackUserSlerp;\r\n    }());\r\n    exports.TrackUserSlerp = TrackUserSlerp;\r\n    var currentCameraPosition = new Vector3(0, 0, 0);\r\n    // Rotates robot to face the user during interaction\r\n    function addFaceUserSystem(dummyTarget) {\r\n        var FaceUserSystem = /** @class */ (function () {\r\n            function FaceUserSystem() {\r\n                this.robotGroup = engine.getComponentGroup(TrackUserSlerp);\r\n            }\r\n            FaceUserSystem.prototype.update = function (dt) {\r\n                var e_1, _a;\r\n                try {\r\n                    for (var _b = __values(this.robotGroup.entities), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                        var robot = _c.value;\r\n                        var transform = robot.getComponent(Transform);\r\n                        var trackUserSlerp = robot.getComponent(TrackUserSlerp);\r\n                        // Check if player moves\r\n                        if (currentCameraPosition.x != Camera.instance.position.x ||\r\n                            currentCameraPosition.y != Camera.instance.position.y ||\r\n                            currentCameraPosition.z != Camera.instance.position.z) {\r\n                            // Update current camera position\r\n                            currentCameraPosition.x = Camera.instance.position.x;\r\n                            currentCameraPosition.y = Camera.instance.position.y;\r\n                            currentCameraPosition.z = Camera.instance.position.z;\r\n                            trackUserSlerp.fraction = 0;\r\n                        }\r\n                        dummyTarget.getComponent(Transform).lookAt(Camera.instance.position);\r\n                        trackUserSlerp.fraction += dt / 12;\r\n                        if (trackUserSlerp.fraction < 1) {\r\n                            transform.rotation = Quaternion.Slerp(robot.getComponent(Transform).rotation, dummyTarget.getComponent(Transform).rotation, trackUserSlerp.fraction);\r\n                        }\r\n                    }\r\n                }\r\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                    }\r\n                    finally { if (e_1) throw e_1.error; }\r\n                }\r\n            };\r\n            return FaceUserSystem;\r\n        }());\r\n        engine.addSystem(new FaceUserSystem());\r\n    }\r\n    exports.addFaceUserSystem = addFaceUserSystem;\r\n});\r\ndefine(\"src/modules/npcRobotBuilder\", [\"require\", \"exports\", \"src/modules/npcDialogWindow\", \"src/modules/npcRobot\", \"src/resources\", \"node_modules/decentraland-ecs-utils/index\", \"src/modules/npcFaceUserSystem\", \"src/modules/ui\"], function (require, exports, npcDialogWindow_1, npcRobot_1, resources_1, index_3, npcFaceUserSystem_1, ui_2) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.addRobots = exports.robots = exports.dialogWindow = void 0;\r\n    /*\r\n      Main = 0 (Alice)\r\n      Shell = 1 (Ron)\r\n      Agora = 2 (Bela)\r\n      Garden = 3 (Betty)\r\n      Trade = 4 (Charlie)\r\n      Artichoke = 5 (Marsha)\r\n      Whale = 6 (Bob)\r\n    */\r\n    // UI elements\r\n    var canvas = new UICanvas();\r\n    exports.dialogWindow = new npcDialogWindow_1.DialogWindow(canvas);\r\n    // Robots\r\n    exports.robots = [];\r\n    function addRobots(dummyTarget) {\r\n        var ringShape = resources_1.default.models.robots.rings;\r\n        var alice = new npcRobot_1.Robot(resources_1.default.models.robots.alice, new Transform({\r\n            position: new Vector3(155, 2.25, 159),\r\n            rotation: Quaternion.Euler(0, 150, 0),\r\n        }), npcRobot_1.RobotID.Main, resources_1.default.sounds.robots.alice);\r\n        exports.robots.push(alice);\r\n        var aliceRings = new Entity();\r\n        aliceRings.addComponent(ringShape);\r\n        aliceRings.addComponent(new Transform({\r\n            position: new Vector3(0, -0.65, 0),\r\n        }));\r\n        aliceRings.setParent(alice);\r\n        var ron = new npcRobot_1.Robot(resources_1.default.models.robots.ron, new Transform({\r\n            position: new Vector3(297, 11.365, 123),\r\n            rotation: Quaternion.Euler(0, -110, 0),\r\n        }), npcRobot_1.RobotID.Shell, resources_1.default.sounds.robots.ron);\r\n        exports.robots.push(ron);\r\n        var bela = new npcRobot_1.Robot(resources_1.default.models.robots.bela, new Transform({\r\n            position: new Vector3(37.27, 4, 265.32),\r\n            rotation: Quaternion.Euler(0, 90, 0),\r\n        }), npcRobot_1.RobotID.Agora, resources_1.default.sounds.robots.bela);\r\n        exports.robots.push(bela);\r\n        var betty = new npcRobot_1.Robot(resources_1.default.models.robots.betty, new Transform({\r\n            position: new Vector3(117.657, 3.6, 39.98),\r\n        }), npcRobot_1.RobotID.Garden, resources_1.default.sounds.robots.betty);\r\n        exports.robots.push(betty);\r\n        var charlie = new npcRobot_1.Robot(resources_1.default.models.robots.charlie, new Transform({\r\n            position: new Vector3(269.5, 5.35, 42.6),\r\n            rotation: Quaternion.Euler(0, -90, 0),\r\n        }), npcRobot_1.RobotID.Trade, resources_1.default.sounds.robots.charlie);\r\n        exports.robots.push(charlie);\r\n        var charlieRings = new Entity();\r\n        charlieRings.addComponent(ringShape);\r\n        charlieRings.addComponent(new Transform({\r\n            position: new Vector3(0, -0.55, -0.2),\r\n        }));\r\n        charlieRings.setParent(charlie);\r\n        var marsha = new npcRobot_1.Robot(resources_1.default.models.robots.marsha, new Transform({\r\n            position: new Vector3(50.945, 9.65, 31.1),\r\n        }), npcRobot_1.RobotID.Artichoke, resources_1.default.sounds.robots.marsha);\r\n        exports.robots.push(marsha);\r\n        var bob = new npcRobot_1.Robot(resources_1.default.models.robots.bob, new Transform({\r\n            position: new Vector3(165.573, 11.5, 252.79),\r\n            rotation: Quaternion.Euler(0, 35, 0),\r\n        }), npcRobot_1.RobotID.Whale, resources_1.default.sounds.robots.bob);\r\n        exports.robots.push(bob);\r\n        var bobRings = new Entity();\r\n        bobRings.addComponent(ringShape);\r\n        bobRings.addComponent(new Transform({\r\n            position: new Vector3(0, -0.65, -0.075),\r\n        }));\r\n        bobRings.setParent(bob);\r\n        // Dummy entity to add a Delay component so that it doesn't clash\r\n        // with the robots Delay component used in animations\r\n        var dummyDelay = new Entity();\r\n        engine.addEntity(dummyDelay);\r\n        var _loop_1 = function (i) {\r\n            exports.robots[i].addComponent(new OnPointerDown(function () {\r\n                if (!exports.dialogWindow.isDialogOpen || exports.dialogWindow.isInfoPanel) {\r\n                    exports.robots[i].playHello();\r\n                    exports.robots[i].getComponent(AudioSource).playOnce();\r\n                    exports.dialogWindow.openDialogWindow(exports.robots[i].robotID, 0);\r\n                    // HACK: To avoid clashing with the input subscribe PRIMARY button down event\r\n                    dummyDelay.addComponentOrReplace(new index_3.default.Delay(30, function () {\r\n                        exports.dialogWindow.isInfoPanel = false;\r\n                        exports.dialogWindow.isDialogOpen = true;\r\n                    }));\r\n                    // used for closing UI when walking away or clicking\r\n                    ui_2.updateOpenUITime();\r\n                    ui_2.setUiOpener(exports.robots[i]);\r\n                    dummyTarget.getComponent(Transform).position = exports.robots[i].getComponent(Transform).position;\r\n                    if (!exports.robots[i].hasComponent(npcFaceUserSystem_1.TrackUserSlerp))\r\n                        exports.robots[i].addComponent(new npcFaceUserSystem_1.TrackUserSlerp());\r\n                }\r\n            }, {\r\n                button: ActionButton.PRIMARY,\r\n                hoverText: \"Talk\",\r\n                distance: resources_1.default.trigger.triggerShape.radius,\r\n            }));\r\n            exports.robots[i].addComponent(new index_3.default.TriggerComponent(resources_1.default.trigger.triggerShape, //shape\r\n            0, //layer\r\n            0, //triggeredByLayer\r\n            null, //onTriggerEnter\r\n            null, //onTriggerExit\r\n            null, //onCameraEnter\r\n            function () {\r\n                exports.dialogWindow.closeDialogWindow();\r\n            }, //onCameraExit\r\n            false // enableDebug\r\n            ));\r\n        };\r\n        // ISSUE: Modules do not load when these components are refactored to be part of the Robot class\r\n        // Add user interaction\r\n        for (var i = 0; i < exports.robots.length; i++) {\r\n            _loop_1(i);\r\n        }\r\n        // Global button events for progressing the dialog\r\n        var input = Input.instance;\r\n        input.subscribe(\"BUTTON_DOWN\", ActionButton.POINTER, false, function () {\r\n            if (exports.dialogWindow.isDialogOpen && !exports.dialogWindow.isQuestionPanel) {\r\n                exports.dialogWindow.confirmText(npcDialogWindow_1.ConfirmMode.Next);\r\n            }\r\n        });\r\n        input.subscribe(\"BUTTON_DOWN\", ActionButton.PRIMARY, false, function () {\r\n            if (exports.dialogWindow.isDialogOpen &&\r\n                exports.dialogWindow.isQuestionPanel &&\r\n                !exports.dialogWindow.isInfoPanel) {\r\n                exports.dialogWindow.confirmText(npcDialogWindow_1.ConfirmMode.Confirm);\r\n            }\r\n        });\r\n        input.subscribe(\"BUTTON_DOWN\", ActionButton.SECONDARY, false, function () {\r\n            if (exports.dialogWindow.isDialogOpen && exports.dialogWindow.isQuestionPanel) {\r\n                exports.dialogWindow.confirmText(npcDialogWindow_1.ConfirmMode.Cancel);\r\n            }\r\n        });\r\n    }\r\n    exports.addRobots = addRobots;\r\n});\r\ndefine(\"src/modules/npcDialogData\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.robotDialog = void 0;\r\n    var Dialog = /** @class */ (function () {\r\n        function Dialog() {\r\n            this.isQuestion = false;\r\n            this.isEndOfDialog = false;\r\n        }\r\n        return Dialog;\r\n    }());\r\n    var Dialogs = /** @class */ (function () {\r\n        function Dialogs() {\r\n        }\r\n        return Dialogs;\r\n    }());\r\n    // TODO: Code logic to set the positionY of all the dialog...(-4, 6, 18, 24)\r\n    exports.robotDialog = [\r\n        // --- Main Dialog (Alice) ---\r\n        {\r\n            dialogs: [\r\n                {\r\n                    portrait: {\r\n                        path: \"images/portraits/alice.png\",\r\n                        positionX: -272,\r\n                        positionY: 5,\r\n                    },\r\n                    text: \"Hi, I'm Alice - welcome to Genesis Plaza! Would you like to learn more about this place?\",\r\n                    positionY: 24,\r\n                    isQuestion: true,\r\n                    labelE: { label: \"YES\", fontSize: 14, positionX: 64, positionY: -19 },\r\n                    ifPressE: 2,\r\n                    labelF: { label: \"NO\", fontSize: 14, positionX: -56, positionY: -19 },\r\n                    ifPressF: 1,\r\n                },\r\n                {\r\n                    text: \"Okay, I'll be around if you get curious!\",\r\n                    positionY: 18,\r\n                    isEndOfDialog: true,\r\n                },\r\n                {\r\n                    text: \"We’re currently in the center of the Genesis City map, the roads fan out in all directions from here.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"Genesis Plaza is a community-owned space that's open to everyone\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"If you venture out into the world, you’ll see that the content is created by our growing community.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"Do you want to explore the rest of Genesis Plaza or explore the rest of the world?\",\r\n                    positionY: 24,\r\n                    isQuestion: true,\r\n                    labelE: {\r\n                        label: \"PLAZA\",\r\n                        fontSize: 11,\r\n                        positionX: 67,\r\n                        positionY: -17.5,\r\n                    },\r\n                    ifPressE: 6,\r\n                    labelF: {\r\n                        label: \"WORLD\",\r\n                        fontSize: 11,\r\n                        positionX: -50,\r\n                        positionY: -17.5,\r\n                    },\r\n                    ifPressF: 17,\r\n                },\r\n                {\r\n                    text: \"Great! There’s a lot to see right here.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"If you walk around you might run into my buddies and each is an expert on a different topic.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"You can learn a lot from them about how Decentraland works and what makes it special.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"I recommend you start at that boat-shaped building to the North!\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"Do you also want to learn about what's beyond Genesis Plaza?\",\r\n                    positionY: 24,\r\n                    isQuestion: true,\r\n                    labelE: { label: \"YES\", fontSize: 14, positionX: 64, positionY: -19 },\r\n                    ifPressE: 11,\r\n                    labelF: { label: \"NO\", fontSize: 14, positionX: -56, positionY: -19 },\r\n                    ifPressF: 27,\r\n                },\r\n                {\r\n                    text: \"There’s a big world to explore out there!\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"Around Genesis Plaza you'll find several teleports that can take you directly to special scenes marked as points of interest.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"There's also the 'crowd' teleport, which takes you to the biggest gathering of people in Decentraland so you can meet up and hang out.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"If you press the 'M' key, you’ll open the map. You'll see markers for points of interest that are worth visiting.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"Or simply explore the virtual world by foot and plot your own adventure. Just keep in mind that there's a LOT of ground to cover.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"So what are you waiting for? Go and explore the world!\",\r\n                    positionY: 18,\r\n                    isEndOfDialog: true,\r\n                },\r\n                {\r\n                    text: \"There’s a big world to explore out there!\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"Around Genesis Plaza you'll find several teleports that can take you directly to special scenes marked as points of interest.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"There's also the 'crowd' teleport, which takes you to the biggest gathering of people in Decentraland so you can meet up and hang out.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"If you press the 'M' key, you’ll open the map. You'll see markers for points of interest that are worth visiting.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"Or simply explore the virtual world by foot and plot your own adventure. Just keep in mind that there's a LOT of ground to cover.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"Do you also want to find out what's here in Genesis Plaza?\",\r\n                    positionY: 24,\r\n                    isQuestion: true,\r\n                    labelE: { label: \"YES\", fontSize: 14, positionX: 64, positionY: -19 },\r\n                    ifPressE: 23,\r\n                    labelF: { label: \"NO\", fontSize: 14, positionX: -56, positionY: -19 },\r\n                    ifPressF: 27,\r\n                },\r\n                {\r\n                    text: \"Great! There’s a lot to see right here.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"If you walk around you might run into my buddies and each is an expert on a different topic.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"You can learn a lot from them about how Decentraland works and what makes it special.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"I recommend you start at that boat-shaped building to the North!\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"Well that's it from me. So what are you waiting for? Go and explore the world!\",\r\n                    positionY: 18,\r\n                    isEndOfDialog: true,\r\n                },\r\n            ],\r\n        },\r\n        // --- Shell Dialog (Ron) ---\r\n        {\r\n            dialogs: [\r\n                {\r\n                    portrait: {\r\n                        path: \"images/portraits/ron.png\",\r\n                        positionX: -272,\r\n                        positionY: 10,\r\n                    },\r\n                    text: \"Hi! I'm Ron – a crafter of wearable items. Would you like to learn more about wearables?\",\r\n                    positionY: 24,\r\n                    isQuestion: true,\r\n                    labelE: { label: \"YES\", fontSize: 14, positionX: 64, positionY: -19 },\r\n                    ifPressE: 2,\r\n                    labelF: { label: \"NO\", fontSize: 14, positionX: -56, positionY: -19 },\r\n                    ifPressF: 1,\r\n                },\r\n                {\r\n                    text: \"Okay, I'll be around if you get curious.\",\r\n                    positionY: 18,\r\n                    isEndOfDialog: true,\r\n                },\r\n                {\r\n                    text: \"As you've probably already found out - you can customize your avatar and choose what items to wear.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"You may have also noticed that other players have fancy outfits that you can’t find in your item menu.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"That’s because certain wearables must be bought or earned.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"Do you want to know how wearables relate to the blockchain?\",\r\n                    positionY: 24,\r\n                    isQuestion: true,\r\n                    labelE: { label: \"YES\", fontSize: 14, positionX: 64, positionY: -19 },\r\n                    ifPressE: 6,\r\n                    labelF: { label: \"NO\", fontSize: 14, positionX: -56, positionY: -19 },\r\n                    ifPressF: 7,\r\n                },\r\n                {\r\n                    text: \"Wearables are traded on the blockchain as non-fungible tokens (NFTs). This makes each item unique, with a traceable and unique history.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"If you go north to the boat-shaped building, I have a friend there who knows a lot about this stuff.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"Except for the default set of wearables you get when you start out, each wearable model has a limited supply.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"Some wearables are more rare than others.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"You can buy and sell wearables in the Decentraland Marketplace. To learn more about this topic, head to the Trade Center building.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"Before you go though, there are several wearables on display here. Take a look around!\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"The wearables here are linked to the Marketplace so if you see anything you like, you can buy it from the community member who owns it.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"I hope you found this information useful and have fun expressing yourself with your new wearables!\",\r\n                    positionY: 6,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // --- YELLOW TEXT ---\r\n                // Christmas\r\n                {\r\n                    text: \"These wearables are from the Cyberchristmas 2019 collection. Real flashy huh?\",\r\n                    positionY: 18,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // Halloween\r\n                {\r\n                    text: \"These wearables are from the Halloween 2019 collection. Pretty creepy looking huh?\",\r\n                    positionY: 18,\r\n                    isEndOfDialog: true,\r\n                },\r\n            ],\r\n        },\r\n        // --- Agora Dialog (Bela) ---\r\n        {\r\n            dialogs: [\r\n                {\r\n                    text: \"Hello, I'm Bela - would you like to learn more about how the community shapes Decentraland?\",\r\n                    positionY: 24,\r\n                    isQuestion: true,\r\n                    labelE: { label: \"YES\", fontSize: 14, positionX: 64, positionY: -19 },\r\n                    ifPressE: 2,\r\n                    labelF: { label: \"NO\", fontSize: 14, positionX: -56, positionY: -19 },\r\n                    ifPressF: 1,\r\n                    portrait: {\r\n                        path: \"images/portraits/bela.png\",\r\n                        positionX: -264,\r\n                        positionY: -10,\r\n                    },\r\n                },\r\n                {\r\n                    text: \"Okay, I'll be around if you get curious.\",\r\n                    positionY: 18,\r\n                    isEndOfDialog: true,\r\n                },\r\n                {\r\n                    text: \"Decentraland is designed to be run 100% by the community.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"There's already been several petitions that have been voted on. Anyone with MANA or LAND can vote and determine the future of Decentraland.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"For example, the community decided through a vote that each land parcel should measure 16x16 meters instead of the original 10x10 meters.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"There will gradually be more and more ways in which you can pitch in to help shape the direction of the virtual world.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"You've joined us at a really exciting time, when we can own and shape the virtual spaces where we hang out.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"I hope you found this information interesting!\",\r\n                    positionY: 18,\r\n                    isEndOfDialog: true,\r\n                },\r\n            ],\r\n        },\r\n        // --- Garden Text (Betty) ---\r\n        {\r\n            dialogs: [\r\n                {\r\n                    text: \"Hi, I'm Betty - a content creator! Would you like to learn about how content in Decentraland is made?\",\r\n                    positionY: 24,\r\n                    isQuestion: true,\r\n                    labelE: { label: \"YES\", fontSize: 14, positionX: 64, positionY: -19 },\r\n                    ifPressE: 2,\r\n                    labelF: { label: \"NO\", fontSize: 14, positionX: -56, positionY: -19 },\r\n                    ifPressF: 1,\r\n                    portrait: {\r\n                        path: \"images/portraits/betty.png\",\r\n                        positionX: -264,\r\n                        positionY: 15,\r\n                    },\r\n                },\r\n                {\r\n                    text: \"Okay, I'll be around if you get curious.\",\r\n                    positionY: 18,\r\n                    isEndOfDialog: true,\r\n                },\r\n                {\r\n                    text: \"Decentraland is made up of scenes and each scene is its own self-contained world that sits next to other scenes.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"A scene can take up a single LAND parcel or as many parcels as you want. Each LAND parcel measures 16x16 meters.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"With the exception of public spaces like plazas and roads, everything you see is created by members of the community like yourself.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"There are two different tools that can be used to build. First there's The Builder - an easy drag and drop tool.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"Then there's the SDK (Software Development Kit), which is a more powerful coding tool for developers.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"Which one do you want to learn about first?\",\r\n                    positionY: 24,\r\n                    isQuestion: true,\r\n                    labelE: {\r\n                        label: \"BUILDER\",\r\n                        fontSize: 10,\r\n                        positionX: 70,\r\n                        positionY: -17,\r\n                    },\r\n                    ifPressE: 8,\r\n                    labelF: { label: \"SDK\", fontSize: 14, positionX: -56, positionY: -19 },\r\n                    ifPressF: 21,\r\n                },\r\n                {\r\n                    text: \"The Builder is a lot of fun! You can drag and drop pre-made 3D items of a variety of themes into your scene.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"Some items come with built-in behaviors. You can use these as building-blocks to make up a whole game.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"If you’re a 3D artist, or want to import 3D content, you have the ability to import your own.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"Do you want to also learn about the SDK (Software Development Kit)?\",\r\n                    positionY: 24,\r\n                    isQuestion: true,\r\n                    labelE: { label: \"YES\", fontSize: 14, positionX: 64, positionY: -19 },\r\n                    ifPressE: 12,\r\n                    labelF: { label: \"NO\", fontSize: 14, positionX: -56, positionY: -19 },\r\n                    ifPressF: 32,\r\n                },\r\n                {\r\n                    text: \"The SDK is a very powerful tool that gives you a lot of freedom by writing your scenes in code.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"It is based on TypeScript, a language that’s very similar to JavaScript but more reliable.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"There are several great examples out in the world of scenes written with the SDK.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"Many of the teleports around this plaza take you to such scenes.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"You can also use the SDK to create your own smart items with built-in logic.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"These can then be easily used in the Builder by dragging and dropping them.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"You can also start a scene using the Builder. Lay out the parts before exporting them to add specific functionality with code, using the SDK.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"Remember you can always visit docs.decentraland.org for a more in-depth guide on building scenes\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"Hope that gets you excited about creating and sharing great things. Can't wait to see what you come up with!\",\r\n                    positionY: 6,\r\n                    isEndOfDialog: true,\r\n                },\r\n                {\r\n                    text: \"The SDK is a very powerful tool that gives you a lot of freedom by writing your scenes in code.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"It is based on TypeScript, a language that’s very similar to JavaScript but more reliable.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"There are several great examples out in the world of scenes written with the SDK.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"Many of the teleports around this plaza take you to such scenes.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"You can also use the SDK to create your own smart items with built-in logic.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"These can then be easily used in the Builder by dragging and dropping them.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"You can also start a scene using the Builder. Lay out the parts before exporting them to add specific functionality with code, using the SDK.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"Do you also want to learn about the Builder, our visual editor tool?\",\r\n                    positionY: 24,\r\n                    isQuestion: true,\r\n                    labelE: { label: \"YES\", fontSize: 14, positionX: 64, positionY: -19 },\r\n                    ifPressE: 29,\r\n                    labelF: { label: \"NO\", fontSize: 14, positionX: -56, positionY: -19 },\r\n                    ifPressF: 32,\r\n                },\r\n                {\r\n                    text: \"The Builder is a lot of fun! You can drag and drop pre-made 3D items of a variety of themes into your scene.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"Some items come with built-in behaviors. You can use these as building-blocks to make up a whole game.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"If you’re a 3D artist, or want to import 3D content, you have the ability to import your own.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"Remember you can always visit docs.decentraland.org for a more in-depth guide on building scenes\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"Hope that gets you excited about creating and sharing great things. Can't wait to see what you come up with!\",\r\n                    positionY: 6,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // --- YELLOW TEXT ---\r\n                // Builder\r\n                {\r\n                    text: \"This is what a basic Builder scene looks like. There are tons of prefab items you can just drag and drop to create an experience of your own.\",\r\n                    positionY: 6,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // Smart Items\r\n                {\r\n                    text: \"This is what a Builder scene looks like with some smart items in it.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"Smart items can be dragged in just as easily as other items, but can make things so much more interesting!\",\r\n                    positionY: 6,\r\n                    isEndOfDialog: true,\r\n                },\r\n            ],\r\n        },\r\n        // --- Trade Dialog (Charlie) ---\r\n        {\r\n            dialogs: [\r\n                {\r\n                    text: \"Hey, I'm Charlie - a master trader. Would you like to learn more about the Decentraland Marketplace?\",\r\n                    positionY: 24,\r\n                    isQuestion: true,\r\n                    labelE: { label: \"YES\", fontSize: 14, positionX: 64, positionY: -19 },\r\n                    ifPressE: 2,\r\n                    labelF: { label: \"NO\", fontSize: 14, positionX: -56, positionY: -19 },\r\n                    ifPressF: 1,\r\n                    portrait: {\r\n                        path: \"images/portraits/charlie.png\",\r\n                        positionX: -292,\r\n                        positionY: -10,\r\n                    },\r\n                },\r\n                {\r\n                    text: \"Okay, I'll be around if you get curious.\",\r\n                    positionY: 18,\r\n                    isEndOfDialog: true,\r\n                },\r\n                {\r\n                    text: \"This is the Metaverse Trade Center. Here you can see live stats from the Decentraland Marketplace.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"There’s a thriving economy behind Decentraland and every day people buy and sell unique items.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"Items like LAND parcels, wearable items and reserved names.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"As more trading happens on the platform, it grows and moves faster.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"You can explore this building to find real-time stats about what goes on in the Marketplace.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"Do you want to know more about how the Marketplace uses the blockchain?\",\r\n                    positionY: 24,\r\n                    isQuestion: true,\r\n                    labelE: { label: \"YES\", fontSize: 14, positionX: 64, positionY: -19 },\r\n                    ifPressE: 8,\r\n                    labelF: { label: \"NO\", fontSize: 14, positionX: -56, positionY: -19 },\r\n                    ifPressF: 11,\r\n                },\r\n                {\r\n                    text: \"All sales, bids and other operations are transactions on the blockchain.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"Like all transactions, they require a small gas fee that is paid to the network of miners.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"The Marketplace charges a small fee over all transactions. This fee doesn't go into anyone's pocket. Instead it gets burned.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"Remember to visit market.decentraland.org - over there you can buy or sell LAND, wearables or unique names. Happy shopping!\",\r\n                    positionY: 6,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // --- YELLOW TEXT ---\r\n                // Parcels\r\n                {\r\n                    text: \"All of Decentraland is made up of parcels of LAND. Each parcel is 16x16 meters (~17.5 yards)\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"Some parcels of LAND are plazas or bits of road, those are owned by the Decentraland DAO.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"Together they make up all the public spaces of Decentraland and therefore cannot be traded on the market.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"People buy and sell LAND in the Marketplace.\",\r\n                    positionY: 18,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // Estate\r\n                {\r\n                    text: \"If you have several adjacent parcels of LAND, you can form an Estate to group these together and trade them as a single token.\",\r\n                    positionY: 6,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // Wearable Rarity\r\n                {\r\n                    text: \"Not all wearables are created equal. We have a few categories available to help distinguish their rarity.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"If a wearable is 'Epic' then there are a maximum of 1000 of its kind in circulation.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"If a wearable is 'Legendary' then there are only 100 of its kind.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"If a wearable is 'Mythic' then there are just 10. If it is 'Unique' then...well you get the picture.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"'Rare', 'Common' and 'Uncommon' rarities are relatively abundant.\",\r\n                    positionY: 18,\r\n                    isEndOfDialog: true,\r\n                },\r\n            ],\r\n        },\r\n        // --- Artichoke Dialog (Marsha) ---\r\n        {\r\n            dialogs: [\r\n                {\r\n                    text: \"Hey there! My name is Marsha and I’m here to have fun! Would you like to learn more about how to interact with other players?\",\r\n                    positionY: 24,\r\n                    isQuestion: true,\r\n                    labelE: { label: \"YES\", fontSize: 14, positionX: 64, positionY: -19 },\r\n                    ifPressE: 2,\r\n                    labelF: { label: \"NO\", fontSize: 14, positionX: -56, positionY: -19 },\r\n                    ifPressF: 1,\r\n                    portrait: {\r\n                        path: \"images/portraits/marsha.png\",\r\n                        positionX: -264,\r\n                        positionY: -10,\r\n                    },\r\n                },\r\n                {\r\n                    text: \"Okay, I'll be around if you get curious.\",\r\n                    positionY: 18,\r\n                    isEndOfDialog: true,\r\n                },\r\n                {\r\n                    text: \"You can perform emotes, like dances, hand waves, etc. Other players will see you when you do them.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"To do so, just press the 'B' key to open up the menu before clicking on one of the emote icons.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"When you write into the chat box, what you send can be read by all players nearby.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"If you click on a player you can read their bio, see what wearables they own etc.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"If at any point you find someone that acts abusively, you can block them so that they can no longer bother you.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: 'To do so, simply click on them to open the menu, and select \"block player\".',\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"If you can't find anyone around, there's a 'crowd' teleport just north of the main building that takes you to wherever there's a group of people.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: 'You can also type \"/goto crowd\" into the chat window to take you there, no matter where you are.',\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"Well that's it from me, don't want to keep you here any longer. There are folks out there who are a lot more interesting to talk to. Enjoy!\",\r\n                    positionY: 6,\r\n                    isEndOfDialog: true,\r\n                },\r\n            ],\r\n        },\r\n        // --- Whale Dialog (Bob) ---\r\n        {\r\n            dialogs: [\r\n                {\r\n                    text: \"G'day human! My name is Bob and I'm a robot. Would you like to learn more about the history of Decentraland and how it all started?\",\r\n                    positionY: 24,\r\n                    isQuestion: true,\r\n                    labelE: { label: \"YES\", fontSize: 14, positionX: 64, positionY: -19 },\r\n                    ifPressE: 2,\r\n                    labelF: { label: \"NO\", fontSize: 14, positionX: -56, positionY: -19 },\r\n                    ifPressF: 1,\r\n                    portrait: {\r\n                        path: \"images/portraits/bob.png\",\r\n                        positionX: -276,\r\n                        positionY: 30,\r\n                    },\r\n                },\r\n                {\r\n                    text: \"Okay, I'll be around if you get curious.\",\r\n                    positionY: 18,\r\n                    isEndOfDialog: true,\r\n                },\r\n                {\r\n                    text: \"Decentraland's unique proposal is to create a virtual world governed by its users.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"This little museum takes you through some of the milestones in Decentraland's history.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"Some key events in the history of the project were: the Terraform Event, which had the first LAND auction.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"In late 2018 a second auction was held. This was followed by the creation of Avatars and Wearables in 2019.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"And in 2020, the open source client and the DAO were released. So much has happened already, and we're just getting started...\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"Take a look around. If you're interested in any of the items, click on them and I'll tell you the background story.\",\r\n                    positionY: 6,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // --- YELLOW TEXT ---\r\n                // DAO\r\n                {\r\n                    text: \"A DAO is a Decentralized Autonomous Organization - the embodiment of decentralization.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"An entity that carries out its functions following pre-established rules that no person can alter. To put it another way, it's governance as code.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"Through a DAO, we can guarantee that what the community votes for is truly what gets done, and that nobody can stop that.\",\r\n                    positionY: 6,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // Vision\r\n                {\r\n                    text: \"Decentraland really took shape in 2017 amongst an exciting wave of enthusiasm around blockchain technologies.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"The transparency and fairness that smart contracts might bring has the potential to transform the way we interact with the world.\",\r\n                    positionY: 6,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // First Experiments\r\n                {\r\n                    text: \"The first few versions of Decentraland were not actually Ethereum-based!\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"It actually started as a fork of Bitcoin back in 2015 before Ethereum was even launched.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"This map was the first little experiment with tokenized land as 2D pixels, each one is minted by miners.\",\r\n                    positionY: 6,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // First 3D Version\r\n                {\r\n                    text: \"The first 3D versions were based on hexagon-shaped land. Though quite limited, it was an exciting experiment already.\",\r\n                    positionY: 6,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // Declaration\r\n                {\r\n                    text: \"A sign on this early 3D version spelled out a brave declaration of what we were setting off to build!\",\r\n                    positionY: 6,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // Original Logo\r\n                {\r\n                    text: \"Our first logo was quite nice and unique - makes me feel nostalgic just looking at it...\",\r\n                    positionY: 18,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // First avatars\r\n                {\r\n                    text: \"Slowly things started to get more concrete. These guys were the first fun lively avatars we had. Don't they look happy?\",\r\n                    positionY: 6,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // First Avatar\r\n                {\r\n                    text: \"This guy was around in the early days. All he could do was float and move his head around - well if you ask me, that's plenty already.\",\r\n                    positionY: 6,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // Fox Avatar\r\n                {\r\n                    text: \"Then came the fox and the robots. This dude looks so cool, doesn't he?\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"At the time, they were designed for VR so the hands and head were meant to match VR controllers.\",\r\n                    positionY: 6,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // Robot Avatar 1\r\n                {\r\n                    text: \"Floating made it simpler, as we didn't have to think about legs or walking animations - oh and I know all about that...\",\r\n                    positionY: 6,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // Robot Avatar 2\r\n                {\r\n                    text: \"Look at this classy little fellow, now here's someone I can relate to! Well at least for me that is, you know?\",\r\n                    positionY: 6,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // Avatar Male\r\n                {\r\n                    text: \"And that brings us to the latest in human-shaped avatars! Like the one you're sporting now.\",\r\n                    positionY: 18,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // Avatar Female\r\n                {\r\n                    text: \"Fully animated, super customizeable, charismatic, and fun. A huge leap forward!\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"Even though... you know, *cough* robots are *cough* the future. *cough* Sorry did you say something?\",\r\n                    positionY: 6,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // First Auction\r\n                {\r\n                    text: \"And then came the LAND auctions! The definitive map of Genesis City was laid out before each parcel was minted.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"That marked the start of a virtual real-estate market that continues to flourish to this day.\",\r\n                    positionY: 18,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // Second Auction\r\n                {\r\n                    text: \"Not all land was sold on the first auction, 9,300 parcels remained unclaimed.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"So in December 2018 came the second auction, where the community claimed the remaining ones.\",\r\n                    positionY: 6,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // New Logo\r\n                {\r\n                    text: \"Decentraland needed a more modern look and with it a new logo. The design needed to look great even when viewed at a smaller scale.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"So in early 2019 this beauty was created... looking sleek right?\",\r\n                    positionY: 18,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // Landing\r\n                {\r\n                    text: \"At the time, the world was still in closed beta, so something attractive was needed for those that could not yet enter.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"A pretty slick landing site with a beautiful 3D intro was launched that made the promise of a 3D world more real.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"Come to think of it... this plaza we're on resembles that vision quite a lot - how cool is that?\",\r\n                    positionY: 6,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // Builder\r\n                {\r\n                    text: \"With 90,000 parcels of LAND to fill, creating content needs to be fun and easy to enable mass adoption.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"So, on April 2018, the Builder was launched. A visual tool designed to make content creation simple.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"Head on over to builder.decentraland.org to get building right away! \",\r\n                    positionY: 18,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // Player Passport\r\n                {\r\n                    text: \"Another important milestone was creating player passports, which linked a player's identity to an ethereum wallet.\",\r\n                    positionY: 6,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // Token Wearables\r\n                {\r\n                    text: \"With the addition of tokenized wearables, players were now able to customize their avatars a lot further.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"Beyond the collection of basic wearables, special ones became available that were more elaborate in design and also much rarer.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"A few of these were given out during the Halloween event and also in the Christmas event, as well as the official launch event.\",\r\n                    positionY: 6,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // Parcel\r\n                {\r\n                    text: \"All of Decentraland is made up of parcels of LAND. Each parcel is 16x16meters (~17.5 yards)\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"Most parcels are privately owned and the owner of the LAND can do anything they want with it. Create a game, a virtual store, anything they like.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"LAND parcels start empty until the owner or someone with permission from the owner uploads content onto it.\",\r\n                    positionY: 6,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // Estate\r\n                {\r\n                    text: \"With several adjacent parcels of LAND, you can form an Estate to group these together and trade them as a single token.\",\r\n                    positionY: 6,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // Roads\r\n                {\r\n                    text: \"Roads guarantee easy movement through the world even if people build towering structures in their privately-owned land.\",\r\n                    positionY: 6,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // Plazas\r\n                {\r\n                    text: \"There are several plazas in Decentraland like the one we're in. Plazas are open to everyone and are owned by the Decentraland DAO.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"Each plaza has its own special theme so get out there and explore them!\",\r\n                    positionY: 18,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // Districts\r\n                {\r\n                    text: \"Districts are special privately-owned parcels of LAND. They appear as violet colored boxes on the map.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"Districts are owned by groups of people, who during the early days got together around a common theme and proposal.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"Many districts are thriving communities with a specific goal.\",\r\n                    positionY: 18,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // Museum District\r\n                {\r\n                    text: \"The museum district is a great example of a Distict. This one focuses on providing artists a place to display their work.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"Amongst the other districts, you can find a university, a convention center, a vegas-themed area, a virtual shopping mall...\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \".. an amusement park, a place for music festivals, a gamer's battleground and so much more!\",\r\n                    positionY: 6,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // Builder Constest April 2019\r\n                {\r\n                    text: \"With the launch of the Builder back in April 2019, there was a contest for creating the best scenes using just the Builder.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"Even with the limitations of that first version, the community blew everyone away with their creativity!\",\r\n                    positionY: 6,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // Builder Constest December 2019\r\n                {\r\n                    text: \"With the release of Smart items in December 2019 came another creator contest using the Builder.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"This time, people could add items that were interactive, enabling all sorts of fun game mechanics.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"Again, it was amazing to see what can be created with a library of simple building blocks.\",\r\n                    positionY: 18,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // Mana\r\n                {\r\n                    text: \"MANA is a virtual currency that can be used to perform in-world transactions.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"Also, it can be used to trade LAND, wearables and unique names in the marketplace.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"Furthermore, MANA tokens give you also voting powers on the DAO...\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"the decision making smart contract that governs many of the policy aspects of Decentraland.\",\r\n                    positionY: 18,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // Hackathon 2019\r\n                {\r\n                    text: \"Many great scenes were created by developers writing code. A few Game Jams took place with amazing results.\",\r\n                    positionY: 6,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // Hackathon September 2019\r\n                {\r\n                    text: \"A huge number of really high-quality scenes were submitted at these competitions and there are many out there now.\",\r\n                    positionY: 6,\r\n                },\r\n                {\r\n                    text: \"Some of which you can visit via one of the teleporters located on this plaza!\",\r\n                    positionY: 18,\r\n                    isEndOfDialog: true,\r\n                },\r\n                // Community Wearables\r\n                {\r\n                    text: \"At the start of 2020, the community held a contest to come up with designs for wearables.\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"These were then crafted following specifications set out by the contestants.\t\",\r\n                    positionY: 18,\r\n                },\r\n                {\r\n                    text: \"Some really fun and imaginative ideas came out from that. You can see some of those wearables circling around in the marketplace.\",\r\n                    positionY: 6,\r\n                    isEndOfDialog: true,\r\n                },\r\n            ],\r\n        },\r\n    ];\r\n});\r\ndefine(\"src/modules/npcDialogWindow\", [\"require\", \"exports\", \"src/modules/npcRobotBuilder\", \"src/modules/npcDialogData\", \"src/resources\", \"src/modules/npcFaceUserSystem\"], function (require, exports, npcRobotBuilder_1, npcDialogData_1, resources_2, npcFaceUserSystem_2) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.DialogWindow = exports.ConfirmMode = void 0;\r\n    var ConfirmMode;\r\n    (function (ConfirmMode) {\r\n        ConfirmMode[ConfirmMode[\"Confirm\"] = 0] = \"Confirm\";\r\n        ConfirmMode[ConfirmMode[\"Cancel\"] = 1] = \"Cancel\";\r\n        ConfirmMode[ConfirmMode[\"Next\"] = 2] = \"Next\";\r\n    })(ConfirmMode = exports.ConfirmMode || (exports.ConfirmMode = {}));\r\n    var DialogWindow = /** @class */ (function () {\r\n        function DialogWindow(canvas) {\r\n            var _this = this;\r\n            // Container\r\n            this.container = new UIContainerRect(canvas);\r\n            this.container.adaptWidth = true;\r\n            this.container.width = '100%';\r\n            this.container.vAlign = 'bottom';\r\n            this.container.positionY = 100;\r\n            this.container.visible = false;\r\n            // Text Panel\r\n            this.textPanel = new UIImage(this.container, resources_2.default.textures.textPanel);\r\n            this.textPanel.sourceWidth = 768;\r\n            this.textPanel.sourceHeight = 244;\r\n            this.textPanel.width = 512;\r\n            this.textPanel.height = 162;\r\n            this.textPanel.onClick = new OnClick(function () {\r\n                _this.confirmText(ConfirmMode.Next);\r\n            });\r\n            // Portrait\r\n            this.portrait = new UIImage(this.container, new Texture('images/portraits/alice.png'));\r\n            this.portrait.sourceWidth = 384;\r\n            this.portrait.sourceHeight = 384;\r\n            this.portrait.width = 256;\r\n            this.portrait.height = 256;\r\n            this.portrait.positionX = -256;\r\n            this.portrait.positionY = 0;\r\n            this.portrait.onClick = new OnClick(function () {\r\n                _this.confirmText(ConfirmMode.Next);\r\n            });\r\n            // Dialog Text\r\n            this.text = new UIText(this.container);\r\n            this.text.adaptWidth = false;\r\n            this.text.textWrapping = true;\r\n            this.text.width = 340;\r\n            this.text.positionX = 10;\r\n            this.text.hAlign = 'center';\r\n            this.text.vAlign = 'center';\r\n            this.text.fontSize = 14;\r\n            this.text.fontWeight = 'normal';\r\n            this.text.color = Color4.Black();\r\n            this.text.isPointerBlocker = false;\r\n            // Button E\r\n            this.buttonE = new UIImage(this.container, resources_2.default.textures.buttonE);\r\n            this.buttonE.sourceWidth = 202;\r\n            this.buttonE.sourceHeight = 62;\r\n            this.buttonE.width = 100;\r\n            this.buttonE.height = 30;\r\n            // this.buttonE.positionX = -60\r\n            this.buttonE.positionX = 60;\r\n            this.buttonE.positionY = -35;\r\n            this.buttonE.visible = false;\r\n            this.buttonE.isPointerBlocker = true;\r\n            this.buttonE.onClick = new OnClick(function () {\r\n                _this.confirmText(ConfirmMode.Confirm);\r\n            });\r\n            // Label E Text\r\n            this.labelE = new UIText(this.container);\r\n            this.labelE.adaptWidth = true;\r\n            this.labelE.hAlign = 'center';\r\n            this.labelE.vAlign = 'center';\r\n            this.labelE.fontWeight = 'bold';\r\n            this.labelE.color = Color4.White();\r\n            // this.labelE.positionX = -52\r\n            this.labelE.positionX = 64;\r\n            this.labelE.positionY = -19;\r\n            // Button F\r\n            this.buttonF = new UIImage(this.container, resources_2.default.textures.buttonF);\r\n            this.buttonF.sourceWidth = 202;\r\n            this.buttonF.sourceHeight = 62;\r\n            this.buttonF.width = 100;\r\n            this.buttonF.height = 30;\r\n            // this.buttonF.positionX = 60\r\n            this.buttonF.positionX = -60;\r\n            this.buttonF.positionY = -35;\r\n            this.buttonF.visible = false;\r\n            this.buttonF.isPointerBlocker = true;\r\n            this.buttonF.onClick = new OnClick(function () {\r\n                _this.confirmText(ConfirmMode.Cancel);\r\n            });\r\n            // Label F Text\r\n            this.labelF = new UIText(this.container);\r\n            this.labelF.adaptWidth = true;\r\n            this.labelF.hAlign = 'center';\r\n            this.labelF.vAlign = 'center';\r\n            this.labelF.fontWeight = 'bold';\r\n            this.labelF.color = Color4.White();\r\n            // this.labelF.positionX = 64\r\n            this.labelF.positionX = -56;\r\n            this.labelF.positionY = -19;\r\n            // Left Click Icon\r\n            this.leftClickIcon = new UIImage(this.container, resources_2.default.textures.leftClickIcon);\r\n            this.leftClickIcon.sourceWidth = 38;\r\n            this.leftClickIcon.sourceHeight = 54;\r\n            this.leftClickIcon.width = 19;\r\n            this.leftClickIcon.height = 27;\r\n            this.leftClickIcon.positionX = 220;\r\n            this.leftClickIcon.positionY = -44;\r\n            this.leftClickIcon.visible = false;\r\n        }\r\n        DialogWindow.prototype.openDialogWindow = function (botId, textId) {\r\n            // this.isDialogOpen = true\r\n            // Set current active bot and text\r\n            this.activeBotId = botId;\r\n            this.activeTextId = textId;\r\n            var robotText = npcDialogData_1.robotDialog[botId].dialogs[textId];\r\n            // Set portrait\r\n            // Portrait is always set at the 0 index of the robot's dialog\r\n            this.portrait.source = new Texture(npcDialogData_1.robotDialog[botId].dialogs[0].portrait.path);\r\n            this.portrait.positionX = npcDialogData_1.robotDialog[botId].dialogs[0].portrait.positionX;\r\n            this.portrait.positionY = npcDialogData_1.robotDialog[botId].dialogs[0].portrait.positionY;\r\n            this.portrait.visible = true;\r\n            // Set text\r\n            this.text.value = robotText.text;\r\n            if (robotText.fontSize)\r\n                this.text.fontSize = robotText.fontSize;\r\n            this.text.positionY = robotText.positionY;\r\n            this.text.visible = true;\r\n            this.container.visible = true;\r\n            // Layout panel buttons and icon\r\n            this.layoutDialogWindow(botId, textId);\r\n        };\r\n        // Progresses text\r\n        DialogWindow.prototype.confirmText = function (mode) {\r\n            var activeRobotText = npcDialogData_1.robotDialog[this.activeBotId].dialogs[this.activeTextId];\r\n            // Update active text\r\n            if (mode == ConfirmMode.Next) {\r\n                if (activeRobotText.isEndOfDialog) {\r\n                    this.closeDialogWindow();\r\n                    return;\r\n                }\r\n                else if (!activeRobotText.isQuestion) {\r\n                    this.activeTextId++;\r\n                }\r\n            }\r\n            if (mode == ConfirmMode.Confirm && activeRobotText.ifPressE) {\r\n                this.activeTextId = activeRobotText.ifPressE;\r\n            }\r\n            if (mode == ConfirmMode.Cancel && activeRobotText.ifPressF) {\r\n                this.activeTextId = activeRobotText.ifPressF;\r\n            }\r\n            // Update active robot text with new active text\r\n            activeRobotText = npcDialogData_1.robotDialog[this.activeBotId].dialogs[this.activeTextId];\r\n            // Update text\r\n            this.text.value = activeRobotText.text;\r\n            if (activeRobotText.fontSize)\r\n                this.text.fontSize = activeRobotText.fontSize;\r\n            this.text.positionY = activeRobotText.positionY;\r\n            this.layoutDialogWindow(this.activeBotId, this.activeTextId);\r\n        };\r\n        // Adds the buttons or mouse icon depending on the type of window\r\n        DialogWindow.prototype.layoutDialogWindow = function (botId, textId) {\r\n            var robotText = npcDialogData_1.robotDialog[botId].dialogs[textId];\r\n            this.isQuestionPanel = robotText.isQuestion;\r\n            if (robotText.isQuestion) {\r\n                // Button E and label\r\n                if (robotText.labelE['positionX'] || robotText.labelE['positionY']) {\r\n                    this.labelE.positionX = robotText.labelE['positionX'];\r\n                    this.labelE.positionY = robotText.labelE['positionY'];\r\n                }\r\n                this.buttonE.visible = true;\r\n                this.labelE.value = robotText.labelE['label'];\r\n                this.labelE.fontSize = robotText.labelE['fontSize'];\r\n                this.labelE.visible = true;\r\n                // Button F and label\r\n                if (robotText.labelF['positionX'] || robotText.labelF['positionY']) {\r\n                    this.labelF.positionX = robotText.labelF['positionX'];\r\n                    this.labelF.positionY = robotText.labelF['positionY'];\r\n                }\r\n                this.buttonF.visible = true;\r\n                this.labelF.value = robotText.labelF['label'];\r\n                this.labelF.fontSize = robotText.labelF['fontSize'];\r\n                this.labelF.visible = true;\r\n                // Mouse icon\r\n                this.leftClickIcon.visible = false;\r\n            }\r\n            else {\r\n                this.buttonE.visible = false;\r\n                this.labelE.visible = false;\r\n                this.buttonF.visible = false;\r\n                this.labelF.visible = false;\r\n                this.leftClickIcon.visible = true;\r\n            }\r\n        };\r\n        DialogWindow.prototype.closeDialogWindow = function () {\r\n            // Stop robot from tracking the user\r\n            if (this.isDialogOpen) {\r\n                for (var i = 0; i < npcRobotBuilder_1.robots.length; i++) {\r\n                    // Play goodbye animation after talking to user\r\n                    if (this.activeBotId == npcRobotBuilder_1.robots[i].robotID &&\r\n                        npcRobotBuilder_1.robots[i].hasComponent(npcFaceUserSystem_2.TrackUserSlerp)) {\r\n                        npcRobotBuilder_1.robots[i].removeComponent(npcFaceUserSystem_2.TrackUserSlerp);\r\n                        npcRobotBuilder_1.robots[i].playGoodbye();\r\n                    }\r\n                    else {\r\n                        // Play idle animation after talking about an item e.g. museum piece, wearables etc.\r\n                        npcRobotBuilder_1.robots[i].playIdle();\r\n                    }\r\n                }\r\n                this.isDialogOpen = false;\r\n                this.isInfoPanel = false;\r\n                this.container.visible = false;\r\n                this.portrait.visible = false;\r\n                this.text.visible = false;\r\n                this.buttonE.visible = false;\r\n                this.labelE.visible = false;\r\n                this.buttonF.visible = false;\r\n                this.labelF.visible = false;\r\n                this.leftClickIcon.visible = false;\r\n            }\r\n        };\r\n        return DialogWindow;\r\n    }());\r\n    exports.DialogWindow = DialogWindow;\r\n});\r\ndefine(\"src/modules/museumItems\", [\"require\", \"exports\", \"node_modules/decentraland-ecs-utils/index\", \"src/modules/npcRobotBuilder\", \"src/modules/npcFaceUserSystem\", \"src/modules/npcRobot\", \"src/modules/ui\"], function (require, exports, index_4, npcRobotBuilder_2, npcFaceUserSystem_3, npcRobot_2, ui_3) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.animateMap = exports.MapItems = exports.placeGardenPieces = exports.placeTradecenterPieces = exports.invisibleMaterial = exports.placeWearablePieces = exports.placeMuseumPieces = exports.MuseumPiece = void 0;\r\n    // Opens informational dialog about a piece\r\n    function openPieceInfoWindow(piece, robotID, textID) {\r\n        // used for closing UI when walking away or clicking\r\n        ui_3.updateOpenUITime();\r\n        ui_3.setUiOpener(piece);\r\n        npcRobotBuilder_2.dialogWindow.isInfoPanel = true;\r\n        ui_3.openDialogSound.getComponent(AudioSource).playOnce();\r\n        npcRobotBuilder_2.robots[robotID].playTalk();\r\n        npcRobotBuilder_2.dialogWindow.openDialogWindow(robotID, textID); // RobotID and textID\r\n        // HACK: To avoid clashing with the input subscribe button down event\r\n        piece.addComponentOrReplace(new index_4.default.Delay(30, function () {\r\n            npcRobotBuilder_2.dialogWindow.isDialogOpen = true;\r\n        }));\r\n        // Stop robot from tracking the user\r\n        if (npcRobotBuilder_2.robots[robotID].hasComponent(npcFaceUserSystem_3.TrackUserSlerp))\r\n            npcRobotBuilder_2.robots[robotID].removeComponent(npcFaceUserSystem_3.TrackUserSlerp);\r\n    }\r\n    var MuseumPiece = /** @class */ (function (_super) {\r\n        __extends(MuseumPiece, _super);\r\n        function MuseumPiece(model, transform, name, robotID, textID) {\r\n            var _this = _super.call(this) || this;\r\n            engine.addEntity(_this);\r\n            _this.addComponent(model);\r\n            _this.addComponent(new Transform(transform));\r\n            _this.name = name;\r\n            var thisPiece = _this;\r\n            _this.addComponent(new OnPointerDown(function () {\r\n                openPieceInfoWindow(thisPiece, robotID, textID);\r\n            }, {\r\n                button: ActionButton.PRIMARY,\r\n                hoverText: _this.name,\r\n            }));\r\n            return _this;\r\n        }\r\n        MuseumPiece.prototype.ask = function () {\r\n            //this.name\r\n        };\r\n        return MuseumPiece;\r\n    }(Entity));\r\n    exports.MuseumPiece = MuseumPiece;\r\n    //// MAP ANIMS\r\n    var districtOn = new AnimationState('District_Action', { looping: false });\r\n    var districtOff = new AnimationState('District_OFF_Action', { looping: false });\r\n    var roadsOn = new AnimationState('Roads_Action', { looping: false });\r\n    var roadsOff = new AnimationState('Roads_OFF_Action', { looping: false });\r\n    var plazasOn = new AnimationState('Plazas_Action', { looping: false });\r\n    var plazasOff = new AnimationState('Plazas_OFF_Action', { looping: false });\r\n    function placeMuseumPieces() {\r\n        var dao = new MuseumPiece(new GLTFShape('models/museum/dao.glb'), {\r\n            position: new Vector3(119.7, 11.5, 280.3),\r\n            rotation: Quaternion.Euler(0, 105, 0),\r\n        }, 'DAO', npcRobot_2.RobotID.Whale, 8);\r\n        var vision = new MuseumPiece(new GLTFShape('models/museum/first-image-dcl.glb'), {\r\n            position: new Vector3(162, 9.4, 269.4),\r\n            rotation: Quaternion.Euler(0, 208, 0),\r\n        }, 'The Vision', npcRobot_2.RobotID.Whale, 11);\r\n        var firstPixels = new MuseumPiece(new GLTFShape('models/museum/pixels-beginning.glb'), {\r\n            position: new Vector3(168.24, 9.5, 266.3),\r\n            rotation: Quaternion.Euler(0, 208, 0),\r\n        }, 'First Experiments', npcRobot_2.RobotID.Whale, 13);\r\n        var first3D = new MuseumPiece(new GLTFShape('models/museum/first-experiment.glb'), {\r\n            position: new Vector3(174.5, 9.7, 262.5),\r\n            rotation: Quaternion.Euler(0, 208, 0),\r\n        }, 'First 3D Version', npcRobot_2.RobotID.Whale, 16);\r\n        var declaration = new MuseumPiece(new GLTFShape('models/museum/declaration.glb'), {\r\n            position: new Vector3(183.9, 10, 254.7),\r\n            rotation: Quaternion.Euler(0, 220, 0),\r\n        }, 'Declaration of independance', npcRobot_2.RobotID.Whale, 17);\r\n        var old_logo = new MuseumPiece(new GLTFShape('models/museum/old_logo.glb'), {\r\n            position: new Vector3(189.2, 10.4, 250),\r\n            rotation: Quaternion.Euler(0, 212, 0),\r\n        }, 'Original Logo', npcRobot_2.RobotID.Whale, 18);\r\n        var first_avatars = new MuseumPiece(new GLTFShape('models/museum/first-avatars.glb'), {\r\n            position: new Vector3(193.7, 10.45, 245.95),\r\n            rotation: Quaternion.Euler(0, 230, 0),\r\n        }, 'First Avatars', npcRobot_2.RobotID.Whale, 19);\r\n        var first_auction = new MuseumPiece(new GLTFShape('models/museum/first_auction.glb'), {\r\n            position: new Vector3(198.5, 10.5, 240.7),\r\n            rotation: Quaternion.Euler(0, 230, 0),\r\n        }, 'First Land Auction', npcRobot_2.RobotID.Whale, 28);\r\n        var avatar1 = new MuseumPiece(new GLTFShape('models/museum/avatars/first-avatar.glb'), {\r\n            position: new Vector3(200.99, 10.7, 234.22),\r\n            rotation: Quaternion.Euler(0, 315, 0),\r\n        }, 'Avatar', npcRobot_2.RobotID.Whale, 20);\r\n        var avatar2 = new MuseumPiece(new GLTFShape('models/museum/avatars/fox-avatar.glb'), {\r\n            position: new Vector3(199, 10.3, 231.8),\r\n            rotation: Quaternion.Euler(0, 315, 0),\r\n        }, 'Avatar', npcRobot_2.RobotID.Whale, 21);\r\n        var avatar3 = new MuseumPiece(new GLTFShape('models/museum/avatars/square-robot-avatar.glb'), {\r\n            position: new Vector3(196.8, 10.3, 229.7),\r\n            rotation: Quaternion.Euler(0, 315, 0),\r\n        }, 'Avatar', npcRobot_2.RobotID.Whale, 23);\r\n        var avatar5 = new MuseumPiece(new GLTFShape('models/museum/avatars/round-robot-avatar.glb'), {\r\n            position: new Vector3(194.38, 10.3, 227),\r\n            rotation: Quaternion.Euler(0, 315, 0),\r\n        }, 'Avatar', npcRobot_2.RobotID.Whale, 24);\r\n        var avatar6 = new MuseumPiece(new GLTFShape('models/museum/avatars/boy.glb'), {\r\n            position: new Vector3(191.59, 10.8, 224.95),\r\n            rotation: Quaternion.Euler(0, 315, 0),\r\n        }, 'Avatar', npcRobot_2.RobotID.Whale, 25);\r\n        var avatar7 = new MuseumPiece(new GLTFShape('models/museum/avatars/girl.glb'), {\r\n            position: new Vector3(188.7, 10.8, 223),\r\n            rotation: Quaternion.Euler(0, 315, 0),\r\n        }, 'Avatar', npcRobot_2.RobotID.Whale, 26);\r\n        var second_auction = new MuseumPiece(new GLTFShape('models/museum/second_auction.glb'), {\r\n            position: new Vector3(182.6, 10.5, 226.5),\r\n            rotation: Quaternion.Euler(0, 45, 0),\r\n        }, 'Second Land Auction', npcRobot_2.RobotID.Whale, 30);\r\n        var new_logo = new MuseumPiece(new GLTFShape('models/museum/new_logo.glb'), {\r\n            position: new Vector3(177, 10.45, 233.3),\r\n            rotation: Quaternion.Euler(0, 52, 0),\r\n        }, 'New Logo', npcRobot_2.RobotID.Whale, 32);\r\n        var landing = new MuseumPiece(new GLTFShape('models/museum/landing.glb'), {\r\n            position: new Vector3(171.8, 10.5, 239.9),\r\n            rotation: Quaternion.Euler(0, 50, 0),\r\n        }, 'Landing', npcRobot_2.RobotID.Whale, 34);\r\n        var builder = new MuseumPiece(new GLTFShape('models/museum/builder.glb'), {\r\n            position: new Vector3(165.9, 9.8, 246),\r\n            rotation: Quaternion.Euler(0, 45, 0),\r\n        }, 'Builder', npcRobot_2.RobotID.Whale, 37);\r\n        var names = new MuseumPiece(new GLTFShape('models/museum/names.glb'), {\r\n            position: new Vector3(159.8, 9.5, 251.9),\r\n            rotation: Quaternion.Euler(0, 42, 0),\r\n        }, 'Virtual identity', npcRobot_2.RobotID.Whale, 40);\r\n        var wearables = new MuseumPiece(new GLTFShape('models/museum/halloween_event.glb'), {\r\n            position: new Vector3(151.7, 9.4, 258.4),\r\n            rotation: Quaternion.Euler(0, 35, 0),\r\n        }, 'Token Wearables', npcRobot_2.RobotID.Whale, 41);\r\n        ///// UPSTAIRS\r\n        var map = new Entity();\r\n        map.addComponent(new Transform({\r\n            position: new Vector3(196.29, 18, 226.15),\r\n            rotation: Quaternion.Euler(0, 315, 0),\r\n            scale: new Vector3(1.25, 1.25, 1.25),\r\n        }));\r\n        map.addComponent(new GLTFShape('models/museum/map/map_base.glb'));\r\n        engine.addEntity(map);\r\n        var districts = new Entity();\r\n        districts.addComponent(new Transform({\r\n            position: new Vector3(),\r\n        }));\r\n        districts.setParent(map);\r\n        districts.addComponent(new GLTFShape('models/museum/map/map_districts.glb'));\r\n        districts.addComponent(new Animator());\r\n        districts.getComponent(Animator).addClip(districtOn);\r\n        districts.getComponent(Animator).addClip(districtOff);\r\n        districtOn.stop();\r\n        districts.addComponent(new OnPointerDown(function () {\r\n            animateMap(MapItems.DISTRICTS);\r\n            openPieceInfoWindow(districts, npcRobot_2.RobotID.Whale, 51);\r\n        }, {\r\n            button: ActionButton.PRIMARY,\r\n            hoverText: 'Districts',\r\n        }));\r\n        var plazas = new Entity();\r\n        plazas.setParent(map);\r\n        plazas.addComponent(new Transform({\r\n            position: new Vector3(),\r\n        }));\r\n        plazas.addComponent(new GLTFShape('models/museum/map/map_plazas.glb'));\r\n        plazas.addComponent(new Animator());\r\n        plazas.getComponent(Animator).addClip(plazasOn);\r\n        plazas.getComponent(Animator).addClip(plazasOff);\r\n        plazasOn.stop();\r\n        plazas.addComponent(new OnPointerDown(function () {\r\n            animateMap(MapItems.PLAZAS);\r\n            openPieceInfoWindow(plazas, npcRobot_2.RobotID.Whale, 49);\r\n        }, {\r\n            button: ActionButton.PRIMARY,\r\n            hoverText: 'Plazas',\r\n        }));\r\n        var roads = new Entity();\r\n        roads.setParent(map);\r\n        roads.addComponent(new Transform({\r\n            position: new Vector3(),\r\n        }));\r\n        roads.addComponent(new GLTFShape('models/museum/map/map_roads.glb'));\r\n        roads.addComponent(new Animator());\r\n        roads.getComponent(Animator).addClip(roadsOn);\r\n        roads.getComponent(Animator).addClip(roadsOff);\r\n        roadsOn.stop();\r\n        roads.addComponent(new OnPointerDown(function () {\r\n            animateMap(MapItems.ROADS);\r\n            openPieceInfoWindow(roads, npcRobot_2.RobotID.Whale, 48);\r\n        }, {\r\n            button: ActionButton.PRIMARY,\r\n            hoverText: 'Roads',\r\n        }));\r\n        var parcel = new MuseumPiece(new GLTFShape('models/museum/land.glb'), {\r\n            position: new Vector3(193, 17.4, 223.5),\r\n            rotation: Quaternion.Euler(0, 195, 0),\r\n        }, 'LAND Parcel', npcRobot_2.RobotID.Whale, 44);\r\n        var parcelPua = new MuseumPiece(new GLTFShape('models/museum/pua.glb'), {\r\n            position: new Vector3(193, 17.55, 223.5),\r\n            rotation: Quaternion.Euler(0, 195, 0),\r\n        }, 'LAND Parcel');\r\n        var estate = new MuseumPiece(new GLTFShape('models/museum/estate.glb'), {\r\n            position: new Vector3(199.2, 17.4, 230),\r\n            rotation: Quaternion.Euler(0, 30, 0),\r\n        }, 'Estate', npcRobot_2.RobotID.Whale, 47);\r\n        var estatePua = new MuseumPiece(new GLTFShape('models/museum/pua.glb'), {\r\n            position: new Vector3(199.2, 17.55, 230),\r\n            rotation: Quaternion.Euler(0, 30, 0),\r\n        }, 'Estate');\r\n        var museum_district = new MuseumPiece(new GLTFShape('models/museum/museum_district.glb'), {\r\n            position: new Vector3(181.2, 17.9, 228.6),\r\n            rotation: Quaternion.Euler(0, 50, 0),\r\n        }, 'Museum District', npcRobot_2.RobotID.Whale, 54);\r\n        var builderContest = new MuseumPiece(new GLTFShape('models/museum/builder_winner.glb'), {\r\n            position: new Vector3(175.2, 17.8, 236.6),\r\n            rotation: Quaternion.Euler(0, 50, 0),\r\n        }, 'First Builder Contest', npcRobot_2.RobotID.Whale, 57);\r\n        var builderContest2 = new MuseumPiece(new GLTFShape('models/museum/smart-items.glb'), {\r\n            position: new Vector3(169, 17.5, 243.95),\r\n            rotation: Quaternion.Euler(0, 50, 0),\r\n        }, 'Creator contest', npcRobot_2.RobotID.Whale, 59);\r\n        var mana = new MuseumPiece(new GLTFShape('models/museum/mana.glb'), {\r\n            position: new Vector3(168.4, 18.8, 255.7),\r\n            rotation: Quaternion.Euler(0, 135, 0),\r\n        }, 'MANA', npcRobot_2.RobotID.Whale, 62);\r\n        var hackathon = new MuseumPiece(new GLTFShape('models/museum/hackathon_winner.glb'), {\r\n            position: new Vector3(185.7, 17.6, 252),\r\n            rotation: Quaternion.Euler(0, 220, 0),\r\n        }, 'September 2019 Hackathon', npcRobot_2.RobotID.Whale, 67);\r\n        var hackathon2 = new MuseumPiece(new GLTFShape('models/museum/contest_game.glb'), {\r\n            position: new Vector3(192.9, 17.7, 245),\r\n            rotation: Quaternion.Euler(0, 225, 0),\r\n        }, 'Hackathons', npcRobot_2.RobotID.Whale, 66);\r\n        var community_contest = new MuseumPiece(new GLTFShape('models/museum/community_contest.glb'), {\r\n            position: new Vector3(199.5, 17.8, 238.2),\r\n            rotation: Quaternion.Euler(0, 230, 0),\r\n        }, 'Community Wearable Contest', npcRobot_2.RobotID.Whale, 69);\r\n        ////////  WEARABLES BUILDING\r\n        /*\r\n        Main = 0 (Alice)\r\n        Shell = 1 (Ron)\r\n        Agora = 2 (Bela)\r\n        Garden = 3 (Betty)\r\n        Trade = 4 (Charlie)\r\n        Artichoke = 5 (Marsha)\r\n        Whale = 6 (Bob)\r\n      */\r\n    }\r\n    exports.placeMuseumPieces = placeMuseumPieces;\r\n    function placeWearablePieces() {\r\n        var xmax_wearables = new MuseumPiece(new GLTFShape('models/wearables/xmas_stand.glb'), {\r\n            position: new Vector3(279.67, 9.5, 145),\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }, 'About X-Mas Wearables', npcRobot_2.RobotID.Shell, 14);\r\n        var halloween_wearables = new MuseumPiece(new GLTFShape('models/wearables/halloween_stand.glb'), {\r\n            position: new Vector3(265.38, 9.5, 114),\r\n            rotation: Quaternion.Euler(0, 150, 0),\r\n        }, 'About Halloween Wearables', npcRobot_2.RobotID.Shell, 15);\r\n    }\r\n    exports.placeWearablePieces = placeWearablePieces;\r\n    /////////// TRADE CENTER\r\n    exports.invisibleMaterial = new BasicMaterial();\r\n    exports.invisibleMaterial.texture = new Texture('images/transparent-texture.png');\r\n    exports.invisibleMaterial.alphaTest = 1;\r\n    function placeTradecenterPieces() {\r\n        var parcelTC = new MuseumPiece(new GLTFShape('models/museum/land.glb'), {\r\n            position: new Vector3(282.9, 11, 39),\r\n            rotation: Quaternion.Euler(0, 195, 0),\r\n        }, 'LAND Parcel', npcRobot_2.RobotID.Trade, 12);\r\n        var parcelPuaTC = new MuseumPiece(new GLTFShape('models/museum/pua.glb'), {\r\n            position: new Vector3(282.9, 11, 39),\r\n            rotation: Quaternion.Euler(0, 195, 0),\r\n        }, 'LAND Parcel');\r\n        var estateTC = new MuseumPiece(new GLTFShape('models/museum/estate.glb'), {\r\n            position: new Vector3(262.9, 11, 35.7),\r\n            rotation: Quaternion.Euler(0, 30, 0),\r\n        }, 'Estate', npcRobot_2.RobotID.Trade, 16);\r\n        var estatePuaTC = new MuseumPiece(new GLTFShape('models/museum/pua.glb'), {\r\n            position: new Vector3(262.9, 11, 35.7),\r\n            rotation: Quaternion.Euler(0, 30, 0),\r\n        }, 'Estate');\r\n        var mythicInfo = new MuseumPiece(new BoxShape(), {\r\n            position: new Vector3(264.5, 22.7, 16.25),\r\n            rotation: Quaternion.Euler(0, 204, 0),\r\n            scale: new Vector3(5.8, 1.2, 1.2),\r\n        }, 'Wearables', npcRobot_2.RobotID.Trade, 17);\r\n        mythicInfo.addComponent(exports.invisibleMaterial);\r\n        var epicInfo = new MuseumPiece(new BoxShape(), {\r\n            position: new Vector3(251.4, 22.7, 46.13),\r\n            rotation: Quaternion.Euler(0, 293, 0),\r\n            scale: new Vector3(5.8, 1.2, 1.2),\r\n        }, 'Wearables', npcRobot_2.RobotID.Trade, 17);\r\n        epicInfo.addComponent(exports.invisibleMaterial);\r\n        var legendaryInfo = new MuseumPiece(new BoxShape(), {\r\n            position: new Vector3(294.7, 22.7, 28.83),\r\n            rotation: Quaternion.Euler(0, 114, 0),\r\n            scale: new Vector3(5.8, 1.2, 1.2),\r\n        }, 'Wearables', npcRobot_2.RobotID.Trade, 17);\r\n        legendaryInfo.addComponent(exports.invisibleMaterial);\r\n        var rareInfo = new MuseumPiece(new BoxShape(), {\r\n            position: new Vector3(281.4, 22.7, 59.17),\r\n            rotation: Quaternion.Euler(0, 24, 0),\r\n            scale: new Vector3(5.8, 1.2, 1.2),\r\n        }, 'Wearables', npcRobot_2.RobotID.Trade, 17);\r\n        rareInfo.addComponent(exports.invisibleMaterial);\r\n    }\r\n    exports.placeTradecenterPieces = placeTradecenterPieces;\r\n    /////// GARDEN\r\n    function placeGardenPieces() {\r\n        var builderScene = new MuseumPiece(new GLTFShape('models/garden/booth_builder_scene.glb'), {\r\n            position: new Vector3(132.59, 2, 39.8),\r\n            rotation: Quaternion.Euler(0, 90, 0),\r\n        }, 'Builder scene', npcRobot_2.RobotID.Garden, 34);\r\n        var smartItemScene = new MuseumPiece(new GLTFShape('models/garden/booth_smart_items.glb'), {\r\n            position: new Vector3(106, 2, 27.7),\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }, 'Smart Item scene', npcRobot_2.RobotID.Garden, 35);\r\n        var creatorProgram = new Entity();\r\n        creatorProgram.addComponent(new Transform({\r\n            position: new Vector3(126.24, 2, 30.6),\r\n            rotation: Quaternion.Euler(0, 45 + 270, 0),\r\n        }));\r\n        creatorProgram.addComponent(new GLTFShape('models/garden/creator-contest.glb'));\r\n        engine.addEntity(creatorProgram);\r\n        creatorProgram.addComponent(new OnPointerDown(function (e) {\r\n            openExternalURL('https://decentraland.org/blog/announcements/introducing-the-decentraland-content-creator-program/');\r\n        }, { hoverText: 'Learn more', button: ActionButton.PRIMARY }));\r\n        var builderLink = new Entity();\r\n        builderLink.addComponent(new Transform({\r\n            position: new Vector3(121.6, 1.2, 20.5),\r\n            rotation: Quaternion.Euler(0, 0, 0),\r\n            scale: new Vector3(1.5, 1.5, 1.5),\r\n        }));\r\n        builderLink.addComponent(new GLTFShape('models/garden/builder.glb'));\r\n        engine.addEntity(builderLink);\r\n        builderLink.addComponent(new OnPointerDown(function (e) {\r\n            openExternalURL('https://builder.decentraland.org');\r\n        }, { hoverText: 'Try the Builder', button: ActionButton.PRIMARY }));\r\n        var docsLink = new Entity();\r\n        docsLink.addComponent(new Transform({\r\n            position: new Vector3(121.6, 1.2, 17.5),\r\n            rotation: Quaternion.Euler(0, 0, 0),\r\n            scale: new Vector3(1.5, 1.5, 1.5),\r\n        }));\r\n        docsLink.addComponent(new GLTFShape('models/garden/docs.glb'));\r\n        docsLink.addComponent(new OnPointerDown(function (e) {\r\n            openExternalURL('https://docs.decentraland.org');\r\n        }, { hoverText: 'Read the Docs', button: ActionButton.PRIMARY }));\r\n        engine.addEntity(docsLink);\r\n        var discordLink = new Entity();\r\n        discordLink.addComponent(new Transform({\r\n            position: new Vector3(113.6, 1.5, 20.5),\r\n            rotation: Quaternion.Euler(0, 0, 0),\r\n            scale: new Vector3(1, 1, 1),\r\n        }));\r\n        discordLink.addComponent(new GLTFShape('models/garden/discord.glb'));\r\n        discordLink.addComponent(new OnPointerDown(function (e) {\r\n            openExternalURL('https://discordapp.com/invite/9EcuFgC');\r\n        }, { hoverText: 'Join the Discussion', button: ActionButton.PRIMARY }));\r\n        engine.addEntity(discordLink);\r\n        var twitterLink = new Entity();\r\n        twitterLink.addComponent(new Transform({\r\n            position: new Vector3(113.6, 1.5, 17.5),\r\n            rotation: Quaternion.Euler(0, 0, 0),\r\n            scale: new Vector3(1, 1, 1),\r\n        }));\r\n        twitterLink.addComponent(new GLTFShape('models/garden/twitter.glb'));\r\n        twitterLink.addComponent(new OnPointerDown(function (e) {\r\n            openExternalURL('https://twitter.com/decentraland');\r\n        }, { hoverText: 'Follow Us!', button: ActionButton.PRIMARY }));\r\n        engine.addEntity(twitterLink);\r\n    }\r\n    exports.placeGardenPieces = placeGardenPieces;\r\n    ///// MAP HELPERS\r\n    var MapItems;\r\n    (function (MapItems) {\r\n        MapItems[\"DISTRICTS\"] = \"districts\";\r\n        MapItems[\"PLAZAS\"] = \"plazas\";\r\n        MapItems[\"ROADS\"] = \"roads\";\r\n    })(MapItems = exports.MapItems || (exports.MapItems = {}));\r\n    var currentItem = null;\r\n    function animateMap(item) {\r\n        log('selected item: ', item);\r\n        switch (currentItem) {\r\n            case MapItems.DISTRICTS:\r\n                districtOff.play();\r\n                break;\r\n            case MapItems.ROADS:\r\n                roadsOn.stop();\r\n                roadsOff.play();\r\n                break;\r\n            case MapItems.PLAZAS:\r\n                plazasOn.stop();\r\n                plazasOff.play();\r\n                break;\r\n        }\r\n        if (item != currentItem) {\r\n            currentItem = item;\r\n            switch (item) {\r\n                case MapItems.DISTRICTS:\r\n                    log('clicked Districts');\r\n                    districtOff.stop();\r\n                    districtOn.stop();\r\n                    districtOn.play();\r\n                    break;\r\n                case MapItems.ROADS:\r\n                    log('clicked Roads');\r\n                    roadsOff.stop();\r\n                    roadsOn.stop();\r\n                    roadsOn.play();\r\n                    break;\r\n                case MapItems.PLAZAS:\r\n                    log('clicked Plazas');\r\n                    plazasOff.stop();\r\n                    plazasOn.stop();\r\n                    plazasOn.play();\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            currentItem = null;\r\n        }\r\n    }\r\n    exports.animateMap = animateMap;\r\n});\r\ndefine(\"src/modules/marketData\", [\"require\", \"exports\", \"src/modules/museumItems\"], function (require, exports, museumItems_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.updateTradeCentrer = exports.toMana = exports.WearablePreview = exports.StockData = exports.StockDataTypes = void 0;\r\n    /////// GET DATA FROM SERVER\r\n    ////// POSITION ALL PANELS\r\n    /// LOWER FLOOR BOARD\r\n    var lowerBoardWidth = -3.365;\r\n    var lowerCenterPiece = new Entity();\r\n    lowerCenterPiece.addComponent(new Transform({\r\n        position: new Vector3(273.018, 6.5, 37.792),\r\n    }));\r\n    engine.addEntity(lowerCenterPiece);\r\n    var lowerRotationPanel1 = new Entity();\r\n    lowerRotationPanel1.addComponent(new Transform({\r\n        rotation: Quaternion.Euler(0, 293, 0),\r\n    }));\r\n    lowerRotationPanel1.setParent(lowerCenterPiece);\r\n    var lowerShiftPanel1 = new Entity();\r\n    lowerShiftPanel1.addComponent(new Transform({\r\n        position: new Vector3(0, 0, lowerBoardWidth),\r\n    }));\r\n    lowerShiftPanel1.setParent(lowerRotationPanel1);\r\n    lowerShiftPanel1.getComponent(Transform).rotate(new Vector3(1, 0, 0), -30);\r\n    var lowerRotationPanel2 = new Entity();\r\n    lowerRotationPanel2.addComponent(new Transform({\r\n        rotation: Quaternion.Euler(0, 353, 0),\r\n    }));\r\n    lowerRotationPanel2.setParent(lowerCenterPiece);\r\n    var lowerShiftPanel2 = new Entity();\r\n    lowerShiftPanel2.addComponent(new Transform({\r\n        position: new Vector3(0, 0, lowerBoardWidth),\r\n    }));\r\n    lowerShiftPanel2.setParent(lowerRotationPanel2);\r\n    lowerShiftPanel2.getComponent(Transform).rotate(new Vector3(1, 0, 0), -30);\r\n    var lowerRotationPanel3 = new Entity();\r\n    lowerRotationPanel3.addComponent(new Transform({\r\n        rotation: Quaternion.Euler(0, 53, 0),\r\n    }));\r\n    lowerRotationPanel3.setParent(lowerCenterPiece);\r\n    var lowerShiftPanel3 = new Entity();\r\n    lowerShiftPanel3.addComponent(new Transform({\r\n        position: new Vector3(0, 0, lowerBoardWidth - 0.1),\r\n    }));\r\n    lowerShiftPanel3.setParent(lowerRotationPanel3);\r\n    lowerShiftPanel3.getComponent(Transform).rotate(new Vector3(1, 0, 0), -30);\r\n    var lowerRotationPanel4 = new Entity();\r\n    lowerRotationPanel4.addComponent(new Transform({\r\n        rotation: Quaternion.Euler(0, 113, 0),\r\n    }));\r\n    lowerRotationPanel4.setParent(lowerCenterPiece);\r\n    var lowerShiftPanel4 = new Entity();\r\n    lowerShiftPanel4.addComponent(new Transform({\r\n        position: new Vector3(0, 0, lowerBoardWidth),\r\n    }));\r\n    lowerShiftPanel4.setParent(lowerRotationPanel4);\r\n    lowerShiftPanel4.getComponent(Transform).rotate(new Vector3(1, 0, 0), -30);\r\n    var lowerRotationPanel5 = new Entity();\r\n    lowerRotationPanel5.addComponent(new Transform({\r\n        rotation: Quaternion.Euler(0, 173, 0),\r\n    }));\r\n    lowerRotationPanel5.setParent(lowerCenterPiece);\r\n    var lowerShiftPanel5 = new Entity();\r\n    lowerShiftPanel5.addComponent(new Transform({\r\n        position: new Vector3(0, 0, lowerBoardWidth),\r\n    }));\r\n    lowerShiftPanel5.setParent(lowerRotationPanel5);\r\n    lowerShiftPanel5.getComponent(Transform).rotate(new Vector3(1, 0, 0), -30);\r\n    var lowerRotationPanel6 = new Entity();\r\n    lowerRotationPanel6.addComponent(new Transform({\r\n        rotation: Quaternion.Euler(0, 233, 0),\r\n    }));\r\n    lowerRotationPanel6.setParent(lowerCenterPiece);\r\n    var lowerShiftPanel6 = new Entity();\r\n    lowerShiftPanel6.addComponent(new Transform({\r\n        position: new Vector3(0, 0, lowerBoardWidth),\r\n    }));\r\n    lowerShiftPanel6.setParent(lowerRotationPanel6);\r\n    lowerShiftPanel6.getComponent(Transform).rotate(new Vector3(1, 0, 0), -30);\r\n    ///////// MID FLOOR\r\n    var midBoardWidth = lowerBoardWidth * 1.348; //-4.57\r\n    var midCenterPiece = new Entity();\r\n    midCenterPiece.addComponent(new Transform({\r\n        position: new Vector3(273.018, 14.5, 37.792),\r\n    }));\r\n    engine.addEntity(midCenterPiece);\r\n    var midRotationPanel1 = new Entity();\r\n    midRotationPanel1.addComponent(new Transform({\r\n        rotation: Quaternion.Euler(0, 293, 0),\r\n    }));\r\n    midRotationPanel1.setParent(midCenterPiece);\r\n    var midShiftPanel1 = new Entity();\r\n    midShiftPanel1.addComponent(new Transform({\r\n        position: new Vector3(0, 0, midBoardWidth + 0.05),\r\n    }));\r\n    midShiftPanel1.setParent(midRotationPanel1);\r\n    midShiftPanel1.getComponent(Transform).rotate(new Vector3(1, 0, 0), -30);\r\n    var midRotationPanel2 = new Entity();\r\n    midRotationPanel2.addComponent(new Transform({\r\n        rotation: Quaternion.Euler(0, 353, 0),\r\n    }));\r\n    midRotationPanel2.setParent(midCenterPiece);\r\n    var midShiftPanel2 = new Entity();\r\n    midShiftPanel2.addComponent(new Transform({\r\n        position: new Vector3(0, 0, midBoardWidth + 0.15),\r\n    }));\r\n    midShiftPanel2.setParent(midRotationPanel2);\r\n    midShiftPanel2.getComponent(Transform).rotate(new Vector3(1, 0, 0), -30);\r\n    var midRotationPanel3 = new Entity();\r\n    midRotationPanel3.addComponent(new Transform({\r\n        rotation: Quaternion.Euler(0, 53, 0),\r\n    }));\r\n    midRotationPanel3.setParent(midCenterPiece);\r\n    var midShiftPanel3 = new Entity();\r\n    midShiftPanel3.addComponent(new Transform({\r\n        position: new Vector3(0, 0, midBoardWidth + 0.2),\r\n    }));\r\n    midShiftPanel3.setParent(midRotationPanel3);\r\n    midShiftPanel3.getComponent(Transform).rotate(new Vector3(1, 0, 0), -30);\r\n    var midRotationPanel4 = new Entity();\r\n    midRotationPanel4.addComponent(new Transform({\r\n        rotation: Quaternion.Euler(0, 113, 0),\r\n    }));\r\n    midRotationPanel4.setParent(midCenterPiece);\r\n    var midShiftPanel4 = new Entity();\r\n    midShiftPanel4.addComponent(new Transform({\r\n        position: new Vector3(0, 0, midBoardWidth + 0.2),\r\n    }));\r\n    midShiftPanel4.setParent(midRotationPanel4);\r\n    midShiftPanel4.getComponent(Transform).rotate(new Vector3(1, 0, 0), -30);\r\n    var midRotationPanel5 = new Entity();\r\n    midRotationPanel5.addComponent(new Transform({\r\n        rotation: Quaternion.Euler(0, 173, 0),\r\n    }));\r\n    midRotationPanel5.setParent(midCenterPiece);\r\n    var midShiftPanel5 = new Entity();\r\n    midShiftPanel5.addComponent(new Transform({\r\n        position: new Vector3(0, 0, midBoardWidth),\r\n    }));\r\n    midShiftPanel5.setParent(midRotationPanel5);\r\n    midShiftPanel5.getComponent(Transform).rotate(new Vector3(1, 0, 0), -30);\r\n    var midRotationPanel6 = new Entity();\r\n    midRotationPanel6.addComponent(new Transform({\r\n        rotation: Quaternion.Euler(0, 233, 0),\r\n    }));\r\n    midRotationPanel6.setParent(midCenterPiece);\r\n    var midShiftPanel6 = new Entity();\r\n    midShiftPanel6.addComponent(new Transform({\r\n        position: new Vector3(0, 0, midBoardWidth),\r\n    }));\r\n    midShiftPanel6.setParent(midRotationPanel6);\r\n    midShiftPanel6.getComponent(Transform).rotate(new Vector3(1, 0, 0), -30);\r\n    /////// TOP FLOOR\r\n    var topBoardWidth = lowerBoardWidth * 1.98; //-6\r\n    var topCenterPiece = new Entity();\r\n    topCenterPiece.addComponent(new Transform({\r\n        position: new Vector3(273.19, 23.5, 37.85),\r\n    }));\r\n    engine.addEntity(topCenterPiece);\r\n    var topRotationPanel1 = new Entity();\r\n    topRotationPanel1.addComponent(new Transform({\r\n        rotation: Quaternion.Euler(0, 293, 0),\r\n    }));\r\n    topRotationPanel1.setParent(topCenterPiece);\r\n    var topShiftPanel1 = new Entity();\r\n    topShiftPanel1.addComponent(new Transform({\r\n        position: new Vector3(0, 0, topBoardWidth),\r\n    }));\r\n    topShiftPanel1.setParent(topRotationPanel1);\r\n    topShiftPanel1.getComponent(Transform).rotate(new Vector3(1, 0, 0), -30);\r\n    var topRotationPanel2 = new Entity();\r\n    topRotationPanel2.addComponent(new Transform({\r\n        rotation: Quaternion.Euler(0, 353, 0),\r\n    }));\r\n    topRotationPanel2.setParent(topCenterPiece);\r\n    var topShiftPanel2 = new Entity();\r\n    topShiftPanel2.addComponent(new Transform({\r\n        position: new Vector3(0, 0, topBoardWidth + 0.15),\r\n    }));\r\n    topShiftPanel2.setParent(topRotationPanel2);\r\n    topShiftPanel2.getComponent(Transform).rotate(new Vector3(1, 0, 0), -30);\r\n    var topRotationPanel3 = new Entity();\r\n    topRotationPanel3.addComponent(new Transform({\r\n        rotation: Quaternion.Euler(0, 53, 0),\r\n    }));\r\n    topRotationPanel3.setParent(topCenterPiece);\r\n    var topShiftPanel3 = new Entity();\r\n    topShiftPanel3.addComponent(new Transform({\r\n        position: new Vector3(0, 0, topBoardWidth + 0.2),\r\n    }));\r\n    topShiftPanel3.setParent(topRotationPanel3);\r\n    topShiftPanel3.getComponent(Transform).rotate(new Vector3(1, 0, 0), -30);\r\n    var topRotationPanel4 = new Entity();\r\n    topRotationPanel4.addComponent(new Transform({\r\n        rotation: Quaternion.Euler(0, 113, 0),\r\n    }));\r\n    topRotationPanel4.setParent(topCenterPiece);\r\n    var topShiftPanel4 = new Entity();\r\n    topShiftPanel4.addComponent(new Transform({\r\n        position: new Vector3(0, 0, topBoardWidth + 0.1),\r\n    }));\r\n    topShiftPanel4.setParent(topRotationPanel4);\r\n    topShiftPanel4.getComponent(Transform).rotate(new Vector3(1, 0, 0), -30);\r\n    var topRotationPanel5 = new Entity();\r\n    topRotationPanel5.addComponent(new Transform({\r\n        rotation: Quaternion.Euler(0, 173, 0),\r\n    }));\r\n    topRotationPanel5.setParent(topCenterPiece);\r\n    var topShiftPanel5 = new Entity();\r\n    topShiftPanel5.addComponent(new Transform({\r\n        position: new Vector3(0, 0, topBoardWidth),\r\n    }));\r\n    topShiftPanel5.setParent(topRotationPanel5);\r\n    topShiftPanel5.getComponent(Transform).rotate(new Vector3(1, 0, 0), -30);\r\n    var topRotationPanel6 = new Entity();\r\n    topRotationPanel6.addComponent(new Transform({\r\n        rotation: Quaternion.Euler(0, 233, 0),\r\n    }));\r\n    topRotationPanel6.setParent(topCenterPiece);\r\n    var topShiftPanel6 = new Entity();\r\n    topShiftPanel6.addComponent(new Transform({\r\n        position: new Vector3(0, 0, topBoardWidth - 0.05),\r\n    }));\r\n    topShiftPanel6.setParent(topRotationPanel6);\r\n    topShiftPanel6.getComponent(Transform).rotate(new Vector3(1, 0, 0), -30);\r\n    ////// FLAT WEARABLE BOARDS\r\n    var mythicBoard1 = new Entity();\r\n    mythicBoard1.addComponent(new Transform({\r\n        position: new Vector3(271.09, 21.6, 14.38),\r\n        rotation: Quaternion.Euler(0, 204, 0),\r\n        scale: new Vector3(0.7, 0.7, 0.7),\r\n    }));\r\n    engine.addEntity(mythicBoard1);\r\n    var mythicBoard2 = new Entity();\r\n    mythicBoard2.addComponent(new Transform({\r\n        position: new Vector3(258.25, 21.6, 19.46),\r\n        rotation: Quaternion.Euler(0, 203, 0),\r\n        scale: new Vector3(0.7, 0.7, 0.7),\r\n    }));\r\n    engine.addEntity(mythicBoard2);\r\n    var legendaryBoard1 = new Entity();\r\n    legendaryBoard1.addComponent(new Transform({\r\n        position: new Vector3(296.2, 21.6, 35.56),\r\n        rotation: Quaternion.Euler(0, 113, 0),\r\n        scale: new Vector3(0.7, 0.7, 0.7),\r\n    }));\r\n    engine.addEntity(legendaryBoard1);\r\n    var legendaryBoard2 = new Entity();\r\n    legendaryBoard2.addComponent(new Transform({\r\n        position: new Vector3(291.21, 21.6, 22.68),\r\n        rotation: Quaternion.Euler(0, 114, 0),\r\n        scale: new Vector3(0.7, 0.7, 0.7),\r\n    }));\r\n    engine.addEntity(legendaryBoard2);\r\n    var epicBoard1 = new Entity();\r\n    epicBoard1.addComponent(new Transform({\r\n        position: new Vector3(249.42, 21.6, 39.43),\r\n        rotation: Quaternion.Euler(0, 293, 0),\r\n        scale: new Vector3(0.7, 0.7, 0.7),\r\n    }));\r\n    engine.addEntity(epicBoard1);\r\n    var epicBoard2 = new Entity();\r\n    epicBoard2.addComponent(new Transform({\r\n        position: new Vector3(254.54, 21.6, 52.54),\r\n        rotation: Quaternion.Euler(0, 292, 0),\r\n        scale: new Vector3(0.7, 0.7, 0.7),\r\n    }));\r\n    engine.addEntity(epicBoard2);\r\n    var rareBoard1 = new Entity();\r\n    rareBoard1.addComponent(new Transform({\r\n        position: new Vector3(275.07, 21.6, 61.29),\r\n        rotation: Quaternion.Euler(0, 24, 0),\r\n        scale: new Vector3(0.7, 0.7, 0.7),\r\n    }));\r\n    engine.addEntity(rareBoard1);\r\n    var rareBoard2 = new Entity();\r\n    rareBoard2.addComponent(new Transform({\r\n        position: new Vector3(288.03, 21.6, 56),\r\n        rotation: Quaternion.Euler(0, 24, 0),\r\n        scale: new Vector3(0.7, 0.7, 0.7),\r\n    }));\r\n    engine.addEntity(rareBoard2);\r\n    ////// UPDATE BOARDS\r\n    var StockDataTypes;\r\n    (function (StockDataTypes) {\r\n        StockDataTypes[\"BIGTITLE\"] = \"bigtitle\";\r\n        StockDataTypes[\"BIGVALUE\"] = \"bigvalue\";\r\n        StockDataTypes[\"TITLE\"] = \"title\";\r\n        StockDataTypes[\"LABEL\"] = \"label\";\r\n        StockDataTypes[\"VALUE\"] = \"value\";\r\n        StockDataTypes[\"UNIT\"] = \"unit\";\r\n        StockDataTypes[\"TINYVALUE\"] = \"tinyvalue\";\r\n        StockDataTypes[\"TINYTITLE\"] = \"tinytitle\";\r\n    })(StockDataTypes = exports.StockDataTypes || (exports.StockDataTypes = {}));\r\n    var SFFont = new Font(Fonts.SanFrancisco);\r\n    var StockData = /** @class */ (function (_super) {\r\n        __extends(StockData, _super);\r\n        function StockData(type, text, transform, parent) {\r\n            var _this = _super.call(this) || this;\r\n            engine.addEntity(_this);\r\n            _this.addComponent(new Transform(transform));\r\n            _this.setParent(parent);\r\n            var shape = new TextShape(text);\r\n            shape.font = SFFont;\r\n            shape.width = 10;\r\n            switch (type) {\r\n                case StockDataTypes.BIGTITLE:\r\n                    shape.fontSize = 6;\r\n                    shape.color = Color3.White();\r\n                    shape.vTextAlign = 'center';\r\n                    break;\r\n                case StockDataTypes.BIGVALUE:\r\n                    shape.fontSize = 3;\r\n                    shape.color = Color3.Green();\r\n                    shape.vTextAlign = 'center';\r\n                    break;\r\n                case StockDataTypes.TITLE:\r\n                    shape.fontSize = 3;\r\n                    shape.color = Color3.White();\r\n                    shape.vTextAlign = 'center';\r\n                    shape.width = 10;\r\n                    break;\r\n                case StockDataTypes.TINYTITLE:\r\n                    shape.fontSize = 2;\r\n                    shape.color = Color3.White();\r\n                    shape.vTextAlign = 'center';\r\n                    shape.width = 10;\r\n                    break;\r\n                case StockDataTypes.LABEL:\r\n                    shape.fontSize = 3;\r\n                    shape.color = Color3.White();\r\n                    shape.vTextAlign = 'left';\r\n                    break;\r\n                case StockDataTypes.VALUE:\r\n                    shape.fontSize = 3;\r\n                    shape.color = Color3.Green();\r\n                    shape.vTextAlign = 'right';\r\n                    break;\r\n                case StockDataTypes.TINYVALUE:\r\n                    shape.fontSize = 2;\r\n                    shape.color = Color3.Green();\r\n                    shape.vTextAlign = 'right';\r\n                    break;\r\n                case StockDataTypes.UNIT:\r\n                    shape.fontSize = 2;\r\n                    shape.color = Color3.White();\r\n                    shape.vTextAlign = 'right';\r\n                    break;\r\n            }\r\n            _this.addComponent(shape);\r\n            return _this;\r\n        }\r\n        return StockData;\r\n    }(Entity));\r\n    exports.StockData = StockData;\r\n    var WearablePreview = /** @class */ (function (_super) {\r\n        __extends(WearablePreview, _super);\r\n        function WearablePreview(image, transform, parent) {\r\n            var _this = _super.call(this) || this;\r\n            engine.addEntity(_this);\r\n            _this.setParent(parent);\r\n            _this.addComponent(new Transform(transform));\r\n            _this.getComponent(Transform).scale = new Vector3(1.5, 1.5, 1);\r\n            _this.getComponent(Transform).rotation = Quaternion.Euler(180, 0, 0);\r\n            var wearableImage = new Texture(image);\r\n            var wearableMaterial = new Material();\r\n            wearableMaterial.roughness = 1;\r\n            wearableMaterial.albedoTexture = wearableImage;\r\n            _this.addComponent(new PlaneShape());\r\n            _this.addComponent(wearableMaterial);\r\n            return _this;\r\n        }\r\n        return WearablePreview;\r\n    }(Entity));\r\n    exports.WearablePreview = WearablePreview;\r\n    // To convert values in weis\r\n    function toMana(longNum) {\r\n        var shortNum = longNum / 1000000000000000000;\r\n        var squaredNum = shortNum * Math.pow(10, 4);\r\n        return Math.round(squaredNum) / Math.pow(10, 4);\r\n    }\r\n    exports.toMana = toMana;\r\n    function updateTradeCentrer(data) {\r\n        //// LOWER FLOOR\r\n        //1\r\n        var lowerPanel1Title = new StockData(StockDataTypes.BIGTITLE, 'BTC Price', {\r\n            position: new Vector3(0, 0.4, 0),\r\n        }, lowerShiftPanel1);\r\n        var lowerPanel1Value = new StockData(StockDataTypes.BIGVALUE, data.coins.BTCUSDT.toString() + ' USD', {\r\n            position: new Vector3(0, -0.3, 0),\r\n        }, lowerShiftPanel1);\r\n        //2\r\n        var lowerPanel2Title = new StockData(StockDataTypes.BIGTITLE, 'ETH Price', {\r\n            position: new Vector3(0, 0.4, 0),\r\n        }, lowerShiftPanel2);\r\n        var lowerPanel2Value = new StockData(StockDataTypes.BIGVALUE, data.coins.ETHUSDT.toString() + ' USD', {\r\n            position: new Vector3(0, -0.3, 0),\r\n        }, lowerShiftPanel2);\r\n        //3\r\n        var lowerPanel3itle = new StockData(StockDataTypes.BIGTITLE, 'MANA Price', {\r\n            position: new Vector3(0, 0.4, 0),\r\n        }, lowerShiftPanel3);\r\n        var lowerPanel3Value = new StockData(StockDataTypes.BIGVALUE, data.coins.MANAETH.toString().slice(0, 10) + ' ETH', {\r\n            position: new Vector3(0, -0.3, 0),\r\n        }, lowerShiftPanel3);\r\n        //4\r\n        var lowerPanel4itle = new StockData(StockDataTypes.BIGTITLE, 'MANA Price', {\r\n            position: new Vector3(0, 0.4, 0),\r\n        }, lowerShiftPanel4);\r\n        var lowerPanel4Value = new StockData(StockDataTypes.BIGVALUE, data.coins.MANAUSD.toString().slice(0, 8) + ' USD', {\r\n            position: new Vector3(0, -0.3, 0),\r\n        }, lowerShiftPanel4);\r\n        //5\r\n        var lowerPanel5itle = new StockData(StockDataTypes.TITLE, 'DCL token transactions', {\r\n            position: new Vector3(0, 0.5, 0),\r\n        }, lowerShiftPanel5);\r\n        var lowerPanel5itle2 = new StockData(StockDataTypes.TITLE, 'last 7 days', {\r\n            position: new Vector3(0, 0.15, 0),\r\n        }, lowerShiftPanel5);\r\n        var totalTokenSalesWeek = data.landSalesWeek + data.wearableSalesWeek;\r\n        var lowerPanel5Value = new StockData(StockDataTypes.BIGVALUE, totalTokenSalesWeek.toString() + ' tokens', {\r\n            position: new Vector3(0, -0.3, 0),\r\n        }, lowerShiftPanel5);\r\n        //6\r\n        var lowerPanel6itle = new StockData(StockDataTypes.TITLE, 'DCL token transactions', {\r\n            position: new Vector3(0, 0.5, 0),\r\n        }, lowerShiftPanel6);\r\n        var lowerPanel6itle2 = new StockData(StockDataTypes.TITLE, 'last 7 days', {\r\n            position: new Vector3(0, 0.15, 0),\r\n        }, lowerShiftPanel6);\r\n        var totalTokenManaWeek = (data.totalMANALandAndEstateWeek + data.totalMANAWearablesWeek) *\r\n            data.coins.MANAUSD;\r\n        var roundedTotalTokenManaWeek = Math.floor(totalTokenManaWeek * 100) / 100;\r\n        var lowerPanel6Value = new StockData(StockDataTypes.BIGVALUE, roundedTotalTokenManaWeek.toString() + ' USD', {\r\n            position: new Vector3(0, -0.3, 0),\r\n        }, lowerShiftPanel6);\r\n        ///// MID FLOOR (LAND)\r\n        //1\r\n        var midPanel1Title = new StockData(StockDataTypes.TITLE, 'Parcel + Estate sales', {\r\n            position: new Vector3(0, 1.5, 0),\r\n        }, midShiftPanel1);\r\n        var midPanel1Label1 = new StockData(StockDataTypes.LABEL, 'Yesterday', {\r\n            position: new Vector3(-0.7, 0.9, 0),\r\n        }, midShiftPanel1);\r\n        var midPanel1Label2 = new StockData(StockDataTypes.LABEL, '7 days', {\r\n            position: new Vector3(-0.7, 0.4, 0),\r\n        }, midShiftPanel1);\r\n        var midPanel1Label3 = new StockData(StockDataTypes.LABEL, '30 days', {\r\n            position: new Vector3(-0.7, -0.1, 0),\r\n        }, midShiftPanel1);\r\n        var midPanel1Value1 = new StockData(StockDataTypes.VALUE, data.landSalesYesterday.toString(), {\r\n            position: new Vector3(0.7, 0.9, 0),\r\n        }, midShiftPanel1);\r\n        var midPanel1Value2 = new StockData(StockDataTypes.VALUE, data.landSalesWeek.toString(), {\r\n            position: new Vector3(0.7, 0.4, 0),\r\n        }, midShiftPanel1);\r\n        var midPanel1Value3 = new StockData(StockDataTypes.VALUE, data.landSalesMonth.toString(), {\r\n            position: new Vector3(0.7, -0.1, 0),\r\n        }, midShiftPanel1);\r\n        //2\r\n        var midPanel2Title = new StockData(StockDataTypes.TITLE, 'Cheapest Parcel Sold', {\r\n            position: new Vector3(0, 1.5, 0),\r\n        }, midShiftPanel2);\r\n        var midPanel2Label1 = new StockData(StockDataTypes.LABEL, 'Yesterday', {\r\n            position: new Vector3(-1, 0.9, 0),\r\n        }, midShiftPanel2);\r\n        var midPanel2Label2 = new StockData(StockDataTypes.LABEL, '7 days', {\r\n            position: new Vector3(-1, 0.4, 0),\r\n        }, midShiftPanel2);\r\n        var midPanel2Label3 = new StockData(StockDataTypes.LABEL, '30 days', {\r\n            position: new Vector3(-1, -0.1, 0),\r\n        }, midShiftPanel2);\r\n        var midPanel2Value1 = new StockData(StockDataTypes.VALUE, data.cheapestLandYesterday.toString(), {\r\n            position: new Vector3(0.7, 0.9, 0),\r\n        }, midShiftPanel2);\r\n        var midPanel2Value2 = new StockData(StockDataTypes.VALUE, data.cheapestLandWeek.toString(), {\r\n            position: new Vector3(0.7, 0.4, 0),\r\n        }, midShiftPanel2);\r\n        var midPanel2Value3 = new StockData(StockDataTypes.VALUE, data.cheapestLandMonth.toString(), {\r\n            position: new Vector3(0.7, -0.1, 0),\r\n        }, midShiftPanel2);\r\n        var midPanel2Unit1 = new StockData(StockDataTypes.UNIT, 'MANA', {\r\n            position: new Vector3(1.7, 0.9, 0),\r\n        }, midShiftPanel2);\r\n        var midPanel2Unit2 = new StockData(StockDataTypes.UNIT, 'MANA', {\r\n            position: new Vector3(1.7, 0.4, 0),\r\n        }, midShiftPanel2);\r\n        var midPanel2Unit3 = new StockData(StockDataTypes.UNIT, 'MANA', {\r\n            position: new Vector3(1.7, -0.1, 0),\r\n        }, midShiftPanel2);\r\n        //3\r\n        var midPanel3Title = new StockData(StockDataTypes.TITLE, 'Most Expensive Single Parcel', {\r\n            position: new Vector3(0, 1.5, 0),\r\n        }, midShiftPanel3);\r\n        var midPanel3Label1 = new StockData(StockDataTypes.LABEL, 'Yesterday', {\r\n            position: new Vector3(-1, 0.9, 0),\r\n        }, midShiftPanel3);\r\n        var midPanel3Label2 = new StockData(StockDataTypes.LABEL, '7 days', {\r\n            position: new Vector3(-1, 0.4, 0),\r\n        }, midShiftPanel3);\r\n        var midPanel3Label3 = new StockData(StockDataTypes.LABEL, '30 days', {\r\n            position: new Vector3(-1, -0.1, 0),\r\n        }, midShiftPanel3);\r\n        var midPanel3Value1 = new StockData(StockDataTypes.VALUE, data.expensiveLandYesterday.toString(), {\r\n            position: new Vector3(0.7, 0.9, 0),\r\n        }, midShiftPanel3);\r\n        var midPanel3Value2 = new StockData(StockDataTypes.VALUE, data.expensiveLandWeek.toString(), {\r\n            position: new Vector3(0.7, 0.4, 0),\r\n        }, midShiftPanel3);\r\n        var midPanel3Value3 = new StockData(StockDataTypes.VALUE, data.expensiveLandMonth.toString(), {\r\n            position: new Vector3(0.7, -0.1, 0),\r\n        }, midShiftPanel3);\r\n        var midPanel3Unit1 = new StockData(StockDataTypes.UNIT, 'MANA', {\r\n            position: new Vector3(1.7, 0.9, 0),\r\n        }, midShiftPanel3);\r\n        var midPanel3Unit2 = new StockData(StockDataTypes.UNIT, 'MANA', {\r\n            position: new Vector3(1.7, 0.4, 0),\r\n        }, midShiftPanel3);\r\n        var midPanel3Unit3 = new StockData(StockDataTypes.UNIT, 'MANA', {\r\n            position: new Vector3(1.7, -0.1, 0),\r\n        }, midShiftPanel3);\r\n        //4\r\n        var midPanel4Title = new StockData(StockDataTypes.TITLE, 'Most Expensive Estate', {\r\n            position: new Vector3(0, 1.5, 0),\r\n        }, midShiftPanel4);\r\n        var midPanel4Label1 = new StockData(StockDataTypes.LABEL, 'Yesterday', {\r\n            position: new Vector3(-1, 0.9, 0),\r\n        }, midShiftPanel4);\r\n        var midPanel4Label2 = new StockData(StockDataTypes.LABEL, '7 days', {\r\n            position: new Vector3(-1, 0.4, 0),\r\n        }, midShiftPanel4);\r\n        var midPanel4Label3 = new StockData(StockDataTypes.LABEL, '30 days', {\r\n            position: new Vector3(-1, -0.1, 0),\r\n        }, midShiftPanel4);\r\n        var midPanel4Value1 = new StockData(StockDataTypes.VALUE, data.expensiveEstateYesterday.toString(), {\r\n            position: new Vector3(0.7, 0.9, 0),\r\n        }, midShiftPanel4);\r\n        var midPanel4Value2 = new StockData(StockDataTypes.VALUE, data.expensiveEstateWeek.toString(), {\r\n            position: new Vector3(0.7, 0.4, 0),\r\n        }, midShiftPanel4);\r\n        var midPanel4Value3 = new StockData(StockDataTypes.VALUE, data.expensiveEstateMonth.toString(), {\r\n            position: new Vector3(0.7, -0.1, 0),\r\n        }, midShiftPanel4);\r\n        var midPanel4Unit1 = new StockData(StockDataTypes.UNIT, 'MANA', {\r\n            position: new Vector3(1.7, 0.9, 0),\r\n        }, midShiftPanel4);\r\n        var midPanel4Unit2 = new StockData(StockDataTypes.UNIT, 'MANA', {\r\n            position: new Vector3(1.7, 0.4, 0),\r\n        }, midShiftPanel4);\r\n        var midPanel4Unit3 = new StockData(StockDataTypes.UNIT, 'MANA', {\r\n            position: new Vector3(1.7, -0.1, 0),\r\n        }, midShiftPanel4);\r\n        //5\r\n        var midPanel5Title = new StockData(StockDataTypes.TITLE, 'LAND Transaction Volume', {\r\n            position: new Vector3(0, 1.5, 0),\r\n        }, midShiftPanel5);\r\n        var midPanel5Label1 = new StockData(StockDataTypes.LABEL, 'Yesterday', {\r\n            position: new Vector3(-1, 0.9, 0),\r\n        }, midShiftPanel5);\r\n        var midPanel5Label2 = new StockData(StockDataTypes.LABEL, '7 days', {\r\n            position: new Vector3(-1, 0.4, 0),\r\n        }, midShiftPanel5);\r\n        var midPanel5Label3 = new StockData(StockDataTypes.LABEL, '30 days', {\r\n            position: new Vector3(-1, -0.1, 0),\r\n        }, midShiftPanel5);\r\n        var midPanel5Value1 = new StockData(StockDataTypes.VALUE, data.totalMANALandAndEstateYesterday.toString(), {\r\n            position: new Vector3(0.7, 0.9, 0),\r\n        }, midShiftPanel5);\r\n        var midPanel5Value2 = new StockData(StockDataTypes.VALUE, data.totalMANALandAndEstateWeek.toString(), {\r\n            position: new Vector3(0.7, 0.4, 0),\r\n        }, midShiftPanel5);\r\n        var midPanel5Value3 = new StockData(StockDataTypes.VALUE, data.totalMANALandAndEstateMonth.toString(), {\r\n            position: new Vector3(0.7, -0.1, 0),\r\n        }, midShiftPanel5);\r\n        var midPanel5Unit1 = new StockData(StockDataTypes.UNIT, 'MANA', {\r\n            position: new Vector3(1.7, 0.9, 0),\r\n        }, midShiftPanel5);\r\n        var midPanel5Unit2 = new StockData(StockDataTypes.UNIT, 'MANA', {\r\n            position: new Vector3(1.7, 0.4, 0),\r\n        }, midShiftPanel5);\r\n        var midPanel5Unit3 = new StockData(StockDataTypes.UNIT, 'MANA', {\r\n            position: new Vector3(1.7, -0.1, 0),\r\n        }, midShiftPanel5);\r\n        //6\r\n        // link to parcel on market\r\n        var linkToParcel = new Entity();\r\n        linkToParcel.setParent(midShiftPanel6);\r\n        linkToParcel.addComponent(new PlaneShape());\r\n        linkToParcel.addComponent(new Transform({\r\n            position: new Vector3(0, 0.5, -0.25),\r\n            scale: new Vector3(3, 3, 3),\r\n        }));\r\n        linkToParcel.addComponent(museumItems_1.invisibleMaterial);\r\n        linkToParcel.addComponent(new OnPointerDown(function (e) {\r\n            var url = 'https://market.decentraland.org/contracts/0xf87e31492faf9a91b02ee0deaad50d51d56d5d4d/tokens/' +\r\n                data.cheapestLandNow.parcel.tokenId;\r\n            openExternalURL(url);\r\n        }, {\r\n            button: ActionButton.PRIMARY,\r\n            hoverText: 'Open in Market',\r\n        }));\r\n        engine.addEntity(linkToParcel);\r\n        var midPane6Title = new StockData(StockDataTypes.TITLE, 'Cheapest Parcel On Sale', {\r\n            position: new Vector3(0, 1.6, 0),\r\n        }, midShiftPanel6);\r\n        var midPane6Title2 = new StockData(StockDataTypes.TITLE, 'now in the market', {\r\n            position: new Vector3(0, 1.3, 0),\r\n        }, midShiftPanel6);\r\n        var midPane6Title3 = new StockData(StockDataTypes.BIGTITLE, data.cheapestLandNow.parcel.x.toString() +\r\n            ', ' +\r\n            data.cheapestLandNow.parcel.y.toString(), {\r\n            position: new Vector3(0, 0.8, 0),\r\n        }, midShiftPanel6);\r\n        var cheapParcelPrice = toMana(data.cheapestLandNow.searchOrderPrice).toString();\r\n        var midPane6Value1 = new StockData(StockDataTypes.VALUE, cheapParcelPrice, {\r\n            position: new Vector3(-0.65, 0, 0),\r\n        }, midShiftPanel6);\r\n        var midPane6VUnit1 = new StockData(StockDataTypes.UNIT, 'MANA', {\r\n            position: new Vector3(0.65, 0, 0),\r\n        }, midShiftPanel6);\r\n        var midPane6VLabel1 = new StockData(StockDataTypes.LABEL, 'owner:', {\r\n            position: new Vector3(-1, -0.4, 0),\r\n        }, midShiftPanel6);\r\n        var shortenedOwner = data.cheapestLandNow.owner.address.slice(0, 5) +\r\n            '...' +\r\n            data.cheapestLandNow.owner.address.slice(data.cheapestLandNow.owner.address.length - 4);\r\n        var midPane6Value2 = new StockData(StockDataTypes.VALUE, shortenedOwner, {\r\n            position: new Vector3(0.5, -0.4, 0),\r\n        }, midShiftPanel6);\r\n        //TODO\r\n        ///// TOP FLOOR (WEARABLES)\r\n        //1\r\n        var topPanel1Title = new StockData(StockDataTypes.BIGTITLE, 'Wearable Sales', {\r\n            position: new Vector3(0, 0.9, 0),\r\n        }, topShiftPanel1);\r\n        var topPanel1Label1 = new StockData(StockDataTypes.LABEL, 'Yesterday', {\r\n            position: new Vector3(-0.7, 0, 0),\r\n        }, topShiftPanel1);\r\n        var topPanel1Label2 = new StockData(StockDataTypes.LABEL, '7 days', {\r\n            position: new Vector3(-0.7, -0.5, 0),\r\n        }, topShiftPanel1);\r\n        var topPanel1Label3 = new StockData(StockDataTypes.LABEL, '30 days', {\r\n            position: new Vector3(-0.7, -1, 0),\r\n        }, topShiftPanel1);\r\n        var topPanel1Value1 = new StockData(StockDataTypes.VALUE, data.wearableSalesYesterday.toString(), {\r\n            position: new Vector3(0.7, 0, 0),\r\n        }, topShiftPanel1);\r\n        var topPanel1Value2 = new StockData(StockDataTypes.VALUE, data.wearableSalesWeek.toString(), {\r\n            position: new Vector3(0.7, -0.5, 0),\r\n        }, topShiftPanel1);\r\n        var topPanel1Value3 = new StockData(StockDataTypes.VALUE, data.wearableSalesMonth.toString(), {\r\n            position: new Vector3(0.7, -1, 0),\r\n        }, topShiftPanel1);\r\n        //2\r\n        var topPanel2Title = new StockData(StockDataTypes.BIGTITLE, 'Most Expensive Wearable', {\r\n            position: new Vector3(0.2, 0.9, 0),\r\n        }, topShiftPanel2);\r\n        var topPanel2Label1 = new StockData(StockDataTypes.LABEL, 'Yesterday', {\r\n            position: new Vector3(-1, 0, 0),\r\n        }, topShiftPanel2);\r\n        var topPanel2Label2 = new StockData(StockDataTypes.LABEL, '7 days', {\r\n            position: new Vector3(-1, -0.5, 0),\r\n        }, topShiftPanel2);\r\n        var topPanel2Label3 = new StockData(StockDataTypes.LABEL, '30 days', {\r\n            position: new Vector3(-1, -1, 0),\r\n        }, topShiftPanel2);\r\n        var topPanel2Value1 = new StockData(StockDataTypes.VALUE, data.expensiveWearableYesterday.toString(), {\r\n            position: new Vector3(0.7, 0, 0),\r\n        }, topShiftPanel2);\r\n        var topPanel2Value2 = new StockData(StockDataTypes.VALUE, data.expensiveWearableWeek.toString(), {\r\n            position: new Vector3(0.7, -0.5, 0),\r\n        }, topShiftPanel2);\r\n        var topPanel2Value3 = new StockData(StockDataTypes.VALUE, data.expensiveWearableMonth.toString(), {\r\n            position: new Vector3(0.7, -1, 0),\r\n        }, topShiftPanel2);\r\n        var topPanel2Unit1 = new StockData(StockDataTypes.UNIT, 'MANA', {\r\n            position: new Vector3(1.7, 0, 0),\r\n        }, topShiftPanel2);\r\n        var topPanel2Unit2 = new StockData(StockDataTypes.UNIT, 'MANA', {\r\n            position: new Vector3(1.7, -0.5, 0),\r\n        }, topShiftPanel2);\r\n        var topPanel2Unit3 = new StockData(StockDataTypes.UNIT, 'MANA', {\r\n            position: new Vector3(1.7, -1, 0),\r\n        }, topShiftPanel2);\r\n        //3\r\n        var topPanel3Title = new StockData(StockDataTypes.BIGTITLE, 'Most Expensive Wearable', {\r\n            position: new Vector3(0.2, 0.9, 0),\r\n        }, topShiftPanel3);\r\n        var topPanel3Label1 = new StockData(StockDataTypes.LABEL, 'Yesterday', {\r\n            position: new Vector3(-1.8, 0, 0),\r\n        }, topShiftPanel3);\r\n        var topPanel3Label2 = new StockData(StockDataTypes.LABEL, '7 days', {\r\n            position: new Vector3(-1.8, -0.5, 0),\r\n        }, topShiftPanel3);\r\n        var topPanel3Label3 = new StockData(StockDataTypes.LABEL, '30 days', {\r\n            position: new Vector3(-1.8, -1, 0),\r\n        }, topShiftPanel3);\r\n        var topPanel3Value1 = new StockData(StockDataTypes.VALUE, data.expensiveWearableNameYesterday, {\r\n            position: new Vector3(1.2, 0, 0),\r\n        }, topShiftPanel3);\r\n        var topPanel3Value2 = new StockData(StockDataTypes.VALUE, data.expensiveWearableNameWeek, {\r\n            position: new Vector3(1.2, -0.5, 0),\r\n        }, topShiftPanel3);\r\n        var topPanel3Value3 = new StockData(StockDataTypes.VALUE, data.expensiveWearableNameMonth, {\r\n            position: new Vector3(1.2, -1, 0),\r\n        }, topShiftPanel3);\r\n        //4\r\n        var topPanel4Title = new StockData(StockDataTypes.BIGTITLE, 'Wearable Transactions', {\r\n            position: new Vector3(0, 0.9, 0),\r\n        }, topShiftPanel4);\r\n        var topPanel4Label1 = new StockData(StockDataTypes.LABEL, 'Yesterday', {\r\n            position: new Vector3(-1.3, 0, 0),\r\n        }, topShiftPanel4);\r\n        var topPanel4Label2 = new StockData(StockDataTypes.LABEL, '7 days', {\r\n            position: new Vector3(-1.3, -0.5, 0),\r\n        }, topShiftPanel4);\r\n        var topPanel4Label3 = new StockData(StockDataTypes.LABEL, '30 days', {\r\n            position: new Vector3(-1.3, -1, 0),\r\n        }, topShiftPanel4);\r\n        var topPanel4Value1 = new StockData(StockDataTypes.VALUE, Math.floor(data.totalMANAWearablesYesterday).toString(), {\r\n            position: new Vector3(0.7, 0, 0),\r\n        }, topShiftPanel4);\r\n        var topPanel4Value2 = new StockData(StockDataTypes.VALUE, Math.floor(data.totalMANAWearablesWeek).toString(), {\r\n            position: new Vector3(0.7, -0.5, 0),\r\n        }, topShiftPanel4);\r\n        var topPanel4Value3 = new StockData(StockDataTypes.VALUE, Math.floor(data.totalMANAWearablesMonth).toString(), {\r\n            position: new Vector3(0.7, -1, 0),\r\n        }, topShiftPanel4);\r\n        var topPanel4Unit1 = new StockData(StockDataTypes.UNIT, 'MANA', {\r\n            position: new Vector3(2.2, 0, 0),\r\n        }, topShiftPanel4);\r\n        var topPanel4Unit2 = new StockData(StockDataTypes.UNIT, 'MANA', {\r\n            position: new Vector3(2.2, -0.5, 0),\r\n        }, topShiftPanel4);\r\n        var topPanel4Unit3 = new StockData(StockDataTypes.UNIT, 'MANA', {\r\n            position: new Vector3(2.2, -1, 0),\r\n        }, topShiftPanel4);\r\n        //5\r\n        var topPanel5Title = new StockData(StockDataTypes.BIGTITLE, 'Wearable Transactions', {\r\n            position: new Vector3(0, 1.05, 0),\r\n        }, topShiftPanel5);\r\n        var topPanel5Title2 = new StockData(StockDataTypes.TITLE, 'last 30 days', {\r\n            position: new Vector3(0, 0.6, 0),\r\n        }, topShiftPanel5);\r\n        var topPanel5Label1 = new StockData(StockDataTypes.LABEL, 'Uncommon', {\r\n            position: new Vector3(-1.3, 0.2, 0),\r\n        }, topShiftPanel5);\r\n        var topPanel5Label2 = new StockData(StockDataTypes.LABEL, 'Rare', {\r\n            position: new Vector3(-1.3, -0.3, 0),\r\n        }, topShiftPanel5);\r\n        var topPanel5Label3 = new StockData(StockDataTypes.LABEL, 'Epic', {\r\n            position: new Vector3(-1.3, -0.8, 0),\r\n        }, topShiftPanel5);\r\n        var topPanel5Label4 = new StockData(StockDataTypes.LABEL, 'Legendary', {\r\n            position: new Vector3(-1.3, -1.3, 0),\r\n        }, topShiftPanel5);\r\n        var topPanel5Label5 = new StockData(StockDataTypes.LABEL, 'Mythic', {\r\n            position: new Vector3(-1.3, -1.8, 0),\r\n        }, topShiftPanel5);\r\n        var topPanel5Value1 = new StockData(StockDataTypes.VALUE, data.uncommonWearableMonthSales.toString(), {\r\n            position: new Vector3(0.7, 0.2, 0),\r\n        }, topShiftPanel5);\r\n        var topPanel5Value2 = new StockData(StockDataTypes.VALUE, data.rareWearableMonthSales.toString(), {\r\n            position: new Vector3(0.7, -0.3, 0),\r\n        }, topShiftPanel5);\r\n        var topPanel5Value3 = new StockData(StockDataTypes.VALUE, data.epicWearableMonthSales.toString(), {\r\n            position: new Vector3(0.7, -0.8, 0),\r\n        }, topShiftPanel5);\r\n        var topPanel5Value4 = new StockData(StockDataTypes.VALUE, data.legendaryWearableMonthSales.toString(), {\r\n            position: new Vector3(0.7, -1.3, 0),\r\n        }, topShiftPanel5);\r\n        var topPanel5Value5 = new StockData(StockDataTypes.VALUE, data.mythicWearableMonthSales.toString(), {\r\n            position: new Vector3(0.7, -1.8, 0),\r\n        }, topShiftPanel5);\r\n        //6\r\n        var topPanel6Title = new StockData(StockDataTypes.BIGTITLE, 'Average Price', {\r\n            position: new Vector3(0, 1.05, 0),\r\n        }, topShiftPanel6);\r\n        var topPanel6Title2 = new StockData(StockDataTypes.TITLE, 'last 30 days', {\r\n            position: new Vector3(0, 0.6, 0),\r\n        }, topShiftPanel6);\r\n        var topPanel6Label1 = new StockData(StockDataTypes.LABEL, 'Uncommon', {\r\n            position: new Vector3(-1.3, 0.2, 0),\r\n        }, topShiftPanel6);\r\n        var topPanel6Label2 = new StockData(StockDataTypes.LABEL, 'Rare', {\r\n            position: new Vector3(-1.3, -0.3, 0),\r\n        }, topShiftPanel6);\r\n        var topPanel6Label3 = new StockData(StockDataTypes.LABEL, 'Epic', {\r\n            position: new Vector3(-1.3, -0.8, 0),\r\n        }, topShiftPanel6);\r\n        var topPanel6Label4 = new StockData(StockDataTypes.LABEL, 'Legendary', {\r\n            position: new Vector3(-1.3, -1.3, 0),\r\n        }, topShiftPanel6);\r\n        var topPanel6Label5 = new StockData(StockDataTypes.LABEL, 'Mythic', {\r\n            position: new Vector3(-1.3, -1.8, 0),\r\n        }, topShiftPanel6);\r\n        var avUncommonPrice = Math.floor((data.uncommonWearableMonthMANA / data.uncommonWearableMonthSales) * 100) / 100;\r\n        var topPanel6Value1 = new StockData(StockDataTypes.VALUE, avUncommonPrice.toString(), {\r\n            position: new Vector3(0.7, 0.2, 0),\r\n        }, topShiftPanel6);\r\n        var avRarePrice = Math.floor((data.rareWearableMonthMANA / data.rareWearableMonthSales) * 100) / 100;\r\n        var topPanel6Value2 = new StockData(StockDataTypes.VALUE, avRarePrice.toString(), {\r\n            position: new Vector3(0.7, -0.3, 0),\r\n        }, topShiftPanel6);\r\n        var avEpicPrice = Math.floor((data.epicWearableMonthMANA / data.epicWearableMonthSales) * 100) / 100;\r\n        var topPanel6Value3 = new StockData(StockDataTypes.VALUE, avEpicPrice.toString(), {\r\n            position: new Vector3(0.7, -0.8, 0),\r\n        }, topShiftPanel6);\r\n        var avLegendaryPrice = Math.floor((data.legendaryWearableMonthMANA / data.legendaryWearableMonthSales) * 100) / 100;\r\n        var topPanel6Value4 = new StockData(StockDataTypes.VALUE, avLegendaryPrice.toString(), {\r\n            position: new Vector3(0.7, -1.3, 0),\r\n        }, topShiftPanel6);\r\n        var avMythicPrice = Math.floor((data.mythicWearableMonthMANA / data.mythicWearableMonthSales) * 100) / 100;\r\n        var topPanel6Value5 = new StockData(StockDataTypes.VALUE, avMythicPrice.toString(), {\r\n            position: new Vector3(0.7, -1.8, 0),\r\n        }, topShiftPanel6);\r\n        var topPanel6Unit1 = new StockData(StockDataTypes.UNIT, 'MANA', {\r\n            position: new Vector3(1.8, 0.2, 0),\r\n        }, topShiftPanel6);\r\n        var topPanel6Unit2 = new StockData(StockDataTypes.UNIT, 'MANA', {\r\n            position: new Vector3(1.8, -0.3, 0),\r\n        }, topShiftPanel6);\r\n        var topPanel6Unit3 = new StockData(StockDataTypes.UNIT, 'MANA', {\r\n            position: new Vector3(1.8, -0.8, 0),\r\n        }, topShiftPanel6);\r\n        var topPanel6Unit4 = new StockData(StockDataTypes.UNIT, 'MANA', {\r\n            position: new Vector3(1.8, -1.3, 0),\r\n        }, topShiftPanel6);\r\n        var topPanel6Unit5 = new StockData(StockDataTypes.UNIT, 'MANA', {\r\n            position: new Vector3(1.8, -1.8, 0),\r\n        }, topShiftPanel6);\r\n        /////// FLAT SCREENS\r\n        // cheap Rare\r\n        var cheapRareTitle = new StockData(StockDataTypes.TINYTITLE, 'Cheapest Rare Wearable', {\r\n            position: new Vector3(0, 3.8, -0.2),\r\n        }, rareBoard1);\r\n        var cheapRareTitle2 = new StockData(StockDataTypes.TINYTITLE, 'now in the market', {\r\n            position: new Vector3(0, 3.6, -0.2),\r\n        }, rareBoard1);\r\n        var cheapRareTitle3 = new StockData(StockDataTypes.TINYVALUE, data.cheapRareNow.name, {\r\n            position: new Vector3(0, 2.9, -0.2),\r\n        }, rareBoard1);\r\n        cheapRareTitle3.getComponent(TextShape).color = Color3.FromHexString('#3AD682');\r\n        var cheapRarePreview = new WearablePreview(data.cheapRareNow.image, {\r\n            position: new Vector3(0, 1.5, -0.2),\r\n        }, rareBoard1);\r\n        var cheapRareValue1 = new StockData(StockDataTypes.VALUE, toMana(data.cheapRareNow.searchOrderPrice).toString(), {\r\n            position: new Vector3(0, 0.4, -0.2),\r\n        }, rareBoard1);\r\n        cheapRareValue1.getComponent(TextShape).color = Color3.FromHexString('#3AD682');\r\n        var cheapRareUnit = new StockData(StockDataTypes.UNIT, 'MANA', {\r\n            position: new Vector3(0, 0.1, -0.2),\r\n        }, rareBoard1);\r\n        var cheapRareLabel = new StockData(StockDataTypes.TINYTITLE, 'owner:', {\r\n            position: new Vector3(-0.6, -0.4, -0.2),\r\n        }, rareBoard1);\r\n        var shortenedRareOwner = data.cheapRareNow.owner.address.slice(0, 5) +\r\n            '...' +\r\n            data.cheapRareNow.owner.address.slice(data.cheapRareNow.owner.address.length - 4);\r\n        var cheapRareValue = new StockData(StockDataTypes.TINYVALUE, shortenedRareOwner, {\r\n            position: new Vector3(0.5, -0.4, -0.2),\r\n        }, rareBoard1);\r\n        cheapRareValue.getComponent(TextShape).color = Color3.FromHexString('#3AD682');\r\n        cheapRarePreview.addComponent(new OnPointerDown(function (e) {\r\n            var url = 'https://market.decentraland.org/contracts/' +\r\n                data.cheapRareNow.contractAddress +\r\n                '/tokens/' +\r\n                data.cheapRareNow.tokenId;\r\n            openExternalURL(url);\r\n        }, {\r\n            button: ActionButton.PRIMARY,\r\n            hoverText: 'Open in Market',\r\n        }));\r\n        /// expensive rare\r\n        var expensiveRareTitle = new StockData(StockDataTypes.TINYTITLE, 'Priciest Rare Wearable', {\r\n            position: new Vector3(0, 3.8, -0.2),\r\n        }, rareBoard2);\r\n        var expensiveRareTitle2 = new StockData(StockDataTypes.TINYTITLE, 'sold in last 30 days', {\r\n            position: new Vector3(0, 3.6, -0.2),\r\n        }, rareBoard2);\r\n        var expensiveRareTitle3 = new StockData(StockDataTypes.TINYVALUE, data.rareWearableMonthExpensive.name, {\r\n            position: new Vector3(0, 2.9, -0.2),\r\n        }, rareBoard2);\r\n        expensiveRareTitle3.getComponent(TextShape).color = Color3.FromHexString('#3AD682');\r\n        var expensiveRarePreview = new WearablePreview(data.rareWearableMonthExpensive.image, {\r\n            position: new Vector3(0, 1.5, -0.2),\r\n        }, rareBoard2);\r\n        var expensiveRareValue1 = new StockData(StockDataTypes.VALUE, data.rareWearableMonthExpensive.price.toString(), {\r\n            position: new Vector3(0, 0.4, -0.2),\r\n        }, rareBoard2);\r\n        expensiveRareValue1.getComponent(TextShape).color = Color3.FromHexString('#3AD682');\r\n        var expensiveRareUnit = new StockData(StockDataTypes.UNIT, 'MANA', {\r\n            position: new Vector3(0, 0.1, -0.2),\r\n        }, rareBoard2);\r\n        // cheap epic\r\n        var cheapEpicTitle = new StockData(StockDataTypes.TINYTITLE, 'Cheapest Epic Wearable', {\r\n            position: new Vector3(0, 3.8, -0.05),\r\n        }, epicBoard1);\r\n        var cheapEpicTitle2 = new StockData(StockDataTypes.TINYTITLE, 'now in the market', {\r\n            position: new Vector3(0, 3.6, -0.05),\r\n        }, epicBoard1);\r\n        var cheapEpicTitle3 = new StockData(StockDataTypes.TINYVALUE, data.cheapEpicNow.name, {\r\n            position: new Vector3(0, 2.9, -0.05),\r\n        }, epicBoard1);\r\n        cheapEpicTitle3.getComponent(TextShape).color = Color3.FromHexString('#6297F2');\r\n        var cheapEpicPreview = new WearablePreview(data.cheapEpicNow.image, {\r\n            position: new Vector3(0, 1.5, 0),\r\n        }, epicBoard1);\r\n        var cheapEpicValue1 = new StockData(StockDataTypes.VALUE, toMana(data.cheapEpicNow.searchOrderPrice).toString(), {\r\n            position: new Vector3(0, 0.4, -0.05),\r\n        }, epicBoard1);\r\n        cheapEpicValue1.getComponent(TextShape).color = Color3.FromHexString('#6297F2');\r\n        var cheapEpicUnit = new StockData(StockDataTypes.UNIT, 'MANA', {\r\n            position: new Vector3(0, 0.1, -0.05),\r\n        }, epicBoard1);\r\n        var cheapEpicLabel = new StockData(StockDataTypes.TINYTITLE, 'owner:', {\r\n            position: new Vector3(-0.6, -0.4, -0.05),\r\n        }, epicBoard1);\r\n        var shortenedepicOwner = data.cheapEpicNow.owner.address.slice(0, 5) +\r\n            '...' +\r\n            data.cheapEpicNow.owner.address.slice(data.cheapEpicNow.owner.address.length - 4);\r\n        var cheapEpicValue = new StockData(StockDataTypes.TINYVALUE, shortenedepicOwner, {\r\n            position: new Vector3(0.5, -0.4, -0.1),\r\n        }, epicBoard1);\r\n        cheapEpicValue.getComponent(TextShape).color = Color3.FromHexString('#6297F2');\r\n        cheapEpicPreview.addComponent(new OnPointerDown(function (e) {\r\n            var url = 'https://market.decentraland.org/contracts/' +\r\n                data.cheapEpicNow.contractAddress +\r\n                '/tokens/' +\r\n                data.cheapEpicNow.tokenId;\r\n            openExternalURL(url);\r\n        }, {\r\n            button: ActionButton.PRIMARY,\r\n            hoverText: 'Open in Market',\r\n        }));\r\n        /// expensive epic\r\n        var expensiveEpicTitle = new StockData(StockDataTypes.TINYTITLE, 'Priciest Epic Wearable', {\r\n            position: new Vector3(0, 3.8, -0.2),\r\n        }, epicBoard2);\r\n        var expensiveEpicTitle2 = new StockData(StockDataTypes.TINYTITLE, 'sold in last 30 days', {\r\n            position: new Vector3(0, 3.6, -0.2),\r\n        }, epicBoard2);\r\n        var expensiveEpicTitle3 = new StockData(StockDataTypes.TINYVALUE, data.epicWearableMonthExpensive.name, {\r\n            position: new Vector3(0, 2.9, -0.2),\r\n        }, epicBoard2);\r\n        expensiveEpicTitle3.getComponent(TextShape).color = Color3.FromHexString('#6297F2');\r\n        var expensiveEpicPreview = new WearablePreview(data.epicWearableMonthExpensive.image, {\r\n            position: new Vector3(0, 1.5, -0.2),\r\n        }, epicBoard2);\r\n        var expensiveEpicValue1 = new StockData(StockDataTypes.VALUE, data.epicWearableMonthExpensive.price.toString(), {\r\n            position: new Vector3(0, 0.4, -0.2),\r\n        }, epicBoard2);\r\n        expensiveEpicValue1.getComponent(TextShape).color = Color3.FromHexString('#6297F2');\r\n        var expensiveEpicUnit = new StockData(StockDataTypes.UNIT, 'MANA', {\r\n            position: new Vector3(0, 0.1, -0.2),\r\n        }, epicBoard2);\r\n        // cheap legendary\r\n        var cheapLegendaryTitle = new StockData(StockDataTypes.TINYTITLE, 'Cheapest Legendary Wearable', {\r\n            position: new Vector3(-0.2, 3.8, 0),\r\n        }, legendaryBoard1);\r\n        var cheapLegendaryTitle2 = new StockData(StockDataTypes.TINYTITLE, 'now in the market', {\r\n            position: new Vector3(-0.2, 3.6, 0),\r\n        }, legendaryBoard1);\r\n        var cheapLegendaryTitle3 = new StockData(StockDataTypes.TINYVALUE, data.cheapLegendaryNow.name, {\r\n            position: new Vector3(-0.2, 2.9, 0),\r\n        }, legendaryBoard1);\r\n        cheapLegendaryTitle3.getComponent(TextShape).color = Color3.FromHexString('#9E55E2');\r\n        var cheapLegendaryPreview = new WearablePreview(data.cheapLegendaryNow.image, {\r\n            position: new Vector3(-0.2, 1.5, 0),\r\n        }, legendaryBoard1);\r\n        var cheapLegendaryValue1 = new StockData(StockDataTypes.VALUE, toMana(data.cheapLegendaryNow.searchOrderPrice).toString(), {\r\n            position: new Vector3(-0.2, 0.4, 0),\r\n        }, legendaryBoard1);\r\n        cheapLegendaryValue1.getComponent(TextShape).color = Color3.FromHexString('#9E55E2');\r\n        var cheapLegendaryUnit = new StockData(StockDataTypes.UNIT, 'MANA', {\r\n            position: new Vector3(-0.2, 0.1, 0),\r\n        }, legendaryBoard1);\r\n        var cheapLegendaryLabel = new StockData(StockDataTypes.TINYTITLE, 'owner:', {\r\n            position: new Vector3(-0.8, -0.4, 0),\r\n        }, legendaryBoard1);\r\n        var shortenedLegendaryOwner = data.cheapLegendaryNow.owner.address.slice(0, 5) +\r\n            '...' +\r\n            data.cheapLegendaryNow.owner.address.slice(data.cheapLegendaryNow.owner.address.length - 4);\r\n        var cheapLegendaryValue = new StockData(StockDataTypes.TINYVALUE, shortenedLegendaryOwner, {\r\n            position: new Vector3(0.3, -0.4, 0),\r\n        }, legendaryBoard1);\r\n        cheapLegendaryValue.getComponent(TextShape).color = Color3.FromHexString('#9E55E2');\r\n        cheapLegendaryPreview.addComponent(new OnPointerDown(function (e) {\r\n            var url = 'https://market.decentraland.org/contracts/' +\r\n                data.cheapLegendaryNow.contractAddress +\r\n                '/tokens/' +\r\n                data.cheapLegendaryNow.tokenId;\r\n            openExternalURL(url);\r\n        }, {\r\n            button: ActionButton.PRIMARY,\r\n            hoverText: 'Open in Market',\r\n        }));\r\n        /// expensive legendary\r\n        var expensiveLegendaryTitle = new StockData(StockDataTypes.TINYTITLE, 'Priciest Legendary Wearable', {\r\n            position: new Vector3(0, 3.8, -0.2),\r\n        }, legendaryBoard2);\r\n        var expensiveLegendaryTitle2 = new StockData(StockDataTypes.TINYTITLE, 'sold in last 30 days', {\r\n            position: new Vector3(0, 3.6, -0.2),\r\n        }, legendaryBoard2);\r\n        var expensiveLegendaryTitle3 = new StockData(StockDataTypes.TINYVALUE, data.legendaryWearableMonthExpensive.name, {\r\n            position: new Vector3(0, 2.9, -0.2),\r\n        }, legendaryBoard2);\r\n        expensiveLegendaryTitle3.getComponent(TextShape).color = Color3.FromHexString('#9E55E2');\r\n        var expensiveLegendaryPreview = new WearablePreview(data.legendaryWearableMonthExpensive.image, {\r\n            position: new Vector3(0, 1.5, -0.2),\r\n        }, legendaryBoard2);\r\n        var expensiveLegendaryValue1 = new StockData(StockDataTypes.VALUE, data.legendaryWearableMonthExpensive.price.toString(), {\r\n            position: new Vector3(0, 0.4, -0.2),\r\n        }, legendaryBoard2);\r\n        expensiveLegendaryValue1.getComponent(TextShape).color = Color3.FromHexString('#9E55E2');\r\n        var expensiveLegendaryUnit = new StockData(StockDataTypes.UNIT, 'MANA', {\r\n            position: new Vector3(0, 0.1, -0.2),\r\n        }, legendaryBoard2);\r\n        // cheap mythic\r\n        var cheapMythicTitle = new StockData(StockDataTypes.TINYTITLE, 'Cheapest Mythic Wearable', {\r\n            position: new Vector3(0, 3.8, -0.1),\r\n        }, mythicBoard1);\r\n        var cheapMythicTitle2 = new StockData(StockDataTypes.TINYTITLE, 'now in the market', {\r\n            position: new Vector3(0, 3.6, -0.1),\r\n        }, mythicBoard1);\r\n        var cheapMythicTitle3 = new StockData(StockDataTypes.TINYVALUE, data.cheapMythicNow.name, {\r\n            position: new Vector3(0, 2.9, -0.1),\r\n        }, mythicBoard1);\r\n        cheapMythicTitle3.getComponent(TextShape).color = Color3.FromHexString('#E43EC6');\r\n        var cheapMythicPreview = new WearablePreview(data.cheapMythicNow.image, {\r\n            position: new Vector3(0, 1.5, -0.1),\r\n        }, mythicBoard1);\r\n        var cheapMythicValue1 = new StockData(StockDataTypes.VALUE, toMana(data.cheapMythicNow.searchOrderPrice).toString(), {\r\n            position: new Vector3(0, 0.4, -0.1),\r\n        }, mythicBoard1);\r\n        cheapMythicValue1.getComponent(TextShape).color = Color3.FromHexString('#E43EC6');\r\n        var cheapMythicUnit = new StockData(StockDataTypes.UNIT, 'MANA', {\r\n            position: new Vector3(0, 0.1, -0.1),\r\n        }, mythicBoard1);\r\n        var cheapMythicLabel = new StockData(StockDataTypes.TINYTITLE, 'owner:', {\r\n            position: new Vector3(-0.6, -0.4, -0.1),\r\n        }, mythicBoard1);\r\n        cheapMythicLabel.getComponent(TextShape).color = Color3.FromHexString('#E43EC6');\r\n        var shortenedMythicOwner = data.cheapMythicNow.owner.address.slice(0, 5) +\r\n            '...' +\r\n            data.cheapMythicNow.owner.address.slice(data.cheapMythicNow.owner.address.length - 4);\r\n        var cheapMythicValue = new StockData(StockDataTypes.TINYVALUE, shortenedMythicOwner, {\r\n            position: new Vector3(0.5, -0.4, -0.1),\r\n        }, mythicBoard1);\r\n        cheapMythicValue.getComponent(TextShape).color = Color3.FromHexString('#E43EC6');\r\n        cheapMythicPreview.addComponent(new OnPointerDown(function (e) {\r\n            var url = 'https://market.decentraland.org/contracts/' +\r\n                data.cheapMythicNow.contractAddress +\r\n                '/tokens/' +\r\n                data.cheapMythicNow.tokenId;\r\n            openExternalURL(url);\r\n        }, {\r\n            button: ActionButton.PRIMARY,\r\n            hoverText: 'Open in Market',\r\n        }));\r\n        /// expensive mythic\r\n        var expensiveMythicTitle = new StockData(StockDataTypes.TINYTITLE, 'Priciest Mythic Wearable', {\r\n            position: new Vector3(0, 3.8, -0.2),\r\n        }, mythicBoard2);\r\n        var expensiveMythicTitle2 = new StockData(StockDataTypes.TINYTITLE, 'sold in last 30 days', {\r\n            position: new Vector3(0, 3.6, -0.2),\r\n        }, mythicBoard2);\r\n        var expensiveMythicTitle3 = new StockData(StockDataTypes.TINYVALUE, data.mythicWearableMonthExpensive.name, {\r\n            position: new Vector3(0, 2.9, -0.2),\r\n        }, mythicBoard2);\r\n        expensiveMythicTitle3.getComponent(TextShape).color = Color3.FromHexString('#E43EC6');\r\n        var expensiveMythicPreview = new WearablePreview(data.mythicWearableMonthExpensive.image, {\r\n            position: new Vector3(0, 1.5, -0.2),\r\n        }, mythicBoard2);\r\n        var expensiveMythicValue1 = new StockData(StockDataTypes.VALUE, data.mythicWearableMonthExpensive.price.toString(), {\r\n            position: new Vector3(0, 0.4, -0.2),\r\n        }, mythicBoard2);\r\n        expensiveMythicValue1.getComponent(TextShape).color = Color3.FromHexString('#E43EC6');\r\n        var expensiveMythicUnit = new StockData(StockDataTypes.UNIT, 'MANA', {\r\n            position: new Vector3(0, 0.1, -0.2),\r\n        }, mythicBoard2);\r\n        ////// ROOFTOP MUSIC\r\n        //   const rooftopStation = 'https://edge.singsingmusic.net/MC2.mp3'\r\n        //   const marketMusicStreamEnt = new Entity()\r\n        //   engine.addEntity(marketMusicStreamEnt)\r\n        //   let marketMusicStream = new AudioStream(rooftopStation)\r\n        //   marketMusicStream.playing = false\r\n        //   marketMusicStreamEnt.addComponent(marketMusicStream)\r\n        //   const marketRoofTrigger = new Entity()\r\n        //   marketRoofTrigger.addComponent(\r\n        //     new Transform({ position: new Vector3(272, 29.7, 36) })\r\n        //   )\r\n        //   let marketRoofTriggerBox = new utils.TriggerBoxShape(\r\n        //     new Vector3(60, 6, 69),\r\n        //     Vector3.Zero()\r\n        //   )\r\n        //   marketRoofTrigger.addComponent(\r\n        //     new utils.TriggerComponent(\r\n        //       marketRoofTriggerBox, //shape\r\n        //       0, //layer\r\n        //       0, //triggeredByLayer\r\n        //       null, //onTriggerEnter\r\n        //       null, //onTriggerExit\r\n        //       () => {\r\n        //         marketMusicStream.playing = true\r\n        //       },\r\n        //       () => {\r\n        //         marketMusicStream.playing = false\r\n        //       }, //onCameraExit\r\n        //       false\r\n        //     )\r\n        //   )\r\n        //   engine.addEntity(marketRoofTrigger)\r\n        // }\r\n    }\r\n    exports.updateTradeCentrer = updateTradeCentrer;\r\n});\r\n////// ROOFTOP MUSIC\r\n//   const rooftopStation = 'https://edge.singsingmusic.net/MC2.mp3'\r\n//   const marketMusicStreamEnt = new Entity()\r\n//   engine.addEntity(marketMusicStreamEnt)\r\n//   let marketMusicStream = new AudioStream(rooftopStation)\r\n//   marketMusicStream.playing = false\r\n//   marketMusicStreamEnt.addComponent(marketMusicStream)\r\n//   const marketRoofTrigger = new Entity()\r\n//   marketRoofTrigger.addComponent(\r\n//     new Transform({ position: new Vector3(272, 29.7, 36) })\r\n//   )\r\n//   let marketRoofTriggerBox = new utils.TriggerBoxShape(\r\n//     new Vector3(60, 6, 69),\r\n//     Vector3.Zero()\r\n//   )\r\n//   marketRoofTrigger.addComponent(\r\n//     new utils.TriggerComponent(\r\n//       marketRoofTriggerBox, //shape\r\n//       0, //layer\r\n//       0, //triggeredByLayer\r\n//       null, //onTriggerEnter\r\n//       null, //onTriggerExit\r\n//       () => {\r\n//         marketMusicStream.playing = true\r\n//       },\r\n//       () => {\r\n//         marketMusicStream.playing = false\r\n//       }, //onCameraExit\r\n//       false\r\n//     )\r\n//   )\r\n//   engine.addEntity(marketRoofTrigger)\r\n// }\r\ndefine(\"src/modules/serverHandler\", [\"require\", \"exports\", \"src/modules/messageboard\", \"src/modules/marketData\"], function (require, exports, messageboard_1, marketData_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.getMarketData = exports.updateMarketData = exports.getEvents = exports.updateMessageBoards = exports.getLastMessage = exports.setNewMessage = exports.CheckServer = exports.fireBaseServer = exports.awsServer = exports.sceneMessageBus = void 0;\r\n    exports.sceneMessageBus = new MessageBus();\r\n    exports.awsServer = 'https://genesis-plaza.s3.us-east-2.amazonaws.com/';\r\n    exports.fireBaseServer = 'https://us-central1-genesis-plaza.cloudfunctions.net/app/';\r\n    // check server for new messageboard messages\r\n    var CheckServer = /** @class */ (function () {\r\n        function CheckServer(messageTimer) {\r\n            this.totalMessageTime = messageTimer;\r\n            this.messageTimer = 5;\r\n            this.eventTimer = 0;\r\n            this.totalEventTimer = 2;\r\n        }\r\n        CheckServer.prototype.update = function (dt) {\r\n            this.messageTimer -= dt;\r\n            //this.eventTimer += dt\r\n            if (this.messageTimer < 0) {\r\n                this.messageTimer += this.totalMessageTime;\r\n                updateMessageBoards();\r\n            }\r\n            // if (this.eventTimer > this.totalEventTimer) {\r\n            //   this.eventTimer = 0\r\n            //   checkEventServer()\r\n            // }\r\n        };\r\n        return CheckServer;\r\n    }());\r\n    exports.CheckServer = CheckServer;\r\n    //////// SEND NEW MESSAGEBOARD MESSSAGE TO SERVER\r\n    function setNewMessage(location, message) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var trimmedMessage, url;\r\n            return __generator(this, function (_a) {\r\n                try {\r\n                    trimmedMessage = void 0;\r\n                    log('location: ', location, 'message: ', message);\r\n                    if (location == messageboard_1.MessageBoards.ARTICHOKE) {\r\n                        trimmedMessage = message.substr(0, 20);\r\n                        exports.sceneMessageBus.emit('artichokeMessage', { text: trimmedMessage });\r\n                    }\r\n                    else if (location === messageboard_1.MessageBoards.TOWER) {\r\n                        log('new message from tower');\r\n                        trimmedMessage = message.substr(0, 40 - 3);\r\n                        exports.sceneMessageBus.emit('towerMessage', { text: trimmedMessage });\r\n                        //setTowerText(newText)\r\n                    }\r\n                    url = exports.fireBaseServer +\r\n                        'addmessage/?location=' +\r\n                        location +\r\n                        '&message=' +\r\n                        trimmedMessage;\r\n                    log('new message ', url);\r\n                    fetch(url, { method: 'POST' });\r\n                    messageboard_1.serverChecker.messageTimer = messageboard_1.serverChecker.totalMessageTime;\r\n                }\r\n                catch (_b) {\r\n                    log('error sending to firebase server');\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    }\r\n    exports.setNewMessage = setNewMessage;\r\n    // ////// UPDATE MESSAGEBOARDS\r\n    // get lastest message\r\n    function getLastMessage(location) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var url, response, json, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _b.trys.push([0, 3, , 4]);\r\n                        url = exports.awsServer + 'messageboards/' + location + '.json';\r\n                        return [4 /*yield*/, fetch(url).then()];\r\n                    case 1:\r\n                        response = _b.sent();\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 2:\r\n                        json = _b.sent();\r\n                        return [2 /*return*/, json.messages[json.messages.length - 1]];\r\n                    case 3:\r\n                        _a = _b.sent();\r\n                        log('error fetching from AWS server');\r\n                        return [3 /*break*/, 4];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    exports.getLastMessage = getLastMessage;\r\n    // change text displayed in the plaza\r\n    function updateMessageBoards() {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var artMessage, towerMessage;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        log('checking boards');\r\n                        return [4 /*yield*/, getLastMessage('artichoke')];\r\n                    case 1:\r\n                        artMessage = _a.sent();\r\n                        log('setting Artichoke message : ', artMessage);\r\n                        if (artMessage) {\r\n                            messageboard_1.ArtichokeFloatingTextShape.value = artMessage;\r\n                        }\r\n                        return [4 /*yield*/, getLastMessage('tower')];\r\n                    case 2:\r\n                        towerMessage = _a.sent();\r\n                        log('setting Tower message : ', towerMessage);\r\n                        if (towerMessage) {\r\n                            messageboard_1.setTowerText(towerMessage);\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    exports.updateMessageBoards = updateMessageBoards;\r\n    ///// HANDLE MESSAGEBUS UPDATES\r\n    exports.sceneMessageBus.on('towerMessage', function (e) {\r\n        messageboard_1.setTowerText(e.text);\r\n    });\r\n    exports.sceneMessageBus.on('artichokeMessage', function (e) {\r\n        messageboard_1.ArtichokeFloatingTextShape.value = e.text;\r\n    });\r\n    ///// EVENTS BOARD\r\n    function getEvents() {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var events, url, response, json, _a, _b, event, e_2;\r\n            var e_3, _c;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        events = [];\r\n                        url = 'https://events.decentraland.org/api/events/?limit=5';\r\n                        _d.label = 1;\r\n                    case 1:\r\n                        _d.trys.push([1, 4, , 5]);\r\n                        return [4 /*yield*/, fetch(url)];\r\n                    case 2:\r\n                        response = _d.sent();\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 3:\r\n                        json = _d.sent();\r\n                        log(json);\r\n                        try {\r\n                            for (_a = __values(json.data), _b = _a.next(); !_b.done; _b = _a.next()) {\r\n                                event = _b.value;\r\n                                if (event.live) {\r\n                                    events.push(event);\r\n                                }\r\n                            }\r\n                        }\r\n                        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n                        finally {\r\n                            try {\r\n                                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\r\n                            }\r\n                            finally { if (e_3) throw e_3.error; }\r\n                        }\r\n                        log(events);\r\n                        return [2 /*return*/, events];\r\n                    case 4:\r\n                        e_2 = _d.sent();\r\n                        log('error getting event data ', e_2);\r\n                        return [3 /*break*/, 5];\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    exports.getEvents = getEvents;\r\n    var marketData = null;\r\n    function updateMarketData() {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var newMarketData;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, getMarketData()];\r\n                    case 1:\r\n                        newMarketData = _a.sent();\r\n                        if (newMarketData == marketData) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        else {\r\n                            marketData = newMarketData;\r\n                        }\r\n                        log('MARKET DATA: ', marketData);\r\n                        marketData_1.updateTradeCentrer(marketData);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    exports.updateMarketData = updateMarketData;\r\n    function getMarketData() {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var url, response, json, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _b.trys.push([0, 3, , 4]);\r\n                        url = exports.awsServer + 'market/marketData.json';\r\n                        return [4 /*yield*/, fetch(url).then()];\r\n                    case 1:\r\n                        response = _b.sent();\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 2:\r\n                        json = _b.sent();\r\n                        return [2 /*return*/, json];\r\n                    case 3:\r\n                        _a = _b.sent();\r\n                        log('error fetching from AWS server');\r\n                        return [3 /*break*/, 4];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    exports.getMarketData = getMarketData;\r\n});\r\ndefine(\"src/modules/wearables\", [\"require\", \"exports\", \"src/modules/ui\"], function (require, exports, ui_4) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.addWearables = exports.getWearableURL = exports.Wearable = void 0;\r\n    var Wearable = /** @class */ (function (_super) {\r\n        __extends(Wearable, _super);\r\n        function Wearable(model, transform, wearableName, isDefault) {\r\n            var _this = _super.call(this) || this;\r\n            _this.isDefault = false;\r\n            engine.addEntity(_this);\r\n            _this.addComponent(model);\r\n            _this.addComponent(new Transform(transform));\r\n            if (isDefault) {\r\n                _this.isDefault = true;\r\n            }\r\n            _this.wearableName = wearableName.toLocaleLowerCase();\r\n            var thisWearable = _this;\r\n            _this.addComponent(new OnPointerDown(function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var info;\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                if (!thisWearable.isDefault) return [3 /*break*/, 1];\r\n                                ui_4.wearableClassic(thisWearable);\r\n                                log('This item is part of the classic collection of wearables. You can find it in your inventory.');\r\n                                return [3 /*break*/, 3];\r\n                            case 1:\r\n                                ui_4.openLoadingUI();\r\n                                return [4 /*yield*/, getWearableOnSale(wearableName.toLocaleLowerCase())];\r\n                            case 2:\r\n                                info = _a.sent();\r\n                                if (info.data.nfts.length > 0) {\r\n                                    thisWearable.wearableData = info.data.nfts[0];\r\n                                    ui_4.openWearableUI(thisWearable, info.data.nfts[0]);\r\n                                }\r\n                                else {\r\n                                    ui_4.wearableNotForSale(thisWearable);\r\n                                    log('no results');\r\n                                }\r\n                                _a.label = 3;\r\n                            case 3: return [2 /*return*/];\r\n                        }\r\n                    });\r\n                });\r\n            }, {\r\n                button: ActionButton.PRIMARY,\r\n                hoverText: 'Info',\r\n            }));\r\n            return _this;\r\n        }\r\n        return Wearable;\r\n    }(Entity));\r\n    exports.Wearable = Wearable;\r\n    function getWearableOnSale(wearableName) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var now, query, response, _a, _b, error_1;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        now = String(Math.floor(Date.now() / 1000));\r\n                        query = \"\\n\\t  {\\n\\t\\t  nfts(first: 1,  orderBy: searchOrderPrice, orderDirection: asc, where:{ category: wearable, searchText: \\\"\" +\r\n                            wearableName +\r\n                            \"\\\", searchOrderStatus:open, searchOrderExpiresAt_gt:\" +\r\n                            now +\r\n                            \"\\n\\t\\t}) {\\n\\t\\t\\tid\\n\\t\\t  name\\n\\t\\t  image\\n\\t\\t  contractAddress\\n\\t\\t  tokenId\\n\\t\\t  wearable{ name, representationId, collection, description, category, rarity, bodyShapes }\\n\\t\\t  searchOrderPrice\\n\\t\\t  searchOrderStatus\\n\\t\\t  owner{address}\\n\\t\\t  activeOrder {\\n\\t\\t\\t  id\\n\\t\\t\\t}\\n\\t\\t  }\\n\\t  }\";\r\n                        log('query: ', query);\r\n                        _c.label = 1;\r\n                    case 1:\r\n                        _c.trys.push([1, 3, , 4]);\r\n                        response = queryGraph(query);\r\n                        _a = log;\r\n                        _b = ['wearable info: '];\r\n                        return [4 /*yield*/, response];\r\n                    case 2:\r\n                        _a.apply(void 0, _b.concat([_c.sent()]));\r\n                        return [2 /*return*/, response];\r\n                    case 3:\r\n                        error_1 = _c.sent();\r\n                        log(\"Error fetching wearable dat \", error_1);\r\n                        throw error_1;\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    function queryGraph(query) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var url, opts, res;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        url = 'https://api.thegraph.com/subgraphs/name/decentraland/marketplace';\r\n                        opts = {\r\n                            method: 'POST',\r\n                            headers: { 'Content-Type': 'application/json' },\r\n                            body: JSON.stringify({ query: query }),\r\n                        };\r\n                        return [4 /*yield*/, fetch(url, opts)];\r\n                    case 1:\r\n                        res = _a.sent();\r\n                        return [2 /*return*/, res.json()];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    function getWearableURL(wearable) {\r\n        return ('https://market.decentraland.org/contracts/' +\r\n            wearable.contractAddress +\r\n            '/tokens/' +\r\n            wearable.tokenId);\r\n    }\r\n    exports.getWearableURL = getWearableURL;\r\n    function addWearables() {\r\n        //////// WEARABLES\r\n        // FLOOR 1\r\n        var Eyewear_MANA = new Wearable(new GLTFShape('models/wearables/first_floor/A/MANA_Eyewear.glb'), {\r\n            position: new Vector3(284, 10.5, 110.4),\r\n            rotation: Quaternion.Euler(0, 60, 0),\r\n        }, 'MANA Eyewear');\r\n        var Spysuit_Goggles = new Wearable(new GLTFShape('models/wearables/first_floor/A/Spysuit_Goggles.glb'), {\r\n            position: new Vector3(283, 10.5, 111.8),\r\n            rotation: Quaternion.Euler(0, 60, 0),\r\n        }, 'Spy Suit Eyewear');\r\n        var Eye_Thingy = new Wearable(new GLTFShape('models/wearables/first_floor/A/Eyewear_Raver.glb'), {\r\n            position: new Vector3(282, 10.5, 113.1),\r\n            rotation: Quaternion.Euler(0, 60, 0),\r\n        }, 'Raver Goggles');\r\n        var F_Hat_Foam = new Wearable(new GLTFShape('models/wearables/first_floor/B/F_Hat_Foam.glb'), {\r\n            position: new Vector3(276.5, 10.5, 110.4),\r\n            rotation: Quaternion.Euler(0, 60, 0),\r\n        }, 'Mexican Foam Hat');\r\n        var sunhat = new Wearable(new GLTFShape('models/wearables/first_floor/B/sunhat.glb'), {\r\n            position: new Vector3(275.5, 10.5, 111.8),\r\n            rotation: Quaternion.Euler(0, 60, 0),\r\n        }, 'Trendy Sport Hat');\r\n        var MaleHat_DCL = new Wearable(new GLTFShape('models/wearables/first_floor/B/MaleHat_DCL.glb'), {\r\n            position: new Vector3(274.5, 10.5, 113.1),\r\n            rotation: Quaternion.Euler(0, 60, 0),\r\n        }, 'Decentraland Hat');\r\n        var M_Mask_Skull = new Wearable(new GLTFShape('models/wearables/first_floor/C/M_Mask_Skull.glb'), {\r\n            position: new Vector3(265.9, 10.5, 122.5),\r\n            rotation: Quaternion.Euler(0, 90, 0),\r\n        }, 'lirio skull');\r\n        var M_TopHead_Machete = new Wearable(new GLTFShape('models/wearables/first_floor/C/M_TopHead_Machete.glb'), {\r\n            position: new Vector3(265.5, 10.5, 124.5),\r\n            rotation: Quaternion.Euler(0, 90, 0),\r\n        }, 'Machete Headband');\r\n        var M_TopHead_Skull = new Wearable(new GLTFShape('models/wearables/first_floor/C/M_TopHead_Skull.glb'), {\r\n            position: new Vector3(265.2, 10.5, 126.5),\r\n            rotation: Quaternion.Euler(0, 90, 0),\r\n        }, 'Skull Mexican Hat');\r\n        var protection_mask_hot_mask = new Wearable(new GLTFShape('models/wearables/first_floor/D/protection_mask_hot_mask.glb'), {\r\n            position: new Vector3(265.7, 10.5, 131.5),\r\n            rotation: Quaternion.Euler(0, 115, 0),\r\n        }, 'Hot Protection Mask');\r\n        var protection_mask_skull_mask = new Wearable(new GLTFShape('models/wearables/first_floor/D/protection_mask_skull_mask.glb'), {\r\n            position: new Vector3(266.23, 10.5, 132.73),\r\n            rotation: Quaternion.Euler(0, 115, 0),\r\n        }, 'Skull Protection Mask');\r\n        var protection_mask_african_mask = new Wearable(new GLTFShape('models/wearables/first_floor/D/protection_mask_african_mask.glb'), {\r\n            position: new Vector3(266.76, 10.5, 133.96),\r\n            rotation: Quaternion.Euler(0, 115, 0),\r\n        }, 'African Protection Mask');\r\n        var protection_mask_funny_mask = new Wearable(new GLTFShape('models/wearables/first_floor/D/protection_mask_funny_mask.glb'), {\r\n            position: new Vector3(267.3, 10.5, 135.2),\r\n            rotation: Quaternion.Euler(0, 115, 0),\r\n        }, 'Graffiti Protection Mask');\r\n        var Eyewear_XmasTree = new Wearable(new GLTFShape('models/wearables/first_floor/E/Eyewear_XmasTree.glb'), {\r\n            position: new Vector3(270.8, 10.5, 139),\r\n            rotation: Quaternion.Euler(0, 145, 0),\r\n        }, 'Christmas Tree Eyewear');\r\n        var F_Hat_Elf = new Wearable(new GLTFShape('models/wearables/first_floor/E/F_Hat_Elf.glb'), {\r\n            position: new Vector3(272.3, 10.5, 140.7),\r\n            rotation: Quaternion.Euler(0, 145, 0),\r\n        }, 'Christmas Elf Hat');\r\n        var F_Helmet_LedSuit = new Wearable(new GLTFShape('models/wearables/first_floor/E/F_Helmet_LedSuit.glb'), {\r\n            position: new Vector3(273.8, 10.5, 141.7),\r\n            rotation: Quaternion.Euler(0, 145, 0),\r\n        }, 'Cyber Xmas Helmet');\r\n        var Umbrella_Hat = new Wearable(new GLTFShape('models/wearables/first_floor/F/Umbrella_Hat.glb'), {\r\n            position: new Vector3(286.9, 10.5, 140.9),\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }, 'Umbrella Hat');\r\n        var M_Hat_Hat_of_Wonder = new Wearable(new GLTFShape('models/wearables/first_floor/F/M_Hat_Hat_of_Wonder.glb'), {\r\n            position: new Vector3(288.8, 10.5, 140.9),\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }, 'Hat of Wonder');\r\n        var MaleHat_MANA = new Wearable(new GLTFShape('models/wearables/first_floor/F/MaleHat_MANA.glb'), {\r\n            position: new Vector3(290.4, 10.5, 140.9),\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }, 'MANA Hat');\r\n        var Tiara_Bee = new Wearable(new GLTFShape('models/wearables/first_floor/G/Tiara_Bee.glb'), {\r\n            position: new Vector3(291.4, 10.5, 135.3),\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }, 'Bee Headband');\r\n        var F_Tiara_GreenStone = new Wearable(new GLTFShape('models/wearables/first_floor/G/F_Tiara_GreenStone.glb'), {\r\n            position: new Vector3(293.26, 10.5, 135.3),\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }, 'F_Tiara_GreenStone', true);\r\n        var F_Tiara_LaurelWreath = new Wearable(new GLTFShape('models/wearables/first_floor/G/F_Tiara_LaurelWreath.glb'), {\r\n            position: new Vector3(294.8, 10.5, 135.5),\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }, 'F_Tiara_LaurelWreath', true);\r\n        // FLOOR 2\r\n        var spy_suit_lower_body = new Wearable(new GLTFShape('models/wearables/second_floor/A/spy_suit_lower_body'), {\r\n            position: new Vector3(284, 18.5, 110.4),\r\n            rotation: Quaternion.Euler(0, 60, 0),\r\n        }, 'Spy Suit Pants');\r\n        var creepy_nurse_lower_body = new Wearable(new GLTFShape('models/wearables/second_floor/A/creepy_nurse_lower_body.glb'), {\r\n            position: new Vector3(283, 19, 111.8),\r\n            rotation: Quaternion.Euler(0, 60, 0),\r\n        }, 'Creepy Nurse Skirt');\r\n        var M_IBody_GreyJoggers = new Wearable(new GLTFShape('models/wearables/second_floor/A/M_lBody_GreyJoggers.glb'), {\r\n            position: new Vector3(282, 18.5, 113.1),\r\n            rotation: Quaternion.Euler(0, 60, 0),\r\n        }, 'Gray Joggers', true);\r\n        var m_barbarian_helmet_hat = new Wearable(new GLTFShape('models/wearables/second_floor/B/m_barbarian_helmet_hat.glb'), {\r\n            position: new Vector3(276.5, 18.5, 110.4),\r\n            rotation: Quaternion.Euler(0, 60, 0),\r\n        }, 'Barbarian Helmet');\r\n        var cw_fox_top_head = new Wearable(new GLTFShape('models/wearables/second_floor/B/cw_fox_top_head.glb'), {\r\n            position: new Vector3(275.5, 18.5, 111.8),\r\n            rotation: Quaternion.Euler(0, 60, 0),\r\n        }, 'Fox Hat');\r\n        var xmas_snowman_helmet = new Wearable(new GLTFShape('models/wearables/second_floor/B/xmas_snowman_helmet.glb'), {\r\n            position: new Vector3(274.5, 18.5, 113.1),\r\n            rotation: Quaternion.Euler(0, 60, 0),\r\n        }, 'Snowman Head');\r\n        var asian_fox = new Wearable(new GLTFShape('models/wearables/second_floor/C/asian_fox.glb'), {\r\n            position: new Vector3(265.9, 18.5, 122.5),\r\n            rotation: Quaternion.Euler(0, 90, 0),\r\n        }, 'Asian Fox Mask');\r\n        var tropical_mask = new Wearable(new GLTFShape('models/wearables/second_floor/C/tropical_mask.glb'), {\r\n            position: new Vector3(265.5, 18.5, 124.5),\r\n            rotation: Quaternion.Euler(0, 90, 0),\r\n        }, 'Tropical Mask');\r\n        var muzzle_mask = new Wearable(new GLTFShape('models/wearables/second_floor/C/muzzle_mask.glb'), {\r\n            position: new Vector3(265.2, 18.5, 126.5),\r\n            rotation: Quaternion.Euler(0, 90, 0),\r\n        }, 'Muzzle Mask');\r\n        var razor_blade_feet = new Wearable(new GLTFShape('models/wearables/second_floor/D/razor_blade_feet.glb'), {\r\n            position: new Vector3(265.7, 18, 131.5),\r\n            rotation: Quaternion.Euler(0, 115, 0),\r\n        }, 'Razor Blade Shoes');\r\n        var cw_city_sneakers_feet = new Wearable(new GLTFShape('models/wearables/second_floor/D/cw_city_sneakers_feet.glb'), {\r\n            position: new Vector3(266.4, 18, 133.45),\r\n            rotation: Quaternion.Euler(0, 115, 0),\r\n        }, 'City Decentraland Sneakers');\r\n        var sad_clown_feet = new Wearable(new GLTFShape('models/wearables/second_floor/D/sad_clown_feet.glb'), {\r\n            position: new Vector3(267.3, 18, 135.4),\r\n            rotation: Quaternion.Euler(0, 115, 0),\r\n        }, 'Sad Clown Shoes');\r\n        var M_EyeWear_ThugLife = new Wearable(new GLTFShape('models/wearables/second_floor/E/M_EyeWear_ThugLife.glb'), {\r\n            position: new Vector3(270.8, 18.5, 139.7),\r\n            rotation: Quaternion.Euler(0, 145, 0),\r\n        }, 'Thug Life', true);\r\n        var razor_blade_eyewear = new Wearable(new GLTFShape('models/wearables/second_floor/E/razor_blade_eyewear.glb'), {\r\n            position: new Vector3(272.3, 18.5, 140.7),\r\n            rotation: Quaternion.Euler(0, 145, 0),\r\n        }, 'Razor Blade Eyewear');\r\n        var cw_bitcoinglasses_eyewear = new Wearable(new GLTFShape('models/wearables/second_floor/E/cw_bitcoinglasses_eyewear.glb'), {\r\n            position: new Vector3(273.8, 18.5, 141.7),\r\n            rotation: Quaternion.Euler(0, 145, 0),\r\n        }, 'Bitcoin Eyewear');\r\n        var M_Feet_BearSlippers = new Wearable(new GLTFShape('models/wearables/second_floor/F/M_Feet_BearSlippers.glb'), {\r\n            position: new Vector3(286.9, 18, 140.9),\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }, 'Bear Slippers', true);\r\n        var M_Feet_ClassiShoes = new Wearable(new GLTFShape('models/wearables/second_floor/F/M_Feet_ClassiShoes.glb'), {\r\n            position: new Vector3(288.8, 18, 140.9),\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }, 'Classic Shoes', true);\r\n        var F_Feet_Shoes_01 = new Wearable(new GLTFShape('models/wearables/second_floor/F/F_Feet_Shoes_01.glb'), {\r\n            position: new Vector3(290.4, 18, 140.9),\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }, 'Classic shoes', true);\r\n        var dcl_mana_earring = new Wearable(new GLTFShape('models/wearables/second_floor/G/dcl_mana_earring.glb'), {\r\n            position: new Vector3(291.4, 18.5, 135.3),\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }, 'MANA Earrings');\r\n        var F_Earrings_PunkPiercing = new Wearable(new GLTFShape('models/wearables/second_floor/G/F_Earrings_PunkPiercing.glb'), {\r\n            position: new Vector3(293.26, 18.5, 135.3),\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }, 'Punk Earings', true);\r\n        var F_Earrings_Skull = new Wearable(new GLTFShape('models/wearables/second_floor/G/F_Earrings_Skull.glb'), {\r\n            position: new Vector3(294.8, 18.5, 135.5),\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }, 'Skull Earrings', true);\r\n        var centerPiece = new Entity();\r\n        centerPiece.addComponent(new Transform({\r\n            position: new Vector3(279.8, 19.6, 127.9),\r\n        }));\r\n        engine.addEntity(centerPiece);\r\n        var rotated1 = new Entity();\r\n        rotated1.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 295, 0),\r\n        }));\r\n        rotated1.setParent(centerPiece);\r\n        engine.addEntity(rotated1);\r\n        var cw_tuxedo_tshirt_upper_body = new Wearable(new GLTFShape('models/wearables/second_floor/J/cw_tuxedo_tshirt_upper_body.glb'), {\r\n            position: new Vector3(0, 0, 3.5),\r\n            rotation: Quaternion.Euler(0, 0, 0),\r\n        }, 'Tuxedo T Shirt');\r\n        cw_tuxedo_tshirt_upper_body.setParent(rotated1);\r\n        var rotated2 = new Entity();\r\n        rotated2.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 244, 0),\r\n        }));\r\n        rotated2.setParent(centerPiece);\r\n        engine.addEntity(rotated2);\r\n        var mana_hoodie_upper_body = new Wearable(new GLTFShape('models/wearables/second_floor/J/mana_hoodie_upper_body.glb'), {\r\n            position: new Vector3(0, 0, 3.5),\r\n            rotation: Quaternion.Euler(0, 0, 0),\r\n        }, 'MANA Hoodie');\r\n        mana_hoodie_upper_body.setParent(rotated2);\r\n        var rotated3 = new Entity();\r\n        rotated3.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 193, 0),\r\n        }));\r\n        rotated3.setParent(centerPiece);\r\n        engine.addEntity(rotated3);\r\n        var m_cyber_suit_upper_body = new Wearable(new GLTFShape('models/wearables/second_floor/J/m_cyber_suit_upper_body.glb'), {\r\n            position: new Vector3(0, 0, 3.5),\r\n            rotation: Quaternion.Euler(0, 0, 0),\r\n        }, 'Cyber Suit');\r\n        m_cyber_suit_upper_body.setParent(rotated3);\r\n        var rotated4 = new Entity();\r\n        rotated4.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 142, 0),\r\n        }));\r\n        rotated4.setParent(centerPiece);\r\n        engine.addEntity(rotated4);\r\n        var mch_fukuzawa_upper_body = new Wearable(new GLTFShape('models/wearables/second_floor/J/mch_fukuzawa_upper_body.glb'), {\r\n            position: new Vector3(0, 0, 3.5),\r\n            rotation: Quaternion.Euler(0, 0, 0),\r\n        }, 'Fukuzawa T-Shirt');\r\n        mch_fukuzawa_upper_body.setParent(rotated4);\r\n        var rotated5 = new Entity();\r\n        rotated5.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 91, 0),\r\n        }));\r\n        rotated5.setParent(centerPiece);\r\n        engine.addEntity(rotated5);\r\n        var xmas_cyberpunk_upper_body = new Wearable(new GLTFShape('models/wearables/second_floor/J/xmas_cyberpunk_upper_body.glb'), {\r\n            position: new Vector3(0, 0, 3.5),\r\n            rotation: Quaternion.Euler(0, 0, 0),\r\n        }, 'Cyberpunk Jacket');\r\n        xmas_cyberpunk_upper_body.setParent(rotated5);\r\n        var rotated6 = new Entity();\r\n        rotated6.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 40, 0),\r\n        }));\r\n        rotated6.setParent(centerPiece);\r\n        engine.addEntity(rotated6);\r\n        var f_cw_trendy_jacket_upper_body = new Wearable(new GLTFShape('models/wearables/second_floor/J/f_cw_trendy_jacket_upper_body.glb'), {\r\n            position: new Vector3(0, 0, 3.5),\r\n            rotation: Quaternion.Euler(0, 0, 0),\r\n        }, 'Trendy Sportwear Jacket');\r\n        f_cw_trendy_jacket_upper_body.setParent(rotated6);\r\n        var rotated7 = new Entity();\r\n        rotated7.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 349, 0),\r\n        }));\r\n        rotated7.setParent(centerPiece);\r\n        engine.addEntity(rotated7);\r\n        var razor_blade_upper_body = new Wearable(new GLTFShape('models/wearables/second_floor/J/razor_blade_upper_body.glb'), {\r\n            position: new Vector3(0, 0, 3.5),\r\n            rotation: Quaternion.Euler(0, 0, 0),\r\n        }, 'Razor Blade Jacket');\r\n        razor_blade_upper_body.setParent(rotated7);\r\n    }\r\n    exports.addWearables = addWearables;\r\n});\r\ndefine(\"src/extensions/entityExtensions\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    Entity.prototype.getGlobalPosition = function () {\r\n        var entityPosition = this.hasComponent(Transform)\r\n            ? this.getComponent(Transform).position.clone()\r\n            : Vector3.Zero();\r\n        var parentEntity = this.getParent();\r\n        if (parentEntity != null) {\r\n            var parentRotation = parentEntity.hasComponent(Transform)\r\n                ? parentEntity.getComponent(Transform).rotation\r\n                : Quaternion.Identity;\r\n            return parentEntity\r\n                .getGlobalPosition()\r\n                .add(entityPosition.rotate(parentRotation));\r\n        }\r\n        return entityPosition;\r\n    };\r\n    Entity.prototype.setGlobalPosition = function (position) {\r\n        var transform = this.getComponent(Transform);\r\n        if (transform != null) {\r\n            var parentEntity = this.getParent();\r\n            if (parentEntity != null) {\r\n                var parentOffset = position.subtract(parentEntity.getGlobalPosition());\r\n                transform.position = DivVectors(parentOffset.rotate(Quaternion.Inverse(parentEntity.getGlobalRotation())), parentEntity.getGlobalScale());\r\n            }\r\n            else {\r\n                transform.position = position;\r\n            }\r\n        }\r\n    };\r\n    Entity.prototype.getGlobalRotation = function () {\r\n        var entityRotation = this.hasComponent(Transform)\r\n            ? this.getComponent(Transform).rotation.clone()\r\n            : Quaternion.Identity;\r\n        var parentEntity = this.getParent();\r\n        if (parentEntity != null) {\r\n            return parentEntity.getGlobalRotation().multiply(entityRotation);\r\n        }\r\n        return entityRotation;\r\n    };\r\n    Entity.prototype.setGlobalRotation = function (rotation) {\r\n        var transform = this.getComponent(Transform);\r\n        if (transform != null) {\r\n            var parentEntity = this.getParent();\r\n            if (parentEntity != null) {\r\n                transform.rotation = rotation.multiply(Quaternion.Inverse(parentEntity.getGlobalRotation()));\r\n            }\r\n            else {\r\n                transform.rotation = rotation;\r\n            }\r\n        }\r\n    };\r\n    Entity.prototype.getGlobalScale = function () {\r\n        var entityScale = this.hasComponent(Transform)\r\n            ? this.getComponent(Transform).scale.clone()\r\n            : Vector3.One();\r\n        var parentEntity = this.getParent();\r\n        if (parentEntity != null) {\r\n            return parentEntity.getGlobalScale().multiply(entityScale);\r\n        }\r\n        return entityScale;\r\n    };\r\n    Entity.prototype.setGlobalScale = function (scale) {\r\n        var transform = this.getComponent(Transform);\r\n        if (transform != null) {\r\n            var parentEntity = this.getParent();\r\n            if (parentEntity != null) {\r\n                transform.scale = DivVectors(scale, parentEntity.getGlobalScale());\r\n            }\r\n            else {\r\n                transform.scale = scale;\r\n            }\r\n        }\r\n    };\r\n    Entity.prototype.globalForward = function () {\r\n        return Vector3.Forward().rotate(this.getGlobalRotation());\r\n    };\r\n    Entity.prototype.globalRight = function () {\r\n        return Vector3.Right().rotate(this.getGlobalRotation());\r\n    };\r\n    Entity.prototype.globalUp = function () {\r\n        return Vector3.Up().rotate(this.getGlobalRotation());\r\n    };\r\n    function DivVectors(v1, v2) {\r\n        var ret = new Vector3();\r\n        ret.x = v2.x != 0 ? v1.x / v2.x : 0;\r\n        ret.y = v2.y != 0 ? v1.y / v2.y : 0;\r\n        ret.z = v2.z != 0 ? v1.z / v2.z : 0;\r\n        return ret;\r\n    }\r\n});\r\ndefine(\"src/modules/nftData\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.nftData = void 0;\r\n    exports.nftData = [\r\n        {\r\n            id: 0,\r\n            images: \"images/nfts/cryptoKittiesFurbeard.png\",\r\n            type: { name: \"CryptoKitties\", link: \"https://www.cryptokitties.co/\" },\r\n            title: { name: \"Furbeard\", fontSize: 24 },\r\n            details: { info: \"#1540722 / Gen 9 /Plodding Cooldown (8h)\", fontSize: 15 },\r\n            directLink: {\r\n                link: \"https://www.cryptokitties.co/kitty/1540722\",\r\n                fontSize: 11,\r\n            },\r\n            address: \"0x06012c8cf97bead5deae237070f9587f8e7a266d/1540722\",\r\n        },\r\n        {\r\n            id: 1,\r\n            images: \"images/nfts/makersPlaceAliceInWater.png\",\r\n            type: { name: \"MakersPlace\", link: \"https://makersplace.com/\" },\r\n            title: { name: \"Alice in Water\", fontSize: 24 },\r\n            details: { info: \"Artist: Katy Arrington\", fontSize: 18 },\r\n            directLink: {\r\n                link: \"https://makersplace.com/katyarrington/alice-in-water-4-of-10-23747\",\r\n                fontSize: 10,\r\n            },\r\n            address: \"0x2a46f2ffd99e19a89476e2f62270e0a35bbf0756/20606\",\r\n        },\r\n        {\r\n            id: 2,\r\n            images: \"images/nfts/knownOriginPussyBird.png\",\r\n            type: { name: \"Known Origin\", link: \"https://knownorigin.io/\" },\r\n            title: { name: \"Pussy Bird\", fontSize: 24 },\r\n            details: { info: \"Artist: Kozachok\", fontSize: 18 },\r\n            directLink: {\r\n                link: \"https://knownorigin.io/token/165777\",\r\n                fontSize: 11,\r\n            },\r\n            address: \"0xfbeef911dc5821886e1dda71586d90ed28174b7d/165777\",\r\n        },\r\n        {\r\n            id: 3,\r\n            images: \"images/nfts/axieInfinity265.png\",\r\n            type: { name: \"Axie Infinity\", link: \"https://axieinfinity.com/\" },\r\n            title: { name: \"Axie #265\", fontSize: 24 },\r\n            details: {\r\n                info: \"Aquatic / Breed count: 0 of 7 / Level: 1 / Battles ready: 3 of 3\",\r\n                fontSize: 11,\r\n            },\r\n            directLink: {\r\n                link: \"https://axieinfinity.com/axie/265\",\r\n                fontSize: 11,\r\n            },\r\n            address: \"0xf5b0a3efb8e8e4c201e2a935f110eaaf3ffecb8d/265\",\r\n        },\r\n        {\r\n            id: 4,\r\n            images: \"images/nfts/myCryptoHeroesGeorgeWashington.png\",\r\n            type: { name: \"MyCryptoHeroes\", link: \"https://www.mycryptoheroes.net/\" },\r\n            title: { name: \"George Washington\", fontSize: 24 },\r\n            details: {\r\n                info: \"Legendary / #50040004\",\r\n                fontSize: 18,\r\n            },\r\n            directLink: {\r\n                link: \"https://www.mycryptoheroes.net/heroes/50040004\",\r\n                fontSize: 11,\r\n            },\r\n            address: \"0x273f7f8e6489682df756151f5525576e322d51a3/50040004\",\r\n        },\r\n        {\r\n            id: 5,\r\n            images: \"images/nfts/mlbChampionsBabeRuth.png\",\r\n            type: { name: \"MLB Champions\", link: \"https://mlbc.app/\" },\r\n            title: { name: \"Babe Ruth\", fontSize: 24 },\r\n            details: {\r\n                info: \"Jersey No. #3 / Team: New York Yankees\",\r\n                fontSize: 15,\r\n            },\r\n            directLink: {\r\n                link: \"https://mlbc.app/asset/101663\",\r\n                fontSize: 11,\r\n            },\r\n            address: \"0x8c9b261faef3b3c2e64ab5e58e04615f8c788099/101663\",\r\n        },\r\n        {\r\n            id: 6,\r\n            images: \"images/nfts/blockchainCutiesDecentralander.png\",\r\n            type: { name: \"BlockchainCuties\", link: \"https://blockchaincuties.com/\" },\r\n            title: { name: \"Decentralander Gen0Lev10 Noble\", fontSize: 20 },\r\n            details: {\r\n                info: \"Generation 0 / Fast / Powerless\",\r\n                fontSize: 15,\r\n            },\r\n            directLink: {\r\n                link: \"https://blockchaincuties.com/pet/64359\",\r\n                fontSize: 11,\r\n            },\r\n            address: \"0xd73be539d6b2076bab83ca6ba62dfe189abc6bbe/64359\",\r\n        },\r\n        {\r\n            id: 7,\r\n            images: \"images/nfts/hyperDragons23221.png\",\r\n            type: { name: \"HyperDragons\", link: \"https://hyperdragons.alfakingdom.com/\" },\r\n            title: { name: \"Dragon #23221\", fontSize: 24 },\r\n            details: {\r\n                info: \"Gen 5 / Swift / Strong / High Cooldown\",\r\n                fontSize: 15,\r\n            },\r\n            directLink: {\r\n                link: \"https://hyperdragons.alfakingdom.com/home/marketplace-buy?id=23221\",\r\n                fontSize: 10,\r\n            },\r\n            address: \"0x7fdcd2a1e52f10c28cb7732f46393e297ecadda1/23221\",\r\n        },\r\n        {\r\n            id: 8,\r\n            images: \"images/nfts/chainGuardiansCaptainDevexAttazer3.png\",\r\n            type: { name: \"ChainGuardians\", link: \"https://chainguardians.io/\" },\r\n            title: { name: \"Captain Devex Attazer #3\", fontSize: 24 },\r\n            details: {\r\n                info: \"Legendary / Rank: Captain / Catch: 3 of 1000 / Level: 0001\",\r\n                fontSize: 12,\r\n            },\r\n            directLink: {\r\n                link: \"https://chainguardians.io/4\",\r\n                fontSize: 11,\r\n            },\r\n            address: \"0x3cd41ec039c1f2dd1f76144bb3722e7b503f50ab/4\",\r\n        },\r\n        {\r\n            id: 9,\r\n            images: \"images/nfts/cryptoMorph4252.png\",\r\n            type: { name: \"CryptoMorph\", link: \"https://nftcryptonews.com/cryptomorph/\" },\r\n            title: { name: \"Mint #4252\", fontSize: 24 },\r\n            details: {\r\n                info: \"Burnsides Ghostwriter\",\r\n                fontSize: 18,\r\n            },\r\n            directLink: {\r\n                link: \"https://opensea.io/assets/0x9255ed258dcbafe165dccd93ea0a72f4ed88e24d/4252\",\r\n                fontSize: 9,\r\n            },\r\n            address: \"0x9255ed258dcbafe165dccd93ea0a72f4ed88e24d/4252\",\r\n        },\r\n        {\r\n            id: 10,\r\n            images: \"images/nfts/josieOutOfManyOne1.png\",\r\n            type: { name: \"Josie\", link: \"https://josie.io/\" },\r\n            title: { name: \"Out of Many, One - Original #1\", fontSize: 22 },\r\n            details: {\r\n                info: \"Artist: Josie Bellini\",\r\n                fontSize: 18,\r\n            },\r\n            directLink: {\r\n                link: \"https://opensea.io/assets/0xecf7ef42b57ee37a959bf507183c5dd6bf182081/100\",\r\n                fontSize: 9,\r\n            },\r\n            address: \"0xecf7ef42b57ee37a959bf507183c5dd6bf182081/100\",\r\n        },\r\n        {\r\n            id: 11,\r\n            images: \"images/nfts/superRareTillDeathUsDoPart.png\",\r\n            type: { name: \"SuperRare\", link: \"https://superrare.co/\" },\r\n            title: { name: \"Till death do us part\", fontSize: 24 },\r\n            details: {\r\n                info: \"Artist: hisartwork\",\r\n                fontSize: 18,\r\n            },\r\n            directLink: {\r\n                link: \"https://superrare.co/artwork/till-death-do-us-part-3734\",\r\n                fontSize: 11,\r\n            },\r\n            address: \"0x41a322b28d0ff354040e2cbc676f0320d8c8850d/3734\",\r\n        },\r\n        {\r\n            id: 12,\r\n            images: \"images/nfts/makersPlaceIcebergInTheLight.png\",\r\n            type: { name: \"MakersPlace\", link: \"https://makersplace.com/\" },\r\n            title: { name: \"Iceberg in the Light\", fontSize: 24 },\r\n            details: {\r\n                info: \"Artist: David Loblaw\",\r\n                fontSize: 18,\r\n            },\r\n            directLink: {\r\n                link: \"https://makersplace.com/davidloblaw/iceberg-in-the-light-2-of-10-23483\",\r\n                fontSize: 10,\r\n            },\r\n            address: \"0x2a46f2ffd99e19a89476e2f62270e0a35bbf0756/20343\",\r\n        },\r\n        {\r\n            id: 13,\r\n            images: \"images/nfts/makersPlaceIsTheEasiestWayAlwaysTheBestWay.png\",\r\n            type: { name: \"MakersPlace\", link: \"https://makersplace.com/\" },\r\n            title: { name: \"Is the easiest way always the best way?\", fontSize: 17 },\r\n            details: {\r\n                info: \"Artist: Federico Paoli\",\r\n                fontSize: 18,\r\n            },\r\n            directLink: {\r\n                link: \"https://makersplace.com/sergueivinnitskii/is-the-easiest-way-always-the-best-way-1-of-1-23276\",\r\n                fontSize: 8,\r\n            },\r\n            address: \"0x2a46f2ffd99e19a89476e2f62270e0a35bbf0756/20136\",\r\n        },\r\n        {\r\n            id: 14,\r\n            images: \"images/nfts/knownOriginWinterMemories.png\",\r\n            type: { name: \"Known Origin\", link: \"https://knownorigin.io/\" },\r\n            title: { name: \"Winter Memories\", fontSize: 18 },\r\n            details: {\r\n                info: \"Artist: Difelice5000\",\r\n                fontSize: 18,\r\n            },\r\n            directLink: {\r\n                link: \"https://knownorigin.io/token/84252\",\r\n                fontSize: 11,\r\n            },\r\n            address: \"0xfbeef911dc5821886e1dda71586d90ed28174b7d/84252\",\r\n        },\r\n        {\r\n            id: 15,\r\n            images: \"images/nfts/knownOriginTwistedRoomSeries1.png\",\r\n            type: { name: \"Known Origin\", link: \"https://knownorigin.io/\" },\r\n            title: { name: \"Twisted Room Series #1\", fontSize: 18 },\r\n            details: {\r\n                info: \"Artist: TwistedVacancy\",\r\n                fontSize: 18,\r\n            },\r\n            directLink: {\r\n                link: \"https://knownorigin.io/token/144376\",\r\n                fontSize: 11,\r\n            },\r\n            address: \"0xfbeef911dc5821886e1dda71586d90ed28174b7d/144376\",\r\n        },\r\n    ];\r\n});\r\ndefine(\"src/modules/nftWindow\", [\"require\", \"exports\", \"src/modules/nftData\", \"src/resources\"], function (require, exports, nftData_1, resources_3) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.NFTWindow = void 0;\r\n    var NFTWindow = /** @class */ (function () {\r\n        function NFTWindow(canvas) {\r\n            var _this = this;\r\n            this.sound = new Entity();\r\n            // Container\r\n            this.container = new UIContainerRect(canvas);\r\n            this.container.width = '100%';\r\n            this.container.height = '100%';\r\n            this.container.positionY = 25;\r\n            this.container.visible = false;\r\n            // NFT Panel\r\n            this.nftPanel = new UIImage(this.container, resources_3.default.textures.nftPanel);\r\n            this.nftPanel.sourceWidth = 720;\r\n            this.nftPanel.sourceHeight = 900;\r\n            this.nftPanel.width = 480;\r\n            this.nftPanel.height = 600;\r\n            // NFT Type\r\n            this.nftType = new UIText(this.container);\r\n            this.nftType.hAlign = 'center';\r\n            this.nftType.vAlign = 'center';\r\n            this.nftType.positionX = -143;\r\n            this.nftType.positionY = 265;\r\n            this.nftType.font = new Font(Fonts.SanFrancisco_Semibold);\r\n            this.nftType.fontSize = 16;\r\n            this.nftType.fontWeight = 'normal';\r\n            this.nftType.color = new Color4(1.2, 0.07, 0.38);\r\n            this.nftType.value = 'Not Found';\r\n            this.nftType.visible = false;\r\n            // NFT Type Blank Button\r\n            this.nftTypeBlankButton = new UIImage(this.container, resources_3.default.textures.blank);\r\n            this.nftTypeBlankButton.sourceWidth = 1;\r\n            this.nftTypeBlankButton.sourceHeight = 1;\r\n            this.nftTypeBlankButton.positionX = -20;\r\n            this.nftTypeBlankButton.positionY = 250;\r\n            this.nftTypeBlankButton.width = 350;\r\n            this.nftTypeBlankButton.height = 20;\r\n            this.nftTypeBlankButton.visible = true;\r\n            this.nftTypeBlankButton.isPointerBlocker = true;\r\n            this.nftTypeBlankButton.onClick = new OnClick(function () {\r\n                _this.closeNFTWindow(true);\r\n                _this.openExternalLink(_this.nftTypeLink);\r\n            });\r\n            // NFT Title\r\n            this.nftTitle = new UIText(this.container);\r\n            this.nftTitle.hAlign = 'center';\r\n            this.nftTitle.vAlign = 'center';\r\n            this.nftTitle.positionX = -143;\r\n            this.nftTitle.positionY = 232;\r\n            this.nftTitle.font = new Font(Fonts.SanFrancisco_Heavy);\r\n            this.nftTitle.fontSize = 24;\r\n            this.nftTitle.fontWeight = 'bold';\r\n            this.nftTitle.color = Color4.Black();\r\n            this.nftTitle.value = 'Not Found';\r\n            this.nftTitle.isPointerBlocker = false;\r\n            this.nftTitle.visible = false;\r\n            // Image\r\n            this.nftImage = new UIImage(this.container, resources_3.default.textures.placeholder // Default image if nothing is found ...\r\n            );\r\n            this.nftImage.sourceWidth = 384;\r\n            this.nftImage.sourceHeight = 384;\r\n            this.nftImage.width = 384;\r\n            this.nftImage.height = 384;\r\n            this.nftImage.visible = false;\r\n            // Close button to the top right\r\n            var closeButton = new UIImage(this.container, resources_3.default.textures.closeButton);\r\n            closeButton.sourceWidth = 50;\r\n            closeButton.sourceHeight = 50;\r\n            closeButton.width = 37.5;\r\n            closeButton.height = 37.5;\r\n            closeButton.positionX = 206;\r\n            closeButton.positionY = 265;\r\n            closeButton.isPointerBlocker = true;\r\n            closeButton.onClick = new OnClick(function () {\r\n                _this.closeNFTWindow(true);\r\n            });\r\n            // NFT Details\r\n            this.nftDetails = new UIText(this.container);\r\n            this.nftDetails.adaptWidth = true;\r\n            this.nftDetails.hAlign = 'center';\r\n            this.nftDetails.vAlign = 'center';\r\n            this.nftDetails.positionY = -208;\r\n            this.nftDetails.fontSize = 18;\r\n            this.nftDetails.font = new Font(Fonts.SanFrancisco_Semibold);\r\n            this.nftDetails.color = Color4.Black();\r\n            this.nftDetails.value = 'Not Found';\r\n            this.nftDetails.visible = false;\r\n            // NFT Direct Link\r\n            this.nftDirectLink = new UIText(this.container);\r\n            this.nftDirectLink.adaptWidth = true;\r\n            this.nftDirectLink.hAlign = 'center';\r\n            this.nftDirectLink.vAlign = 'center';\r\n            this.nftDirectLink.positionY = -233;\r\n            this.nftDirectLink.fontSize = 10;\r\n            this.nftDirectLink.font = new Font(Fonts.SanFrancisco);\r\n            this.nftDirectLink.color = new Color4(1.2, 0.07, 0.38);\r\n            this.nftDirectLink.value = 'Not Found';\r\n            this.nftDirectLink.visible = false;\r\n            // Direct Link Blank Button\r\n            this.nftDirectLinkBlankButton = new UIImage(this.container, resources_3.default.textures.blank);\r\n            this.nftDirectLinkBlankButton.sourceWidth = 1;\r\n            this.nftDirectLinkBlankButton.sourceHeight = 1;\r\n            this.nftDirectLinkBlankButton.positionY = -250;\r\n            this.nftDirectLinkBlankButton.width = 370;\r\n            this.nftDirectLinkBlankButton.height = 15;\r\n            this.nftDirectLinkBlankButton.visible = true;\r\n            this.nftDirectLinkBlankButton.onClick = new OnClick(function () {\r\n                _this.closeNFTWindow(true);\r\n                _this.openExternalLink(_this.nftDirectLink.value);\r\n            });\r\n            // Sound\r\n            this.sound.addComponent(new Transform());\r\n            this.sound.addComponent(new AudioSource(resources_3.default.sounds.ui.navigationBackward));\r\n            engine.addEntity(this.sound);\r\n            this.sound.setParent(Attachable.PLAYER);\r\n        }\r\n        NFTWindow.prototype.openNFTWindow = function (id) {\r\n            for (var i = 0; i < nftData_1.nftData.length; i++) {\r\n                if (id == nftData_1.nftData[i].id) {\r\n                    this.nftImage.source = new Texture(nftData_1.nftData[i].images);\r\n                    this.nftType.value = nftData_1.nftData[i].type.name;\r\n                    this.nftTypeLink = nftData_1.nftData[i].type.link;\r\n                    this.nftTitle.value = nftData_1.nftData[i].title.name;\r\n                    this.nftTitle.fontSize = nftData_1.nftData[i].title.fontSize;\r\n                    this.nftDetails.value = nftData_1.nftData[i].details.info;\r\n                    this.nftDetails.fontSize = nftData_1.nftData[i].details.fontSize;\r\n                    this.nftDirectLink.value = nftData_1.nftData[i].directLink.link;\r\n                    this.nftDirectLink.fontSize = nftData_1.nftData[i].directLink.fontSize;\r\n                }\r\n            }\r\n            this.container.visible = true;\r\n            this.nftType.visible = true;\r\n            this.nftTitle.visible = true;\r\n            this.nftImage.visible = true;\r\n            this.nftDetails.visible = true;\r\n            this.nftDirectLink.visible = true;\r\n        };\r\n        NFTWindow.prototype.openExternalLink = function (link) {\r\n            openExternalURL(link);\r\n        };\r\n        NFTWindow.prototype.closeNFTWindow = function (playAudio) {\r\n            this.container.visible = false;\r\n            this.nftType.visible = false;\r\n            this.nftTitle.visible = false;\r\n            this.nftImage.visible = false;\r\n            this.nftDetails.visible = false;\r\n            this.nftDirectLink.visible = false;\r\n            if (playAudio)\r\n                this.sound.getComponent(AudioSource).playOnce();\r\n        };\r\n        return NFTWindow;\r\n    }());\r\n    exports.NFTWindow = NFTWindow;\r\n});\r\ndefine(\"src/modules/nft\", [\"require\", \"exports\", \"src/resources\", \"src/modules/ui\"], function (require, exports, resources_4, ui_5) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.NFT = void 0;\r\n    var NFT = /** @class */ (function (_super) {\r\n        __extends(NFT, _super);\r\n        function NFT(nft, transform, color, id, nftWindow) {\r\n            var _this = _super.call(this) || this;\r\n            _this.sound = new Entity();\r\n            engine.addEntity(_this);\r\n            _this.addComponent(nft);\r\n            _this.addComponent(transform);\r\n            _this.getComponent(NFTShape).color = color;\r\n            _this.id = id;\r\n            // Sound\r\n            _this.sound.addComponent(new Transform());\r\n            _this.sound.addComponent(new AudioSource(resources_4.default.sounds.ui.navigationForward));\r\n            engine.addEntity(_this.sound);\r\n            _this.sound.setParent(Attachable.PLAYER);\r\n            _this.addComponent(new OnPointerDown(function (e) {\r\n                _this.sound.getComponent(AudioSource).playOnce();\r\n                nftWindow.openNFTWindow(_this.id);\r\n                // used for closing UI when walking away or clicking\r\n                ui_5.updateOpenUITime();\r\n                ui_5.setUiOpener(_this);\r\n            }, {\r\n                button: ActionButton.PRIMARY,\r\n                hoverText: 'More Info',\r\n                distance: 8,\r\n            }));\r\n            return _this;\r\n        }\r\n        return NFT;\r\n    }(Entity));\r\n    exports.NFT = NFT;\r\n});\r\ndefine(\"src/modules/nftBuilder\", [\"require\", \"exports\", \"node_modules/decentraland-ecs-utils/index\", \"src/modules/nft\", \"src/modules/nftData\", \"src/modules/nftWindow\"], function (require, exports, index_5, nft_1, nftData_2, nftWindow_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.addNFTs = exports.nftWindow = void 0;\r\n    // UI Elements\r\n    var canvas = new UICanvas();\r\n    exports.nftWindow = new nftWindow_1.NFTWindow(canvas);\r\n    function addNFTs() {\r\n        // NFTs\r\n        var cryptoKittiesNFT = new nft_1.NFT(new NFTShape('ethereum://' + nftData_2.nftData[0].address), new Transform({\r\n            position: new Vector3(126.94, 5, 93.823),\r\n            rotation: Quaternion.Euler(0, 36.068 + 180, 0),\r\n            scale: new Vector3(4, 4, 2),\r\n        }), new Color3(0.75, 0.75, 1.5), nftData_2.nftData[0].id, exports.nftWindow);\r\n        var makersPlaceNFT1 = new nft_1.NFT(new NFTShape('ethereum://' + nftData_2.nftData[1].address), new Transform({\r\n            position: new Vector3(124.055, 5, 95.885),\r\n            rotation: Quaternion.Euler(0, 36.068 + 180, 0),\r\n            scale: new Vector3(4, 4, 2),\r\n        }), new Color3(0.0, 1.0, 1.5), nftData_2.nftData[1].id, exports.nftWindow);\r\n        var knownOriginNFT1 = new nft_1.NFT(new NFTShape('ethereum://' + nftData_2.nftData[2].address), new Transform({\r\n            position: new Vector3(116.075, 5, 102.364),\r\n            rotation: Quaternion.Euler(0, 40.278 + 180, 0),\r\n            scale: new Vector3(4, 4, 2),\r\n        }), new Color3(1.5, 0.5, 0.0), nftData_2.nftData[2].id, exports.nftWindow);\r\n        var axieInfinityNFT = new nft_1.NFT(new NFTShape('ethereum://' + nftData_2.nftData[3].address), new Transform({\r\n            position: new Vector3(113.39, 5, 104.817),\r\n            rotation: Quaternion.Euler(0, 45.432 + 180, 0),\r\n            scale: new Vector3(5, 5, 2),\r\n        }), new Color3(1.25, 1.25, 1.25), nftData_2.nftData[3].id, exports.nftWindow);\r\n        var myCryptoHeroesNFT = new nft_1.NFT(new NFTShape('ethereum://' + nftData_2.nftData[4].address), new Transform({\r\n            position: new Vector3(106.977, 5, 113.486),\r\n            rotation: Quaternion.Euler(0, 61.533 + 180, 0),\r\n            scale: new Vector3(4, 4, 2),\r\n        }), new Color3(0.25, 0.5, 1.5), nftData_2.nftData[4].id, exports.nftWindow);\r\n        var mlbChampionsNFT = new nft_1.NFT(new NFTShape('ethereum://' + nftData_2.nftData[5].address), new Transform({\r\n            position: new Vector3(105.261, 5, 116.672),\r\n            rotation: Quaternion.Euler(0, 61.533 + 180, 0),\r\n            scale: new Vector3(4, 4, 2),\r\n        }), new Color3(0.25, 0.25, 0.25), nftData_2.nftData[5].id, exports.nftWindow);\r\n        var blockchainCutiesNFT = new nft_1.NFT(new NFTShape('ethereum://' + nftData_2.nftData[6].address), new Transform({\r\n            position: new Vector3(111.754, 5, 120.193),\r\n            rotation: Quaternion.Euler(0, 61.533, 0),\r\n            scale: new Vector3(4, 4, 2),\r\n        }), new Color3(1.0, 1.1, 0.85), nftData_2.nftData[6].id, exports.nftWindow);\r\n        var hyperDragonsNFT = new nft_1.NFT(new NFTShape('ethereum://' + nftData_2.nftData[7].address), new Transform({\r\n            position: new Vector3(113.465, 5, 117.004),\r\n            rotation: Quaternion.Euler(0, 61.533, 0),\r\n            scale: new Vector3(4, 4, 2),\r\n        }), new Color3(0.5, 1.0, 1.0), nftData_2.nftData[7].id, exports.nftWindow);\r\n        var chainGuardiansNFT = new nft_1.NFT(new NFTShape('ethereum://' + nftData_2.nftData[8].address), new Transform({\r\n            position: new Vector3(118.655, 5, 110.005),\r\n            rotation: Quaternion.Euler(0, 44.895, 0),\r\n            scale: new Vector3(4, 4, 2),\r\n        }), new Color3(0.0, 1.0, 1.5), nftData_2.nftData[8].id, exports.nftWindow);\r\n        var cryptoMorphNFT = new nft_1.NFT(new NFTShape('ethereum://' + nftData_2.nftData[9].address), new Transform({\r\n            position: new Vector3(120.991, 5, 107.84),\r\n            rotation: Quaternion.Euler(0, 40.278, 0),\r\n            scale: new Vector3(4, 4, 2),\r\n        }), new Color3(0.9, 0.25, 1.25), nftData_2.nftData[9].id, exports.nftWindow);\r\n        var josieNFT = new nft_1.NFT(new NFTShape('ethereum://' + nftData_2.nftData[10].address), new Transform({\r\n            position: new Vector3(128.412, 5, 101.866),\r\n            rotation: Quaternion.Euler(0, 36.068, 0),\r\n            scale: new Vector3(4, 4, 2),\r\n        }), new Color3(1.5, 0.5, 0.0), nftData_2.nftData[10].id, exports.nftWindow);\r\n        var superRareNFT = new nft_1.NFT(new NFTShape('ethereum://' + nftData_2.nftData[11].address), new Transform({\r\n            position: new Vector3(131.283, 5, 99.787),\r\n            rotation: Quaternion.Euler(0, 36.068, 0),\r\n            scale: new Vector3(4, 4, 2),\r\n        }), new Color3(1.25, 0.5, 1.5), nftData_2.nftData[11].id, exports.nftWindow);\r\n        var makersPlaceNFT2 = new nft_1.NFT(new NFTShape('ethereum://' + nftData_2.nftData[12].address), new Transform({\r\n            position: new Vector3(136.106, 5, 89.079),\r\n            rotation: Quaternion.Euler(0, 23.725 + 180, 0),\r\n            scale: new Vector3(4, 4, 2),\r\n        }), new Color3(1.0, 1.0, 1.0), nftData_2.nftData[12].id, exports.nftWindow);\r\n        var makersPlaceNFT3 = new nft_1.NFT(new NFTShape('ethereum://' + nftData_2.nftData[13].address), new Transform({\r\n            position: new Vector3(139.43, 5, 95.704),\r\n            rotation: Quaternion.Euler(0, 23.725, 0),\r\n            scale: new Vector3(4, 4, 2),\r\n        }), new Color3(1.5, 0.0, 0.0), nftData_2.nftData[13].id, exports.nftWindow);\r\n        var knownOriginNFT2 = new nft_1.NFT(new NFTShape('ethereum://' + nftData_2.nftData[14].address), new Transform({\r\n            position: new Vector3(100.982, 5, 125.806),\r\n            rotation: Quaternion.Euler(0, 65.83 + 180, 0),\r\n            scale: new Vector3(4, 4, 2),\r\n        }), new Color3(0.5, 0.0, 1.5), nftData_2.nftData[14].id, exports.nftWindow);\r\n        var knownOriginNFT3 = new nft_1.NFT(new NFTShape('ethereum://' + nftData_2.nftData[15].address), new Transform({\r\n            position: new Vector3(107.804, 5, 128.694),\r\n            rotation: Quaternion.Euler(0, 65.83, 0),\r\n            scale: new Vector3(4, 4, 2),\r\n        }), new Color3(0.5, 0.0, 1.5), nftData_2.nftData[15].id, exports.nftWindow);\r\n        // Trigger\r\n        var nftTrigger = new Entity();\r\n        nftTrigger.addComponent(new Transform({\r\n            position: new Vector3(120.491, 5, 108.638),\r\n        }));\r\n        var triggerBox = new index_5.default.TriggerBoxShape(new Vector3(60, 10, 60), Vector3.Zero());\r\n        engine.addEntity(nftTrigger);\r\n    }\r\n    exports.addNFTs = addNFTs;\r\n});\r\ndefine(\"src/modules/ui\", [\"require\", \"exports\", \"src/modules/serverHandler\", \"src/modules/wearables\", \"src/resources\", \"src/modules/npcRobotBuilder\", \"src/modules/nftBuilder\", \"src/extensions/entityExtensions\"], function (require, exports, serverHandler_2, wearables_1, resources_5, npcRobotBuilder_3, nftBuilder_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.openWearableUI = exports.wearableNotForSale = exports.wearableClassic = exports.openLoadingUI = exports.openMessageBoardConfirmation = exports.openMessageBoardUI = exports.messagebg = exports.setUiOpener = exports.updateOpenUITime = exports.checkUIOpen = exports.closeUI = exports.closeDialogSound = exports.openDialogSound = exports.UIOpener = exports.UIOpenTime = exports.screenSpaceUI = void 0;\r\n    exports.screenSpaceUI = new UICanvas();\r\n    exports.screenSpaceUI.visible = true;\r\n    exports.UIOpenTime = 0;\r\n    // Open dialog sound\r\n    exports.openDialogSound = new Entity();\r\n    exports.openDialogSound.addComponent(new Transform());\r\n    // This seems to work even when the player moves as oppose to getting the transform from the item\r\n    // as the items transform might not be matching their position visuallly\r\n    exports.openDialogSound.addComponent(new AudioSource(resources_5.default.sounds.ui.navigationForward));\r\n    engine.addEntity(exports.openDialogSound);\r\n    exports.openDialogSound.setParent(Attachable.PLAYER);\r\n    // Close dialog sound\r\n    exports.closeDialogSound = new Entity();\r\n    exports.closeDialogSound.addComponent(new Transform());\r\n    exports.closeDialogSound.addComponent(new AudioSource(resources_5.default.sounds.ui.navigationBackward));\r\n    engine.addEntity(exports.closeDialogSound);\r\n    exports.closeDialogSound.setParent(Attachable.PLAYER);\r\n    function closeUI(npc) {\r\n        exports.messagebg.visible = false;\r\n        wBackground.visible = false;\r\n        nftBuilder_1.nftWindow.closeNFTWindow(false);\r\n        // if the NPC UI is explicitly closed\r\n        if (npc) {\r\n            npcRobotBuilder_3.dialogWindow.closeDialogWindow();\r\n        }\r\n    }\r\n    exports.closeUI = closeUI;\r\n    function checkUIOpen() {\r\n        if (exports.messagebg.visible ||\r\n            wBackground.visible ||\r\n            npcRobotBuilder_3.dialogWindow.isDialogOpen ||\r\n            nftBuilder_1.nftWindow.container.visible) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    exports.checkUIOpen = checkUIOpen;\r\n    function updateOpenUITime() {\r\n        exports.UIOpenTime = +Date.now();\r\n    }\r\n    exports.updateOpenUITime = updateOpenUITime;\r\n    function setUiOpener(ent) {\r\n        exports.UIOpener = ent;\r\n    }\r\n    exports.setUiOpener = setUiOpener;\r\n    var SFFont = new Font(Fonts.SanFrancisco);\r\n    var SFHeavyFont = new Font(Fonts.SanFrancisco_Heavy);\r\n    ////////  MESSAGE BOARD\r\n    var messageBoardTexture = new Texture('images/inputText.png');\r\n    exports.messagebg = new UIImage(exports.screenSpaceUI, messageBoardTexture);\r\n    exports.messagebg.visible = false;\r\n    function openMessageBoardUI(opener, boardLocation) {\r\n        updateOpenUITime();\r\n        exports.messagebg.visible = false;\r\n        exports.UIOpener = opener;\r\n        exports.openDialogSound.getComponent(AudioSource).playOnce();\r\n        exports.messagebg = new UIImage(exports.screenSpaceUI, messageBoardTexture);\r\n        exports.messagebg.name = 'mmbBackground';\r\n        exports.messagebg.width = 998;\r\n        exports.messagebg.height = 261;\r\n        exports.messagebg.hAlign = 'center';\r\n        exports.messagebg.vAlign = 'center';\r\n        exports.messagebg.sourceLeft = 13;\r\n        exports.messagebg.sourceTop = 0;\r\n        exports.messagebg.sourceWidth = 998;\r\n        exports.messagebg.sourceHeight = 261;\r\n        exports.messagebg.visible = true;\r\n        var message = new UIInputText(exports.messagebg);\r\n        message.name = 'mbMessage';\r\n        message.width = '677px';\r\n        message.height = '74';\r\n        message.hAlign = 'center';\r\n        message.vAlign = 'center';\r\n        message.positionY = 130.5 - 129 - 37;\r\n        message.fontSize = 30;\r\n        message.vTextAlign = 'center';\r\n        message.hTextAlign = 'center';\r\n        message.color = Color4.FromHexString('#53508F88');\r\n        message.placeholder = 'Write something';\r\n        message.isPointerBlocker = true;\r\n        message.visible = true;\r\n        message.onTextSubmit = new OnTextSubmit(function (x) {\r\n            var newText = x.text.substr(0, 50);\r\n            serverHandler_2.setNewMessage(boardLocation, newText);\r\n            openMessageBoardConfirmation(opener);\r\n        });\r\n    }\r\n    exports.openMessageBoardUI = openMessageBoardUI;\r\n    function openMessageBoardConfirmation(opener) {\r\n        updateOpenUITime();\r\n        exports.messagebg.visible = false;\r\n        exports.UIOpener = opener;\r\n        exports.openDialogSound.getComponent(AudioSource).playOnce();\r\n        exports.messagebg = new UIImage(exports.screenSpaceUI, messageBoardTexture);\r\n        exports.messagebg.name = 'mmbBackground';\r\n        exports.messagebg.width = 848;\r\n        exports.messagebg.height = 177;\r\n        exports.messagebg.hAlign = 'center';\r\n        exports.messagebg.vAlign = 'center';\r\n        exports.messagebg.sourceLeft = 78;\r\n        exports.messagebg.sourceTop = 323;\r\n        exports.messagebg.sourceWidth = 848;\r\n        exports.messagebg.sourceHeight = 177;\r\n        exports.messagebg.visible = true;\r\n    }\r\n    exports.openMessageBoardConfirmation = openMessageBoardConfirmation;\r\n    //////// WEARABLES UI\r\n    var wearableTexture = new Texture('images/wearablesModal.png');\r\n    var wearableColors = new Texture('images/wearable-colors.png');\r\n    var loadingIcon = new Texture('images/clockIcon.png');\r\n    var wBackground = new UIImage(exports.screenSpaceUI, wearableTexture);\r\n    wBackground.visible = false;\r\n    function openLoadingUI() {\r\n        updateOpenUITime();\r\n        wBackground.visible = false;\r\n        wBackground = new UIImage(exports.screenSpaceUI, loadingIcon);\r\n        wBackground.visible = true;\r\n        wBackground.sourceTop = 0;\r\n        wBackground.sourceLeft = 0;\r\n        wBackground.sourceHeight = 58;\r\n        wBackground.sourceWidth = 36;\r\n        wBackground.height = 58;\r\n        wBackground.width = 36;\r\n        wBackground.hAlign = 'center';\r\n        wBackground.vAlign = 'center';\r\n    }\r\n    exports.openLoadingUI = openLoadingUI;\r\n    function wearableClassic(wearable) {\r\n        updateOpenUITime();\r\n        wBackground.visible = false;\r\n        exports.UIOpener = wearable;\r\n        exports.openDialogSound.getComponent(AudioSource).playOnce();\r\n        wBackground = new UIImage(exports.screenSpaceUI, wearableTexture);\r\n        wBackground.name = 'wearablebackground';\r\n        wBackground.visible = true;\r\n        wBackground.positionY = 100;\r\n        wBackground.sourceTop = 14;\r\n        wBackground.sourceLeft = 16;\r\n        wBackground.sourceHeight = 48;\r\n        wBackground.sourceWidth = 301;\r\n        wBackground.height = 48;\r\n        wBackground.width = 301;\r\n        wBackground.hAlign = 'center';\r\n        wBackground.vAlign = 'center';\r\n    }\r\n    exports.wearableClassic = wearableClassic;\r\n    function wearableNotForSale(wearable) {\r\n        updateOpenUITime();\r\n        wBackground.visible = false;\r\n        exports.UIOpener = wearable;\r\n        exports.openDialogSound.getComponent(AudioSource).playOnce();\r\n        wBackground = new UIImage(exports.screenSpaceUI, wearableTexture);\r\n        wBackground.name = 'wearablebackground';\r\n        wBackground.visible = true;\r\n        wBackground.positionY = 100;\r\n        wBackground.sourceTop = 75;\r\n        wBackground.sourceLeft = 13;\r\n        wBackground.sourceHeight = 54;\r\n        wBackground.sourceWidth = 255;\r\n        wBackground.height = 48;\r\n        wBackground.width = 249;\r\n        wBackground.hAlign = 'center';\r\n        wBackground.vAlign = 'center';\r\n    }\r\n    exports.wearableNotForSale = wearableNotForSale;\r\n    function openWearableUI(wearable, wearableData) {\r\n        updateOpenUITime();\r\n        wBackground.visible = false;\r\n        exports.UIOpener = wearable;\r\n        exports.openDialogSound.getComponent(AudioSource).playOnce();\r\n        var wearableThumnail = new Texture(wearableData.image);\r\n        var backgroundOffset = -70;\r\n        wBackground = new UIImage(exports.screenSpaceUI, wearableTexture);\r\n        wBackground.name = 'wearablebackground';\r\n        wBackground.visible = true;\r\n        wBackground.positionY = backgroundOffset;\r\n        wBackground.sourceTop = 186;\r\n        wBackground.sourceLeft = 6;\r\n        wBackground.sourceHeight = 461;\r\n        wBackground.sourceWidth = 385;\r\n        wBackground.height = 461;\r\n        wBackground.width = 385;\r\n        wBackground.hAlign = 'center';\r\n        wBackground.vAlign = 'center';\r\n        var wRarityColor = new UIImage(wBackground, wearableColors);\r\n        wRarityColor.name = 'wearableRarityColor';\r\n        wRarityColor.positionY = 461 / 2 + 15 - backgroundOffset;\r\n        wRarityColor.width = 385;\r\n        wRarityColor.height = 175;\r\n        wRarityColor.hAlign = 'center';\r\n        wRarityColor.vAlign = 'center';\r\n        wRarityColor.sourceWidth = 385;\r\n        wRarityColor.sourceHeight = 175;\r\n        switch (wearableData.wearable.rarity) {\r\n            case 'unique':\r\n                wRarityColor.sourceLeft = 0;\r\n                wRarityColor.sourceTop = 0;\r\n                break;\r\n            case 'mythic':\r\n                wRarityColor.sourceLeft = 0;\r\n                wRarityColor.sourceTop = 175;\r\n                break;\r\n            case 'legendary':\r\n                wRarityColor.sourceLeft = 0;\r\n                wRarityColor.sourceTop = 350;\r\n                break;\r\n            case 'epic':\r\n                wRarityColor.sourceLeft = 0;\r\n                wRarityColor.sourceTop = 350 + 175;\r\n                break;\r\n            case 'uncommon':\r\n                wRarityColor.sourceLeft = 385;\r\n                wRarityColor.sourceTop = 350;\r\n                break;\r\n            case 'common':\r\n                wRarityColor.sourceLeft = 385;\r\n                wRarityColor.sourceTop = 175;\r\n                break;\r\n            case 'rare':\r\n                wRarityColor.sourceLeft = 385;\r\n                wRarityColor.sourceTop = 175 + 350;\r\n                break;\r\n            case 'swanky': // redundant, but left just in case\r\n                wRarityColor.sourceLeft = 385;\r\n                wRarityColor.sourceTop = 175 + 350;\r\n                break;\r\n        }\r\n        var closeIcon = new UIImage(wBackground, wearableTexture);\r\n        closeIcon.name = 'closeIcon';\r\n        closeIcon.visible = true;\r\n        closeIcon.positionY = 461 / 2 + 144 + 12;\r\n        closeIcon.positionX = 354 / 2;\r\n        closeIcon.sourceTop = 4;\r\n        closeIcon.sourceLeft = 328;\r\n        closeIcon.sourceHeight = 24;\r\n        closeIcon.sourceWidth = 24;\r\n        closeIcon.height = 24;\r\n        closeIcon.width = 24;\r\n        closeIcon.hAlign = 'center';\r\n        closeIcon.vAlign = 'center';\r\n        closeIcon.onClick = new OnClick(function () {\r\n            exports.closeDialogSound.getComponent(AudioSource).playOnce();\r\n            closeUI();\r\n        });\r\n        var thumnail = new UIImage(wBackground, wearableThumnail);\r\n        thumnail.name = 'wearableThumbnail';\r\n        thumnail.width = 256;\r\n        thumnail.height = 256;\r\n        thumnail.hAlign = 'center';\r\n        thumnail.vAlign = 'center';\r\n        thumnail.positionY = 461 / 2;\r\n        thumnail.sourceLeft = 0;\r\n        thumnail.sourceTop = 0;\r\n        thumnail.sourceWidth = 256;\r\n        thumnail.sourceHeight = 256;\r\n        var name = new UIText(wBackground);\r\n        name.name = 'wearableName';\r\n        name.value = wearableData.name;\r\n        name.hTextAlign = 'center';\r\n        name.vAlign = 'center';\r\n        name.hAlign = 'center';\r\n        name.fontSize = 16;\r\n        name.positionY = 461 / 2 + 121;\r\n        name.color = Color4.White();\r\n        name.font = SFHeavyFont;\r\n        var rarity = new UIText(wBackground);\r\n        rarity.name = 'wearableRarity';\r\n        rarity.hTextAlign = 'center';\r\n        rarity.value = wearableData.wearable.rarity.toLocaleUpperCase();\r\n        rarity.vAlign = 'center';\r\n        rarity.hAlign = 'center';\r\n        rarity.fontSize = 16;\r\n        rarity.positionY = 461 / 2 + 142;\r\n        rarity.color = Color4.FromHexString('#FFFFFF88');\r\n        rarity.font = SFHeavyFont;\r\n        var parsedDesc = wearableData.wearable.description;\r\n        if (parsedDesc.length > 45) {\r\n            parsedDesc = parsedDesc.slice(0, 45) + parsedDesc.replace(/(.{45})/g, '\\n');\r\n        }\r\n        var desc = new UIText(wBackground);\r\n        desc.name = 'wearableDesc';\r\n        desc.value = parsedDesc;\r\n        desc.vAlign = 'center';\r\n        desc.hAlign = 'center';\r\n        desc.fontSize = 15;\r\n        desc.positionY = 461 / 2 - 275;\r\n        desc.positionX = -385 / 2 + 29 + 5;\r\n        desc.width = 10;\r\n        desc.hTextAlign = 'left';\r\n        desc.color = Color4.Black();\r\n        desc.font = SFFont;\r\n        var shortenedOwner = wearableData.owner.address.slice(0, 5) +\r\n            '...' +\r\n            wearableData.owner.address.slice(wearableData.owner.address.length - 4);\r\n        var owner = new UIText(wBackground);\r\n        owner.name = 'wearableOwner';\r\n        owner.value = shortenedOwner;\r\n        owner.vAlign = 'center';\r\n        owner.hAlign = 'center';\r\n        owner.fontSize = 15;\r\n        owner.positionY = 461 / 2 - 119 + 5;\r\n        owner.positionX = -385 / 2 + 29 + 5;\r\n        owner.width = 10;\r\n        owner.hTextAlign = 'left';\r\n        owner.color = Color4.Black();\r\n        owner.font = SFFont;\r\n        var collection = new UIText(wBackground);\r\n        collection.name = 'wearableCollection';\r\n        collection.value = wearableData.wearable.collection;\r\n        collection.vAlign = 'center';\r\n        collection.hAlign = 'center';\r\n        collection.fontSize = 15;\r\n        collection.positionY = 461 / 2 - 185 + 5;\r\n        collection.positionX = -385 / 2 + 29 + 5;\r\n        collection.width = 10;\r\n        collection.hTextAlign = 'left';\r\n        collection.color = Color4.Black();\r\n        collection.font = SFFont;\r\n        var category = new UIText(wBackground);\r\n        category.name = 'wearableCategory';\r\n        category.value = wearableData.wearable.category;\r\n        category.vAlign = 'center';\r\n        category.hAlign = 'center';\r\n        category.fontSize = 15;\r\n        category.positionY = 461 / 2 - 185 + 5;\r\n        category.positionX = -385 / 2 + 205 + 5;\r\n        category.width = 10;\r\n        category.color = Color4.Black();\r\n        category.font = SFFont;\r\n        var genderString;\r\n        if (wearableData.wearable.bodyShapes.length == 2) {\r\n            genderString = 'Unisex';\r\n        }\r\n        else {\r\n            if (wearableData.wearable.bodyShapes[0] == 'BaseMale') {\r\n                genderString = 'Male';\r\n            }\r\n            else {\r\n                genderString = 'Female';\r\n            }\r\n        }\r\n        var gender = new UIText(wBackground);\r\n        gender.name = 'wearableGender';\r\n        gender.value = genderString;\r\n        gender.vAlign = 'center';\r\n        gender.hAlign = 'center';\r\n        gender.fontSize = 15;\r\n        gender.positionY = 461 / 2 - 210 + 5;\r\n        gender.positionX = -385 / 2 + 205 + 5;\r\n        gender.width = 10;\r\n        gender.color = Color4.Black();\r\n        gender.font = SFFont;\r\n        var formattedPrice = roundNumber(wearableData.searchOrderPrice / 1000000000000000000, 4);\r\n        var button = new UIImage(wBackground, wearableTexture);\r\n        button.name = 'wButton';\r\n        button.hAlign = 'center';\r\n        button.vAlign = 'center';\r\n        button.width = 322;\r\n        button.height = 44;\r\n        button.positionY = 461 / 2 - 395 - 20 + 9;\r\n        button.sourceLeft = 6;\r\n        button.sourceTop = 138;\r\n        button.sourceWidth = 322;\r\n        button.sourceHeight = 44;\r\n        button.onClick = new OnClick(function () {\r\n            var url = wearables_1.getWearableURL(wearableData);\r\n            openExternalURL(url);\r\n            closeUI();\r\n        });\r\n        var price = new UIText(wBackground);\r\n        price.name = 'wearablePrice';\r\n        price.value = String(formattedPrice);\r\n        price.vAlign = 'center';\r\n        price.hAlign = 'center';\r\n        price.fontSize = 15;\r\n        price.positionY = 461 / 2 - 395 + 6;\r\n        price.positionX = -385 / 2 + 191 + 5 + 20;\r\n        price.width = 10;\r\n        price.hTextAlign = 'left';\r\n        price.color = Color4.White();\r\n        price.font = SFFont;\r\n    }\r\n    exports.openWearableUI = openWearableUI;\r\n    function roundNumber(num, dec) {\r\n        var largeNum = num * Math.pow(10, dec);\r\n        return Math.round(largeNum) / Math.pow(10, dec);\r\n    }\r\n    /////// CLOSE UI\r\n    // Instance the input object\r\n    var input = Input.instance;\r\n    //button down event\r\n    input.subscribe('BUTTON_DOWN', ActionButton.POINTER, false, function (e) {\r\n        var currentTime = +Date.now();\r\n        // Won't close the UI if it was just opened\r\n        if (checkUIOpen() && currentTime - exports.UIOpenTime > 100) {\r\n            closeUI();\r\n        }\r\n    });\r\n    var UIDistanceSystem = /** @class */ (function () {\r\n        function UIDistanceSystem() {\r\n        }\r\n        UIDistanceSystem.prototype.update = function () {\r\n            if (checkUIOpen()) {\r\n                var dist = distance(Camera.instance.position, exports.UIOpener.getGlobalPosition());\r\n                // if player walks too far from entity\r\n                if (dist > 8 * 8) {\r\n                    // close all UIs, including NPC\r\n                    closeUI(true);\r\n                }\r\n            }\r\n        };\r\n        return UIDistanceSystem;\r\n    }());\r\n    engine.addSystem(new UIDistanceSystem());\r\n    // Get distance\r\n    /*\r\n    Note:\r\n    This function really returns distance squared, as it's a lot more efficient to calculate.\r\n    The square root operation is expensive and isn't really necessary if we compare the result to squared values.\r\n    We also use {x,z} not {x,y}. The y-coordinate is how high up it is.\r\n    */\r\n    function distance(pos1, pos2) {\r\n        var a = pos1.x - pos2.x;\r\n        var b = pos1.z - pos2.z;\r\n        return a * a + b * b;\r\n    }\r\n});\r\ndefine(\"src/modules/teleports\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.placeTeleports = exports.Teleport = exports.Locations = void 0;\r\n    var Locations;\r\n    (function (Locations) {\r\n        Locations[\"CROWD\"] = \"crowd\";\r\n        Locations[\"MAGIC\"] = \"magic\";\r\n        Locations[\"KOKO\"] = \"-39,58\";\r\n        Locations[\"SALMONOMICON\"] = \"-52,1\";\r\n        Locations[\"DRAGONRUSH\"] = \"-43,53\";\r\n        Locations[\"MUSEUM\"] = \"16,83\";\r\n        Locations[\"TOMBCHASER\"] = \"12,46\";\r\n        Locations[\"BLOCK\"] = \"61,-27\";\r\n        Locations[\"FRUIT\"] = \"59,133\";\r\n        Locations[\"CASTLE\"] = \"-134,-121\";\r\n        Locations[\"INFINITY\"] = \"-71,-38\";\r\n        Locations[\"MOLES\"] = \"59,135\";\r\n        Locations[\"PRESENT\"] = \"-40,-49\";\r\n        Locations[\"CASINO\"] = \"-55,143\";\r\n        Locations[\"TOKI\"] = \"28,45\";\r\n    })(Locations = exports.Locations || (exports.Locations = {}));\r\n    var Teleport = /** @class */ (function (_super) {\r\n        __extends(Teleport, _super);\r\n        function Teleport(model, transform, location, name, description) {\r\n            var _this = _super.call(this) || this;\r\n            engine.addEntity(_this);\r\n            _this.addComponent(model);\r\n            _this.addComponent(new Transform(transform));\r\n            _this.name = name;\r\n            _this.location = location;\r\n            var thisTeleport = _this;\r\n            _this.addComponent(new OnPointerDown(function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    return __generator(this, function (_a) {\r\n                        teleportTo(thisTeleport.location);\r\n                        return [2 /*return*/];\r\n                    });\r\n                });\r\n            }, {\r\n                button: ActionButton.PRIMARY,\r\n                hoverText: _this.name,\r\n            }));\r\n            var Particles = new Entity();\r\n            Particles.addComponent(new GLTFShape('models/particles.glb'));\r\n            Particles.setParent(_this);\r\n            var teleportFloor = new Entity();\r\n            teleportFloor.addComponent(new GLTFShape('models/teleports/teleport.glb'));\r\n            teleportFloor.addComponent(new Transform({}));\r\n            teleportFloor.setParent(_this);\r\n            return _this;\r\n        }\r\n        return Teleport;\r\n    }(Entity));\r\n    exports.Teleport = Teleport;\r\n    function placeTeleports() {\r\n        var e_4, _a;\r\n        // artichoke & garden\r\n        var teleportPos1 = new Transform({\r\n            position: new Vector3(81.7, 0.3, 18.45),\r\n            rotation: Quaternion.Euler(0, 0, 0),\r\n        });\r\n        // garden & hallway\r\n        var teleportPos2 = new Transform({\r\n            position: new Vector3(100.19, 0.3, 69),\r\n            rotation: Quaternion.Euler(0, 225, 0),\r\n        });\r\n        // garden & market\r\n        var teleportPos3 = new Transform({\r\n            position: new Vector3(177.5, 0.3, 51),\r\n            rotation: Quaternion.Euler(0, 0, 0),\r\n        });\r\n        // garden & rock\r\n        var teleportPos4 = new Transform({\r\n            position: new Vector3(189.84, 0.3, 68),\r\n            rotation: Quaternion.Euler(0, 270, 0),\r\n        });\r\n        // rock & market\r\n        var teleportPos5 = new Transform({\r\n            position: new Vector3(210.19, 0.45, 68.8),\r\n            rotation: Quaternion.Euler(0, 90, 0),\r\n        });\r\n        // sculpture & wearables\r\n        var teleportPos6 = new Transform({\r\n            position: new Vector3(211.19, 0.3, 119.5),\r\n            rotation: Quaternion.Euler(0, 270, 0),\r\n        });\r\n        // wearables - west\r\n        var teleportPos7 = new Transform({\r\n            position: new Vector3(226.8, 0.3, 132.8),\r\n            rotation: Quaternion.Euler(0, 90, 0),\r\n        });\r\n        // wearables - NW\r\n        var teleportPos8 = new Transform({\r\n            position: new Vector3(228.3, 0.45, 168.8),\r\n            rotation: Quaternion.Euler(0, 135, 0),\r\n        });\r\n        // wearables - N\r\n        var teleportPos9 = new Transform({\r\n            position: new Vector3(261.2, 0.3, 174.4),\r\n            rotation: Quaternion.Euler(0, 135, 0),\r\n        });\r\n        // whale - S\r\n        var teleportPos10 = new Transform({\r\n            position: new Vector3(222.7, 0.45, 203.8),\r\n            rotation: Quaternion.Euler(0, 45, 0),\r\n        });\r\n        // center - N\r\n        var teleportPos11 = new Transform({\r\n            position: new Vector3(174.71, 0.4, 209.8),\r\n            rotation: Quaternion.Euler(0, 45, 0),\r\n        });\r\n        // whale & mountains\r\n        var teleportPos12 = new Transform({\r\n            position: new Vector3(97.63, 0.3, 249.46),\r\n            rotation: Quaternion.Euler(0, 0, 0),\r\n        });\r\n        // tower- east\r\n        var teleportPos13 = new Transform({\r\n            position: new Vector3(89.42, 0.3, 101.4),\r\n            rotation: Quaternion.Euler(0, 0, 0),\r\n        });\r\n        // tower- south\r\n        var teleportPos14 = new Transform({\r\n            position: new Vector3(17.44, 0.25, 75.3),\r\n            rotation: Quaternion.Euler(0, 45, 0),\r\n        });\r\n        // center - N2\r\n        var teleportPos15 = new Transform({\r\n            position: new Vector3(145.45, 0.7, 210),\r\n            rotation: Quaternion.Euler(0, 45, 0),\r\n        });\r\n        var teleports = [\r\n            {\r\n                name: 'Dragon Rush',\r\n                model: new GLTFShape('models/teleports/dragon_rush.glb'),\r\n                location: Locations.DRAGONRUSH,\r\n                transform: teleportPos1,\r\n                description: 'Fly on the back of a dragon, need we\\nsay more?\\nScene by the amusement park district.',\r\n            },\r\n            {\r\n                name: 'Toki Toki Land',\r\n                model: new GLTFShape('models/teleports/toki_land.glb'),\r\n                location: Locations.TOKI,\r\n                transform: teleportPos2,\r\n                description: 'A christmas themed adventure.\\nSave the Toki Tokis from\\nan evil snowman and his henchmen.',\r\n            },\r\n            {\r\n                name: 'Random amazing scene',\r\n                model: new GLTFShape('models/teleports/star.glb'),\r\n                location: Locations.MAGIC,\r\n                transform: teleportPos3,\r\n                description: 'Visit a random scene from\\na curated list of amazing places!\\n',\r\n            },\r\n            {\r\n                name: 'Block Runner',\r\n                model: new GLTFShape('models/teleports/block_runner.glb'),\r\n                location: Locations.BLOCK,\r\n                transform: teleportPos4,\r\n                description: 'A collection of competitive minigames\\nthat are a lot of fun to play!\\n',\r\n            },\r\n            {\r\n                name: 'Serenity Island Casino',\r\n                model: new GLTFShape('models/teleports/roulette.glb'),\r\n                location: Locations.CASINO,\r\n                transform: teleportPos5,\r\n                description: 'Play roulette and slot machines in a\\nluxurious casino by the shore!\\n',\r\n            },\r\n            {\r\n                name: 'Koko Jones',\r\n                model: new GLTFShape('models/teleports/koko_jones.glb'),\r\n                location: Locations.KOKO,\r\n                transform: teleportPos6,\r\n                description: 'Visit the temple of eternal bananas\\nto collect gems and face evil monkeys\\nScene by the amusement park district.',\r\n            },\r\n            {\r\n                name: 'Fruit Catcher',\r\n                model: new GLTFShape('models/teleports/fruit_catcher.glb'),\r\n                location: Locations.FRUIT,\r\n                transform: teleportPos7,\r\n                description: 'Catch as many fruits as you can,\\navoid bombs! Compete for the\\nhighest score!',\r\n            },\r\n            {\r\n                name: 'Random amazing scene',\r\n                model: new GLTFShape('models/teleports/star.glb'),\r\n                location: Locations.MAGIC,\r\n                transform: teleportPos8,\r\n                description: 'Visit a random scene from\\na curated list of amazing places!\\n',\r\n            },\r\n            {\r\n                name: 'Join other players',\r\n                model: new GLTFShape('models/teleports/crowd.glb'),\r\n                location: Locations.CROWD,\r\n                transform: teleportPos9,\r\n                description: 'Teleport to the most crowded location\\nin all of Decentraland to meet up\\nwith other players!',\r\n            },\r\n            {\r\n                name: 'Book of Salmonomicon',\r\n                model: new GLTFShape('models/teleports/salmonomicon.glb'),\r\n                location: Locations.SALMONOMICON,\r\n                transform: teleportPos10,\r\n                description: 'In this bizarre horror-themed game\\nhelp Mika out and defeat a\\nterrible creature.',\r\n            },\r\n            {\r\n                name: 'Museum District',\r\n                model: new GLTFShape('models/teleports/museum_district.glb'),\r\n                location: Locations.MUSEUM,\r\n                transform: teleportPos11,\r\n                description: 'The Museum district houses works\\nfrom digital and traditional artists.\\nSuperb moving sculptures & paintings.',\r\n            },\r\n            {\r\n                name: 'Click a Mole',\r\n                model: new GLTFShape('models/teleports/click_a_mole.glb'),\r\n                location: Locations.MOLES,\r\n                transform: teleportPos12,\r\n                description: 'Whack the moles before they hide!\\n\\n',\r\n            },\r\n            {\r\n                name: 'Tomb Chaser',\r\n                model: new GLTFShape('models/teleports/tomb_chaser.glb'),\r\n                location: Locations.TOMBCHASER,\r\n                transform: teleportPos13,\r\n                description: 'Speed run through an ancient pyramid\\navoiding obstacles as you try to keep\\nup, in this exciting game.',\r\n            },\r\n            {\r\n                name: 'Infinity Engine',\r\n                model: new GLTFShape('models/teleports/infinity_engine.glb'),\r\n                location: Locations.INFINITY,\r\n                transform: teleportPos14,\r\n                description: 'Mine for loot underground, then\\ndefend a train from\\nbandits.',\r\n            },\r\n            {\r\n                name: 'Join other players',\r\n                model: new GLTFShape('models/teleports/crowd.glb'),\r\n                location: Locations.CROWD,\r\n                transform: teleportPos15,\r\n                description: 'Teleport to the most crowded location\\nin all of Decentraland to meet up\\nwith other players!',\r\n            },\r\n        ];\r\n        try {\r\n            for (var teleports_1 = __values(teleports), teleports_1_1 = teleports_1.next(); !teleports_1_1.done; teleports_1_1 = teleports_1.next()) {\r\n                var i = teleports_1_1.value;\r\n                var t = new Teleport(i.model, i.transform, i.location, i.name, i.description);\r\n            }\r\n        }\r\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n        finally {\r\n            try {\r\n                if (teleports_1_1 && !teleports_1_1.done && (_a = teleports_1.return)) _a.call(teleports_1);\r\n            }\r\n            finally { if (e_4) throw e_4.error; }\r\n        }\r\n    }\r\n    exports.placeTeleports = placeTeleports;\r\n});\r\ndefine(\"src/modules/platforms\", [\"require\", \"exports\", \"node_modules/decentraland-ecs-utils/index\", \"src/modules/serverHandler\"], function (require, exports, index_6, serverHandler_3) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.placePlatforms = exports.Platform = void 0;\r\n    /// Reusable class for all platforms\r\n    var Platform = /** @class */ (function (_super) {\r\n        __extends(Platform, _super);\r\n        function Platform(model, platformPos, triggerPos, triggerScale, animation, messageBusHandle) {\r\n            var _this = _super.call(this) || this;\r\n            engine.addEntity(_this);\r\n            _this.addComponent(model);\r\n            _this.addComponent(new Transform(platformPos));\r\n            _this.addComponent(new Animator());\r\n            _this.animation = new AnimationState(animation, { looping: false });\r\n            _this.getComponent(Animator).addClip(_this.animation);\r\n            var triggerEntity = new Entity();\r\n            triggerEntity.addComponent(new Transform(triggerPos));\r\n            var triggerBox = new index_6.default.TriggerBoxShape(triggerScale, Vector3.Zero());\r\n            triggerEntity.addComponent(new index_6.default.TriggerComponent(triggerBox, //shape\r\n            0, //layer\r\n            0, //triggeredByLayer\r\n            null, //onTriggerEnter\r\n            null, //onTriggerExit\r\n            function () {\r\n                log('triggered platform');\r\n                serverHandler_3.sceneMessageBus.emit(messageBusHandle, {});\r\n            }, null, //onCameraExit\r\n            false //true\r\n            ));\r\n            engine.addEntity(triggerEntity);\r\n            return _this;\r\n        }\r\n        Platform.prototype.activate = function () {\r\n            this.animation.stop();\r\n            this.animation.play();\r\n        };\r\n        return Platform;\r\n    }(Entity));\r\n    exports.Platform = Platform;\r\n    function placePlatforms() {\r\n        //ARTICHOKE ELEVATOR\r\n        var artichoke_Elevator = new Platform(new GLTFShape(\"models/L'architoque_Elevator.glb\"), { rotation: Quaternion.Euler(0, 180, 0) }, { position: new Vector3(51, 2.5, 39.5) }, new Vector3(4, 4, 4), \"L'architoque_Elevator\", 'artichokeElevatorActivated');\r\n        // WHALE ELEVATOR\r\n        var whale_Elevator = new Platform(new GLTFShape('models/TheWhale_Action_Elevator.glb'), { rotation: Quaternion.Euler(0, 180, 0) }, { position: new Vector3(188.5, 3, 236) }, new Vector3(7, 3, 7), 'WhaleElevator_Action', 'whaleElevatorActivated');\r\n        //// MOON TOWER ELEVATOR\r\n        var moonTower_Elevator = new Platform(new GLTFShape('models/MoonTower_Action_Elevator.glb'), { rotation: Quaternion.Euler(0, 180, 0) }, { position: new Vector3(48.6, 2.4, 116.6) }, new Vector3(7, 3, 7), 'MoonTower_Action_Elevator', 'moonElevatorActivated');\r\n        ///////  SHELL ELEVATOR\r\n        var shell_elevator = new Platform(new GLTFShape('models/shell_elevator.glb'), { rotation: Quaternion.Euler(0, 180, 0) }, {\r\n            position: new Vector3(300.5, 11.3, 120),\r\n            rotation: Quaternion.Euler(0, 45, 0),\r\n        }, new Vector3(7, 2, 6), 'TheShell_ElevatorAction', 'shellElevatorActivated');\r\n        ///////  TRAIN ELEVATOR\r\n        var train_elevator = new Platform(new GLTFShape('models/train_elevator.glb'), { rotation: Quaternion.Euler(0, 180, 0) }, {\r\n            position: new Vector3(229.7, 1.3, 143),\r\n            rotation: Quaternion.Euler(0, 45, 0),\r\n        }, new Vector3(2, 2, 2), 'TrainElevator_Action', 'trainElevatorActivated');\r\n        //// BALOOON\r\n        var ballonIsFlying = false;\r\n        var balloon = new Platform(new GLTFShape('models/balloon.glb'), { rotation: Quaternion.Euler(0, 180, 0) }, {\r\n            position: new Vector3(80, 2, 181),\r\n            rotation: Quaternion.Euler(0, 45, 0),\r\n        }, new Vector3(2, 1, 2), 'Balloon_Action', 'balloonActivated');\r\n        // TRAIN\r\n        var trainIsMoving = false;\r\n        var train = new Platform(new GLTFShape('models/train.glb'), { rotation: Quaternion.Euler(0, 180, 0) }, {\r\n            position: new Vector3(234.5, 7, 143),\r\n            rotation: Quaternion.Euler(0, 45, 0),\r\n        }, new Vector3(2, 2, 6), 'Train_Action', 'trainActivated');\r\n        serverHandler_3.sceneMessageBus.on('artichokeElevatorActivated', function (e) {\r\n            artichoke_Elevator.activate();\r\n            log('artichoke elevator');\r\n        });\r\n        serverHandler_3.sceneMessageBus.on('whaleElevatorActivated', function (e) {\r\n            whale_Elevator.activate();\r\n            log('whale elevator');\r\n        });\r\n        serverHandler_3.sceneMessageBus.on('moonElevatorActivated', function (e) {\r\n            moonTower_Elevator.activate();\r\n            log('moon tower elevator');\r\n        });\r\n        serverHandler_3.sceneMessageBus.on('shellElevatorActivated', function (e) {\r\n            shell_elevator.activate();\r\n            log('shell elevator');\r\n        });\r\n        serverHandler_3.sceneMessageBus.on('trainElevatorActivated', function (e) {\r\n            train_elevator.activate();\r\n            log('train elevator');\r\n        });\r\n        serverHandler_3.sceneMessageBus.on('balloonActivated', function (e) {\r\n            if (ballonIsFlying) {\r\n                log('baloon was already in flight');\r\n                return;\r\n            }\r\n            ballonIsFlying = true;\r\n            balloon.activate();\r\n            balloon.addComponentOrReplace(new index_6.default.Delay(150 * 1000, function () {\r\n                ballonIsFlying = false;\r\n            }));\r\n        });\r\n        serverHandler_3.sceneMessageBus.on('trainActivated', function (e) {\r\n            if (trainIsMoving) {\r\n                log('train was already in movement');\r\n                return;\r\n            }\r\n            trainIsMoving = true;\r\n            train.activate();\r\n            train.addComponentOrReplace(new index_6.default.Delay(100 * 1000, function () {\r\n                trainIsMoving = false;\r\n            }));\r\n        });\r\n    }\r\n    exports.placePlatforms = placePlatforms;\r\n});\r\ndefine(\"src/modules/video\", [\"require\", \"exports\", \"node_modules/decentraland-ecs-utils/index\"], function (require, exports, index_7) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.addScreen = exports.VideoScreen = void 0;\r\n    var VideoScreen = /** @class */ (function (_super) {\r\n        __extends(VideoScreen, _super);\r\n        function VideoScreen(screenPos, triggerPos, triggerScale, streamURL) {\r\n            var _this = _super.call(this) || this;\r\n            engine.addEntity(_this);\r\n            _this.addComponent(new PlaneShape());\r\n            _this.addComponent(new Transform(screenPos));\r\n            _this.addComponent(new Animator());\r\n            _this.texture = new VideoTexture(new VideoClip(streamURL));\r\n            _this.texture.playing = false;\r\n            var mat = new Material();\r\n            mat.albedoTexture = _this.texture;\r\n            mat.specularIntensity = 0;\r\n            mat.roughness = 1;\r\n            mat.metallic = 0;\r\n            _this.addComponent(mat);\r\n            var triggerEntity = new Entity();\r\n            triggerEntity.addComponent(new Transform(triggerPos));\r\n            var triggerBox = new index_7.default.TriggerBoxShape(triggerScale, Vector3.Zero());\r\n            triggerEntity.addComponent(new index_7.default.TriggerComponent(triggerBox, //shape\r\n            0, //layer\r\n            0, //triggeredByLayer\r\n            null, //onTriggerEnter\r\n            null, //onTriggerExit\r\n            function () {\r\n                _this.activate();\r\n            }, function () {\r\n                _this.deactivate();\r\n            }, //onCameraExit\r\n            false));\r\n            engine.addEntity(triggerEntity);\r\n            return _this;\r\n        }\r\n        VideoScreen.prototype.activate = function () {\r\n            this.texture.playing = true;\r\n        };\r\n        VideoScreen.prototype.deactivate = function () {\r\n            this.texture.playing = false;\r\n        };\r\n        return VideoScreen;\r\n    }(Entity));\r\n    exports.VideoScreen = VideoScreen;\r\n    function addScreen() {\r\n        var screen1 = new VideoScreen({\r\n            position: new Vector3(285, 17.5, 279),\r\n            rotation: Quaternion.Euler(0, 210, 0),\r\n            scale: new Vector3(10 * 2.8, 5.6 * 2.8, 10 * 2.8),\r\n        }, { position: new Vector3(270, 5, 255) }, new Vector3(90, 90, 90), 'https://theuniverse.club/live/genesisplaza/index.m3u8');\r\n        screen1.getComponent(Transform).rotate(new Vector3(1, 0, 0), 10);\r\n    }\r\n    exports.addScreen = addScreen;\r\n});\r\ndefine(\"src/modules/buildings\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.addBuildings = void 0;\r\n    function addBuildings() {\r\n        // AGORA BUILDING\r\n        // add agora\r\n        var agora = new Entity();\r\n        agora.addComponent(new GLTFShape('models/agora.glb'));\r\n        agora.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }));\r\n        engine.addEntity(agora);\r\n        // L' ARTICHOKE\r\n        //add artichoke_building\r\n        var artichoke = new Entity();\r\n        artichoke.addComponent(new GLTFShape('models/artichoke.glb'));\r\n        artichoke.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }));\r\n        engine.addEntity(artichoke);\r\n        // THE HALLWAY (PICTURES FRAMES & NFTs)\r\n        //add hallway\r\n        var hallway = new Entity();\r\n        hallway.addComponent(new GLTFShape('models/hallway.glb'));\r\n        hallway.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }));\r\n        engine.addEntity(hallway);\r\n        // THE MOUNTAINS (TUTORIAL SPACE)\r\n        //add mountains\r\n        var mountains = new Entity();\r\n        mountains.addComponent(new GLTFShape('models/mountains.glb'));\r\n        mountains.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }));\r\n        engine.addEntity(mountains);\r\n        // MOON TOWER\r\n        //add moon_tower_building\r\n        var moon_tower = new Entity();\r\n        moon_tower.addComponent(new GLTFShape('models/moon-tower.glb'));\r\n        moon_tower.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }));\r\n        engine.addEntity(moon_tower);\r\n        //add MoonTower_Action_Cosmos\r\n        var MoonTower_Action_Cosmos = new Entity();\r\n        MoonTower_Action_Cosmos.addComponent(new GLTFShape('models/MoonTower_Action_Cosmos.glb'));\r\n        MoonTower_Action_Cosmos.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }));\r\n        engine.addEntity(MoonTower_Action_Cosmos);\r\n        //add MoonTower_Action_Moon\r\n        var MoonTower_Action_Moon = new Entity();\r\n        MoonTower_Action_Moon.addComponent(new GLTFShape('models/MoonTower_Action_Moon.glb'));\r\n        MoonTower_Action_Moon.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }));\r\n        var MoonTower_Action_MoonAnimator = new Animator();\r\n        MoonTower_Action_Moon.addComponent(MoonTower_Action_MoonAnimator);\r\n        var playMoonTower_Action_Moon = new AnimationState('MoonTower_Action_MoonDark.001');\r\n        MoonTower_Action_MoonAnimator.addClip(playMoonTower_Action_Moon);\r\n        playMoonTower_Action_Moon.play();\r\n        engine.addEntity(MoonTower_Action_Moon);\r\n        //add MoonTower_Action_Ringu\r\n        var MoonTower_Action_Ringu = new Entity();\r\n        MoonTower_Action_Ringu.addComponent(new GLTFShape('models/MoonTower_Action_Ringu.glb'));\r\n        MoonTower_Action_Ringu.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }));\r\n        engine.addEntity(MoonTower_Action_Ringu);\r\n        //add Text_A\r\n        var Text_A = new Entity();\r\n        Text_A.addComponent(new GLTFShape(\"models/Text_A.glb\"));\r\n        Text_A.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 180, 0)\r\n        }));\r\n        engine.addEntity(Text_A);\r\n        //add Text_B\r\n        var Text_B = new Entity();\r\n        Text_B.addComponent(new GLTFShape(\"models/Text_B.glb\"));\r\n        Text_B.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 180, 0)\r\n        }));\r\n        engine.addEntity(Text_B);\r\n        //add Text_C\r\n        var Text_C = new Entity();\r\n        Text_C.addComponent(new GLTFShape(\"models/Text_C.glb\"));\r\n        Text_C.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 180, 0)\r\n        }));\r\n        engine.addEntity(Text_C);\r\n        //add flare\r\n        var flare = new Entity();\r\n        flare.addComponent(new GLTFShape(\"models/flare.glb\"));\r\n        flare.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 180, 0)\r\n        }));\r\n        engine.addEntity(flare);\r\n        //add TheWhale_Action_Sculpture\r\n        var TheWhale_Action_Sculpture = new Entity();\r\n        TheWhale_Action_Sculpture.addComponent(new GLTFShape('models/TheWhale_Action_Sculpture.glb'));\r\n        TheWhale_Action_Sculpture.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }));\r\n        engine.addEntity(TheWhale_Action_Sculpture);\r\n        //add Gallery_action_Moebius\r\n        var Gallery_action_Moebius = new Entity();\r\n        Gallery_action_Moebius.addComponent(new GLTFShape('models/Gallery_action_Moebius.glb'));\r\n        Gallery_action_Moebius.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }));\r\n        engine.addEntity(Gallery_action_Moebius);\r\n        //add Gallery_action_Moebius2\r\n        var Gallery_action_Moebius2 = new Entity();\r\n        Gallery_action_Moebius2.addComponent(new GLTFShape(\"models/Gallery_action_Moebius2.glb\"));\r\n        Gallery_action_Moebius2.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 180, 0)\r\n        }));\r\n        engine.addEntity(Gallery_action_Moebius2);\r\n        //CORE BUILDING\r\n        //add core_building\r\n        var core_building = new Entity();\r\n        core_building.addComponent(new GLTFShape('models/core_building.glb'));\r\n        core_building.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }));\r\n        engine.addEntity(core_building);\r\n        //add msg_welcome\r\n        var msg_welcome = new Entity();\r\n        msg_welcome.addComponent(new GLTFShape(\"models/msg_welcome.glb\"));\r\n        msg_welcome.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 180, 0)\r\n        }));\r\n        engine.addEntity(msg_welcome);\r\n        //add core_art\r\n        var core_art = new Entity();\r\n        core_art.addComponent(new GLTFShape(\"models/core_art.glb\"));\r\n        core_art.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 180, 0)\r\n        }));\r\n        engine.addEntity(core_art);\r\n        // THE GARDEN (CREATORS BUILDING)\r\n        //add garden\r\n        var garden = new Entity();\r\n        garden.addComponent(new GLTFShape('models/garden.glb'));\r\n        garden.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }));\r\n        engine.addEntity(garden);\r\n        //CONFERENCE BUILDING\r\n        //add auditorium\r\n        var auditorium = new Entity();\r\n        auditorium.addComponent(new GLTFShape('models/auditorium.glb'));\r\n        auditorium.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }));\r\n        engine.addEntity(auditorium);\r\n        // SHALE BUILDING\r\n        //add shell_building\r\n        var shell = new Entity();\r\n        shell.addComponent(new GLTFShape('models/shell.glb'));\r\n        shell.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }));\r\n        engine.addEntity(shell);\r\n        //add shoe_prop\r\n        var shoe_prop = new Entity();\r\n        shoe_prop.addComponent(new GLTFShape('models/shoe_prop.glb'));\r\n        shoe_prop.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }));\r\n        engine.addEntity(shoe_prop);\r\n        //add tshirt_prop\r\n        var tshirt_prop = new Entity();\r\n        tshirt_prop.addComponent(new GLTFShape('models/tshirt_prop.glb'));\r\n        tshirt_prop.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }));\r\n        engine.addEntity(tshirt_prop);\r\n        //WHALE BUILDING (WEARABLES NFTs)\r\n        //add whale\r\n        var whale = new Entity();\r\n        whale.addComponent(new GLTFShape('models/whale.glb'));\r\n        whale.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }));\r\n        engine.addEntity(whale);\r\n        // TRADING CENTER\r\n        //add trading_center\r\n        var trading_center = new Entity();\r\n        trading_center.addComponent(new GLTFShape('models/trading_center.glb'));\r\n        trading_center.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }));\r\n        engine.addEntity(trading_center);\r\n        //add trading_land\r\n        var trading_land = new Entity();\r\n        trading_land.addComponent(new GLTFShape(\"models/trading_land.glb\"));\r\n        trading_land.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 180, 0)\r\n        }));\r\n        engine.addEntity(trading_land);\r\n        //add trading_crypto\r\n        var trading_crypto = new Entity();\r\n        trading_crypto.addComponent(new GLTFShape(\"models/trading_crypto.glb\"));\r\n        trading_crypto.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 180, 0)\r\n        }));\r\n        engine.addEntity(trading_crypto);\r\n        //add trading_wearables\r\n        var trading_wearables = new Entity();\r\n        trading_wearables.addComponent(new GLTFShape(\"models/trading_wearables.glb\"));\r\n        trading_wearables.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 180, 0)\r\n        }));\r\n        engine.addEntity(trading_wearables);\r\n        //STREET MESH\r\n        //add street\r\n        var street = new Entity();\r\n        street.addComponent(new GLTFShape('models/street.glb'));\r\n        street.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }));\r\n        engine.addEntity(street);\r\n    }\r\n    exports.addBuildings = addBuildings;\r\n    //add zepellin\r\n    var zepellin = new Entity();\r\n    zepellin.addComponent(new GLTFShape(\"models/zepellin.glb\"));\r\n    zepellin.addComponent(new Transform({\r\n        rotation: Quaternion.Euler(0, 180, 0)\r\n    }));\r\n    engine.addEntity(zepellin);\r\n});\r\ndefine(\"src/modules/realmData\", [\"require\", \"exports\", \"@decentraland/EnvironmentAPI\"], function (require, exports, EnvironmentAPI_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.getRealm = exports.setRealm = exports.playerRealm = void 0;\r\n    // fetch the player's realm\r\n    function setRealm() {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var realm;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, EnvironmentAPI_1.getCurrentRealm()];\r\n                    case 1:\r\n                        realm = _a.sent();\r\n                        log(\"You are in the realm: \" + JSON.stringify(realm.displayName));\r\n                        exports.playerRealm = realm.displayName;\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    exports.setRealm = setRealm;\r\n    // fetch the player's realm\r\n    function getRealm() {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var realm;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, EnvironmentAPI_1.getCurrentRealm()];\r\n                    case 1:\r\n                        realm = _a.sent();\r\n                        log(\"You are in the realm: \" + JSON.stringify(realm.displayName));\r\n                        return [2 /*return*/, realm.displayName];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    exports.getRealm = getRealm;\r\n});\r\ndefine(\"src/mural/serverHandler\", [\"require\", \"exports\", \"src/mural/tile\", \"src/modules/serverHandler\", \"src/modules/realmData\", \"node_modules/decentraland-ecs-utils/index\"], function (require, exports, tile_1, serverHandler_4, realmData_1, index_8) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.changeMural = exports.getMural = void 0;\r\n    // get lastest mural state\r\n    function getMural() {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var url, response, json, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _b.trys.push([0, 5, , 6]);\r\n                        if (!!realmData_1.playerRealm) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, realmData_1.setRealm()];\r\n                    case 1:\r\n                        _b.sent();\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        url = serverHandler_4.awsServer + 'mural/' + realmData_1.playerRealm + '/tiles.json';\r\n                        return [4 /*yield*/, fetch(url).then()];\r\n                    case 3:\r\n                        response = _b.sent();\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 4:\r\n                        json = _b.sent();\r\n                        return [2 /*return*/, json.tiles];\r\n                    case 5:\r\n                        _a = _b.sent();\r\n                        log('error fetching from AWS server');\r\n                        return [3 /*break*/, 6];\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    exports.getMural = getMural;\r\n    // update mural\r\n    function changeMural() {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!!realmData_1.playerRealm) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, realmData_1.setRealm()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        muralChanger.addComponentOrReplace(\r\n                        // Only send request if no more changes come over the next second\r\n                        new index_8.default.Delay(1000, function () {\r\n                            return __awaiter(this, void 0, void 0, function () {\r\n                                var url, body, headers, response, _a;\r\n                                return __generator(this, function (_b) {\r\n                                    switch (_b.label) {\r\n                                        case 0:\r\n                                            _b.trys.push([0, 2, , 3]);\r\n                                            url = serverHandler_4.fireBaseServer + 'update-mural?realm=' + realmData_1.playerRealm;\r\n                                            body = JSON.stringify({ tiles: tile_1.tileNumbers });\r\n                                            headers = {};\r\n                                            return [4 /*yield*/, fetch(url, {\r\n                                                    method: 'POST',\r\n                                                    headers: { 'Content-Type': 'application/json' },\r\n                                                    body: body,\r\n                                                })];\r\n                                        case 1:\r\n                                            response = _b.sent();\r\n                                            return [2 /*return*/, response.json()];\r\n                                        case 2:\r\n                                            _a = _b.sent();\r\n                                            log('error fetching from AWS server');\r\n                                            return [3 /*break*/, 3];\r\n                                        case 3: return [2 /*return*/];\r\n                                    }\r\n                                });\r\n                            });\r\n                        }));\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    exports.changeMural = changeMural;\r\n    var muralChanger = new Entity();\r\n    engine.addEntity(muralChanger);\r\n});\r\ndefine(\"src/mural/tile\", [\"require\", \"exports\", \"src/mural/serverHandler\", \"src/resources\"], function (require, exports, serverHandler_5, resources_6) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.Tile = exports.tileNumbers = exports.tiles = exports.sceneMessageBus = void 0;\r\n    // Setup for multiplayer\r\n    exports.sceneMessageBus = new MessageBus();\r\n    exports.tiles = [];\r\n    exports.tileNumbers = [];\r\n    // Colors to cycle through (7 main colours + white + black)\r\n    var colors = [\r\n        Color3.White(),\r\n        Color3.FromHexString('#ff363f'),\r\n        Color3.FromHexString('#ff881f'),\r\n        Color3.FromHexString('#ffea00'),\r\n        Color3.FromHexString('#00b37b'),\r\n        Color3.FromHexString('#006a7a'),\r\n        Color3.FromHexString('#875a95'),\r\n        Color3.FromHexString('#e86cd2'),\r\n        Color3.FromHexString('#222222'),\r\n    ];\r\n    var materials = [];\r\n    // Material setup\r\n    for (var i = 0; i < colors.length; i++) {\r\n        var material = new Material();\r\n        material.albedoColor = colors[i];\r\n        material.metallic = 0.2;\r\n        material.roughness = 1.0;\r\n        materials.push(material);\r\n    }\r\n    var Tile = /** @class */ (function (_super) {\r\n        __extends(Tile, _super);\r\n        function Tile(model, transform, tileIndex, colorIndex) {\r\n            var _this = _super.call(this) || this;\r\n            _this.colorIndex = 0;\r\n            // engine.addEntity(this)\r\n            _this.addComponent(model);\r\n            _this.addComponent(transform);\r\n            if (colorIndex)\r\n                _this.colorIndex = colorIndex;\r\n            _this.addComponent(materials[_this.colorIndex]);\r\n            // Flip sound when changing tile color\r\n            var sound = new Entity();\r\n            sound.addComponent(new Transform());\r\n            sound.addComponent(new AudioSource(resources_6.default.sounds.ui.navigationForward));\r\n            engine.addEntity(sound);\r\n            sound.setParent(Attachable.PLAYER);\r\n            // Tile ID\r\n            _this.tileIndex = tileIndex;\r\n            _this.addComponent(new OnPointerDown(function () {\r\n                sound.getComponent(AudioSource).playOnce();\r\n                // Send tile and color index message to all players\r\n                exports.sceneMessageBus.emit('setTileColor', {\r\n                    tileIndex: _this.tileIndex,\r\n                    colorIndex: _this.colorIndex,\r\n                });\r\n                serverHandler_5.changeMural();\r\n            }, { button: ActionButton.POINTER, hoverText: 'Change Color' }));\r\n            return _this;\r\n        }\r\n        Tile.prototype.setColor = function (colorIndex) {\r\n            this.colorIndex < colors.length - 1\r\n                ? (this.colorIndex = colorIndex + 1)\r\n                : (this.colorIndex = 0);\r\n            this.addComponentOrReplace(materials[this.colorIndex]);\r\n        };\r\n        return Tile;\r\n    }(Entity));\r\n    exports.Tile = Tile;\r\n    // Receiving tile and color message from player\r\n    exports.sceneMessageBus.on('setTileColor', function (e) {\r\n        exports.tiles[e.tileIndex].setColor(e.colorIndex);\r\n        exports.tileNumbers[e.tileIndex] = e.colorIndex;\r\n    });\r\n});\r\ndefine(\"src/mural/muralBuilder\", [\"require\", \"exports\", \"node_modules/decentraland-ecs-utils/index\", \"src/mural/tile\", \"src/mural/serverHandler\", \"src/resources\"], function (require, exports, index_9, tile_2, serverHandler_6, resources_7) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.addMural = void 0;\r\n    function addMural() {\r\n        // For transforming the mural\r\n        var muralTransform = new Entity();\r\n        muralTransform.addComponent(new Transform({\r\n            position: new Vector3(160, 0, 24),\r\n            rotation: Quaternion.Euler(0, 90, 0),\r\n        }));\r\n        engine.addEntity(muralTransform);\r\n        // create trigger area object, setting size and relative position\r\n        var muralTriggerBox = new index_9.default.TriggerBoxShape(new Vector3(40, 4, 40), new Vector3(0, 2, 0));\r\n        // Mural wall\r\n        var muralWall = new Entity();\r\n        muralWall.addComponent(resources_7.default.models.standard.muralWall);\r\n        muralWall.addComponent(new Transform({\r\n            position: new Vector3(160, 0, 24),\r\n        }));\r\n        muralWall.addComponent(new index_9.default.TriggerComponent(muralTriggerBox, //shape\r\n        0, //layer\r\n        0, //triggeredByLayer\r\n        null, //onTriggerEnter\r\n        null, //onTriggerExit\r\n        function () {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            if (!(tile_2.tiles.length < 1)) return [3 /*break*/, 2];\r\n                            return [4 /*yield*/, buildTiles()];\r\n                        case 1:\r\n                            _a.sent();\r\n                            return [3 /*break*/, 4];\r\n                        case 2: return [4 /*yield*/, updateMural()];\r\n                        case 3:\r\n                            _a.sent();\r\n                            _a.label = 4;\r\n                        case 4: return [2 /*return*/];\r\n                    }\r\n                });\r\n            });\r\n        }, null, //onCameraExit\r\n        false //debug\r\n        ));\r\n        engine.addEntity(muralWall);\r\n        // Tile\r\n        var boxShape = new BoxShape();\r\n        boxShape.withCollisions = false;\r\n        // Parameters for the mural\r\n        var MURAL_WIDTH = 48;\r\n        var MURAL_HEIGHT = 12;\r\n        var START_POS_X = -6.345;\r\n        var START_POS_Y = 3.725;\r\n        var TILE_SIZE = 0.25;\r\n        var xPosition = START_POS_X;\r\n        var yPosition = START_POS_Y;\r\n        var tileIndex = 0;\r\n        var isRed = true;\r\n        // Build mural\r\n        function buildTiles() {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var currentTiles, i, j, colorIndex, tile;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0: return [4 /*yield*/, serverHandler_6.getMural()];\r\n                        case 1:\r\n                            currentTiles = _a.sent();\r\n                            for (i = 0; i < MURAL_HEIGHT; i++) {\r\n                                for (j = 0; j < MURAL_WIDTH; j++) {\r\n                                    colorIndex = void 0;\r\n                                    if (currentTiles && currentTiles[i * MURAL_WIDTH + j]) {\r\n                                        colorIndex = currentTiles[i * MURAL_WIDTH + j];\r\n                                        tile_2.tileNumbers.push(colorIndex);\r\n                                    }\r\n                                    else {\r\n                                        // Default color pattern (brick)\r\n                                        if (i % 2 != 0)\r\n                                            isRed = !isRed;\r\n                                        if (j % 2 != 0)\r\n                                            isRed = !isRed;\r\n                                        isRed ? (colorIndex = 0) : (colorIndex = 1);\r\n                                        tile_2.tileNumbers.push(null);\r\n                                    }\r\n                                    tile = new tile_2.Tile(boxShape, new Transform({\r\n                                        position: new Vector3(xPosition, yPosition, 0),\r\n                                        scale: new Vector3(TILE_SIZE, TILE_SIZE, 0.125),\r\n                                    }), tileIndex, colorIndex + 1);\r\n                                    tile.setParent(muralTransform);\r\n                                    tileIndex = tile_2.tiles.push(tile);\r\n                                    xPosition += TILE_SIZE + 0.02; // Adding a small gap\r\n                                }\r\n                                xPosition = START_POS_X;\r\n                                yPosition -= TILE_SIZE + 0.02;\r\n                            }\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        function updateMural() {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var currentTiles, i;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0: return [4 /*yield*/, serverHandler_6.getMural()];\r\n                        case 1:\r\n                            currentTiles = _a.sent();\r\n                            log(currentTiles);\r\n                            for (i = 0; i < currentTiles.length; i++) {\r\n                                if (currentTiles[i] === null) {\r\n                                    continue;\r\n                                }\r\n                                tile_2.tileNumbers[i] = currentTiles[i];\r\n                                tile_2.tiles[i].setColor(currentTiles[i]);\r\n                            }\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n    exports.addMural = addMural;\r\n});\r\ndefine(\"src/piano/pianoKey\", [\"require\", \"exports\", \"node_modules/decentraland-ecs-utils/index\"], function (require, exports, index_10) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.PianoKey = exports.keys = exports.sceneMessageBus = void 0;\r\n    exports.sceneMessageBus = new MessageBus();\r\n    exports.keys = [];\r\n    var PianoKey = /** @class */ (function (_super) {\r\n        __extends(PianoKey, _super);\r\n        function PianoKey(shape, transform, color, sound, trigger, note) {\r\n            var _this = _super.call(this) || this;\r\n            _this.material = new Material();\r\n            _this.onColor = new Color3(1.75, 1.25, 0.0); // Orange glow\r\n            _this.offColor = Color3.Black(); // To zero out emissive\r\n            _this.addComponent(shape);\r\n            _this.addComponent(transform);\r\n            _this.material.albedoColor = color;\r\n            _this.material.metallic = 0.0;\r\n            _this.material.roughness = 1.0;\r\n            _this.addComponent(_this.material);\r\n            // note ID\r\n            _this.note = note;\r\n            // Sound\r\n            _this.addComponent(new AudioSource(sound));\r\n            // Create trigger\r\n            _this.addComponent(new index_10.default.TriggerComponent(trigger, //shape\r\n            0, //layer\r\n            0, //triggeredByLayer\r\n            null, //onTriggerEnter\r\n            null, //onTriggerExit\r\n            function () {\r\n                //onCameraEnter\r\n                exports.sceneMessageBus.emit('noteOn', { note: _this.note });\r\n            }, function () {\r\n                //onCameraExit\r\n                exports.sceneMessageBus.emit('noteOff', { note: _this.note });\r\n            }, false // debug\r\n            ));\r\n            return _this;\r\n        }\r\n        PianoKey.prototype.play = function () {\r\n            this.getComponent(AudioSource).playOnce();\r\n            this.material.emissiveColor = this.onColor;\r\n        };\r\n        PianoKey.prototype.end = function () {\r\n            this.material.emissiveColor = this.offColor;\r\n        };\r\n        return PianoKey;\r\n    }(Entity));\r\n    exports.PianoKey = PianoKey;\r\n    exports.sceneMessageBus.on('noteOn', function (e) {\r\n        exports.keys[e.note].play();\r\n    });\r\n    exports.sceneMessageBus.on('noteOff', function (e) {\r\n        exports.keys[e.note].end();\r\n    });\r\n});\r\ndefine(\"src/piano/pianoBuilder\", [\"require\", \"exports\", \"node_modules/decentraland-ecs-utils/index\", \"src/resources\", \"src/piano/pianoKey\"], function (require, exports, index_11, resources_8, pianoKey_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.addPiano = void 0;\r\n    function addPiano() {\r\n        // For piano for transforming the piano\r\n        var pianoBase = new Entity();\r\n        pianoBase.addComponent(resources_8.default.models.standard.pianoBase);\r\n        pianoBase.addComponent(new Transform({\r\n            position: new Vector3(162.0, 0.0, 291.312),\r\n        }));\r\n        engine.addEntity(pianoBase);\r\n        // Key shape\r\n        var keyShape = new PlaneShape();\r\n        // White keys\r\n        var whiteKeySounds = [\r\n            resources_8.default.sounds.piano.whiteKeys.c3,\r\n            resources_8.default.sounds.piano.whiteKeys.d3,\r\n            resources_8.default.sounds.piano.whiteKeys.e3,\r\n            resources_8.default.sounds.piano.whiteKeys.f3,\r\n            resources_8.default.sounds.piano.whiteKeys.g3,\r\n            resources_8.default.sounds.piano.whiteKeys.a3,\r\n            resources_8.default.sounds.piano.whiteKeys.b3,\r\n            resources_8.default.sounds.piano.whiteKeys.c4,\r\n            resources_8.default.sounds.piano.whiteKeys.d4,\r\n            resources_8.default.sounds.piano.whiteKeys.e4,\r\n            resources_8.default.sounds.piano.whiteKeys.f4,\r\n            resources_8.default.sounds.piano.whiteKeys.g4,\r\n            resources_8.default.sounds.piano.whiteKeys.a4,\r\n            resources_8.default.sounds.piano.whiteKeys.b4,\r\n            resources_8.default.sounds.piano.whiteKeys.c5,\r\n            resources_8.default.sounds.piano.whiteKeys.d5,\r\n            resources_8.default.sounds.piano.whiteKeys.e5,\r\n            resources_8.default.sounds.piano.whiteKeys.f5,\r\n            resources_8.default.sounds.piano.whiteKeys.g5,\r\n            resources_8.default.sounds.piano.whiteKeys.a5,\r\n            resources_8.default.sounds.piano.whiteKeys.b5,\r\n        ];\r\n        var whiteKeyXPos = -8.0001; // Workaround: Issue with setting this to -8\r\n        for (var i = 0; i < whiteKeySounds.length; i++) {\r\n            var key = new pianoKey_1.PianoKey(keyShape, new Transform({\r\n                position: new Vector3(whiteKeyXPos, 0.11, 0),\r\n                scale: new Vector3(0.7, 4, 1),\r\n                rotation: new Quaternion(0.70711, 0, 0, 0.70711),\r\n            }), Color3.White(), whiteKeySounds[i], resources_8.default.trigger.triggerWhitePianoKey, i);\r\n            key.setParent(pianoBase);\r\n            pianoKey_1.keys.push(key);\r\n            whiteKeyXPos += 0.8;\r\n        }\r\n        // Black keys\r\n        var blackKeySounds = [\r\n            resources_8.default.sounds.piano.blackKeys.cSharp3,\r\n            resources_8.default.sounds.piano.blackKeys.dSharp3,\r\n            resources_8.default.sounds.piano.blackKeys.fSharp3,\r\n            resources_8.default.sounds.piano.blackKeys.gSharp3,\r\n            resources_8.default.sounds.piano.blackKeys.aSharp3,\r\n            resources_8.default.sounds.piano.blackKeys.cSharp4,\r\n            resources_8.default.sounds.piano.blackKeys.dSharp4,\r\n            resources_8.default.sounds.piano.blackKeys.fSharp4,\r\n            resources_8.default.sounds.piano.blackKeys.gSharp4,\r\n            resources_8.default.sounds.piano.blackKeys.aSharp4,\r\n            resources_8.default.sounds.piano.blackKeys.cSharp5,\r\n            resources_8.default.sounds.piano.blackKeys.dSharp5,\r\n            resources_8.default.sounds.piano.blackKeys.fSharp5,\r\n            resources_8.default.sounds.piano.blackKeys.gSharp5,\r\n            resources_8.default.sounds.piano.blackKeys.aSharp5,\r\n        ];\r\n        var blackKeyXPos = -7.6001; // Workaround: Issue with setting this to -7.6\r\n        var skipKey = 1;\r\n        for (var i = 0; i < blackKeySounds.length; i++) {\r\n            var key = new pianoKey_1.PianoKey(keyShape, new Transform({\r\n                position: new Vector3(blackKeyXPos, 0.12, 1),\r\n                scale: new Vector3(0.45, 2, 1),\r\n                rotation: new Quaternion(0.70711, 0, 0, 0.70711),\r\n            }), Color3.Black(), blackKeySounds[i], resources_8.default.trigger.triggerBlackPianoKey, i + whiteKeySounds.length);\r\n            key.setParent(pianoBase);\r\n            pianoKey_1.keys.push(key);\r\n            // Skip key\r\n            skipKey++;\r\n            skipKey % 3 != 0 ? (blackKeyXPos += 0.8) : (blackKeyXPos += 1.6);\r\n            if (skipKey == 6)\r\n                skipKey = 1;\r\n        }\r\n        // Modify player's trigger shape\r\n        index_11.default.TriggerSystem.instance.setCameraTriggerShape(new index_11.default.TriggerBoxShape(new Vector3(0.5, 0.25, 0.5), new Vector3(0, -0.5, 0)));\r\n    }\r\n    exports.addPiano = addPiano;\r\n});\r\ndefine(\"src/modules/ambientSound\", [\"require\", \"exports\", \"node_modules/decentraland-ecs-utils/index\"], function (require, exports, index_12) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.AmbientSound = void 0;\r\n    var AmbientSound = /** @class */ (function (_super) {\r\n        __extends(AmbientSound, _super);\r\n        function AmbientSound(transform, sound, interval, isPlaying, volume) {\r\n            if (interval === void 0) { interval = 0; }\r\n            if (isPlaying === void 0) { isPlaying = false; }\r\n            if (volume === void 0) { volume = 1; }\r\n            var _this = _super.call(this) || this;\r\n            _this.clip = new AudioClip(sound);\r\n            _this.source = new AudioSource(_this.clip);\r\n            _this.addComponent(_this.source);\r\n            _this.addComponent(new Transform(transform));\r\n            engine.addEntity(_this);\r\n            if (interval > 1) {\r\n                _this.source.loop = false;\r\n                _this.addComponent(new index_12.default.Interval(interval, function () {\r\n                    _this.source.playOnce();\r\n                }));\r\n            }\r\n            else if (isPlaying) {\r\n                _this.source.loop = true;\r\n                _this.source.playing = true;\r\n            }\r\n            _this.source.volume = volume;\r\n            return _this;\r\n        }\r\n        AmbientSound.prototype.play = function () {\r\n            this.source.playOnce();\r\n        };\r\n        AmbientSound.prototype.stop = function () {\r\n            this.source.playing = false;\r\n        };\r\n        return AmbientSound;\r\n    }(Entity));\r\n    exports.AmbientSound = AmbientSound;\r\n});\r\ndefine(\"src/zenquencer/resources\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.default = {\r\n        models: {\r\n            pool: new GLTFShape('models/zenquencer/pool.glb'),\r\n            stone: new GLTFShape('models/zenquencer/stone.glb'),\r\n            linearButton: new GLTFShape('models/zenquencer/linear.glb'),\r\n            randomButton: new GLTFShape('models/zenquencer/random.glb'),\r\n            speedButton: new GLTFShape('models/zenquencer/speedButton.glb'),\r\n            tube: new GLTFShape('models/zenquencer/tube.glb'),\r\n        },\r\n        sounds: {\r\n            kalimbaNotes: {\r\n                f3: new AudioClip('sounds/zenquencer/f3.mp3'),\r\n                a3: new AudioClip('sounds/zenquencer/a3.mp3'),\r\n                c3: new AudioClip('sounds/zenquencer/c3.mp3'),\r\n                a4: new AudioClip('sounds/zenquencer/a4.mp3'),\r\n                e4: new AudioClip('sounds/zenquencer/e4.mp3'),\r\n                f4: new AudioClip('sounds/zenquencer/f4.mp3'),\r\n                g4: new AudioClip('sounds/zenquencer/g4.mp3'),\r\n            },\r\n        },\r\n    };\r\n});\r\ndefine(\"src/zenquencer/musicalDrops\", [\"require\", \"exports\", \"src/zenquencer/stones\", \"src/zenquencer/stones\", \"src/modules/serverHandler\", \"src/zenquencer/zenquencerBuilder\"], function (require, exports, stones_1, stones_2, serverHandler_7, zenquencerBuilder_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.loopPlayer = exports.PlaySequence = exports.MusicalDrop = exports.drops = exports.loopDuration = void 0;\r\n    //export const sceneMessageBus = new MessageBus()\r\n    exports.loopDuration = 60;\r\n    exports.drops = [];\r\n    // reusable stone class\r\n    var MusicalDrop = /** @class */ (function (_super) {\r\n        __extends(MusicalDrop, _super);\r\n        function MusicalDrop(shape, transform, sound, note) {\r\n            var _this = _super.call(this) || this;\r\n            engine.addEntity(_this);\r\n            //this.addComponent(shape)\r\n            _this.addComponent(transform);\r\n            // note ID\r\n            _this.note = note;\r\n            // store shape to add to entity later\r\n            _this.shape = shape;\r\n            // Sound\r\n            _this.addComponent(new AudioSource(sound));\r\n            _this.anim = new AnimationState('ArmatureAction.001', { looping: false });\r\n            _this.addComponent(new Animator()).addClip(_this.anim);\r\n            // needed to reference the entity from inside a component, because `this` in there refers to the component\r\n            var thisStone = _this;\r\n            return _this;\r\n        }\r\n        MusicalDrop.prototype.play = function () {\r\n            this.getComponent(AudioSource).playOnce();\r\n            this.anim.stop();\r\n            this.anim.play();\r\n            // animate\r\n        };\r\n        return MusicalDrop;\r\n    }(Entity));\r\n    exports.MusicalDrop = MusicalDrop;\r\n    // pick up message bus events, from you and other players\r\n    serverHandler_7.sceneMessageBus.on('playStone', function (e) {\r\n        exports.drops[e.note].play();\r\n    });\r\n    // system to play the loop continuously\r\n    var PlaySequence = /** @class */ (function () {\r\n        function PlaySequence(loopDuration, totalDuration, beats) {\r\n            this.durationLeft = totalDuration;\r\n            this.loopDuration = loopDuration;\r\n            this.beats = beats;\r\n            this.currentLoop = 0;\r\n            this.currentBeat = 0;\r\n            this.beatDuration = this.loopDuration / this.beats;\r\n        }\r\n        PlaySequence.prototype.update = function (dt) {\r\n            if (!this.playingMode) {\r\n                return;\r\n            }\r\n            this.durationLeft -= dt;\r\n            if (this.durationLeft < 0) {\r\n                this.playingMode = 0;\r\n                zenquencerBuilder_1.energyAnimation.stop();\r\n                zenquencerBuilder_1.linear.getComponent(Transform).rotation = Quaternion.Euler(0, 180, 0);\r\n                zenquencerBuilder_1.random.getComponent(Transform).rotation = Quaternion.Euler(0, 180, 0);\r\n            }\r\n            this.currentLoop += dt;\r\n            if (this.currentLoop >= this.currentBeat * this.beatDuration) {\r\n                this.currentBeat += 1;\r\n                if (this.currentBeat >= this.beats) {\r\n                    this.currentLoop = 0;\r\n                    this.currentBeat = 0;\r\n                    log('new loop');\r\n                }\r\n                if (this.playingMode == 1) {\r\n                    // sequence mode\r\n                    for (var i = 0; i < 7; i++) {\r\n                        if (stones_1.seqNumbers[this.currentBeat][i]) {\r\n                            stones_2.stones[this.currentBeat * 7 + i].drop.play();\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    // random mode\r\n                    var randomBeat = Math.floor(Math.random() * this.beats);\r\n                    for (var i = 0; i < 7; i++) {\r\n                        if (stones_1.seqNumbers[randomBeat][i]) {\r\n                            stones_2.stones[randomBeat * 7 + i].drop.play();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        return PlaySequence;\r\n    }());\r\n    exports.PlaySequence = PlaySequence;\r\n    // start loop, w 8 second loops and with 16 beats\r\n    exports.loopPlayer = new PlaySequence(8, exports.loopDuration, 16);\r\n    engine.addSystem(exports.loopPlayer);\r\n});\r\ndefine(\"src/zenquencer/serverHandler\", [\"require\", \"exports\", \"src/zenquencer/stones\", \"src/modules/realmData\", \"node_modules/decentraland-ecs-utils/index\"], function (require, exports, stones_3, realmData_2, index_13) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.changeSequencer = exports.getStones = exports.fireBaseServer = exports.awsServer = void 0;\r\n    // external servers being used by the project - Please change these to your own if working on something else!\r\n    exports.awsServer = 'https://genesis-plaza.s3.us-east-2.amazonaws.com/';\r\n    exports.fireBaseServer = 'https://us-central1-genesis-plaza.cloudfunctions.net/app/';\r\n    // get latest sequencer state stored in server\r\n    function getStones() {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var url, response, json, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _b.trys.push([0, 5, , 6]);\r\n                        if (!!realmData_2.playerRealm) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, realmData_2.setRealm()];\r\n                    case 1:\r\n                        _b.sent();\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        url = exports.awsServer + 'sequencer/' + realmData_2.playerRealm + '/stones.json';\r\n                        log('url used ', url);\r\n                        return [4 /*yield*/, fetch(url)];\r\n                    case 3:\r\n                        response = _b.sent();\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 4:\r\n                        json = _b.sent();\r\n                        return [2 /*return*/, json.stones];\r\n                    case 5:\r\n                        _a = _b.sent();\r\n                        log('error fetching from AWS server');\r\n                        return [3 /*break*/, 6];\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    exports.getStones = getStones;\r\n    // change data in sequencer\r\n    function changeSequencer() {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!!realmData_2.playerRealm) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, realmData_2.setRealm()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        seqChanger.addComponentOrReplace(\r\n                        // Only send request if no more changes come over the next second\r\n                        new index_13.default.Delay(1000, function () {\r\n                            return __awaiter(this, void 0, void 0, function () {\r\n                                var url, body, response, _a;\r\n                                return __generator(this, function (_b) {\r\n                                    switch (_b.label) {\r\n                                        case 0:\r\n                                            _b.trys.push([0, 2, , 3]);\r\n                                            url = exports.fireBaseServer + 'update-sequencer?realm=' + realmData_2.playerRealm;\r\n                                            body = JSON.stringify({ stones: stones_3.seqNumbers });\r\n                                            return [4 /*yield*/, fetch(url, {\r\n                                                    method: 'POST',\r\n                                                    headers: { 'Content-Type': 'application/json' },\r\n                                                    body: body,\r\n                                                })];\r\n                                        case 1:\r\n                                            response = _b.sent();\r\n                                            return [2 /*return*/, response.json()];\r\n                                        case 2:\r\n                                            _a = _b.sent();\r\n                                            log('error fetching from AWS server');\r\n                                            return [3 /*break*/, 3];\r\n                                        case 3: return [2 /*return*/];\r\n                                    }\r\n                                });\r\n                            });\r\n                        }));\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    exports.changeSequencer = changeSequencer;\r\n    // dummy entity to throttle the sending of change requests\r\n    var seqChanger = new Entity();\r\n    engine.addEntity(seqChanger);\r\n});\r\ndefine(\"src/zenquencer/stones\", [\"require\", \"exports\", \"src/zenquencer/musicalDrops\", \"src/zenquencer/serverHandler\", \"src/modules/serverHandler\"], function (require, exports, musicalDrops_1, serverHandler_8, serverHandler_9) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.Stone = exports.seqNumbers = exports.stones = void 0;\r\n    // export const sceneMessageBus = new MessageBus()\r\n    exports.stones = [];\r\n    // lightweight storage of sequencer state\r\n    exports.seqNumbers = [];\r\n    // reusable stone class\r\n    var Stone = /** @class */ (function (_super) {\r\n        __extends(Stone, _super);\r\n        function Stone(shape, transform, sound, index, parent) {\r\n            var _this = _super.call(this) || this;\r\n            _this.stoneOn = false;\r\n            _this.setParent(parent);\r\n            engine.addEntity(_this);\r\n            _this.addComponent(shape);\r\n            _this.addComponent(transform);\r\n            // note ID\r\n            _this.sound = sound;\r\n            _this.index = index;\r\n            var thisStone = _this;\r\n            _this.addComponent(new OnPointerDown(function (e) {\r\n                log('toggle stone');\r\n                if (_this.stoneOn) {\r\n                    serverHandler_9.sceneMessageBus.emit('hideStone', { stone: thisStone.index });\r\n                }\r\n                else {\r\n                    serverHandler_9.sceneMessageBus.emit('showStone', { stone: thisStone.index });\r\n                }\r\n            }, {\r\n                button: ActionButton.POINTER,\r\n                hoverText: 'Toggle',\r\n            }));\r\n            _this.drop = new musicalDrops_1.MusicalDrop(new GLTFShape('models/zenquencer/music-drop.glb'), new Transform({\r\n                position: new Vector3(0, 0, 0),\r\n            }), _this.sound, _this.index);\r\n            _this.drop.setParent(_this);\r\n            _this.drop.removeComponent(GLTFShape);\r\n            musicalDrops_1.drops.push(_this.drop);\r\n            return _this;\r\n        }\r\n        return Stone;\r\n    }(Entity));\r\n    exports.Stone = Stone;\r\n    serverHandler_9.sceneMessageBus.on('showStone', function (e) {\r\n        exports.stones[e.stone].stoneOn = true;\r\n        exports.stones[e.stone].getComponent(Transform).rotation = Quaternion.Euler(0, 0, 0);\r\n        exports.stones[e.stone].drop.addComponentOrReplace(exports.stones[e.stone].drop.shape);\r\n        if (!musicalDrops_1.loopPlayer.playingMode) {\r\n            exports.stones[e.stone].drop.play();\r\n        }\r\n        var note = e.stone % 7;\r\n        var beat = Math.floor(e.stone / 7);\r\n        log('beat ', beat, ' note ', note);\r\n        exports.seqNumbers[beat][note] = 1;\r\n        serverHandler_8.changeSequencer();\r\n    });\r\n    serverHandler_9.sceneMessageBus.on('hideStone', function (e) {\r\n        exports.stones[e.stone].stoneOn = false;\r\n        exports.stones[e.stone].getComponent(Transform).rotation = Quaternion.Euler(180, 0, 0);\r\n        exports.stones[e.stone].drop.removeComponent(GLTFShape);\r\n        var note = e.stone % 7;\r\n        var beat = Math.floor(e.stone / 7);\r\n        exports.seqNumbers[beat][note] = 0;\r\n        serverHandler_8.changeSequencer();\r\n    });\r\n});\r\ndefine(\"src/zenquencer/zenquencerBuilder\", [\"require\", \"exports\", \"node_modules/decentraland-ecs-utils/index\", \"src/zenquencer/resources\", \"src/zenquencer/stones\", \"src/zenquencer/serverHandler\", \"src/modules/serverHandler\", \"src/zenquencer/musicalDrops\"], function (require, exports, index_14, resources_9, stones_4, serverHandler_10, serverHandler_11, musicalDrops_2) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.energyAnimation = exports.random = exports.linear = exports.addZenquencer = void 0;\r\n    function addZenquencer() {\r\n        // create trigger area object, setting size and relative position\r\n        var zenquencerTriggerBox = new index_14.default.TriggerBoxShape(new Vector3(40, 4, 40), new Vector3(0, 2, 0));\r\n        var pool = new Entity();\r\n        pool.addComponent(resources_9.default.models.pool);\r\n        pool.addComponent(new Transform({\r\n            position: new Vector3(127, 0.55, 225),\r\n            rotation: Quaternion.Euler(0, 315, 0),\r\n        }));\r\n        pool.addComponent(new index_14.default.TriggerComponent(zenquencerTriggerBox, //shape\r\n        0, //layer\r\n        0, //triggeredByLayer\r\n        null, //onTriggerEnter\r\n        null, //onTriggerExit\r\n        function () {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    //onCameraEnter\r\n                    updateStones();\r\n                    return [2 /*return*/];\r\n                });\r\n            });\r\n        }, null, //onCameraExit\r\n        false //debug\r\n        ));\r\n        engine.addEntity(pool);\r\n        var seqOffset = new Vector3(127.5 - 120, 0.3, 222 - 225);\r\n        var seqLength = 16;\r\n        // Kalimba sounds\r\n        var kalimbaSounds = [\r\n            resources_9.default.sounds.kalimbaNotes.f3,\r\n            resources_9.default.sounds.kalimbaNotes.a3,\r\n            resources_9.default.sounds.kalimbaNotes.c3,\r\n            resources_9.default.sounds.kalimbaNotes.e4,\r\n            resources_9.default.sounds.kalimbaNotes.f4,\r\n            resources_9.default.sounds.kalimbaNotes.g4,\r\n            resources_9.default.sounds.kalimbaNotes.a4,\r\n        ];\r\n        for (var beat = 0; beat < seqLength; beat++) {\r\n            stones_4.seqNumbers.push([]);\r\n            for (var note = 0; note < kalimbaSounds.length; note++) {\r\n                var currentStone = new stones_4.Stone(resources_9.default.models.stone, new Transform({\r\n                    position: new Vector3(seqOffset.x - beat, seqOffset.y, seqOffset.z + note),\r\n                    scale: new Vector3(1, 1, 1),\r\n                    rotation: Quaternion.Euler(180, 0, 0),\r\n                }), kalimbaSounds[note], beat * 7 + note, pool);\r\n                currentStone.setParent(pool);\r\n                stones_4.stones.push(currentStone);\r\n                stones_4.seqNumbers[beat].push(0);\r\n            }\r\n        }\r\n        ///// Buttons\r\n        var tube = new Entity();\r\n        tube.addComponent(new Transform({\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }));\r\n        tube.addComponent(new Animator()).addClip(exports.energyAnimation);\r\n        tube.setParent(pool);\r\n        tube.addComponent(resources_9.default.models.tube);\r\n        engine.addEntity(tube);\r\n        exports.linear.addComponent(new Transform({\r\n            position: new Vector3(-9.54, 1.48, 4.59),\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }));\r\n        exports.linear.addComponent(resources_9.default.models.linearButton);\r\n        exports.linear.setParent(tube);\r\n        engine.addEntity(exports.linear);\r\n        exports.linear.addComponent(new OnPointerDown(function () {\r\n            serverHandler_11.sceneMessageBus.emit('seqOn', {});\r\n        }, { hoverText: 'Loop' }));\r\n        exports.random.addComponent(new Transform({\r\n            position: new Vector3(-9.54, 1.49, 4.33),\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }));\r\n        exports.random.addComponent(resources_9.default.models.randomButton);\r\n        engine.addEntity(exports.random);\r\n        exports.random.setParent(tube);\r\n        exports.random.addComponent(new OnPointerDown(function () {\r\n            serverHandler_11.sceneMessageBus.emit('randomMode', {});\r\n        }, { hoverText: 'Random' }));\r\n        var slow2 = new Entity();\r\n        slow2.addComponent(new Transform({\r\n            position: new Vector3(-9.54, 1.6, 4.59),\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }));\r\n        slow2.addComponent(resources_9.default.models.speedButton);\r\n        slow2.setParent(tube);\r\n        engine.addEntity(slow2);\r\n        slow2.addComponent(new OnPointerDown(function () {\r\n            serverHandler_11.sceneMessageBus.emit('seqSpeed', { speed: 12 });\r\n        }, { hoverText: 'Very Slow' }));\r\n        var slow1 = new Entity();\r\n        slow1.addComponent(new Transform({\r\n            position: new Vector3(-9.54, 1.6, 4.53),\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }));\r\n        slow1.addComponent(resources_9.default.models.speedButton);\r\n        slow1.setParent(tube);\r\n        engine.addEntity(slow1);\r\n        slow1.addComponent(new OnPointerDown(function () {\r\n            serverHandler_11.sceneMessageBus.emit('seqSpeed', { speed: 8 });\r\n        }, { hoverText: 'Slow' }));\r\n        var neutral = new Entity();\r\n        neutral.addComponent(new Transform({\r\n            position: new Vector3(-9.54, 1.6, 4.47),\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }));\r\n        neutral.addComponent(resources_9.default.models.speedButton);\r\n        neutral.setParent(tube);\r\n        engine.addEntity(neutral);\r\n        neutral.addComponent(new OnPointerDown(function () {\r\n            serverHandler_11.sceneMessageBus.emit('seqSpeed', { speed: 4 });\r\n        }, { hoverText: 'Normal' }));\r\n        var fast1 = new Entity();\r\n        fast1.addComponent(new Transform({\r\n            position: new Vector3(-9.54, 1.6, 4.41),\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }));\r\n        fast1.addComponent(resources_9.default.models.speedButton);\r\n        fast1.setParent(tube);\r\n        engine.addEntity(fast1);\r\n        fast1.addComponent(new OnPointerDown(function () {\r\n            serverHandler_11.sceneMessageBus.emit('seqSpeed', { speed: 2 });\r\n        }, { hoverText: 'Fast' }));\r\n        var fast2 = new Entity();\r\n        fast2.addComponent(new Transform({\r\n            position: new Vector3(-9.54, 1.6, 4.35),\r\n            rotation: Quaternion.Euler(0, 180, 0),\r\n        }));\r\n        fast2.addComponent(resources_9.default.models.speedButton);\r\n        fast2.setParent(tube);\r\n        engine.addEntity(fast2);\r\n        fast2.addComponent(new OnPointerDown(function () {\r\n            serverHandler_11.sceneMessageBus.emit('seqSpeed', { speed: 1 });\r\n        }, { hoverText: 'Very Fast' }));\r\n        serverHandler_11.sceneMessageBus.on('seqOn', function (e) {\r\n            musicalDrops_2.loopPlayer.playingMode = 1;\r\n            musicalDrops_2.loopPlayer.currentBeat = -1;\r\n            musicalDrops_2.loopPlayer.durationLeft = musicalDrops_2.loopDuration;\r\n            musicalDrops_2.loopPlayer.currentLoop = 0;\r\n            exports.linear.getComponent(Transform).rotation = Quaternion.Euler(0, 0, 0);\r\n            exports.random.getComponent(Transform).rotation = Quaternion.Euler(0, 180, 0);\r\n            neutral.getComponent(Transform).rotation = Quaternion.Euler(0, 0, 0);\r\n            exports.energyAnimation.stop();\r\n            exports.energyAnimation.play();\r\n        });\r\n        serverHandler_11.sceneMessageBus.on('randomMode', function (e) {\r\n            musicalDrops_2.loopPlayer.playingMode = 2;\r\n            musicalDrops_2.loopPlayer.currentBeat = -1;\r\n            musicalDrops_2.loopPlayer.durationLeft = musicalDrops_2.loopDuration;\r\n            musicalDrops_2.loopPlayer.currentLoop = 0;\r\n            exports.random.getComponent(Transform).rotation = Quaternion.Euler(0, 0, 0);\r\n            exports.linear.getComponent(Transform).rotation = Quaternion.Euler(0, 180, 0);\r\n            neutral.getComponent(Transform).rotation = Quaternion.Euler(0, 0, 0);\r\n            exports.energyAnimation.stop();\r\n            exports.energyAnimation.play();\r\n        });\r\n        serverHandler_11.sceneMessageBus.on('seqOff', function (e) {\r\n            musicalDrops_2.loopPlayer.playingMode = 0;\r\n            exports.linear.getComponent(Transform).rotation = Quaternion.Euler(0, 180, 0);\r\n            exports.random.getComponent(Transform).rotation = Quaternion.Euler(0, 180, 0);\r\n            neutral.getComponent(Transform).rotation = Quaternion.Euler(0, 180, 0);\r\n        });\r\n        serverHandler_11.sceneMessageBus.on('seqSpeed', function (e) {\r\n            if (musicalDrops_2.loopPlayer.playingMode) {\r\n                var newSpeed = e.speed * 4;\r\n                log('new duration = ', newSpeed);\r\n                musicalDrops_2.loopPlayer.loopDuration = newSpeed;\r\n                musicalDrops_2.loopPlayer.beatDuration = musicalDrops_2.loopPlayer.loopDuration / musicalDrops_2.loopPlayer.beats;\r\n                musicalDrops_2.loopPlayer.currentLoop = musicalDrops_2.loopPlayer.currentBeat * musicalDrops_2.loopPlayer.beatDuration;\r\n                switch (e.speed) {\r\n                    case 12:\r\n                        slow2.getComponent(Transform).rotation = Quaternion.Euler(0, 0, 0);\r\n                        slow1.getComponent(Transform).rotation = Quaternion.Euler(0, 0, 0);\r\n                        neutral.getComponent(Transform).rotation = Quaternion.Euler(0, 0, 0);\r\n                        fast1.getComponent(Transform).rotation = Quaternion.Euler(0, 180, 0);\r\n                        fast2.getComponent(Transform).rotation = Quaternion.Euler(0, 180, 0);\r\n                        break;\r\n                    case 8:\r\n                        slow2.getComponent(Transform).rotation = Quaternion.Euler(0, 180, 0);\r\n                        slow1.getComponent(Transform).rotation = Quaternion.Euler(0, 0, 0);\r\n                        neutral.getComponent(Transform).rotation = Quaternion.Euler(0, 0, 0);\r\n                        fast1.getComponent(Transform).rotation = Quaternion.Euler(0, 180, 0);\r\n                        fast2.getComponent(Transform).rotation = Quaternion.Euler(0, 180, 0);\r\n                        break;\r\n                    case 4:\r\n                        slow2.getComponent(Transform).rotation = Quaternion.Euler(0, 180, 0);\r\n                        slow1.getComponent(Transform).rotation = Quaternion.Euler(0, 180, 0);\r\n                        neutral.getComponent(Transform).rotation = Quaternion.Euler(0, 0, 0);\r\n                        fast1.getComponent(Transform).rotation = Quaternion.Euler(0, 180, 0);\r\n                        fast2.getComponent(Transform).rotation = Quaternion.Euler(0, 180, 0);\r\n                        break;\r\n                    case 2:\r\n                        slow2.getComponent(Transform).rotation = Quaternion.Euler(0, 180, 0);\r\n                        slow1.getComponent(Transform).rotation = Quaternion.Euler(0, 180, 0);\r\n                        neutral.getComponent(Transform).rotation = Quaternion.Euler(0, 0, 0);\r\n                        fast1.getComponent(Transform).rotation = Quaternion.Euler(0, 0, 0);\r\n                        fast2.getComponent(Transform).rotation = Quaternion.Euler(0, 180, 0);\r\n                        break;\r\n                    case 1:\r\n                        slow2.getComponent(Transform).rotation = Quaternion.Euler(0, 180, 0);\r\n                        slow1.getComponent(Transform).rotation = Quaternion.Euler(0, 180, 0);\r\n                        neutral.getComponent(Transform).rotation = Quaternion.Euler(0, 0, 0);\r\n                        fast1.getComponent(Transform).rotation = Quaternion.Euler(0, 0, 0);\r\n                        fast2.getComponent(Transform).rotation = Quaternion.Euler(0, 0, 0);\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                serverHandler_11.sceneMessageBus.emit('seqOn', {});\r\n            }\r\n        });\r\n        //setRealm().then()\r\n        function updateStones() {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var currentStones, beat, note, currentStone;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0: return [4 /*yield*/, serverHandler_10.getStones()];\r\n                        case 1:\r\n                            currentStones = _a.sent();\r\n                            if (!currentStones)\r\n                                return [2 /*return*/];\r\n                            log(currentStones);\r\n                            for (beat = 0; beat < currentStones.length; beat++) {\r\n                                for (note = 0; note < currentStones[beat].length; note++) {\r\n                                    stones_4.seqNumbers[beat][note] = currentStones[beat][note];\r\n                                    currentStone = stones_4.stones[beat * 7 + note];\r\n                                    if (currentStones[beat][note] == 0) {\r\n                                        currentStone.stoneOn = false;\r\n                                        currentStone.drop.removeComponent(GLTFShape);\r\n                                    }\r\n                                    else {\r\n                                        currentStone.stoneOn = true;\r\n                                        currentStone.getComponent(Transform).rotation = Quaternion.Euler(0, 0, 0);\r\n                                        currentStone.drop.addComponentOrReplace(currentStone.drop.shape);\r\n                                    }\r\n                                }\r\n                            }\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n    exports.addZenquencer = addZenquencer;\r\n    // define some entities and components outside the initiate function so they can be called externally\r\n    exports.linear = new Entity();\r\n    exports.random = new Entity();\r\n    exports.energyAnimation = new AnimationState('Energy_Action', {\r\n        looping: false,\r\n    });\r\n});\r\ndefine(\"src/modules/helperFunctions\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.shortenText = exports.splitTextIntoLines = void 0;\r\n    function splitTextIntoLines(text, maxLenght, maxLines) {\r\n        var finalText = '';\r\n        for (var i = 0; i < text.length; i++) {\r\n            var lines = finalText.split('\\n');\r\n            if (lines[lines.length - 1].length >= maxLenght && i !== text.length) {\r\n                if (finalText[finalText.length - 1] !== ' ') {\r\n                    if (maxLines && lines.length >= maxLines) {\r\n                        finalText = finalText.concat('...');\r\n                        return finalText;\r\n                    }\r\n                    else {\r\n                        finalText = finalText.concat('-');\r\n                    }\r\n                }\r\n                finalText = finalText.concat('\\n');\r\n                if (text[i] === ' ') {\r\n                    continue;\r\n                }\r\n            }\r\n            finalText = finalText.concat(text[i]);\r\n        }\r\n        return finalText;\r\n    }\r\n    exports.splitTextIntoLines = splitTextIntoLines;\r\n    function shortenText(text, maxLenght) {\r\n        var finalText = '';\r\n        if (text.length > maxLenght) {\r\n            finalText = text.substring(0, maxLenght);\r\n            finalText = finalText.concat('...');\r\n        }\r\n        else {\r\n            finalText = text;\r\n        }\r\n        return finalText;\r\n    }\r\n    exports.shortenText = shortenText;\r\n});\r\ndefine(\"src/modules/eventBoard\", [\"require\", \"exports\", \"src/modules/helperFunctions\", \"src/modules/serverHandler\"], function (require, exports, helperFunctions_1, serverHandler_12) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.displayEvent = exports.createDots = exports.createEventsBoard = void 0;\r\n    function createEventsBoard(position) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var events;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, serverHandler_12.getEvents()];\r\n                    case 1:\r\n                        events = _a.sent();\r\n                        if (events.length <= 0) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        board.addComponent(new Transform({}));\r\n                        board.addComponent(new GLTFShape('models/events-UI.glb'));\r\n                        board.setParent(boardBase);\r\n                        clickPanel.addComponent(invisibleMaterial);\r\n                        clickPanel.addComponent(new PlaneShape());\r\n                        clickPanel.addComponent(new Transform({\r\n                            scale: new Vector3(5, 4.5, 1),\r\n                            position: new Vector3(0, 0, -0.2),\r\n                        }));\r\n                        clickPanel.setParent(boardBase);\r\n                        clickPanelBackSide.addComponent(invisibleMaterial);\r\n                        clickPanelBackSide.addComponent(new PlaneShape());\r\n                        clickPanelBackSide.addComponent(new Transform({\r\n                            scale: new Vector3(5, 4.5, 1),\r\n                            position: new Vector3(0, 0, 0.2),\r\n                        }));\r\n                        clickPanelBackSide.setParent(boardBase);\r\n                        image.addComponent(new PlaneShape());\r\n                        image.addComponent(new Transform({\r\n                            position: new Vector3(0, 0.4, -0.04),\r\n                            scale: new Vector3(4.25, 2.125, 1),\r\n                            rotation: Quaternion.Euler(0, 0, 180),\r\n                        }));\r\n                        image.addComponent(imageMaterial);\r\n                        image.setParent(boardBase);\r\n                        imageBackSide.addComponent(new PlaneShape());\r\n                        imageBackSide.addComponent(new Transform({\r\n                            position: new Vector3(0, 0.4, 0.04),\r\n                            scale: new Vector3(4.25, 2.125, 1),\r\n                            rotation: Quaternion.Euler(0, 180, 180),\r\n                        }));\r\n                        imageBackSide.addComponent(imageMaterial);\r\n                        imageBackSide.setParent(boardBase);\r\n                        title.addComponent(new TextShape(''));\r\n                        title.getComponent(TextShape).fontSize = 3;\r\n                        title.getComponent(TextShape).font = new Font(Fonts.SanFrancisco);\r\n                        title.getComponent(TextShape).color = Color3.Black();\r\n                        title.getComponent(TextShape).hTextAlign = 'left';\r\n                        title.getComponent(TextShape).lineCount = 2;\r\n                        title.getComponent(TextShape).height = 2;\r\n                        title.getComponent(TextShape).width = 8;\r\n                        title.addComponent(new Transform({\r\n                            position: new Vector3(-1.94, -1.05, -0.04),\r\n                        }));\r\n                        title.setParent(boardBase);\r\n                        titleBackSide.addComponent(new TextShape(''));\r\n                        titleBackSide.getComponent(TextShape).fontSize = 3;\r\n                        titleBackSide.getComponent(TextShape).font = new Font(Fonts.SanFrancisco);\r\n                        titleBackSide.getComponent(TextShape).color = Color3.Black();\r\n                        titleBackSide.getComponent(TextShape).hTextAlign = 'left';\r\n                        titleBackSide.getComponent(TextShape).lineCount = 2;\r\n                        titleBackSide.getComponent(TextShape).height = 2;\r\n                        titleBackSide.getComponent(TextShape).width = 8;\r\n                        titleBackSide.addComponent(new Transform({\r\n                            position: new Vector3(1.94, -1.05, 0.04),\r\n                            rotation: Quaternion.Euler(0, 180, 0),\r\n                        }));\r\n                        titleBackSide.setParent(boardBase);\r\n                        coords.addComponent(new TextShape(''));\r\n                        coords.addComponent(new Transform({\r\n                            position: new Vector3(-1.75, -1.555, -0.04),\r\n                        }));\r\n                        coords.getComponent(TextShape).fontSize = 2;\r\n                        coords.getComponent(TextShape).font = new Font(Fonts.SanFrancisco);\r\n                        coords.getComponent(TextShape).color = Color3.Black();\r\n                        coords.getComponent(TextShape).hTextAlign = 'left';\r\n                        coords.setParent(boardBase);\r\n                        coordsBackSide.addComponent(new TextShape(''));\r\n                        coordsBackSide.addComponent(new Transform({\r\n                            position: new Vector3(1.75, -1.555, 0.04),\r\n                            rotation: Quaternion.Euler(0, 180, 0),\r\n                        }));\r\n                        coordsBackSide.getComponent(TextShape).fontSize = 2;\r\n                        coordsBackSide.getComponent(TextShape).font = new Font(Fonts.SanFrancisco);\r\n                        coordsBackSide.getComponent(TextShape).color = Color3.Black();\r\n                        coordsBackSide.getComponent(TextShape).hTextAlign = 'left';\r\n                        coordsBackSide.setParent(boardBase);\r\n                        boardBase.addComponent(new Transform(position));\r\n                        engine.addEntity(boardBase);\r\n                        return [4 /*yield*/, displayEvent(events, 0)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        if (events.length > 1) {\r\n                            engine.addSystem(new SwitchEventSystem(events, 4));\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    exports.createEventsBoard = createEventsBoard;\r\n    var bannerSwitcher = new Entity();\r\n    var imageMaterial = new Material();\r\n    imageMaterial.roughness = 1;\r\n    imageMaterial.metallic = 0;\r\n    imageMaterial.specularIntensity = 0;\r\n    var invisibleMaterial = new Material();\r\n    invisibleMaterial.albedoColor = new Color4(0, 0, 0, 0);\r\n    var inactiveEventMaterial = new Material();\r\n    inactiveEventMaterial.roughness = 1;\r\n    inactiveEventMaterial.specularIntensity = 0;\r\n    inactiveEventMaterial.albedoTexture = new Texture('images/gray.png');\r\n    inactiveEventMaterial.alphaTexture = new Texture('images/gray.png');\r\n    var activeEventMaterial = new Material();\r\n    activeEventMaterial.roughness = 1;\r\n    activeEventMaterial.specularIntensity = 0;\r\n    activeEventMaterial.albedoTexture = new Texture('images/red.png');\r\n    activeEventMaterial.alphaTexture = new Texture('images/red.png');\r\n    var boardBase = new Entity();\r\n    var board = new Entity();\r\n    var image = new Entity();\r\n    var imageBackSide = new Entity();\r\n    var title = new Entity();\r\n    var titleBackSide = new Entity();\r\n    var coords = new Entity();\r\n    var coordsBackSide = new Entity();\r\n    var clickPanel = new Entity();\r\n    var clickPanelBackSide = new Entity();\r\n    var dots = [];\r\n    var dotsBackSide = [];\r\n    var SwitchEventSystem = /** @class */ (function () {\r\n        function SwitchEventSystem(events, interval) {\r\n            this.events = events;\r\n            this.timer = interval * 3; // a little extra time on the first one while everything loads\r\n            this.interval = interval;\r\n            this.currentEvent = 0;\r\n        }\r\n        SwitchEventSystem.prototype.update = function (dt) {\r\n            this.timer -= dt;\r\n            if (this.timer < 0) {\r\n                this.timer += this.interval;\r\n                displayEvent(this.events, this.currentEvent);\r\n                this.currentEvent += 1;\r\n                if (this.currentEvent >= this.events.length) {\r\n                    this.currentEvent = 0;\r\n                }\r\n            }\r\n        };\r\n        return SwitchEventSystem;\r\n    }());\r\n    function createDots(dotAmount) {\r\n        for (var i = 0; i < dotAmount; i++) {\r\n            var offset = (i - dotAmount / 2) * 0.1;\r\n            var dot = new Entity();\r\n            dot.addComponent(new PlaneShape());\r\n            dot.addComponent(inactiveEventMaterial);\r\n            dot.addComponent(new Transform({\r\n                position: new Vector3(offset, -1.9, -0.05),\r\n                scale: new Vector3(0.05, 0.05, 0.05),\r\n            }));\r\n            dot.setParent(boardBase);\r\n            dots.push(dot);\r\n            var dotBackSide = new Entity();\r\n            dotBackSide.addComponent(new PlaneShape());\r\n            dotBackSide.addComponent(inactiveEventMaterial);\r\n            dotBackSide.addComponent(new Transform({\r\n                position: new Vector3(-offset, -1.9, 0.05),\r\n                scale: new Vector3(0.05, 0.05, 0.05),\r\n            }));\r\n            dotBackSide.setParent(boardBase);\r\n            dotsBackSide.push(dotBackSide);\r\n        }\r\n    }\r\n    exports.createDots = createDots;\r\n    function displayEvent(events, currentEvent) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var event, eventCoords, i;\r\n            return __generator(this, function (_a) {\r\n                if (events.length <= 0)\r\n                    return [2 /*return*/];\r\n                event = events[currentEvent];\r\n                imageMaterial.albedoTexture = new Texture(event.image);\r\n                image.addComponentOrReplace(imageMaterial);\r\n                imageBackSide.addComponentOrReplace(imageMaterial);\r\n                eventCoords = event.x.toString() + ',' + event.y.toString();\r\n                if (event.scene_name) {\r\n                    eventCoords = helperFunctions_1.shortenText(event.scene_name, 25) + '  ' + eventCoords;\r\n                }\r\n                title.getComponent(TextShape).value = helperFunctions_1.splitTextIntoLines(event.name, 24, 2);\r\n                titleBackSide.getComponent(TextShape).value = helperFunctions_1.splitTextIntoLines(event.name, 24, 2);\r\n                coords.getComponent(TextShape).value = eventCoords;\r\n                coordsBackSide.getComponent(TextShape).value = eventCoords;\r\n                clickPanel.addComponentOrReplace(new OnPointerDown(function (e) {\r\n                    teleportTo(event.x.toString() + ',' + event.y.toString());\r\n                }, { hoverText: 'Teleport to event' }));\r\n                clickPanelBackSide.addComponentOrReplace(new OnPointerDown(function (e) {\r\n                    teleportTo(event.x.toString() + ',' + event.y.toString());\r\n                }, { hoverText: 'Teleport to event' }));\r\n                if (dots.length <= 0 && events.length > 1) {\r\n                    createDots(events.length);\r\n                }\r\n                if (events.length > 1) {\r\n                    for (i = 0; i < dots.length; i++) {\r\n                        if (i === currentEvent) {\r\n                            dots[i].addComponentOrReplace(activeEventMaterial);\r\n                            dotsBackSide[i].addComponentOrReplace(activeEventMaterial);\r\n                        }\r\n                        else {\r\n                            dots[i].addComponentOrReplace(inactiveEventMaterial);\r\n                            dotsBackSide[i].addComponentOrReplace(inactiveEventMaterial);\r\n                        }\r\n                    }\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    }\r\n    exports.displayEvent = displayEvent;\r\n});\r\ndefine(\"src/modules/Utils\", [\"require\", \"exports\", \"node_modules/decentraland-ecs-utils/index\"], function (require, exports, index_15) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.addOneTimeTrigger = exports.setTimeout = exports.shuffleArray = void 0;\r\n    function shuffleArray(array) {\r\n        var _a;\r\n        for (var i = array.length - 1; i > 0; i--) {\r\n            var j = Math.floor(Math.random() * (i + 1));\r\n            _a = __read([array[j], array[i]], 2), array[i] = _a[0], array[j] = _a[1];\r\n        }\r\n        return array;\r\n    }\r\n    exports.shuffleArray = shuffleArray;\r\n    function setTimeout(ms, callback) {\r\n        var entity = new Entity();\r\n        entity.addComponent(new index_15.default.Delay(ms, function () {\r\n            callback();\r\n            engine.removeEntity(entity);\r\n        }));\r\n        engine.addEntity(entity);\r\n    }\r\n    exports.setTimeout = setTimeout;\r\n    /**\r\n     * Add a trigger that is executed when the user enters for the first time\r\n     */\r\n    function addOneTimeTrigger(position, size, onFirstPlayerEnter, parent, show) {\r\n        if (show === void 0) { show = false; }\r\n        var entered = false;\r\n        var triggerBox = new index_15.default.TriggerBoxShape(size, Vector3.Zero());\r\n        var trigger = new Entity();\r\n        trigger.addComponent(new Transform({ position: position }));\r\n        trigger.addComponent(new index_15.default.TriggerComponent(triggerBox, //shape\r\n        0, //layer\r\n        0, //triggeredByLayers\r\n        null, //onTriggerEnter\r\n        null, //onTriggerExit\r\n        function () {\r\n            if (!entered) {\r\n                entered = true;\r\n                onFirstPlayerEnter();\r\n            }\r\n        }, null, //onCameraExit\r\n        show));\r\n        if (parent) {\r\n            trigger.setParent(parent);\r\n        }\r\n        engine.addEntity(trigger);\r\n    }\r\n    exports.addOneTimeTrigger = addOneTimeTrigger;\r\n});\r\ndefine(\"metas/sammich/meta\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.default = (function (e) {\r\n        var t = {};\r\n        function n(i) {\r\n            if (t[i])\r\n                return t[i].exports;\r\n            var r = (t[i] = { i: i, l: 0, exports: {} });\r\n            e[i].call(r.exports, r, r.exports, n);\r\n            r.l = 1;\r\n            return r.exports;\r\n        }\r\n        n.m = e;\r\n        n.c = t;\r\n        n.d = function (e, t, i) {\r\n            n.o(e, t) || Object.defineProperty(e, t, { enumerable: 1, get: i });\r\n        };\r\n        n.r = function (e) {\r\n            'undefined' != typeof Symbol &&\r\n                Symbol.toStringTag &&\r\n                Object.defineProperty(e, Symbol.toStringTag, { value: 'Module' });\r\n            Object.defineProperty(e, '__esModule', { value: 1 });\r\n        };\r\n        n.t = function (e, t) {\r\n            1 & t && (e = n(e));\r\n            if (8 & t)\r\n                return e;\r\n            if (4 & t && 'object' == typeof e && e && e.__esModule)\r\n                return e;\r\n            var i = Object.create(null);\r\n            n.r(i);\r\n            Object.defineProperty(i, 'default', { enumerable: 1, value: e });\r\n            if (2 & t && 'string' != typeof e)\r\n                for (var r in e)\r\n                    n.d(i, r, function (t) {\r\n                        return e[t];\r\n                    }.bind(null, r));\r\n            return i;\r\n        };\r\n        n.n = function (e) {\r\n            var t = e && e.__esModule\r\n                ? function t() {\r\n                    return e['default'];\r\n                }\r\n                : function t() {\r\n                    return e;\r\n                };\r\n            n.d(t, 'a', t);\r\n            return t;\r\n        };\r\n        n.o = function (e, t) {\r\n            return Object.prototype.hasOwnProperty.call(e, t);\r\n        };\r\n        n.p = '';\r\n        return n((n.s = 49));\r\n    })([\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.getSpriteUv = t.SpriteAnimationSystem = t.createSpriteEntity = void 0;\r\n            var i = n(1), r = { time: 0.5, frames: [], init: 1, position: void 0, scale: void 0 };\r\n            t.createSpriteEntity = function (e, _a) {\r\n                var _b = _a.position, t = _b === void 0 ? new Vector3(0, 0, 0) : _b, _c = _a.scale, n = _c === void 0 ? new Vector3(1, 1, 1) : _c, r = _a.uvs;\r\n                var o = new Entity(), s = new PlaneShape();\r\n                s.withCollisions = 0;\r\n                s.isPointerBlocker = 0;\r\n                var a = new Transform({ position: t, scale: n });\r\n                s.uvs = r;\r\n                o.addComponent(s);\r\n                o.addComponent(i.spriteMaterial);\r\n                o.addComponent(a);\r\n                o.setParent(e);\r\n                return {\r\n                    show: function () {\r\n                        s.visible = 1;\r\n                    },\r\n                    hide: function () {\r\n                        s.visible = 0;\r\n                    },\r\n                    getEntity: function () { return o; },\r\n                    getShape: function () { return s; },\r\n                    getTransform: function () { return a; },\r\n                    updateUvs: function (e) { return (s.uvs = e); },\r\n                };\r\n            };\r\n            var o = /** @class */ (function () {\r\n                function o(e, t) {\r\n                    if (t === void 0) { t = r; }\r\n                    var n = t.scale, o = t.time, s = t.position, a = t.frames, c = t.init;\r\n                    this.globalOptions = Object.assign(Object.assign({}, r), t);\r\n                    this.root = e;\r\n                    this.setInitialState();\r\n                    this.sprite = new Entity();\r\n                    this.plane = new PlaneShape();\r\n                    this.sprite.addComponent(i.spriteMaterial);\r\n                    this.sprite.addComponent(this.plane);\r\n                    (s || n) &&\r\n                        this.sprite.addComponent(new Transform({ scale: n, position: s }));\r\n                    this.plane.uvs = a[0].uvs;\r\n                    engine.addSystem(this);\r\n                }\r\n                o.prototype.setPosition = function (e) {\r\n                    this.sprite.getComponent(Transform).position.set(e.x, e.y, e.z);\r\n                };\r\n                o.prototype.getPosition = function () {\r\n                    return this.sprite.getComponent(Transform).position;\r\n                };\r\n                o.prototype.setRotation = function (e) {\r\n                    this.sprite.getComponent(Transform).rotation.setEuler(0, 0, e);\r\n                };\r\n                o.prototype.addComponentOrReplace = function (e) {\r\n                    this.sprite.addComponentOrReplace(e);\r\n                };\r\n                o.prototype.addComponent = function (e) {\r\n                    this.sprite.addComponent(e);\r\n                };\r\n                o.prototype.removeComponent = function (e) {\r\n                    this.sprite.removeComponent(e);\r\n                };\r\n                o.prototype.init = function () {\r\n                    this.state.initialized = 1;\r\n                    this.sprite.setParent(this.root);\r\n                };\r\n                o.prototype.nextFrame = function () {\r\n                    this.state.currentFrame++;\r\n                    this.state.currentFrame >= this.state.playtrack.length - 1 &&\r\n                        this.state.playing &&\r\n                        !this.state.loop &&\r\n                        (this.state.playing = 0);\r\n                    this.state.currentFrame >= this.state.playtrack.length &&\r\n                        (this.state.loop\r\n                            ? (this.state.currentFrame = 0)\r\n                            : (this.state.currentFrame = this.state.playtrack.length - 1));\r\n                    this.plane.uvs = this.globalOptions.frames[this.state.playtrack[this.state.currentFrame]].uvs;\r\n                };\r\n                o.prototype.update = function (e) {\r\n                    if (this.state.initialized)\r\n                        if (this.state.playing) {\r\n                            this.state.dtCount += e;\r\n                            if (this.state.dtCount >= this.state.time) {\r\n                                this.state.dtCount = 0;\r\n                                this.nextFrame();\r\n                            }\r\n                        }\r\n                        else\r\n                            this.state.dtCount = 0;\r\n                };\r\n                o.prototype.play = function (e, t) {\r\n                    this.state.playtrack = e;\r\n                    this.state.dtCount = 0;\r\n                    this.state.currentFrame = -1;\r\n                    this.state.initialized = 1;\r\n                    this.state.playing = 1;\r\n                    this.state.end = e.length - 1;\r\n                    this.state.time =\r\n                        (null == t ? void 0 : t.time) || this.globalOptions.time;\r\n                    this.state.loop = (null == t ? void 0 : t.loop) || 0;\r\n                    this.nextFrame();\r\n                };\r\n                o.prototype.stop = function (e) {\r\n                    if (e === void 0) { e = 0; }\r\n                    this.plane.uvs = this.globalOptions.frames[0].uvs;\r\n                    this.state.playing = 0;\r\n                };\r\n                o.prototype.destroy = function () {\r\n                    engine.removeSystem(this);\r\n                };\r\n                o.prototype.setInitialState = function () {\r\n                    this.state = {\r\n                        initialized: 0,\r\n                        playing: 0,\r\n                        currentFrame: 0,\r\n                        dtCount: 0,\r\n                        start: 0,\r\n                        end: 0,\r\n                        loop: 0,\r\n                        time: this.globalOptions.time || 0.5,\r\n                        playtrack: [0],\r\n                    };\r\n                };\r\n                o.prototype.resetState = function () {\r\n                    this.state = Object.assign(Object.assign({}, this.state), {\r\n                        playing: 0,\r\n                    });\r\n                };\r\n                return o;\r\n            }());\r\n            t.SpriteAnimationSystem = o;\r\n            t.getSpriteUv = function (e, t, n, i) {\r\n                if (t === void 0) { t = 0; }\r\n                if (n === void 0) { n = 64; }\r\n                if (i === void 0) { i = n; }\r\n                var r = 1024 / n, o = 1024 / i, s = e + t, a = 1 / r, c = 1 / o, l = o - Math.floor((s - 1) / r), u = Math.floor((s - 1) % r);\r\n                var h = u * a, d = (u + 1) * a, p = (l - 1) * c, f = l * c;\r\n                return [0, 0, 0, 0, 0, 0, 0, 0, d, p, h, p, h, f, d, f];\r\n            };\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.loadTexture = t.spriteMaterial = void 0;\r\n            t.spriteMaterial = new Material();\r\n            t.loadTexture = function () {\r\n                var e = (engine['RESOURCE_BASE'] || globalThis['RESOURCE_BASE'] || '') +\r\n                    'images/sprite3.png', n = new Texture(e, { samplingMode: 0, hasAlpha: 1 });\r\n                t.spriteMaterial.albedoTexture = n;\r\n                t.spriteMaterial.alphaTexture = n;\r\n                t.spriteMaterial.emissiveTexture = n;\r\n            };\r\n            void 0;\r\n            var i = (engine['RESOURCE_BASE'] || globalThis['RESOURCE_BASE'] || '') +\r\n                'images/sprite3.png';\r\n            void 0;\r\n            t.spriteMaterial.emissiveIntensity = 0.5;\r\n            t.spriteMaterial.emissiveColor = new Color3(1, 1, 1);\r\n            t.spriteMaterial.transparencyMode = 1;\r\n            t.spriteMaterial.specularIntensity = 0;\r\n            t.spriteMaterial.roughness = 1;\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.removeSoundsFromEntity = t.addSoundsToEntity = t.stopAllSounds = t.stopSound = t.isMusic = t.playOnce = t.playLoop = t.isPlaying = t.toggleMusic = t.setTotalMute = t.loadSounds = void 0;\r\n            var i = {}, r = [];\r\n            t.loadSounds = function () {\r\n                var e = '' + (engine['RESOURCE_BASE'] || globalThis['RESOURCE_BASE'] || ''), t = new AudioClip(e + 'sounds/error.mp3'), n = new AudioClip(e + 'sounds/music2b.mp3'), o = new AudioClip(e + 'sounds/vs.mp3'), s = new AudioClip(e + 'sounds/pwned.mp3'), a = new AudioClip(e + 'sounds/race.mp3'), c = new AudioClip(e + 'sounds/ok.mp3'), l = new AudioClip(e + 'sounds/wow.mp3'), u = new AudioClip(e + 'sounds/swing.mp3'), h = new AudioClip(e + 'sounds/battle.mp3'), d = new AudioClip(e + 'sounds/money.mp3'), p = new AudioClip(e + 'sounds/jump.mp3'), f = new AudioClip(e + 'sounds/readygo.mp3'), m = new AudioClip(e + 'sounds/hit.mp3'), g = new AudioSource(t), y = new AudioSource(n), v = new AudioSource(o), S = new AudioSource(s), b = new AudioSource(a), w = new AudioSource(c), _ = new AudioSource(l), T = new AudioSource(u), C = new AudioSource(h), P = new AudioSource(d), R = new AudioSource(p), E = new AudioSource(f), O = new AudioSource(m);\r\n                i = {\r\n                    fail: g,\r\n                    music2: y,\r\n                    vs: v,\r\n                    pwned: S,\r\n                    race: b,\r\n                    ok: w,\r\n                    wow: _,\r\n                    swing: T,\r\n                    battle: C,\r\n                    money: P,\r\n                    jump: R,\r\n                    readygo: E,\r\n                    hit: O,\r\n                };\r\n                r = [i.music2, i.pwned, i.race, i.battle, i.money];\r\n                r.forEach(function (e) {\r\n                    e.volume = 0.5;\r\n                });\r\n            };\r\n            var o = { music: 1, fx: 1, totalMute: 0 };\r\n            t.setTotalMute = function (e) {\r\n                o.totalMute = e;\r\n                e\r\n                    ? Object.values(i).forEach(function (e) {\r\n                        e.volume = 0;\r\n                    })\r\n                    : Object.values(i).forEach(function (e) {\r\n                        t.isMusic(e) ? (e.volume = o.music ? 0.5 : 0) : (e.volume = 1);\r\n                    });\r\n            };\r\n            t.toggleMusic = function () {\r\n                o.music = !o.music;\r\n                r.forEach(function (e) {\r\n                    e.volume = !o.music || o.totalMute ? 0 : 0.5;\r\n                });\r\n            };\r\n            t.isPlaying = function (e) { return i[e].playing; };\r\n            t.playLoop = function (e, _a) {\r\n                var t = (_a === void 0 ? { volume: void 0 } : _a).volume;\r\n                i[e].loop = 1;\r\n                i[e].playing = 1;\r\n            };\r\n            t.playOnce = function (e, _a) {\r\n                var t = (_a === void 0 ? { volume: void 0 } : _a).volume;\r\n                i[e].playOnce();\r\n                void 0 === t || ~r.indexOf(i[e]) || (i[e].volume = t);\r\n            };\r\n            t.isMusic = function (e) { return ~r.indexOf(e); };\r\n            t.stopSound = function (e) {\r\n                i[e].playing = 0;\r\n            };\r\n            t.stopAllSounds = function () {\r\n                Object.values(i).forEach(function (e) { return (e.playing = 0); });\r\n            };\r\n            t.addSoundsToEntity = function (e) {\r\n                Object.values(i).forEach(function (t) {\r\n                    var n = new Entity();\r\n                    n.setParent(e);\r\n                    n.addComponent(t);\r\n                    t.volume = 1;\r\n                });\r\n            };\r\n            t.removeSoundsFromEntity = function (e) {\r\n                Object.values(i).forEach(function (e) { });\r\n            };\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.seedGen = void 0;\r\n            t.seedGen = {\r\n                create: function (e) {\r\n                    var t = e;\r\n                    return {\r\n                        random: function () {\r\n                            t = (16807 * t) % 2147483647;\r\n                            return t / 2147483647;\r\n                        },\r\n                    };\r\n                },\r\n            };\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.showSpritePanel = t.hideSpritePanel = t.updateSpritePanel = t.createSpritePanel = void 0;\r\n            var i = n(0), r = n(1), o = new PlaneShape();\r\n            o.withCollisions = 0;\r\n            o.isPointerBlocker = 0;\r\n            var s = new Transform({\r\n                position: new Vector3(0, 2, -0.001),\r\n                scale: new Vector3(6, 4, 1),\r\n            });\r\n            t.createSpritePanel = function (e) {\r\n                var t = new Entity();\r\n                t.addComponent(o);\r\n                t.addComponent(r.spriteMaterial);\r\n                t.addComponent(s);\r\n                t.setParent(e);\r\n            };\r\n            t.updateSpritePanel = function (_a) {\r\n                var _b = _a.uvs, e = _b === void 0 ? null : _b, _c = _a.width, t = _c === void 0 ? null : _c, _d = _a.height, n = _d === void 0 ? null : _d, _e = _a.col, r = _e === void 0 ? null : _e, _f = _a.row, a = _f === void 0 ? null : _f, _g = _a.canvasWidth, c = _g === void 0 ? null : _g, _h = _a.scale, l = _h === void 0 ? null : _h;\r\n                o.uvs = e || i.getSpriteUv((1024 / t) * a + r, 0, t, n);\r\n                c && s.scale.set(c, s.scale.y, s.scale.z);\r\n                l ? s.scale.set(l.x, l.y, l.z) : s.scale.set(6, 4, 1);\r\n            };\r\n            t.hideSpritePanel = function () {\r\n                o.visible = 0;\r\n                s.scale.set(6, 4, 1);\r\n            };\r\n            t.showSpritePanel = function () {\r\n                o.visible = 1;\r\n            };\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.sleep = t.createUI = t.createRoundResult = t.createTimeResult = t.createPlayerAnswer = void 0;\r\n            var i = n(0), r = {\r\n                player1: { correct: 1, wrong: 3 },\r\n                player2: { correct: 2, wrong: 4 },\r\n            }, o = 2068;\r\n            t.createPlayerAnswer = function (e, _a) {\r\n                var t = _a.player, _b = _a.size, n = _b === void 0 ? 16 : _b;\r\n                var s = new Entity();\r\n                s.addComponent(new Transform({\r\n                    scale: new Vector3(0.5, 0.5, 1),\r\n                    position: new Vector3(1 === t ? -0.3 : 0.3, -10, -0.01),\r\n                }));\r\n                var a = i.createSpriteEntity(s, {\r\n                    uvs: i.getSpriteUv(r['player' + t].correct, o, 16, 16),\r\n                    position: new Vector3(0, 0, -0.001),\r\n                });\r\n                s.setParent(e);\r\n                var c = function (e) {\r\n                    var n = 5;\r\n                    n = e ? r['player' + t].correct : r['player' + t].wrong;\r\n                    a.getShape().uvs = i.getSpriteUv(n, o, 16, 16);\r\n                }, l = function () {\r\n                    a.getShape().visible = 1;\r\n                }, u = function () {\r\n                    a.getShape().visible = 0;\r\n                };\r\n                return { wrapperEntity: s, sprite: a, setSprite: c, show: l, hide: u };\r\n            };\r\n            t.createTimeResult = function (e, _a) {\r\n                var t = _a.player, _b = _a.position, n = _b === void 0 ? new Vector3(1 === t ? -2.4 : 2.4, 0.1, -0.007) : _b, _c = _a.fontSize, r = _c === void 0 ? 2.5 : _c;\r\n                var o = new Entity(), s = new TextShape(), a = i.createSpriteEntity(o, {\r\n                    uvs: i.getSpriteUv(25, 2048, 16, 16),\r\n                    scale: new Vector3(0.25, 0.25, 1),\r\n                    position: new Vector3(1 === t ? -0.25 : 0.25, 0.125, 0),\r\n                });\r\n                s.isPointerBlocker = 0;\r\n                s.hTextAlign = 1 === t ? 'left' : 'right';\r\n                s.vTextAlign = 'bottom';\r\n                s.fontSize = r;\r\n                s.font = new Font(Fonts.SanFrancisco_Heavy);\r\n                s.shadowOffsetX = 2;\r\n                s.shadowOffsetY = 2;\r\n                s.shadowColor = Color3.FromHexString('#000000');\r\n                s.withCollisions = 0;\r\n                var c = new Transform({ position: n });\r\n                o.addComponent(c);\r\n                o.addComponent(s);\r\n                o.setParent(e);\r\n                var l = undefined, u = undefined, h = undefined;\r\n                return {\r\n                    show: function () {\r\n                        s.visible = 1;\r\n                        a.getShape().visible = 1;\r\n                    },\r\n                    hide: function () {\r\n                        s.visible = 0;\r\n                        s.value = '';\r\n                        a.getShape().visible = 0;\r\n                    },\r\n                    update: function (e) {\r\n                        s.value = (Math.floor(1e4 * e) / 1e4 / 1e3).toString();\r\n                    },\r\n                    getTransform: function () { return c; },\r\n                    getEntity: function () { return o; },\r\n                };\r\n            };\r\n            t.createRoundResult = function (e, _a) {\r\n                var t = _a.player, _b = _a.position, n = _b === void 0 ? new Vector3(1 === t ? -2 : 2, 3, -0.007) : _b;\r\n                var r = 104, o = 4 / 128 / 2, s = i.createSpriteEntity(e, {\r\n                    uvs: i.getSpriteUv(12, r, 128, 32),\r\n                    scale: new Vector3(128 * o, 32 * o, 1),\r\n                    position: n,\r\n                }), a = undefined, c = undefined, l = undefined;\r\n                return {\r\n                    show: function () {\r\n                        s.getShape().visible = 1;\r\n                    },\r\n                    hide: function () {\r\n                        s.getShape().visible = 0;\r\n                    },\r\n                    update: function (e) {\r\n                        s.getShape().uvs = e\r\n                            ? i.getSpriteUv(12, r, 128, 32)\r\n                            : i.getSpriteUv(4, r, 128, 32);\r\n                    },\r\n                    getTransform: function () { return s.getTransform(); },\r\n                    getEntity: function () { return s.getEntity(); },\r\n                };\r\n            };\r\n            t.createUI = function (e, _a) {\r\n                var n = (_a === void 0 ? { position: void 0 } : _a).position;\r\n                var r = t.createTimeResult(e, { player: 1 }), o = t.createTimeResult(e, { player: 2 });\r\n                r.hide();\r\n                o.hide();\r\n                var s = new TextShape('0'), a = new TextShape('0');\r\n                s.withCollisions = a.withCollisions = 0;\r\n                s.isPointerBlocker = a.isPointerBlocker = 0;\r\n                s.font = a.font = new Font(Fonts.SanFrancisco_Heavy);\r\n                s.fontSize = a.fontSize = 2.5;\r\n                s.vTextAlign = a.vTextAlign = 'bottom';\r\n                s.hTextAlign = 'right';\r\n                a.hTextAlign = 'left';\r\n                var c = new Entity(), l = new Entity();\r\n                c.addComponent(s);\r\n                c.addComponent(new Transform({\r\n                    position: new Vector3(-0.5, n ? 0.1 + n.y : 0.1, -0.003),\r\n                }));\r\n                l.addComponent(a);\r\n                l.addComponent(new Transform({\r\n                    position: new Vector3(0.5, n ? 0.1 + n.y : 0.1, -0.003),\r\n                }));\r\n                c.setParent(e);\r\n                l.setParent(e);\r\n                var u = i.createSpriteEntity(e, {\r\n                    position: new Vector3(0, n ? 0.5 + n.y : 0.5, -0.001),\r\n                    scale: new Vector3(6, 1, 1),\r\n                    uvs: i.getSpriteUv(2, 64, 192, 32),\r\n                }), h = undefined, d = undefined, p = undefined, f = undefined, m = undefined, g = undefined, y = undefined;\r\n                return {\r\n                    updateTime: function (_a) {\r\n                        var e = _a.player, t = _a.time;\r\n                        if (1 === e) {\r\n                            r.update(t);\r\n                            r.show();\r\n                        }\r\n                        else {\r\n                            o.update(t);\r\n                            o.show();\r\n                        }\r\n                    },\r\n                    updateScore: function (_a) {\r\n                        var e = _a.player, t = _a.score;\r\n                        'undefined' != typeof t &&\r\n                            (1 === e ? (s.value = t.toString()) : (a.value = t.toString()));\r\n                    },\r\n                    hideTime: function () {\r\n                        r.hide();\r\n                        o.hide();\r\n                    },\r\n                    showTime: function () { },\r\n                    hideScore: function () {\r\n                        s.value = a.value = '';\r\n                    },\r\n                    show: function () {\r\n                        u.getShape().visible = 1;\r\n                    },\r\n                    hide: function () {\r\n                        u.getShape().visible = 0;\r\n                    },\r\n                };\r\n            };\r\n            function s(e) {\r\n                return new Promise(function (t) { return setTimeout(t, e); });\r\n            }\r\n            t.sleep = s;\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.getTextPanelValue = t.updateTextPanel = t.createTextPanel = void 0;\r\n            var i = null;\r\n            var r = new Transform({ position: new Vector3(0, 4, -0.01) });\r\n            t.createTextPanel = function (e, t) {\r\n                var n = new Entity();\r\n                i = new TextShape();\r\n                i.value = t;\r\n                i.vTextAlign = 'top';\r\n                i.fontSize = 3;\r\n                i.font = new Font(Fonts.SanFrancisco_Heavy);\r\n                i.shadowOffsetX = 2;\r\n                i.shadowOffsetY = 2;\r\n                i.shadowColor = Color3.FromHexString('#000000');\r\n                n.addComponent(r);\r\n                n.addComponent(i);\r\n                n.setParent(e);\r\n            };\r\n            t.updateTextPanel = function (e) {\r\n                if (e.bottom) {\r\n                    i.vTextAlign = 'bottom';\r\n                    r.position.set(r.position.x, 0, r.position.z);\r\n                }\r\n                else {\r\n                    i.vTextAlign = 'top';\r\n                    r.position.set(r.position.x, 4, r.position.z);\r\n                }\r\n                if ('left' === e.hTextAlign) {\r\n                    i.hTextAlign = 'left';\r\n                    r.position.set(-3, r.position.y, r.position.z);\r\n                }\r\n                else {\r\n                    i.hTextAlign = 'center';\r\n                    r.position.set(0, r.position.y, r.position.z);\r\n                }\r\n                i.color = e.color || Color3.White();\r\n                Object.assign(i, { hTextAlign: 'center' }, e, { value: '' + e.value });\r\n            };\r\n            t.getTextPanelValue = function () { return i.value; };\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.TransformSystem = void 0;\r\n            var i = n(16), r = n(25), o = n(26), s = n(27), a = n(28);\r\n            var c = /** @class */ (function () {\r\n                function c() {\r\n                    this._components = [];\r\n                    c._instance = this;\r\n                    this._components.push(i.MoveTransformComponent);\r\n                    this._components.push(r.RotateTransformComponent);\r\n                    this._components.push(o.ScaleTransformComponent);\r\n                    this._components.push(s.FollowPathComponent);\r\n                    this._components.push(a.KeepRotatingComponent);\r\n                }\r\n                c.createAndAddToEngine = function () {\r\n                    if (null == this._instance) {\r\n                        this._instance = new c();\r\n                        engine.addSystem(this._instance);\r\n                    }\r\n                    return this._instance;\r\n                };\r\n                c.registerCustomComponent = function (e) {\r\n                    this.createAndAddToEngine()._components.push(e);\r\n                };\r\n                c.prototype.update = function (e) {\r\n                    var _this = this;\r\n                    this._components.forEach(function (t) {\r\n                        _this.updateComponent(e, t);\r\n                    });\r\n                };\r\n                c.prototype.updateComponent = function (e, t) {\r\n                    var n = undefined;\r\n                    engine.getComponentGroup(t, Transform).entities.forEach(function (n) {\r\n                        var i = n.getComponent(Transform), r = n.getComponent(t);\r\n                        r.update(e);\r\n                        r.assignValueToTransform(i);\r\n                        if (r.hasFinished()) {\r\n                            n.removeComponent(r);\r\n                            null != r.onFinishCallback && r.onFinishCallback();\r\n                        }\r\n                    });\r\n                };\r\n                return c;\r\n            }());\r\n            t.TransformSystem = c;\r\n            c._instance = null;\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.PART_TYPE_OFFSET_Y = t.PART_OFFSET_INDEX = t.PART_SIZE_HEIGHT = t.PART_SIZE_WIDTH = void 0;\r\n            t.PART_SIZE_WIDTH = { shirt: 64, pants: 64, hair: 64, glasses: 64 };\r\n            t.PART_SIZE_HEIGHT = { shirt: 64, pants: 64, hair: 64, glasses: 64 };\r\n            t.PART_OFFSET_INDEX = { shirt: 64, pants: 80, hair: 224, glasses: 208 };\r\n            t.PART_TYPE_OFFSET_Y = { shirt: -0.2, pants: 0.2, hair: 0, glasses: 0 };\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.getTimeSinceStart = void 0;\r\n            t.getTimeSinceStart = function (e) { return Date.now() - e; };\r\n        },\r\n        function (e, t, n) {\r\n            var i = (this && this.__extends) ||\r\n                (function () {\r\n                    var e = function (t, n) {\r\n                        return (e =\r\n                            Object.setPrototypeOf ||\r\n                                ({ __proto__: [] } instanceof Array &&\r\n                                    function (e, t) {\r\n                                        e.__proto__ = t;\r\n                                    }) ||\r\n                                function (e, t) {\r\n                                    for (var n in t)\r\n                                        t.hasOwnProperty(n) && (e[n] = t[n]);\r\n                                })(t, n);\r\n                    };\r\n                    return function (t, n) {\r\n                        e(t, n);\r\n                        function i() {\r\n                            this.constructor = t;\r\n                        }\r\n                        t.prototype =\r\n                            null === n\r\n                                ? Object.create(n)\r\n                                : ((i.prototype = n.prototype), new i());\r\n                    };\r\n                })(), r = (this && this.__spreadArrays) ||\r\n                function () {\r\n                    for (var e = 0, t = 0, n = arguments.length; t < n; t++)\r\n                        e += arguments[t].length;\r\n                    for (var i = Array(e), r = 0, t = 0; t < n; t++)\r\n                        for (var o = arguments[t], s = 0, a = o.length; s < a; s++, r++)\r\n                            i[r] = o[s];\r\n                    return i;\r\n                };\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.ArraySchema = void 0;\r\n            var o = (function (e) {\r\n                i(t, e);\r\n                function t() {\r\n                    for (var n = [], i = 0; i < arguments.length; i++)\r\n                        n[i] = arguments[i];\r\n                    var o = e.apply(this, n) || this;\r\n                    Object.setPrototypeOf(o, Object.create(t.prototype));\r\n                    Object.defineProperties(o, {\r\n                        $sorting: { value: void 0, enumerable: 0, writable: 1 },\r\n                        $changes: { value: void 0, enumerable: 0, writable: 1 },\r\n                        onAdd: { value: void 0, enumerable: 0, writable: 1 },\r\n                        onRemove: { value: void 0, enumerable: 0, writable: 1 },\r\n                        onChange: { value: void 0, enumerable: 0, writable: 1 },\r\n                        triggerAll: {\r\n                            value: function () {\r\n                                if (o.onAdd)\r\n                                    for (var e = 0; e < o.length; e++)\r\n                                        o.onAdd(o[e], e);\r\n                            },\r\n                        },\r\n                        toJSON: {\r\n                            value: function () {\r\n                                for (var e = [], t = 0; t < o.length; t++) {\r\n                                    var n = o[t];\r\n                                    e.push('function' == typeof n.toJSON ? n.toJSON() : n);\r\n                                }\r\n                                return e;\r\n                            },\r\n                        },\r\n                        clone: {\r\n                            value: function (e) {\r\n                                var n;\r\n                                if (e) {\r\n                                    ;\r\n                                    (n = t.of.apply(t, o)).onAdd = o.onAdd;\r\n                                    n.onRemove = o.onRemove;\r\n                                    n.onChange = o.onChange;\r\n                                }\r\n                                else\r\n                                    n = new (t.bind.apply(t, r([void 0], o.map(function (e) {\r\n                                        return 'object' == typeof e ? e.clone() : e;\r\n                                    }))))();\r\n                                return n;\r\n                            },\r\n                        },\r\n                    });\r\n                    return o;\r\n                }\r\n                Object.defineProperty(t, Symbol.species, {\r\n                    get: function () {\r\n                        return t;\r\n                    },\r\n                    enumerable: 0,\r\n                    configurable: 1,\r\n                });\r\n                t.prototype.sort = function (t) {\r\n                    this.$sorting = 1;\r\n                    e.prototype.sort.call(this, t);\r\n                    if (this.$changes)\r\n                        for (var n, i = 0, r = Array.from(this.$changes.changes); i < r.length; i++) {\r\n                            var o = r[i], s = this.$changes.getIndex(this[o]);\r\n                            void 0 !== s && this.$changes.mapIndexChange(this[o], s);\r\n                            this.$changes.mapIndex(this[o], o);\r\n                        }\r\n                    this.$sorting = 0;\r\n                    return this;\r\n                };\r\n                t.prototype.filter = function (t, n) {\r\n                    var i = e.prototype.filter.call(this, t);\r\n                    i.$changes = this.$changes.clone();\r\n                    return i;\r\n                };\r\n                t.prototype.splice = function (e, t) {\r\n                    for (var n = [], i = 2; i < arguments.length; i++)\r\n                        n[i - 2] = arguments[i];\r\n                    var r = Array.prototype.splice.apply(this, arguments), o = Array.prototype.filter.call(this, function (n, i) {\r\n                        return i >= e + t - 1;\r\n                    });\r\n                    r.map(function (e) {\r\n                        var t = e && e.$changes;\r\n                        if (t && t.parent) {\r\n                            t.parent.deleteIndex(e);\r\n                            delete t.parent;\r\n                        }\r\n                    });\r\n                    o.forEach(function (e) {\r\n                        var t = e && e.$changes;\r\n                        t && t.parentField--;\r\n                    });\r\n                    return r;\r\n                };\r\n                return t;\r\n            })(Array);\r\n            t.ArraySchema = o;\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.MapSchema = void 0;\r\n            var i = (function () {\r\n                function e(t) {\r\n                    var n = this;\r\n                    void 0 === t && (t = {});\r\n                    for (var i in t)\r\n                        this[i] = t[i];\r\n                    Object.defineProperties(this, {\r\n                        $changes: { value: void 0, enumerable: 0, writable: 1 },\r\n                        onAdd: { value: void 0, enumerable: 0, writable: 1 },\r\n                        onRemove: { value: void 0, enumerable: 0, writable: 1 },\r\n                        onChange: { value: void 0, enumerable: 0, writable: 1 },\r\n                        clone: {\r\n                            value: function (t) {\r\n                                var i;\r\n                                if (t) {\r\n                                    ;\r\n                                    (i = Object.assign(new e(), n)).onAdd = n.onAdd;\r\n                                    i.onRemove = n.onRemove;\r\n                                    i.onChange = n.onChange;\r\n                                }\r\n                                else {\r\n                                    var r = new e();\r\n                                    for (var o in n)\r\n                                        'object' == typeof n[o]\r\n                                            ? (r[o] = n[o].clone())\r\n                                            : (r[o] = n[o]);\r\n                                }\r\n                                return i;\r\n                            },\r\n                        },\r\n                        triggerAll: {\r\n                            value: function () {\r\n                                if (n.onAdd)\r\n                                    for (var e in n)\r\n                                        n.onAdd(n[e], e);\r\n                            },\r\n                        },\r\n                        toJSON: {\r\n                            value: function () {\r\n                                var e = {};\r\n                                for (var t in n)\r\n                                    e[t] = 'function' == typeof n[t].toJSON ? n[t].toJSON() : n[t];\r\n                                return e;\r\n                            },\r\n                        },\r\n                        _indexes: { value: new Map(), enumerable: 0, writable: 1 },\r\n                        _updateIndexes: {\r\n                            value: function (e) {\r\n                                for (var t = 0, i = new Map(), r = 0, o = e; r < o.length; r++) {\r\n                                    var s = o[r];\r\n                                    i.set(s, t++);\r\n                                }\r\n                                n._indexes = i;\r\n                            },\r\n                        },\r\n                    });\r\n                }\r\n                return e;\r\n            })();\r\n            t.MapSchema = i;\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.Interpolate = t.InterpolationType = void 0;\r\n            var i;\r\n            (function (e) {\r\n                e[(e['LINEAR'] = 0)] = 'LINEAR';\r\n                e[(e['EASEINQUAD'] = 1)] = 'EASEINQUAD';\r\n                e[(e['EASEOUTQUAD'] = 2)] = 'EASEOUTQUAD';\r\n                e[(e['EASEQUAD'] = 3)] = 'EASEQUAD';\r\n            })((i = t.InterpolationType || (t.InterpolationType = {})));\r\n            function r(e, t) {\r\n                switch (e) {\r\n                    case i.LINEAR:\r\n                        return o(t);\r\n                    case i.EASEINQUAD:\r\n                        return s(t);\r\n                    case i.EASEOUTQUAD:\r\n                        return a(t);\r\n                    case i.EASEQUAD:\r\n                        return c(t);\r\n                    default:\r\n                        return o(t);\r\n                }\r\n            }\r\n            t.Interpolate = r;\r\n            function o(e) {\r\n                return e;\r\n            }\r\n            function s(e) {\r\n                return e * e;\r\n            }\r\n            function a(e) {\r\n                return e * (2 - e);\r\n            }\r\n            function c(e) {\r\n                return (e * e) / (2 * (e * e - e) + 1);\r\n            }\r\n        },\r\n        function (e, t, n) {\r\n            var i = (this && this.__extends) ||\r\n                (function () {\r\n                    var e = function (t, n) {\r\n                        return (e =\r\n                            Object.setPrototypeOf ||\r\n                                ({ __proto__: [] } instanceof Array &&\r\n                                    function (e, t) {\r\n                                        e.__proto__ = t;\r\n                                    }) ||\r\n                                function (e, t) {\r\n                                    for (var n in t)\r\n                                        t.hasOwnProperty(n) && (e[n] = t[n]);\r\n                                })(t, n);\r\n                    };\r\n                    return function (t, n) {\r\n                        e(t, n);\r\n                        function i() {\r\n                            this.constructor = t;\r\n                        }\r\n                        t.prototype =\r\n                            null === n\r\n                                ? Object.create(n)\r\n                                : ((i.prototype = n.prototype), new i());\r\n                    };\r\n                })();\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.Schema = void 0;\r\n            var r = n(44), o = n(42), s = n(43), a = n(10), c = n(11), l = n(47), u = n(93), h = (function (e) {\r\n                i(t, e);\r\n                function t() {\r\n                    return (null !== e && e.apply(this, arguments)) || this;\r\n                }\r\n                return t;\r\n            })(Error);\r\n            function d(e, t, n, i) {\r\n                var r, o = 0;\r\n                switch (t) {\r\n                    case 'number':\r\n                    case 'int8':\r\n                    case 'uint8':\r\n                    case 'int16':\r\n                    case 'uint16':\r\n                    case 'int32':\r\n                    case 'uint32':\r\n                    case 'int64':\r\n                    case 'uint64':\r\n                    case 'float32':\r\n                    case 'float64':\r\n                        r = 'number';\r\n                        isNaN(e), 0;\r\n                        break;\r\n                    case 'string':\r\n                        r = 'string';\r\n                        o = 1;\r\n                        break;\r\n                    case 'boolean':\r\n                        return;\r\n                }\r\n                if (typeof e !== r && (!o || (o && null !== e))) {\r\n                    var s = \"'\" +\r\n                        JSON.stringify(e) +\r\n                        \"'\" +\r\n                        (e && e.constructor && ' (' + e.constructor.name + ')');\r\n                    throw new h(\"a '\" +\r\n                        r +\r\n                        \"' was expected, but \" +\r\n                        s +\r\n                        ' was provided in ' +\r\n                        n.constructor.name +\r\n                        '#' +\r\n                        i);\r\n                }\r\n            }\r\n            function p(e, t, n, i) {\r\n                if (!(e instanceof t))\r\n                    throw new h(\"a '\" +\r\n                        t.name +\r\n                        \"' was expected, but '\" +\r\n                        e.constructor.name +\r\n                        \"' was provided in \" +\r\n                        n.constructor.name +\r\n                        '#' +\r\n                        i);\r\n            }\r\n            function f(e, t, n, i, r) {\r\n                d(n, e, i, r);\r\n                var s = o[e];\r\n                if (!s)\r\n                    throw new h(\"a '\" +\r\n                        e +\r\n                        \"' was expected, but \" +\r\n                        n +\r\n                        ' was provided in ' +\r\n                        i.constructor.name +\r\n                        '#' +\r\n                        r);\r\n                s(t, n);\r\n            }\r\n            function m(e, t, n) {\r\n                return s[e](t, n);\r\n            }\r\n            var g = (function () {\r\n                function e() {\r\n                    for (var e = [], t = 0; t < arguments.length; t++)\r\n                        e[t] = arguments[t];\r\n                    Object.defineProperties(this, {\r\n                        $changes: {\r\n                            value: new l.ChangeTree(this._indexes),\r\n                            enumerable: 0,\r\n                            writable: 1,\r\n                        },\r\n                        $listeners: { value: {}, enumerable: 0, writable: 1 },\r\n                    });\r\n                    var n = this._descriptors;\r\n                    n && Object.defineProperties(this, n);\r\n                }\r\n                e.onError = function (e) {\r\n                    void 0;\r\n                };\r\n                Object.defineProperty(e.prototype, '_schema', {\r\n                    get: function () {\r\n                        return this.constructor._schema;\r\n                    },\r\n                    enumerable: 0,\r\n                    configurable: 1,\r\n                });\r\n                Object.defineProperty(e.prototype, '_descriptors', {\r\n                    get: function () {\r\n                        return this.constructor._descriptors;\r\n                    },\r\n                    enumerable: 0,\r\n                    configurable: 1,\r\n                });\r\n                Object.defineProperty(e.prototype, '_indexes', {\r\n                    get: function () {\r\n                        return this.constructor._indexes;\r\n                    },\r\n                    enumerable: 0,\r\n                    configurable: 1,\r\n                });\r\n                Object.defineProperty(e.prototype, '_fieldsByIndex', {\r\n                    get: function () {\r\n                        return this.constructor._fieldsByIndex;\r\n                    },\r\n                    enumerable: 0,\r\n                    configurable: 1,\r\n                });\r\n                Object.defineProperty(e.prototype, '_filters', {\r\n                    get: function () {\r\n                        return this.constructor._filters;\r\n                    },\r\n                    enumerable: 0,\r\n                    configurable: 1,\r\n                });\r\n                Object.defineProperty(e.prototype, '_deprecated', {\r\n                    get: function () {\r\n                        return this.constructor._deprecated;\r\n                    },\r\n                    enumerable: 0,\r\n                    configurable: 1,\r\n                });\r\n                Object.defineProperty(e.prototype, '$changed', {\r\n                    get: function () {\r\n                        return this.$changes.changed;\r\n                    },\r\n                    enumerable: 0,\r\n                    configurable: 1,\r\n                });\r\n                e.prototype.listen = function (e, t) {\r\n                    var n = this;\r\n                    this.$listeners[e] || (this.$listeners[e] = new u.EventEmitter());\r\n                    this.$listeners[e].register(t);\r\n                    return function () {\r\n                        return n.$listeners[e].remove(t);\r\n                    };\r\n                };\r\n                e.prototype.decode = function (t, n) {\r\n                    void 0 === n && (n = { offset: 0 });\r\n                    var i = [], o = this._schema, l = this._fieldsByIndex, u = t.length;\r\n                    t[n.offset] === r.TYPE_ID && (n.offset += 2);\r\n                    for (var h = function () {\r\n                        var u = s.nilCheck(t, n) && ++n.offset, h = t[n.offset++];\r\n                        if (h === r.END_OF_STRUCTURE)\r\n                            return 'break';\r\n                        var p = l[h], f = '_' + p, g = o[p], y = void 0, v = 0;\r\n                        if (!p)\r\n                            return 'continue';\r\n                        if (u) {\r\n                            y = null;\r\n                            v = 1;\r\n                        }\r\n                        else if (g._schema) {\r\n                            ;\r\n                            (y = d[f] || d.createTypeInstance(t, n, g)).decode(t, n);\r\n                            v = 1;\r\n                        }\r\n                        else if (Array.isArray(g)) {\r\n                            g = g[0];\r\n                            var S = d[f] || new a.ArraySchema();\r\n                            y = S.clone(1);\r\n                            var b = s.number(t, n), w = Math.min(s.number(t, n), b), _ = y.length > b;\r\n                            v = w > 0 || _;\r\n                            var T = 0;\r\n                            _ &&\r\n                                Array.prototype.splice.call(y, b).forEach(function (t, n) {\r\n                                    if (t && t.onRemove)\r\n                                        try {\r\n                                            t.onRemove();\r\n                                        }\r\n                                        catch (t) {\r\n                                            e.onError(t);\r\n                                        }\r\n                                    if (S.onRemove)\r\n                                        try {\r\n                                            S.onRemove(t, b + n);\r\n                                        }\r\n                                        catch (t) {\r\n                                            e.onError(t);\r\n                                        }\r\n                                });\r\n                            for (var C = 0; C < w; C++) {\r\n                                var P = s.number(t, n), R = void 0;\r\n                                if (s.indexChangeCheck(t, n)) {\r\n                                    s.uint8(t, n);\r\n                                    R = s.number(t, n);\r\n                                    T = 1;\r\n                                }\r\n                                var E = (!T && void 0 === y[P]) || (T && void 0 === R);\r\n                                if (g.prototype instanceof e) {\r\n                                    var O = void 0;\r\n                                    if (!(O = E\r\n                                        ? d.createTypeInstance(t, n, g)\r\n                                        : void 0 !== R\r\n                                            ? S[R]\r\n                                            : S[P])) {\r\n                                        O = d.createTypeInstance(t, n, g);\r\n                                        E = 1;\r\n                                    }\r\n                                    O.decode(t, n);\r\n                                    y[P] = O;\r\n                                }\r\n                                else\r\n                                    y[P] = m(g, t, n);\r\n                                if (E) {\r\n                                    if (S.onAdd)\r\n                                        try {\r\n                                            S.onAdd(y[P], P);\r\n                                        }\r\n                                        catch (t) {\r\n                                            e.onError(t);\r\n                                        }\r\n                                }\r\n                                else if (S.onChange)\r\n                                    try {\r\n                                        S.onChange(y[P], P);\r\n                                    }\r\n                                    catch (t) {\r\n                                        e.onError(t);\r\n                                    }\r\n                            }\r\n                        }\r\n                        else if (g.map) {\r\n                            g = g.map;\r\n                            var I = d[f] || new c.MapSchema();\r\n                            y = I.clone(1);\r\n                            var A = s.number(t, n);\r\n                            v = A > 0;\r\n                            for (var T = 0, x = Object.keys(I), C = 0; C < A &&\r\n                                void 0 !== t[n.offset] &&\r\n                                t[n.offset] !== r.END_OF_STRUCTURE; C++) {\r\n                                var k = s.nilCheck(t, n) && ++n.offset, M = void 0;\r\n                                if (s.indexChangeCheck(t, n)) {\r\n                                    s.uint8(t, n);\r\n                                    M = x[s.number(t, n)];\r\n                                    T = 1;\r\n                                }\r\n                                var N = s.numberCheck(t, n), F = 'string' != typeof g, D = N ? x[s.number(t, n)] : s.string(t, n), O = void 0, E;\r\n                                O =\r\n                                    (E = (!T && void 0 === I[D]) || (T && void 0 === M && N)) &&\r\n                                        F\r\n                                        ? d.createTypeInstance(t, n, g)\r\n                                        : void 0 !== M\r\n                                            ? I[M]\r\n                                            : I[D];\r\n                                if (k) {\r\n                                    if (O && O.onRemove)\r\n                                        try {\r\n                                            O.onRemove();\r\n                                        }\r\n                                        catch (t) {\r\n                                            e.onError(t);\r\n                                        }\r\n                                    if (I.onRemove)\r\n                                        try {\r\n                                            I.onRemove(O, D);\r\n                                        }\r\n                                        catch (t) {\r\n                                            e.onError(t);\r\n                                        }\r\n                                    delete y[D];\r\n                                }\r\n                                else {\r\n                                    if (F) {\r\n                                        O.decode(t, n);\r\n                                        y[D] = O;\r\n                                    }\r\n                                    else\r\n                                        y[D] = m(g, t, n);\r\n                                    if (E) {\r\n                                        if (I.onAdd)\r\n                                            try {\r\n                                                I.onAdd(y[D], D);\r\n                                            }\r\n                                            catch (t) {\r\n                                                e.onError(t);\r\n                                            }\r\n                                    }\r\n                                    else if (I.onChange)\r\n                                        try {\r\n                                            I.onChange(y[D], D);\r\n                                        }\r\n                                        catch (t) {\r\n                                            e.onError(t);\r\n                                        }\r\n                                }\r\n                            }\r\n                        }\r\n                        else\r\n                            v = (y = m(g, t, n)) !== d[f];\r\n                        v &&\r\n                            (d.onChange || d.$listeners[p]) &&\r\n                            i.push({ field: p, value: y, previousValue: d[f] });\r\n                        d[f] = y;\r\n                    }, d = this; n.offset < u;) {\r\n                        var p;\r\n                        if ('break' === h())\r\n                            break;\r\n                    }\r\n                    this._triggerChanges(i);\r\n                    return this;\r\n                };\r\n                e.prototype.encode = function (e, t, n, i) {\r\n                    var s = this;\r\n                    void 0 === e && (e = this);\r\n                    void 0 === t && (t = 0);\r\n                    void 0 === i && (i = []);\r\n                    if (!this.$changes.changed && !t) {\r\n                        this._encodeEndOfStructure(this, e, i);\r\n                        return i;\r\n                    }\r\n                    for (var l = this._schema, u = this._indexes, h = this._fieldsByIndex, d = this._filters, m = Array.from(t ? this.$changes.allChanges : this.$changes.changes).sort(), g = function (g, v) {\r\n                        var S = h[m[g]] || m[g], b = '_' + S, w = l[S], _ = d && d[S], T = y[b], C = u[S];\r\n                        if (void 0 === T) {\r\n                            o.uint8(i, r.NIL);\r\n                            o.number(i, C);\r\n                        }\r\n                        else if (w._schema) {\r\n                            if (n && _ && !_.call(y, n, T, e))\r\n                                return 'continue';\r\n                            if (T) {\r\n                                o.number(i, C);\r\n                                p(T, w, y, S);\r\n                                y.tryEncodeTypeId(i, w, T.constructor);\r\n                                T.encode(e, t, n, i);\r\n                            }\r\n                            else {\r\n                                o.uint8(i, r.NIL);\r\n                                o.number(i, C);\r\n                            }\r\n                        }\r\n                        else if (Array.isArray(w)) {\r\n                            var P = T.$changes;\r\n                            if (n && _ && !_.call(y, n, T, e))\r\n                                return 'continue';\r\n                            o.number(i, C);\r\n                            o.number(i, T.length);\r\n                            var R = Array.from(t ? P.allChanges : P.changes)\r\n                                .filter(function (e) {\r\n                                return void 0 !== s[b][e];\r\n                            })\r\n                                .sort(function (e, t) {\r\n                                return e - t;\r\n                            }), E = R.length;\r\n                            o.number(i, E);\r\n                            var O = 'string' != typeof w[0];\r\n                            p(y[b], a.ArraySchema, y, S);\r\n                            for (var I = 0; I < E; I++) {\r\n                                var A = R[I], x = y[b][A];\r\n                                if (O) {\r\n                                    o.number(i, A);\r\n                                    if (!t) {\r\n                                        var k;\r\n                                        if (void 0 !== (k = P.getIndexChange(x))) {\r\n                                            o.uint8(i, r.INDEX_CHANGE);\r\n                                            o.number(i, k);\r\n                                        }\r\n                                    }\r\n                                    p(x, w[0], y, S);\r\n                                    y.tryEncodeTypeId(i, w[0], x.constructor);\r\n                                    x.encode(e, t, n, i);\r\n                                }\r\n                                else if (void 0 !== x) {\r\n                                    o.number(i, A);\r\n                                    f(w[0], i, x, y, S);\r\n                                }\r\n                            }\r\n                            t || n || P.discard();\r\n                        }\r\n                        else if (w.map) {\r\n                            var P = T.$changes;\r\n                            if (n && _ && !_.call(y, n, T, e))\r\n                                return 'continue';\r\n                            o.number(i, C);\r\n                            var M = Array.from(t ? P.allChanges : P.changes);\r\n                            o.number(i, M.length);\r\n                            var N = Array.from(P.allChanges), O = 'string' != typeof w.map, E = M.length;\r\n                            p(y[b], c.MapSchema, y, S);\r\n                            for (var F = 0; F < E; F++) {\r\n                                var D = M[F], x = y[b][D], U = void 0;\r\n                                if (t) {\r\n                                    if (void 0 === x)\r\n                                        continue;\r\n                                }\r\n                                else {\r\n                                    var k = P.getIndexChange(x);\r\n                                    if (x && void 0 !== k) {\r\n                                        o.uint8(i, r.INDEX_CHANGE);\r\n                                        o.number(i, y[b]._indexes.get(k));\r\n                                    }\r\n                                    U = P.isDeleted(D) && x ? void 0 : y[b]._indexes.get(D);\r\n                                }\r\n                                var j = void 0 === x;\r\n                                j && o.uint8(i, r.NIL);\r\n                                void 0 !== U ? o.number(i, U) : o.string(i, D);\r\n                                if (x && O) {\r\n                                    p(x, w.map, y, S);\r\n                                    y.tryEncodeTypeId(i, w.map, x.constructor);\r\n                                    x.encode(e, t, n, i);\r\n                                }\r\n                                else\r\n                                    j || f(w.map, i, x, y, S);\r\n                            }\r\n                            if (!t && !n) {\r\n                                P.discard();\r\n                                y[b]._updateIndexes(N);\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (n && _ && !_.call(y, n, T, e))\r\n                                return 'continue';\r\n                            o.number(i, C);\r\n                            f(w, i, T, y, S);\r\n                        }\r\n                    }, y = this, v = 0, S = m.length; v < S; v++)\r\n                        g(v, S);\r\n                    this._encodeEndOfStructure(this, e, i);\r\n                    t || n || this.$changes.discard();\r\n                    return i;\r\n                };\r\n                e.prototype.encodeFiltered = function (e, t) {\r\n                    return this.encode(this, 0, e, t);\r\n                };\r\n                e.prototype.encodeAll = function (e) {\r\n                    return this.encode(this, 1, void 0, e);\r\n                };\r\n                e.prototype.encodeAllFiltered = function (e, t) {\r\n                    return this.encode(this, 1, e, t);\r\n                };\r\n                e.prototype.clone = function () {\r\n                    var e = new this.constructor(), t = this._schema;\r\n                    for (var n in t)\r\n                        'object' == typeof this[n] && 'function' == typeof this[n].clone\r\n                            ? (e[n] = this[n].clone())\r\n                            : (e[n] = this[n]);\r\n                    return e;\r\n                };\r\n                e.prototype.triggerAll = function () {\r\n                    var t = [], n = this._schema;\r\n                    for (var i in n)\r\n                        void 0 !== this[i] &&\r\n                            t.push({ field: i, value: this[i], previousValue: void 0 });\r\n                    try {\r\n                        this._triggerChanges(t);\r\n                    }\r\n                    catch (t) {\r\n                        e.onError(t);\r\n                    }\r\n                };\r\n                e.prototype.toJSON = function () {\r\n                    var e = this._schema, t = this._deprecated, n = {};\r\n                    for (var i in e)\r\n                        t[i] ||\r\n                            null === this[i] ||\r\n                            'undefined' == typeof this[i] ||\r\n                            (n[i] =\r\n                                'function' == typeof this[i].toJSON\r\n                                    ? this[i].toJSON()\r\n                                    : this['_' + i]);\r\n                    return n;\r\n                };\r\n                e.prototype.discardAllChanges = function () {\r\n                    var t = this._schema, n = Array.from(this.$changes.changes), i = this._fieldsByIndex;\r\n                    for (var r in n) {\r\n                        var o = i[r], s = t[o], a = this[o];\r\n                        if (void 0 !== a)\r\n                            if (s._schema)\r\n                                a.discardAllChanges();\r\n                            else if (Array.isArray(s)) {\r\n                                for (var c = 0, l = a.length; c < l; c++) {\r\n                                    var u = a[c], h = this['_' + o][u];\r\n                                    'string' != typeof s[0] && h && h.discardAllChanges();\r\n                                }\r\n                                a.$changes.discard();\r\n                            }\r\n                            else if (s.map) {\r\n                                for (var d = a, p = Object.keys(this['_' + o]), c = 0; c < d.length; c++) {\r\n                                    var f = p[d[c]] || d[c], h;\r\n                                    (h = this['_' + o][f]) instanceof e &&\r\n                                        h &&\r\n                                        h.discardAllChanges();\r\n                                }\r\n                                a.$changes.discard();\r\n                            }\r\n                    }\r\n                    this.$changes.discard();\r\n                };\r\n                e.prototype._encodeEndOfStructure = function (e, t, n) {\r\n                    e !== t && n.push(r.END_OF_STRUCTURE);\r\n                };\r\n                e.prototype.tryEncodeTypeId = function (e, t, n) {\r\n                    if (t._typeid !== n._typeid) {\r\n                        o.uint8(e, r.TYPE_ID);\r\n                        o.uint8(e, n._typeid);\r\n                    }\r\n                };\r\n                e.prototype.createTypeInstance = function (e, t, n) {\r\n                    if (e[t.offset] === r.TYPE_ID) {\r\n                        t.offset++;\r\n                        var i;\r\n                        return new (this.constructor._context.get(s.uint8(e, t)))();\r\n                    }\r\n                    return new n();\r\n                };\r\n                e.prototype._triggerChanges = function (t) {\r\n                    if (t.length > 0) {\r\n                        for (var n = 0; n < t.length; n++) {\r\n                            var i = t[n], r = this.$listeners[i.field];\r\n                            if (r)\r\n                                try {\r\n                                    r.invoke(i.value, i.previousValue);\r\n                                }\r\n                                catch (t) {\r\n                                    e.onError(t);\r\n                                }\r\n                        }\r\n                        if (this.onChange)\r\n                            try {\r\n                                this.onChange(t);\r\n                            }\r\n                            catch (t) {\r\n                                e.onError(t);\r\n                            }\r\n                    }\r\n                };\r\n                return e;\r\n            })();\r\n            t.Schema = g;\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.removeVideoPanel = t.reproduceVideo = void 0;\r\n            var i = new Transform({\r\n                position: new Vector3(0, 1.975, -0.001),\r\n                scale: new Vector3(-5.95, 3.95, 1),\r\n            }), r = new Entity();\r\n            r.addComponent(i);\r\n            t.reproduceVideo = function (e, t) {\r\n                var n = '' + (engine['RESOURCE_BASE'] || globalThis['RESOURCE_BASE'] || ''), i = new VideoClip(n + \"video/\" + t + \".mp4\"), o = new VideoTexture(i), s = new Material();\r\n                s.transparencyMode = 1;\r\n                s.specularIntensity = 1;\r\n                s.roughness = 1;\r\n                s.albedoTexture = o;\r\n                var a = new PlaneShape();\r\n                a.withCollisions = a.isPointerBlocker = 0;\r\n                r.addComponentOrReplace(a);\r\n                r.addComponentOrReplace(s);\r\n                r.setParent(e);\r\n                o.playing = 1;\r\n                o.loop = 1;\r\n            };\r\n            t.removeVideoPanel = function () {\r\n                r.setParent(null);\r\n                engine.removeEntity(r);\r\n            };\r\n        },\r\n        function (e, t, n) {\r\n            var i = (this && this.__decorate) ||\r\n                function (e, t, n, i) {\r\n                    var r = arguments.length, o = r < 3\r\n                        ? t\r\n                        : null === i\r\n                            ? (i = Object.getOwnPropertyDescriptor(t, n))\r\n                            : i, s;\r\n                    if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)\r\n                        o = Reflect.decorate(e, t, n, i);\r\n                    else\r\n                        for (var a = e.length - 1; a >= 0; a--)\r\n                            (s = e[a]) &&\r\n                                (o = (r < 3 ? s(o) : r > 3 ? s(t, n, o) : s(t, n)) || o);\r\n                    return r > 3 && o && Object.defineProperty(t, n, o), o;\r\n                };\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.BaseGame = t.GameScene = void 0;\r\n            var r = /** @class */ (function () {\r\n                function e() {\r\n                }\r\n                return e;\r\n            }());\r\n            r = i([Component('game_scene')], r);\r\n            t.GameScene = r;\r\n            var o = /** @class */ (function () {\r\n                function o() {\r\n                    this.entity = {};\r\n                    this.callbacks = { onFinish: null, onShareState: null };\r\n                    var e = engine.getEntitiesWithComponent('game_scene');\r\n                    void 0;\r\n                    Object.keys(e).forEach(function (t) {\r\n                        engine.removeEntity(e[t]);\r\n                    });\r\n                }\r\n                o.prototype.init = function () { };\r\n                o.prototype.destroy = function () { };\r\n                o.prototype.block = function () { };\r\n                o.prototype.onFinish = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onFinish = e;\r\n                    return function () { return (_this.callbacks.onFinish = null); };\r\n                };\r\n                o.prototype.onShareState = function () { };\r\n                o.prototype.shareState = function (e) { };\r\n                o.prototype.update = function (e) { };\r\n                return o;\r\n            }());\r\n            t.BaseGame = o;\r\n        },\r\n        function (e, t, n) {\r\n            var i = (this && this.__decorate) ||\r\n                function (e, t, n, i) {\r\n                    var r = arguments.length, o = r < 3\r\n                        ? t\r\n                        : null === i\r\n                            ? (i = Object.getOwnPropertyDescriptor(t, n))\r\n                            : i, s;\r\n                    if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)\r\n                        o = Reflect.decorate(e, t, n, i);\r\n                    else\r\n                        for (var a = e.length - 1; a >= 0; a--)\r\n                            (s = e[a]) &&\r\n                                (o = (r < 3 ? s(o) : r > 3 ? s(t, n, o) : s(t, n)) || o);\r\n                    return r > 3 && o && Object.defineProperty(t, n, o), o;\r\n                };\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.MoveTransformComponent = void 0;\r\n            var r = n(7), o = n(12);\r\n            var s = /** @class */ (function () {\r\n                function e(e, t, n, i, s) {\r\n                    if (s === void 0) { s = o.InterpolationType.LINEAR; }\r\n                    this.start = e;\r\n                    this.end = t;\r\n                    this.normalizedTime = 0;\r\n                    this.lerpTime = 0;\r\n                    this.onFinishCallback = i;\r\n                    this.interpolationType = s;\r\n                    if (0 != n)\r\n                        this.speed = 1 / n;\r\n                    else {\r\n                        this.speed = 0;\r\n                        this.normalizedTime = 1;\r\n                        this.lerpTime = 1;\r\n                    }\r\n                    r.TransformSystem.createAndAddToEngine();\r\n                }\r\n                e.prototype.update = function (e) {\r\n                    this.normalizedTime = Scalar.Clamp(this.normalizedTime + e * this.speed, 0, 1);\r\n                    this.lerpTime = o.Interpolate(this.interpolationType, this.normalizedTime);\r\n                };\r\n                e.prototype.hasFinished = function () {\r\n                    return this.normalizedTime >= 1;\r\n                };\r\n                e.prototype.assignValueToTransform = function (e) {\r\n                    e.position = Vector3.Lerp(this.start, this.end, this.lerpTime);\r\n                };\r\n                return e;\r\n            }());\r\n            s = i([Component('moveTransformComponent')], s);\r\n            t.MoveTransformComponent = s;\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.TimerSystem = void 0;\r\n            var i = n(30), r = n(29), o = n(31);\r\n            var s = /** @class */ (function () {\r\n                function s() {\r\n                    this._components = [];\r\n                    s._instance = this;\r\n                    this._components.push(i.Interval);\r\n                    this._components.push(r.Delay);\r\n                    this._components.push(o.ExpireIn);\r\n                }\r\n                s.createAndAddToEngine = function () {\r\n                    if (null == this._instance) {\r\n                        this._instance = new s();\r\n                        engine.addSystem(this._instance);\r\n                    }\r\n                    return this._instance;\r\n                };\r\n                s.registerCustomComponent = function (e) {\r\n                    this.createAndAddToEngine()._components.push(e);\r\n                };\r\n                s.prototype.update = function (e) {\r\n                    var _this = this;\r\n                    this._components.forEach(function (t) {\r\n                        _this.updateComponent(e, t);\r\n                    });\r\n                };\r\n                s.prototype.updateComponent = function (e, t) {\r\n                    var n = engine.getEntitiesWithComponent(t);\r\n                    for (var i_1 in n)\r\n                        if (n.hasOwnProperty(i_1)) {\r\n                            var r_1 = n[i_1], o_1 = r_1.getComponent(t);\r\n                            o_1.elapsedTime += e;\r\n                            o_1.elapsedTime >= o_1.targetTime && o_1.onTargetTimeReached(r_1);\r\n                        }\r\n                };\r\n                return s;\r\n            }());\r\n            t.TimerSystem = s;\r\n            s._instance = null;\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.HTTP_HOST = t.WS_HOST = void 0;\r\n            t.WS_HOST = 'ws://localhost:2567';\r\n            t.HTTP_HOST = 'http://localhost:2567';\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.getHostData = t.setHostData = void 0;\r\n            var i = null;\r\n            t.setHostData = function (e) {\r\n                i = e;\r\n            };\r\n            t.getHostData = function () { return i; };\r\n        },\r\n        function (e, t, n) {\r\n            var i = (this && this.__importDefault) ||\r\n                function (e) {\r\n                    return e && e.__esModule ? e : { default: e };\r\n                };\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.generateTrack = void 0;\r\n            var r = n(21), o = i(n(23)), s = n(34), a = n(33), c = n(24), l = n(35), u = n(3), h = n(36), d = n(32);\r\n            function p(e, t) {\r\n                var n = u.seedGen.create(e.toString()), i = t, r = Object.values(o.default);\r\n                var s = [];\r\n                for (; s.length < i;) {\r\n                    var e_5 = a(0, r.length - 1, s.map(function (e) { return r.indexOf(e); }));\r\n                    s.push(r[e_5]);\r\n                    s = Array.from(new Set(s));\r\n                }\r\n                void 0;\r\n                return s.map(function (e, t) { return ({ Game: e }); });\r\n                function a(e, t, i) {\r\n                    var r = Math.floor(n.random() * (t + 1 - e));\r\n                    if (!i)\r\n                        return r;\r\n                    for (; ~i.indexOf(r);)\r\n                        r = e + Math.floor(n.random() * (t + 1 - e));\r\n                    return r;\r\n                }\r\n            }\r\n            t.generateTrack = p;\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.CostumeGame = void 0;\r\n            var i = n(3), r = n(15), o = n(56), s = n(61), a = n(62), c = n(9), l = n(4), u = n(2), h = n(5), d = n(0), p = 3;\r\n            var f = /** @class */ (function () {\r\n                function f(e, _a) {\r\n                    var t = _a.seed, n = _a.currentPlayer, c = _a.level, l = _a.gameIndex;\r\n                    this.state = {\r\n                        startTime: Number.MAX_VALUE,\r\n                        roundStartTime: Number.MAX_VALUE,\r\n                        lastRoundStartTime: Number.MAX_VALUE,\r\n                        waitingRound: 0,\r\n                        round: 0,\r\n                        score1: 0,\r\n                        score2: 0,\r\n                        started: 0,\r\n                        finished: 0,\r\n                        blocked: 0,\r\n                        idle: 1,\r\n                    };\r\n                    this.entity = {};\r\n                    this.completion = { hair: 0, glasses: 0, shirt: 0, pants: 0 };\r\n                    this.callbacks = {\r\n                        onFinish: null,\r\n                        onShareState: null,\r\n                        onFinishRound: null,\r\n                    };\r\n                    this.root = e;\r\n                    this.gameSetup = { currentPlayer: n, seed: t, level: c, gameIndex: l };\r\n                    this.randomizer = i.seedGen.create(t.toString());\r\n                    this.scene = new Entity();\r\n                    this.scene.addComponent(new r.GameScene());\r\n                    this.scene.addComponent(new Transform({ position: new Vector3(0, 0, -0.002) }));\r\n                    this.ui = h.createUI(this.scene);\r\n                    var u = (this.modelDefinition = {\r\n                        hair: this.getRandomInt(1, 10),\r\n                        shirt: this.getRandomInt(1, 5),\r\n                        pants: this.getRandomInt(1, 5),\r\n                        glasses: this.getRandomInt(1, 5),\r\n                    }), d = -0.05;\r\n                    this.entity.model = o.createModel(this.scene, {\r\n                        modelDefinition: u,\r\n                        position: new Vector3(0 + d, 2, 0),\r\n                        scale: new Vector3(1.5, 1.5, 1),\r\n                        showLabel: 'model',\r\n                    });\r\n                    this.dollModel1 = o.createModel(this.scene, {\r\n                        modelDefinition: { hair: 0, shirt: 0, pants: 0, glasses: 0 },\r\n                        position: new Vector3(-1.5 + d, 2, 0),\r\n                        scale: new Vector3(1.5, 1.5, 1),\r\n                    });\r\n                    this.dollModel2 = o.createModel(this.scene, {\r\n                        modelDefinition: { hair: 0, shirt: 0, pants: 0, glasses: 0 },\r\n                        position: new Vector3(1.5 + d, 2, 0),\r\n                        scale: new Vector3(1.5, 1.5, 1),\r\n                    });\r\n                    this.collection = s.createCollection(this.getRandomInt.bind(this), u);\r\n                    void 0;\r\n                    void 0;\r\n                    this.collection.forEach(function (e) {\r\n                        if (!e)\r\n                            debugger;\r\n                    });\r\n                    try {\r\n                        void 0;\r\n                        n &&\r\n                            (this.collectionControl = a.createCollectionControl(this.scene, {\r\n                                collection: this.collection,\r\n                                side: n,\r\n                            }));\r\n                    }\r\n                    catch (e) {\r\n                        debugger;\r\n                    }\r\n                    this.roundResult1 = h.createRoundResult(this.scene, { player: 1 });\r\n                    this.roundResult2 = h.createRoundResult(this.scene, { player: 2 });\r\n                    this.roundResult1.hide();\r\n                    this.roundResult2.hide();\r\n                    this.primaryButtonCallback = this.primaryButtonCallback.bind(this);\r\n                    this.secondaryButtonCallback = this.secondaryButtonCallback.bind(this);\r\n                    this.clickCallback = this.clickCallback.bind(this);\r\n                    engine.addSystem(this);\r\n                }\r\n                f.prototype.setStartTime = function (e) {\r\n                    this.state.startTime = e;\r\n                };\r\n                f.prototype.init = function () {\r\n                    u.playLoop('money', { volume: 0.5 });\r\n                    l.updateSpritePanel({ uvs: d.getSpriteUv(5, 0, 192, 128) });\r\n                    l.showSpritePanel();\r\n                    this.state.initialized = 1;\r\n                };\r\n                f.prototype.start = function () {\r\n                    this.scene.setParent(this.root);\r\n                    this.state.started = 1;\r\n                    if (this.gameSetup.currentPlayer) {\r\n                        Input.instance.subscribe('BUTTON_DOWN', ActionButton.PRIMARY, 0, this.primaryButtonCallback);\r\n                        Input.instance.subscribe('BUTTON_DOWN', ActionButton.SECONDARY, 0, this.secondaryButtonCallback);\r\n                        Input.instance.subscribe('BUTTON_DOWN', ActionButton.POINTER, 0, this.clickCallback);\r\n                    }\r\n                };\r\n                f.prototype.startRound = function () {\r\n                    var _this = this;\r\n                    this.state.round++;\r\n                    void 0;\r\n                    this.roundResult1.hide();\r\n                    this.roundResult2.hide();\r\n                    this.ui.hideTime();\r\n                    this.state.blocked = 0;\r\n                    this.state.lastRoundStartTime = this.state.roundStartTime;\r\n                    this.state.roundStartTime = Number.MAX_VALUE;\r\n                    this.state.waitingRound = 0;\r\n                    var e = (this.modelDefinition = {\r\n                        hair: this.getRandomInt(1, 10),\r\n                        shirt: this.getRandomInt(1, 5),\r\n                        pants: this.getRandomInt(1, 5),\r\n                        glasses: this.getRandomInt(1, 5),\r\n                    });\r\n                    Object.keys(e).forEach(function (t) {\r\n                        _this.entity.model.update({ type: t, index: e[t] });\r\n                        _this.dollModel1.update({ type: t, index: 0 });\r\n                        _this.dollModel2.update({ type: t, index: 0 });\r\n                        _this.completion[t] = 0;\r\n                    });\r\n                    this.collection = s.createCollection(this.getRandomInt.bind(this), e);\r\n                    this.gameSetup.currentPlayer &&\r\n                        (this.collectionControl = a.createCollectionControl(this.scene, {\r\n                            collection: this.collection,\r\n                            side: this.gameSetup.currentPlayer,\r\n                        }));\r\n                };\r\n                f.prototype.block = function () {\r\n                    this.state.blocked = 1;\r\n                };\r\n                f.prototype.finish = function (_a) {\r\n                    var e = _a.winner;\r\n                    void 0;\r\n                    var t = 1 === e ? 2 : 1;\r\n                    this.roundResult1.show();\r\n                    this.roundResult2.show();\r\n                    this['roundResult' + e].update(1);\r\n                    this['roundResult' + t].update(0);\r\n                };\r\n                f.prototype.finishRound = function (_a) {\r\n                    var _this = this;\r\n                    var e = _a.winner;\r\n                    void 0;\r\n                    this.state.blocked = 1;\r\n                    this.state['score' + e] += 1;\r\n                    this.ui.updateScore({ player: e, score: this.state['score' + e] });\r\n                    e === this.gameSetup.currentPlayer\r\n                        ? u.playOnce('wow')\r\n                        : u.playOnce('fail');\r\n                    this.state.waitingRound = 1;\r\n                    this.collectionControl && this.collectionControl.dispose();\r\n                    Object.keys(this.modelDefinition).forEach(function (e) {\r\n                        _this.entity.model.update({ type: e, index: 0 });\r\n                    });\r\n                    var t = 1 === e ? 2 : 1;\r\n                    this.roundResult1.show();\r\n                    this.roundResult2.show();\r\n                    this['roundResult' + e].update(1);\r\n                    this['roundResult' + t].update(0);\r\n                };\r\n                f.prototype.onFinish = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onFinish = e;\r\n                    return function () { return (_this.callbacks.onFinish = null); };\r\n                };\r\n                f.prototype.onFinishRound = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onFinishRound = e;\r\n                    return function () { return (_this.callbacks.onFinishRound = null); };\r\n                };\r\n                f.prototype.onShareState = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onShareState = e;\r\n                    return function () { return (_this.callbacks.onShareState = null); };\r\n                };\r\n                f.prototype.setRoundStartTime = function (e) {\r\n                    this.state.roundStartTime = e;\r\n                };\r\n                f.prototype.shareState = function (_a) {\r\n                    var _this = this;\r\n                    var e = _a.player, t = _a.completion, n = _a.timeSinceStart;\r\n                    Object.keys(t).forEach(function (n) {\r\n                        t[n] &&\r\n                            _this['dollModel' + e].update({\r\n                                type: n,\r\n                                index: _this.modelDefinition[n],\r\n                            });\r\n                    });\r\n                    n && this.ui.updateTime({ player: e, time: n });\r\n                };\r\n                f.prototype.clickCallback = function () {\r\n                    var _this = this;\r\n                    if (this.state.blocked)\r\n                        return;\r\n                    void 0;\r\n                    var e = this.collectionControl.getCurrent();\r\n                    if (!e)\r\n                        debugger;\r\n                    if (this.modelDefinition[e.type] === e.index) {\r\n                        void 0;\r\n                        u.playOnce('ok');\r\n                        this['dollModel' + this.gameSetup.currentPlayer].update(e);\r\n                        this.completion[e.type] = 1;\r\n                        if (Object.values(this.completion).every(function (e) { return e; })) {\r\n                            void 0;\r\n                            var e_6 = c.getTimeSinceStart(0 === this.state.round\r\n                                ? this.state.startTime\r\n                                : this.state.lastRoundStartTime);\r\n                            this.ui.updateTime({\r\n                                player: this.gameSetup.currentPlayer,\r\n                                time: e_6,\r\n                            });\r\n                            this.callbacks.onShareState({\r\n                                player: this.gameSetup.currentPlayer,\r\n                                completion: this.completion,\r\n                                timeSinceStart: e_6,\r\n                            });\r\n                            this.state.round < p - 1\r\n                                ? this.callbacks.onFinishRound({\r\n                                    time: e_6,\r\n                                    player: this.gameSetup.currentPlayer,\r\n                                    gameIndex: this.gameSetup.gameIndex,\r\n                                    roundIndex: this.state.round,\r\n                                })\r\n                                : this.callbacks.onFinish({\r\n                                    time: e_6,\r\n                                    isWinner: this.gameSetup.currentPlayer,\r\n                                    gameIndex: this.gameSetup.gameIndex,\r\n                                    roundIndex: this.state.round,\r\n                                });\r\n                        }\r\n                        else\r\n                            this.callbacks.onShareState({\r\n                                player: this.gameSetup.currentPlayer,\r\n                                completion: this.completion,\r\n                            });\r\n                    }\r\n                    else {\r\n                        void 0;\r\n                        u.playOnce('fail');\r\n                        this.state.blocked = 1;\r\n                        this.collectionControl.showError();\r\n                        setTimeout(function () {\r\n                            _this.collectionControl.hideError();\r\n                            _this.state.blocked = 0;\r\n                        }, 500);\r\n                    }\r\n                };\r\n                f.prototype.primaryButtonCallback = function () {\r\n                    this.state.blocked || this.collectionControl.previous();\r\n                };\r\n                f.prototype.secondaryButtonCallback = function () {\r\n                    this.state.blocked || this.collectionControl.next();\r\n                };\r\n                f.prototype.destroy = function () {\r\n                    u.stopSound('money');\r\n                    l.hideSpritePanel();\r\n                    this.scene.setParent(null);\r\n                    engine.removeEntity(this.scene);\r\n                    engine.removeSystem(this);\r\n                    Input.instance.unsubscribe('BUTTON_DOWN', ActionButton.PRIMARY, this.primaryButtonCallback);\r\n                    Input.instance.unsubscribe('BUTTON_DOWN', ActionButton.SECONDARY, this.secondaryButtonCallback);\r\n                    Input.instance.unsubscribe('BUTTON_DOWN', ActionButton.POINTER, this.clickCallback);\r\n                };\r\n                f.prototype.update = function (e) {\r\n                    if (this.state.initialized) {\r\n                        !this.state.waitingRound &&\r\n                            !this.state.started &&\r\n                            Date.now() >= this.state.startTime &&\r\n                            this.start();\r\n                        this.state.started &&\r\n                            this.state.waitingRound &&\r\n                            Date.now() >= this.state.roundStartTime &&\r\n                            this.startRound();\r\n                    }\r\n                };\r\n                f.prototype.getRandomInt = function (e, t, n) {\r\n                    var i = e + Math.floor(this.randomizer.random() * (t - e + 1));\r\n                    return i === n ? this.getRandomInt(e, t, n) : i;\r\n                };\r\n                return f;\r\n            }());\r\n            t.CostumeGame = f;\r\n            f.id = 'Costume';\r\n            f.instructions =\r\n                'You have to complete the costume\\n    before your opponent\\n    E,F to roll parts\\n    CLICK to select';\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.createCross = void 0;\r\n            var i = n(1), r = n(0);\r\n            t.createCross = function (e, _a) {\r\n                var t = _a.position, n = _a.scale;\r\n                var o = new Entity(), s = new PlaneShape();\r\n                s.withCollisions = 0;\r\n                o.addComponent(i.spriteMaterial);\r\n                s.uvs = r.getSpriteUv(993, 0, 32);\r\n                o.addComponent(s);\r\n                var a = new Transform({ position: t, scale: n });\r\n                o.addComponent(a);\r\n                o.setParent(e);\r\n                return {\r\n                    dispose: function () {\r\n                        o.setParent(null);\r\n                        engine.removeEntity(o);\r\n                        o.removeComponent(i.spriteMaterial);\r\n                        o.removeComponent(a);\r\n                        o.removeComponent(s);\r\n                    },\r\n                    hide: function () {\r\n                        s.visible = 0;\r\n                    },\r\n                    show: function () {\r\n                        s.visible = 1;\r\n                    },\r\n                    setPosition: function (_a) {\r\n                        var e = _a.x, t = _a.y, n = _a.z;\r\n                        a.position.set(e, t, n);\r\n                    },\r\n                };\r\n            };\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            var i = n(24), r = n(32), o = n(21), s = n(33), a = n(34), c = n(68), l = n(35), u = n(36);\r\n            t.default = {\r\n                DifferentGame: l.DifferentGame,\r\n                AttackGame: r.AttackGame,\r\n                RotationGame: i.RotationGame,\r\n                CostumeGame: o.CostumeGame,\r\n                ObstacleGame: s.ObstacleGame,\r\n                MathGame: a.MathGame,\r\n                SammichGame: c.SammichGame,\r\n                FroggerGame: u.FroggerGame,\r\n            };\r\n        },\r\n        function (e, t, n) {\r\n            var i = (this && this.__importDefault) ||\r\n                function (e) {\r\n                    return e && e.__esModule ? e : { default: e };\r\n                };\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.RotationGame = void 0;\r\n            var r = i(n(63)), o = n(3), s = n(15), a = n(9), c = n(1), l = n(4), u = n(2), h = n(0), d = n(5), p = 5;\r\n            var f = /** @class */ (function () {\r\n                function f(e, _a) {\r\n                    var _this = this;\r\n                    var t = _a.currentPlayer, n = _a.seed, _b = _a.level, i = _b === void 0 ? 1 : _b, r = _a.gameIndex;\r\n                    this.state = {\r\n                        startTime: Number.MAX_VALUE,\r\n                        roundStartTime: Number.MAX_VALUE,\r\n                        lastRoundStartTime: Number.MAX_VALUE,\r\n                        waitingRound: 0,\r\n                        started: 0,\r\n                        roundStarted: 0,\r\n                        round: 0,\r\n                        finished: 0,\r\n                        score1: 0,\r\n                        score2: 0,\r\n                        idle: 1,\r\n                        currentRotation: 0,\r\n                        answered: 0,\r\n                    };\r\n                    this.entity = {};\r\n                    this.callbacks = {\r\n                        onFinish: null,\r\n                        onShareState: null,\r\n                        onFinishRound: null,\r\n                    };\r\n                    this.root = e;\r\n                    this.gameSetup = { currentPlayer: t, seed: n, level: i, gameIndex: r };\r\n                    this.randomizer = o.seedGen.create(n.toString());\r\n                    this.scene = new Entity();\r\n                    this.scene.addComponent(new Transform({ position: new Vector3(0, 0, -0.002) }));\r\n                    this.ui = d.createUI(this.scene);\r\n                    this.scene.addComponent(new s.GameScene());\r\n                    this.player1 = d.createPlayerAnswer(this.scene, { player: 1 });\r\n                    this.player2 = d.createPlayerAnswer(this.scene, { player: 2 });\r\n                    this.player1.hide();\r\n                    this.player2.hide();\r\n                    this.roundResult1 = d.createRoundResult(this.scene, { player: 1 });\r\n                    this.roundResult2 = d.createRoundResult(this.scene, { player: 2 });\r\n                    this.roundResult1.hide();\r\n                    this.roundResult2.hide();\r\n                    var a = (this.entity.image = new Entity()), l = undefined;\r\n                    m((this.entity.box = new Entity()), c.spriteMaterial, h.getSpriteUv(10, 144, 64, 64));\r\n                    m(a, c.spriteMaterial, h.getSpriteUv(9, 144, 64, 64));\r\n                    this.state.rotationSerie = this.getRotationSerie(this.gameSetup.level);\r\n                    this.state.solution = this.state.rotationSerie.reduce(function (e, t) { return e + t; }, 0);\r\n                    var u = (this.state.correctSolution = this.getRandomInt(1, 3));\r\n                    this.state.solutions = [1, 2, 3].map(function (e) {\r\n                        return e === u\r\n                            ? _this.state.solution\r\n                            : 90 * _this.getRandomInt(1, 4, _this.state.solution / 90);\r\n                    });\r\n                    this.entity.solutions = this.state.solutions.map(function (e, t) {\r\n                        var n = new Entity();\r\n                        _this.buildSolution(n, t, e);\r\n                        n.setParent(_this.scene);\r\n                        return n;\r\n                    });\r\n                    engine.addSystem(this);\r\n                    this.onClickAnswer = this.onClickAnswer.bind(this);\r\n                    this.buildSolution = this.buildSolution.bind(this);\r\n                }\r\n                f.prototype.setStartTime = function (e) {\r\n                    this.state.startTime = e;\r\n                };\r\n                f.prototype.setRoundStartTime = function (e) {\r\n                    this.state.roundStartTime = e;\r\n                };\r\n                f.prototype.reset = function () { };\r\n                f.prototype.getRotationSerie = function (e) {\r\n                    var t = 3;\r\n                    e >= 3 && e < 5 ? (t = 4) : e >= 5 && (t = 5);\r\n                    var n = t;\r\n                    var i = [];\r\n                    for (; n--;) {\r\n                        var e_7 = this.randomizer.random();\r\n                        i.push(Math.floor(2 * e_7) ? 90 : -90);\r\n                    }\r\n                    return i;\r\n                };\r\n                f.prototype.finish = function (_a) {\r\n                    var e = _a.winner;\r\n                    this.state.blocked = 1;\r\n                    var t = 1 === e ? 2 : 1;\r\n                    e === this.gameSetup.currentPlayer\r\n                        ? u.playOnce('wow')\r\n                        : u.playOnce('fail');\r\n                    this.roundResult1.show();\r\n                    this.roundResult2.show();\r\n                    this['roundResult' + e].update(1);\r\n                    this['roundResult' + t].update(0);\r\n                };\r\n                f.prototype.finishRound = function (_a) {\r\n                    var e = _a.winner;\r\n                    this.state.blocked = 1;\r\n                    var t = 1 === e ? 2 : 1;\r\n                    this.state['score' + e] += 1;\r\n                    this.ui.updateScore({ player: e, score: this.state['score' + e] });\r\n                    e === this.gameSetup.currentPlayer\r\n                        ? u.playOnce('wow')\r\n                        : u.playOnce('fail');\r\n                    this.entity.box.getComponent(Transform).rotation.setEuler(0, 0, 0);\r\n                    this.entity.box.getComponent(PlaneShape).visible = 0;\r\n                    this.entity.image.getComponent(PlaneShape).visible = 1;\r\n                    this['roundResult' + e].update(1);\r\n                    this['roundResult' + t].update(0);\r\n                    this.roundResult1.show();\r\n                    this.roundResult2.show();\r\n                    this.state.waitingRound = 1;\r\n                };\r\n                f.prototype.shareState = function (e) {\r\n                    this.state.shared = e;\r\n                    var t = e.round;\r\n                    if (t === this.state.round &&\r\n                        'election' === e.type &&\r\n                        e.player !== this.gameSetup.currentPlayer) {\r\n                        var _a = this.entity.solutions[e.election - 1].getComponent(Transform).position, t_1 = _a.x, n_1 = _a.y, i_2 = _a.z, r_2 = this.getIsWinner(this.state, e.election);\r\n                        this['player' + e.player].wrapperEntity\r\n                            .getComponent(Transform)\r\n                            .position.set(t_1 + (1 === e.player ? -0.3 : 0.3), n_1, i_2);\r\n                        this['player' + e.player].show();\r\n                        this['player' + e.player].setSprite(r_2);\r\n                        this.ui.updateTime({ player: e.player, time: e.timeSinceAnswers });\r\n                    }\r\n                };\r\n                f.prototype.onShareState = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onShareState = e;\r\n                    return function () { return (_this.callbacks.onShareState = null); };\r\n                };\r\n                f.prototype.init = function () {\r\n                    u.playLoop('money', { volume: 0.5 });\r\n                    l.updateSpritePanel({ uvs: h.getSpriteUv(2, 0, 192, 128) });\r\n                    l.showSpritePanel();\r\n                    this.entity.image.setParent(this.scene);\r\n                    this.entity.box.setParent(this.scene);\r\n                    this.entity.box.getComponent(PlaneShape).visible = 0;\r\n                    this.state.initialized = 1;\r\n                    this.scene.setParent(this.root);\r\n                };\r\n                f.prototype.destroy = function () {\r\n                    u.stopSound('money');\r\n                    l.hideSpritePanel();\r\n                    this.scene.setParent(null);\r\n                    engine.removeEntity(this.scene);\r\n                    engine.removeSystem(this);\r\n                    this.callbacks.onFinish = null;\r\n                    this.callbacks.onShareState = null;\r\n                };\r\n                f.prototype.update = function (e) {\r\n                    if (!this.state.initialized)\r\n                        return;\r\n                    var t = this.state.round < 2 ? 0.4 : this.state.round < 3 ? 0.3 : 0.2, n = 0.2;\r\n                    if (!this.state.started && Date.now() >= this.state.startTime)\r\n                        this.start(e);\r\n                    else if (!this.state.started ||\r\n                        this.state.waitingRound ||\r\n                        this.state.roundStarted) {\r\n                        if (this.state.started &&\r\n                            !this.state.waitingRound &&\r\n                            this.state.roundStarted) {\r\n                            this.state.nextTime += e;\r\n                            if (this.state.nextTime >= t + n) {\r\n                                this.state.nextTime = 0;\r\n                                if (this.state.currentRotation < this.state.rotationSerie.length) {\r\n                                    var e_8 = Quaternion.Euler(0, 0, 0), n_2 = Quaternion.Euler(0, 0, this.state.rotationSerie[this.state.currentRotation]);\r\n                                    u.playOnce('swing');\r\n                                    this.entity.box.addComponentOrReplace(new r.default.RotateTransformComponent(e_8, n_2, t));\r\n                                    this.state.nextTime = 0;\r\n                                    this.state.currentRotation++;\r\n                                    this.entity.solutions.forEach(function (e) { return (e.getComponent(PlaneShape).visible = 0); });\r\n                                    this.state.answersShown = 0;\r\n                                }\r\n                                else if (!this.state.waitingRound && !this.state.answersShown) {\r\n                                    this.state.blocked = 0;\r\n                                    this.state.answersShown = 1;\r\n                                    this.state.shownAnswersTime = Date.now();\r\n                                    this.entity.solutions.forEach(function (e) { return (e.getComponent(PlaneShape).visible = 1); });\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.state.nextTime += e;\r\n                        if (this.state.nextTime >= t + n) {\r\n                            this.state.nextTime = 0;\r\n                            if (this.state.currentRotation < this.state.rotationSerie.length) {\r\n                                var e_9 = Quaternion.Euler(0, 0, 0), n_3 = Quaternion.Euler(0, 0, this.state.rotationSerie[this.state.currentRotation]);\r\n                                u.playOnce('swing');\r\n                                this.entity.box.addComponentOrReplace(new r.default.RotateTransformComponent(e_9, n_3, t));\r\n                                this.state.nextTime = 0;\r\n                                this.state.currentRotation++;\r\n                                this.entity.solutions.forEach(function (e) { return (e.getComponent(PlaneShape).visible = 0); });\r\n                                this.state.answersShown = 0;\r\n                            }\r\n                            else if (!this.state.waitingRound && !this.state.answersShown) {\r\n                                this.state.answersShown = 1;\r\n                                this.state.shownAnswersTime = Date.now();\r\n                                this.entity.solutions.forEach(function (e) { return (e.getComponent(PlaneShape).visible = 1); });\r\n                            }\r\n                        }\r\n                    }\r\n                    this.state.started &&\r\n                        this.state.waitingRound &&\r\n                        Date.now() >= this.state.roundStartTime &&\r\n                        this.startRound();\r\n                };\r\n                f.prototype.block = function () {\r\n                    this.state.blocked = 1;\r\n                };\r\n                f.prototype.start = function (e) {\r\n                    var _this = this;\r\n                    setTimeout(function () {\r\n                        _this.state.idle = 0;\r\n                        _this.state.started = 1;\r\n                        _this.state.finished = 0;\r\n                        _this.state.nextTime = 0;\r\n                        _this.entity.box.getComponent(PlaneShape).visible = 1;\r\n                        _this.entity.image.getComponent(PlaneShape).visible = 0;\r\n                    }, 1e3);\r\n                };\r\n                f.prototype.startRound = function () {\r\n                    var _this = this;\r\n                    this.state.round++;\r\n                    this.ui.hideTime();\r\n                    this.entity.solutions.forEach(function (e) {\r\n                        e.getComponent(PlaneShape).visible = 0;\r\n                    });\r\n                    this.player1.hide();\r\n                    this.player2.hide();\r\n                    this.roundResult1.hide();\r\n                    this.roundResult2.hide();\r\n                    this.state.lastRoundStartTime = this.state.roundStartTime;\r\n                    this.state.roundStartTime = Number.MAX_VALUE;\r\n                    setTimeout(function () {\r\n                        _this.state.blocked = 0;\r\n                        _this.state.waitingRound = 0;\r\n                        _this.state.answered = 0;\r\n                        _this.state.roundStarted = 1;\r\n                        _this.state.nextTime = 0;\r\n                        _this.entity.box.getComponent(PlaneShape).visible = 1;\r\n                        _this.entity.image.getComponent(PlaneShape).visible = 0;\r\n                        _this.state.rotationSerie = _this.getRotationSerie(_this.state.round + 1);\r\n                        _this.state.solution = _this.state.rotationSerie.reduce(function (e, t) { return e + t; }, 0);\r\n                        var e = (_this.state.correctSolution = _this.getRandomInt(1, 3));\r\n                        _this.state.solutions = [1, 2, 3].map(function (t) {\r\n                            return t === e\r\n                                ? _this.state.solution\r\n                                : 90 * _this.getRandomInt(1, 4, _this.state.solution / 90);\r\n                        });\r\n                        _this.state.currentRotation = 0;\r\n                        _this.entity.solutions.forEach(function (e, t) {\r\n                            e.getComponent(Transform).rotation.setEuler(0, 0, 0);\r\n                            e.getComponent(Transform).rotate(new Vector3(0, 0, 1), _this.state.solutions[t]);\r\n                        });\r\n                    }, (1e3 / (500 * this.state.round)) * 1e3);\r\n                };\r\n                f.prototype.onFinish = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onFinish = e;\r\n                    return function () { return (_this.callbacks.onFinish = null); };\r\n                };\r\n                f.prototype.onFinishRound = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onFinishRound = e;\r\n                    return function () { return (_this.callbacks.onFinishRound = null); };\r\n                };\r\n                f.prototype.getIsWinner = function (e, t) {\r\n                    var n = this.entity.solutions[t - 1], i = undefined;\r\n                    if (r(this.entity.solutions[e.correctSolution - 1]) === r(n))\r\n                        return 1;\r\n                    void 0;\r\n                    return 0;\r\n                    function r(e) {\r\n                        var t = Math.round(e.getComponent(Transform).rotation.eulerAngles.z) % 360;\r\n                        return t < 0 ? 360 - t : t;\r\n                    }\r\n                };\r\n                f.prototype.buildSolution = function (e, t, n) {\r\n                    var _this = this;\r\n                    var i = new PlaneShape();\r\n                    i.visible = 0;\r\n                    i.withCollisions = 0;\r\n                    var r = { x: 1.1 * t - 1.1, y: 1.15, z: 0 }, o = new Transform({\r\n                        position: new Vector3(r.x, r.y, r.z),\r\n                        scale: new Vector3(1, 1, 1e-7),\r\n                    });\r\n                    o.rotate(new Vector3(0, 0, 1), n);\r\n                    e.addComponent(c.spriteMaterial);\r\n                    i.withCollisions = 0;\r\n                    i.uvs = h.getSpriteUv(12, 480, 32, 32);\r\n                    e.addComponent(i);\r\n                    e.addComponent(o);\r\n                    this.gameSetup.currentPlayer &&\r\n                        e.addComponent(new OnClick(function () { return _this.onClickAnswer(e, r, t); }));\r\n                };\r\n                f.prototype.onClickAnswer = function (e, t, n) {\r\n                    if (this.state.answered)\r\n                        return;\r\n                    if (this.state.blocked)\r\n                        return;\r\n                    if (!this.state.initialized)\r\n                        return;\r\n                    if (this.state.finished)\r\n                        return;\r\n                    u.playOnce('swing');\r\n                    this['player' + this.gameSetup.currentPlayer].wrapperEntity\r\n                        .getComponent(Transform)\r\n                        .position.set(t.x + (1 === this.gameSetup.currentPlayer ? -0.2 : 0.2), t.y, t.z);\r\n                    this['player' + this.gameSetup.currentPlayer].show();\r\n                    this.state.blocked = 1;\r\n                    this.state.answered = 1;\r\n                    var i = this.getIsWinner(this.state, n + 1);\r\n                    this['player' + this.gameSetup.currentPlayer].setSprite(i);\r\n                    var r = a.getTimeSinceStart(0 === this.state.round\r\n                        ? this.state.startTime\r\n                        : this.state.lastRoundStartTime), o = i ? r : 999999999 - r, s = Date.now() - this.state.shownAnswersTime;\r\n                    this.ui.updateTime({ player: this.gameSetup.currentPlayer, time: s });\r\n                    this.callbacks.onShareState({\r\n                        type: 'election',\r\n                        player: this.gameSetup.currentPlayer,\r\n                        election: n + 1,\r\n                        time: r,\r\n                        timeSinceAnswers: s,\r\n                        round: this.state.round,\r\n                    });\r\n                    this.state.round < p - 1\r\n                        ? this.callbacks.onFinishRound({\r\n                            time: o,\r\n                            player: this.gameSetup.currentPlayer,\r\n                            gameIndex: this.gameSetup.gameIndex,\r\n                            roundIndex: this.state.round,\r\n                        })\r\n                        : this.callbacks.onFinish({\r\n                            time: o,\r\n                            isWinner: i,\r\n                            round: this.state.round,\r\n                            gameIndex: this.gameSetup.gameIndex,\r\n                            roundIndex: this.state.round,\r\n                        });\r\n                };\r\n                f.prototype.getRandomInt = function (e, t, n) {\r\n                    var i = Math.floor(this.randomizer.random() * (t - e + 1)) + e;\r\n                    return i === n ? this.getRandomInt(e, t, n) : i;\r\n                };\r\n                return f;\r\n            }());\r\n            t.RotationGame = f;\r\n            f.id = 'Rotation';\r\n            f.timeToWaitForOtherAnswer = 2;\r\n            f.instructions =\r\n                'Image is hidden and start rotating\\n    Click the correct solution';\r\n            function m(e, t, n) {\r\n                var i = new PlaneShape();\r\n                i.withCollisions = 0;\r\n                i.uvs = n;\r\n                var r = new Transform({\r\n                    scale: new Vector3(2, 2, 1e-6),\r\n                    position: new Vector3(0, 2.7, 0),\r\n                });\r\n                e.addComponent(i);\r\n                e.addComponent(t);\r\n                e.addComponent(r);\r\n            }\r\n        },\r\n        function (e, t, n) {\r\n            var i = (this && this.__decorate) ||\r\n                function (e, t, n, i) {\r\n                    var r = arguments.length, o = r < 3\r\n                        ? t\r\n                        : null === i\r\n                            ? (i = Object.getOwnPropertyDescriptor(t, n))\r\n                            : i, s;\r\n                    if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)\r\n                        o = Reflect.decorate(e, t, n, i);\r\n                    else\r\n                        for (var a = e.length - 1; a >= 0; a--)\r\n                            (s = e[a]) &&\r\n                                (o = (r < 3 ? s(o) : r > 3 ? s(t, n, o) : s(t, n)) || o);\r\n                    return r > 3 && o && Object.defineProperty(t, n, o), o;\r\n                };\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.RotateTransformComponent = void 0;\r\n            var r = n(7), o = n(12);\r\n            var s = /** @class */ (function () {\r\n                function e(e, t, n, i, s) {\r\n                    if (s === void 0) { s = o.InterpolationType.LINEAR; }\r\n                    this.start = e;\r\n                    this.end = t;\r\n                    this.normalizedTime = 0;\r\n                    this.lerpTime = 0;\r\n                    this.onFinishCallback = i;\r\n                    this.interpolationType = s;\r\n                    if (0 != n)\r\n                        this.speed = 1 / n;\r\n                    else {\r\n                        this.speed = 0;\r\n                        this.normalizedTime = 1;\r\n                        this.lerpTime = 1;\r\n                    }\r\n                    r.TransformSystem.createAndAddToEngine();\r\n                }\r\n                e.prototype.update = function (e) {\r\n                    this.normalizedTime = Scalar.Clamp(this.normalizedTime + e * this.speed, 0, 1);\r\n                    this.lerpTime = o.Interpolate(this.interpolationType, this.normalizedTime);\r\n                };\r\n                e.prototype.hasFinished = function () {\r\n                    return this.normalizedTime >= 1;\r\n                };\r\n                e.prototype.assignValueToTransform = function (e) {\r\n                    e.rotation = Quaternion.Slerp(this.start, this.end, this.lerpTime);\r\n                };\r\n                return e;\r\n            }());\r\n            s = i([Component('rotateTransformComponent')], s);\r\n            t.RotateTransformComponent = s;\r\n        },\r\n        function (e, t, n) {\r\n            var i = (this && this.__decorate) ||\r\n                function (e, t, n, i) {\r\n                    var r = arguments.length, o = r < 3\r\n                        ? t\r\n                        : null === i\r\n                            ? (i = Object.getOwnPropertyDescriptor(t, n))\r\n                            : i, s;\r\n                    if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)\r\n                        o = Reflect.decorate(e, t, n, i);\r\n                    else\r\n                        for (var a = e.length - 1; a >= 0; a--)\r\n                            (s = e[a]) &&\r\n                                (o = (r < 3 ? s(o) : r > 3 ? s(t, n, o) : s(t, n)) || o);\r\n                    return r > 3 && o && Object.defineProperty(t, n, o), o;\r\n                };\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.ScaleTransformComponent = void 0;\r\n            var r = n(7), o = n(12);\r\n            var s = /** @class */ (function () {\r\n                function e(e, t, n, i, s) {\r\n                    if (s === void 0) { s = o.InterpolationType.LINEAR; }\r\n                    this.start = e;\r\n                    this.end = t;\r\n                    this.normalizedTime = 0;\r\n                    this.lerpTime = 0;\r\n                    this.onFinishCallback = i;\r\n                    this.interpolationType = s;\r\n                    if (0 != n)\r\n                        this.speed = 1 / n;\r\n                    else {\r\n                        this.speed = 0;\r\n                        this.normalizedTime = 1;\r\n                        this.lerpTime = 1;\r\n                    }\r\n                    r.TransformSystem.createAndAddToEngine();\r\n                }\r\n                e.prototype.update = function (e) {\r\n                    this.normalizedTime = Scalar.Clamp(this.normalizedTime + e * this.speed, 0, 1);\r\n                    this.lerpTime = o.Interpolate(this.interpolationType, this.normalizedTime);\r\n                };\r\n                e.prototype.hasFinished = function () {\r\n                    return this.normalizedTime >= 1;\r\n                };\r\n                e.prototype.assignValueToTransform = function (e) {\r\n                    e.scale = Vector3.Lerp(this.start, this.end, this.lerpTime);\r\n                };\r\n                return e;\r\n            }());\r\n            s = i([Component('scaleTransformComponent')], s);\r\n            t.ScaleTransformComponent = s;\r\n        },\r\n        function (e, t, n) {\r\n            var i = (this && this.__decorate) ||\r\n                function (e, t, n, i) {\r\n                    var r = arguments.length, o = r < 3\r\n                        ? t\r\n                        : null === i\r\n                            ? (i = Object.getOwnPropertyDescriptor(t, n))\r\n                            : i, s;\r\n                    if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)\r\n                        o = Reflect.decorate(e, t, n, i);\r\n                    else\r\n                        for (var a = e.length - 1; a >= 0; a--)\r\n                            (s = e[a]) &&\r\n                                (o = (r < 3 ? s(o) : r > 3 ? s(t, n, o) : s(t, n)) || o);\r\n                    return r > 3 && o && Object.defineProperty(t, n, o), o;\r\n                };\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.FollowPathComponent = void 0;\r\n            var r = n(7);\r\n            var o = /** @class */ (function () {\r\n                function e(e, t, n, i) {\r\n                    this.speed = [];\r\n                    this.normalizedTime = 0;\r\n                    this.currentIndex = 0;\r\n                    this.points = e;\r\n                    this.onFinishCallback = n;\r\n                    this.onPointReachedCallback = i;\r\n                    if (e.length < 2)\r\n                        throw new Error('At least 2 points are needed for FollowPathComponent.');\r\n                    if (t > 0) {\r\n                        var n_4 = 0, i_3 = [];\r\n                        for (var t_2 = 0; t_2 < e.length - 1; t_2++) {\r\n                            var r_3 = Vector3.DistanceSquared(e[t_2], e[t_2 + 1]);\r\n                            n_4 += r_3;\r\n                            i_3.push(r_3);\r\n                        }\r\n                        for (var e_10 = 0; e_10 < i_3.length; e_10++)\r\n                            this.speed.push(1 / ((i_3[e_10] / n_4) * t));\r\n                    }\r\n                    else {\r\n                        this.normalizedTime = 1;\r\n                        this.currentIndex = e.length - 2;\r\n                    }\r\n                    r.TransformSystem.createAndAddToEngine();\r\n                }\r\n                e.prototype.update = function (e) {\r\n                    this.normalizedTime = Scalar.Clamp(this.normalizedTime + e * this.speed[this.currentIndex], 0, 1);\r\n                    if (this.normalizedTime >= 1 &&\r\n                        this.currentIndex < this.points.length - 2) {\r\n                        this.currentIndex++;\r\n                        this.normalizedTime = 0;\r\n                        this.onPointReachedCallback &&\r\n                            this.currentIndex < this.points.length - 1 &&\r\n                            this.onPointReachedCallback(this.points[this.currentIndex], this.points[this.currentIndex + 1]);\r\n                    }\r\n                };\r\n                e.prototype.hasFinished = function () {\r\n                    return (this.currentIndex >= this.points.length - 2 &&\r\n                        this.normalizedTime >= 1);\r\n                };\r\n                e.prototype.assignValueToTransform = function (e) {\r\n                    e.position = Vector3.Lerp(this.points[this.currentIndex], this.points[this.currentIndex + 1], this.normalizedTime);\r\n                };\r\n                return e;\r\n            }());\r\n            o = i([Component('followPathComponent')], o);\r\n            t.FollowPathComponent = o;\r\n        },\r\n        function (e, t, n) {\r\n            var i = (this && this.__decorate) ||\r\n                function (e, t, n, i) {\r\n                    var r = arguments.length, o = r < 3\r\n                        ? t\r\n                        : null === i\r\n                            ? (i = Object.getOwnPropertyDescriptor(t, n))\r\n                            : i, s;\r\n                    if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)\r\n                        o = Reflect.decorate(e, t, n, i);\r\n                    else\r\n                        for (var a = e.length - 1; a >= 0; a--)\r\n                            (s = e[a]) &&\r\n                                (o = (r < 3 ? s(o) : r > 3 ? s(t, n, o) : s(t, n)) || o);\r\n                    return r > 3 && o && Object.defineProperty(t, n, o), o;\r\n                };\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.KeepRotatingComponent = void 0;\r\n            var r = n(7);\r\n            var o = /** @class */ (function () {\r\n                function e(e, t) {\r\n                    this.rotationVelocity = e;\r\n                    this.onFinishCallback = t;\r\n                    this.rotation = Quaternion.Identity;\r\n                    this.finished = 0;\r\n                    r.TransformSystem.createAndAddToEngine();\r\n                }\r\n                e.prototype.update = function (e) {\r\n                    this.rotation = Quaternion.Slerp(Quaternion.Identity, this.rotationVelocity, e);\r\n                };\r\n                e.prototype.hasFinished = function () {\r\n                    return this.finished;\r\n                };\r\n                e.prototype.assignValueToTransform = function (e) {\r\n                    e.rotation = e.rotation.multiply(this.rotation);\r\n                };\r\n                e.prototype.stop = function () {\r\n                    this.finished = 1;\r\n                };\r\n                return e;\r\n            }());\r\n            o = i([Component('keepRotatingComponent')], o);\r\n            t.KeepRotatingComponent = o;\r\n        },\r\n        function (e, t, n) {\r\n            var i = (this && this.__decorate) ||\r\n                function (e, t, n, i) {\r\n                    var r = arguments.length, o = r < 3\r\n                        ? t\r\n                        : null === i\r\n                            ? (i = Object.getOwnPropertyDescriptor(t, n))\r\n                            : i, s;\r\n                    if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)\r\n                        o = Reflect.decorate(e, t, n, i);\r\n                    else\r\n                        for (var a = e.length - 1; a >= 0; a--)\r\n                            (s = e[a]) &&\r\n                                (o = (r < 3 ? s(o) : r > 3 ? s(t, n, o) : s(t, n)) || o);\r\n                    return r > 3 && o && Object.defineProperty(t, n, o), o;\r\n                };\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.Delay = void 0;\r\n            var r = n(17);\r\n            var o = /** @class */ (function () {\r\n                function e(e, t) {\r\n                    var _this = this;\r\n                    r.TimerSystem.createAndAddToEngine();\r\n                    this.elapsedTime = 0;\r\n                    this.targetTime = e / 1e3;\r\n                    this.onTimeReachedCallback = t;\r\n                    this.onTargetTimeReached = function (e) {\r\n                        _this.onTimeReachedCallback && _this.onTimeReachedCallback();\r\n                        e.removeComponent(_this);\r\n                    };\r\n                }\r\n                e.prototype.setCallback = function (e) {\r\n                    this.onTimeReachedCallback = e;\r\n                };\r\n                return e;\r\n            }());\r\n            o = i([Component('timerDelay')], o);\r\n            t.Delay = o;\r\n        },\r\n        function (e, t, n) {\r\n            var i = (this && this.__decorate) ||\r\n                function (e, t, n, i) {\r\n                    var r = arguments.length, o = r < 3\r\n                        ? t\r\n                        : null === i\r\n                            ? (i = Object.getOwnPropertyDescriptor(t, n))\r\n                            : i, s;\r\n                    if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)\r\n                        o = Reflect.decorate(e, t, n, i);\r\n                    else\r\n                        for (var a = e.length - 1; a >= 0; a--)\r\n                            (s = e[a]) &&\r\n                                (o = (r < 3 ? s(o) : r > 3 ? s(t, n, o) : s(t, n)) || o);\r\n                    return r > 3 && o && Object.defineProperty(t, n, o), o;\r\n                };\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.Interval = void 0;\r\n            var r = n(17);\r\n            var o = /** @class */ (function () {\r\n                function e(e, t) {\r\n                    var _this = this;\r\n                    r.TimerSystem.createAndAddToEngine();\r\n                    this.elapsedTime = 0;\r\n                    this.targetTime = e / 1e3;\r\n                    this.onTimeReachedCallback = t;\r\n                    this.onTargetTimeReached = function () {\r\n                        _this.elapsedTime = 0;\r\n                        _this.onTimeReachedCallback && _this.onTimeReachedCallback();\r\n                    };\r\n                }\r\n                e.prototype.setCallback = function (e) {\r\n                    this.onTimeReachedCallback = e;\r\n                };\r\n                return e;\r\n            }());\r\n            o = i([Component('timerInterval')], o);\r\n            t.Interval = o;\r\n        },\r\n        function (e, t, n) {\r\n            var i = (this && this.__decorate) ||\r\n                function (e, t, n, i) {\r\n                    var r = arguments.length, o = r < 3\r\n                        ? t\r\n                        : null === i\r\n                            ? (i = Object.getOwnPropertyDescriptor(t, n))\r\n                            : i, s;\r\n                    if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)\r\n                        o = Reflect.decorate(e, t, n, i);\r\n                    else\r\n                        for (var a = e.length - 1; a >= 0; a--)\r\n                            (s = e[a]) &&\r\n                                (o = (r < 3 ? s(o) : r > 3 ? s(t, n, o) : s(t, n)) || o);\r\n                    return r > 3 && o && Object.defineProperty(t, n, o), o;\r\n                };\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.ExpireIn = void 0;\r\n            var r = n(17);\r\n            var o = /** @class */ (function () {\r\n                function e(e, t) {\r\n                    var _this = this;\r\n                    r.TimerSystem.createAndAddToEngine();\r\n                    this.elapsedTime = 0;\r\n                    this.targetTime = e / 1e3;\r\n                    this.onTimeReachedCallback = t;\r\n                    this.onTargetTimeReached = function (e) {\r\n                        _this.onTimeReachedCallback && _this.onTimeReachedCallback();\r\n                        e.removeComponent(_this);\r\n                        engine.removeEntity(e);\r\n                    };\r\n                }\r\n                e.prototype.setCallback = function (e) {\r\n                    this.onTimeReachedCallback = e;\r\n                };\r\n                return e;\r\n            }());\r\n            o = i([Component('timerExpireIn')], o);\r\n            t.ExpireIn = o;\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.AttackGame = void 0;\r\n            var i = n(15), r = n(3), o = n(9), s = n(1), a = n(4), c = n(2), l = n(0), u = n(5), h = { DEFEND: 0, ATTACK: 1 }, d = (640 / 71) * 16, p = 11;\r\n            var f = 0;\r\n            var m = { E: 1, F: 2, CLICK: 3 };\r\n            var g = /** @class */ (function () {\r\n                function g(e, _a) {\r\n                    var t = _a.currentPlayer, n = _a.seed, o = _a.level, a = _a.gameIndex;\r\n                    this.state = {\r\n                        startTime: Number.MAX_VALUE,\r\n                        roundStartTime: Number.MAX_VALUE,\r\n                        lastRoundStartTime: Number.MAX_VALUE,\r\n                        waitingRound: 0,\r\n                        initialized: 0,\r\n                        round: 0,\r\n                        idle: 1,\r\n                        started: 0,\r\n                        blocked: 0,\r\n                        finished: 0,\r\n                        player1Key: -1,\r\n                        player2Key: -2,\r\n                    };\r\n                    this.callbacks = {\r\n                        onFinish: null,\r\n                        onFinishRound: null,\r\n                        onShareState: null,\r\n                    };\r\n                    this.score1 = 0;\r\n                    this.score2 = 0;\r\n                    void 0;\r\n                    f++;\r\n                    this.id = f;\r\n                    var c = engine.getEntitiesWithComponent('game_scene');\r\n                    void 0;\r\n                    Object.keys(c).forEach(function (e) {\r\n                        engine.removeEntity(c[e]);\r\n                    });\r\n                    this.root = e;\r\n                    this.gameSetup = { currentPlayer: t, seed: n, level: o, gameIndex: a };\r\n                    this.randomizer = r.seedGen.create(n.toString());\r\n                    this.scene = new Entity();\r\n                    this.scene.addComponent(new i.GameScene());\r\n                    this.scene.addComponent(new Transform({ position: new Vector3(0, 0, -0.002) }));\r\n                    this.ui = u.createUI(this.scene);\r\n                    this.label1 = l.createSpriteEntity(this.scene, {\r\n                        position: new Vector3(-1.5, 3.5, -0.001),\r\n                        uvs: l.getSpriteUv(4, 384, 32, 32),\r\n                        scale: new Vector3(1, 1, 1),\r\n                    });\r\n                    this.label2 = l.createSpriteEntity(this.scene, {\r\n                        position: new Vector3(1.5, 3.5, -0.001),\r\n                        uvs: l.getSpriteUv(4, 384, 32, 32),\r\n                        scale: new Vector3(1, 1, 1),\r\n                    });\r\n                    this.label1.hide();\r\n                    this.label2.hide();\r\n                    this.char1 = new Entity();\r\n                    this.char2 = new Entity();\r\n                    this.char1.addComponent(s.spriteMaterial);\r\n                    this.char2.addComponent(s.spriteMaterial);\r\n                    this.char1.addComponent(new Transform({\r\n                        position: new Vector3(-1, 2, 0),\r\n                        scale: new Vector3(2, 2, 1),\r\n                    }));\r\n                    this.char2.addComponent(new Transform({\r\n                        position: new Vector3(1, 2, 0),\r\n                        scale: new Vector3(-2, 2, 1),\r\n                    }));\r\n                    this.char1.setParent(this.scene);\r\n                    this.char2.setParent(this.scene);\r\n                    this.char1Shape = new PlaneShape();\r\n                    this.char1Shape.uvs = l.getSpriteUv(1, d, 64, 71);\r\n                    this.char2Shape = new PlaneShape();\r\n                    this.char2Shape.uvs = l.getSpriteUv(1, d, 64, 71);\r\n                    this.char1.addComponent(this.char1Shape);\r\n                    this.char2.addComponent(this.char2Shape);\r\n                    this.roundResult1 = u.createRoundResult(this.scene, { player: 1 });\r\n                    this.roundResult2 = u.createRoundResult(this.scene, { player: 2 });\r\n                    this.roundResult1.hide();\r\n                    this.roundResult2.hide();\r\n                    this.state = Object.assign(Object.assign({}, this.state), {\r\n                        player1Key: 1 + Math.floor(3 * this.randomizer.random()),\r\n                        player2Key: 1 + Math.floor(3 * this.randomizer.random()),\r\n                        started: 0,\r\n                    });\r\n                    engine.addSystem(this);\r\n                }\r\n                g.prototype.setStartTime = function (e) {\r\n                    void 0;\r\n                    this.state.startTime = e;\r\n                };\r\n                g.prototype.reset = function () { };\r\n                g.prototype.setRoundStartTime = function (e) {\r\n                    void 0;\r\n                    this.state.roundStartTime = e;\r\n                };\r\n                g.prototype.finishRound = function (_a) {\r\n                    var e = _a.winner;\r\n                    this.label1.hide();\r\n                    this.label2.hide();\r\n                    c.stopSound('swing');\r\n                    c.playOnce('hit');\r\n                    this['score' + e] += 1;\r\n                    this.ui.updateScore({ player: e, score: this['score' + e] });\r\n                    e !== this.gameSetup.currentPlayer\r\n                        ? setTimeout(function () {\r\n                            c.playOnce('fail');\r\n                        }, 500)\r\n                        : setTimeout(function () {\r\n                            c.playOnce('ok');\r\n                        }, 500);\r\n                    Input.instance.unsubscribe('BUTTON_DOWN', ActionButton.PRIMARY, this.primaryButtonCallback);\r\n                    Input.instance.unsubscribe('BUTTON_DOWN', ActionButton.SECONDARY, this.secondaryButtonCallback);\r\n                    Input.instance.unsubscribe('BUTTON_DOWN', ActionButton.POINTER, this.clickButtonCallback);\r\n                    void 0;\r\n                    var t = [3, (640 / 71) * 8, 128, 71];\r\n                    if (1 === e) {\r\n                        this.char2Shape.visible = 0;\r\n                        var e_11 = this.char1.getComponent(Transform);\r\n                        e_11.scale.set(4, 2, 1);\r\n                        e_11.position.set(0, 2, 0);\r\n                        this.char1Shape.uvs = l.getSpriteUv.apply(l, __spread(t));\r\n                    }\r\n                    else {\r\n                        this.char2Shape.visible = 0;\r\n                        var e_12 = this.char1.getComponent(Transform);\r\n                        e_12.scale.set(-4, 2, 1);\r\n                        e_12.position.set(0, 2, 0);\r\n                        this.char1Shape.uvs = l.getSpriteUv.apply(l, __spread(t));\r\n                    }\r\n                    var n = 1 === e ? 2 : 1;\r\n                    this['roundResult' + e].update(1);\r\n                    this['roundResult' + n].update(0);\r\n                    this.roundResult1.show();\r\n                    this.roundResult2.show();\r\n                    this.state.waitingRound = 1;\r\n                };\r\n                g.prototype.handleAction = function (e) {\r\n                    Input.instance.unsubscribe('BUTTON_DOWN', ActionButton.PRIMARY, this.primaryButtonCallback);\r\n                    Input.instance.unsubscribe('BUTTON_DOWN', ActionButton.SECONDARY, this.secondaryButtonCallback);\r\n                    Input.instance.unsubscribe('BUTTON_DOWN', ActionButton.POINTER, this.clickButtonCallback);\r\n                    this[\"char\" + this.gameSetup.currentPlayer + \"Shape\"].uvs = l.getSpriteUv(3, d, 64, 71);\r\n                    var t = o.getTimeSinceStart(0 === this.state.round\r\n                        ? this.state.startTime\r\n                        : this.state.lastRoundStartTime);\r\n                    void 0;\r\n                    var n = e ? t : 999999999 - t;\r\n                    this.ui.updateTime({ player: this.gameSetup.currentPlayer, time: t });\r\n                    this.callbacks.onShareState({\r\n                        player: this.gameSetup.currentPlayer,\r\n                        time: n,\r\n                        timeSinceStart: t,\r\n                        round: this.state.round,\r\n                    });\r\n                    if (this.state.round < p - 1) {\r\n                        this.callbacks.onFinishRound({\r\n                            player: this.gameSetup.currentPlayer,\r\n                            time: n,\r\n                            isWinner: e,\r\n                            gameIndex: this.gameSetup.gameIndex,\r\n                            roundIndex: this.state.round,\r\n                        });\r\n                        this.state.waitingRound = 1;\r\n                    }\r\n                    else\r\n                        this.callbacks.onFinish({\r\n                            player: this.gameSetup.currentPlayer,\r\n                            time: n,\r\n                            isWinner: e,\r\n                            gameIndex: this.gameSetup.gameIndex,\r\n                        });\r\n                };\r\n                g.prototype.clickButtonCallback = function (e) {\r\n                    c.playOnce('swing');\r\n                    var t = this.state[\"player\" + this.gameSetup.currentPlayer + \"Key\"] === m.CLICK;\r\n                    this.handleAction(t);\r\n                };\r\n                g.prototype.primaryButtonCallback = function (e) {\r\n                    c.playOnce('swing');\r\n                    var t = this.state[\"player\" + this.gameSetup.currentPlayer + \"Key\"] === m.E;\r\n                    this.handleAction(t);\r\n                };\r\n                g.prototype.secondaryButtonCallback = function (e) {\r\n                    c.playOnce('swing');\r\n                    var t = this.state[\"player\" + this.gameSetup.currentPlayer + \"Key\"] === m.F;\r\n                    this.handleAction(t);\r\n                };\r\n                g.prototype.init = function () {\r\n                    a.updateSpritePanel({ uvs: l.getSpriteUv(4, 0, 192, 128) });\r\n                    a.showSpritePanel();\r\n                    c.playLoop('battle', { volume: 0.5 });\r\n                    void 0;\r\n                    this.scene.setParent(this.root);\r\n                    this.state.initialized = 1;\r\n                };\r\n                g.prototype.start = function () {\r\n                    void 0;\r\n                    this.state.round = 0;\r\n                    this.state.idle = 0;\r\n                    this.state.finished = 0;\r\n                    this.state.started = 1;\r\n                    this.primaryButtonCallback = this.primaryButtonCallback.bind(this);\r\n                    this.secondaryButtonCallback = this.secondaryButtonCallback.bind(this);\r\n                    this.clickButtonCallback = this.clickButtonCallback.bind(this);\r\n                    this.gameSetup.currentPlayer &&\r\n                        Input.instance.subscribe('BUTTON_DOWN', ActionButton.PRIMARY, 0, this.primaryButtonCallback);\r\n                    this.gameSetup.currentPlayer &&\r\n                        Input.instance.subscribe('BUTTON_DOWN', ActionButton.SECONDARY, 0, this.secondaryButtonCallback);\r\n                    this.gameSetup.currentPlayer &&\r\n                        Input.instance.subscribe('BUTTON_DOWN', ActionButton.POINTER, 0, this.clickButtonCallback);\r\n                    this.label1.show();\r\n                    this.label2.show();\r\n                    this.label1.updateUvs(l.getSpriteUv(this.state.player1Key, 387, 32, 32));\r\n                    this.label2.updateUvs(l.getSpriteUv(this.state.player2Key, 387, 32, 32));\r\n                };\r\n                g.prototype.startRound = function () {\r\n                    this.state.round++;\r\n                    this.ui.hideTime();\r\n                    this.char2Shape.visible = 1;\r\n                    var e = this.char1.getComponent(Transform);\r\n                    e.scale.set(2, 2, 1);\r\n                    e.position.set(-1, 2, 0);\r\n                    this.char1Shape.uvs = l.getSpriteUv(1, d, 64, 71);\r\n                    this.char2Shape.uvs = l.getSpriteUv(1, d, 64, 71);\r\n                    this.roundResult1.hide();\r\n                    this.roundResult2.hide();\r\n                    this.state.lastRoundStartTime = this.state.roundStartTime;\r\n                    this.state.roundStartTime = Number.MAX_VALUE;\r\n                    void 0;\r\n                    this.state.idle = 0;\r\n                    this.state.started = 1;\r\n                    this.state.waitingRound = 0;\r\n                    Input.instance.subscribe('BUTTON_DOWN', ActionButton.PRIMARY, 0, this.primaryButtonCallback);\r\n                    Input.instance.subscribe('BUTTON_DOWN', ActionButton.SECONDARY, 0, this.secondaryButtonCallback);\r\n                    Input.instance.subscribe('BUTTON_DOWN', ActionButton.POINTER, 0, this.clickButtonCallback);\r\n                    this.state = Object.assign(Object.assign({}, this.state), {\r\n                        player1Key: 1 + Math.floor(3 * this.randomizer.random()),\r\n                        player2Key: 1 + Math.floor(3 * this.randomizer.random()),\r\n                    });\r\n                    this.label1.show();\r\n                    this.label2.show();\r\n                    this.label1.updateUvs(l.getSpriteUv(this.state.player1Key, 387, 32, 32));\r\n                    this.label2.updateUvs(l.getSpriteUv(this.state.player2Key, 387, 32, 32));\r\n                };\r\n                g.prototype.destroy = function () {\r\n                    c.stopAllSounds();\r\n                    a.hideSpritePanel();\r\n                    Input.instance.unsubscribe('BUTTON_DOWN', ActionButton.PRIMARY, this.primaryButtonCallback);\r\n                    Input.instance.unsubscribe('BUTTON_DOWN', ActionButton.SECONDARY, this.secondaryButtonCallback);\r\n                    Input.instance.unsubscribe('BUTTON_DOWN', ActionButton.POINTER, this.clickButtonCallback);\r\n                    void 0;\r\n                    var e = engine.getEntitiesWithComponent('game_scene');\r\n                    void 0;\r\n                    Object.keys(e).forEach(function (e) { });\r\n                    this.scene.setParent(null);\r\n                    engine.removeEntity(this.scene);\r\n                    void 0;\r\n                    engine.removeSystem(this);\r\n                };\r\n                g.prototype.finish = function (e) {\r\n                    this.label1.hide();\r\n                    this.label2.hide();\r\n                    var t = e.winner;\r\n                    void 0;\r\n                    var n = 1 === t ? 2 : 1;\r\n                    c.stopSound('swing');\r\n                    c.playOnce('hit');\r\n                    t !== this.gameSetup.currentPlayer\r\n                        ? c.playOnce('fail')\r\n                        : c.playOnce('ok');\r\n                    var i = [3, (640 / 71) * 8, 128, 71];\r\n                    if (1 === t) {\r\n                        this.char2Shape.visible = 0;\r\n                        var e_13 = this.char1.getComponent(Transform);\r\n                        e_13.scale.set(4, 2, 1);\r\n                        e_13.position.set(0, 2, 0);\r\n                        this.char1Shape.uvs = l.getSpriteUv.apply(l, __spread(i));\r\n                    }\r\n                    else {\r\n                        this.char2Shape.visible = 0;\r\n                        var e_14 = this.char1.getComponent(Transform);\r\n                        e_14.scale.set(-4, 2, 1);\r\n                        e_14.position.set(0, 2, 0);\r\n                        this.char1Shape.uvs = l.getSpriteUv.apply(l, __spread(i));\r\n                    }\r\n                    this.roundResult1.show();\r\n                    this.roundResult2.show();\r\n                    this['roundResult' + t].update(1);\r\n                    this['roundResult' + n].update(0);\r\n                };\r\n                g.prototype.block = function () {\r\n                    this.state.blocked = 1;\r\n                    Input.instance.unsubscribe('BUTTON_DOWN', ActionButton.PRIMARY, this.primaryButtonCallback);\r\n                    Input.instance.unsubscribe('BUTTON_DOWN', ActionButton.SECONDARY, this.secondaryButtonCallback);\r\n                    Input.instance.unsubscribe('BUTTON_DOWN', ActionButton.POINTER, this.clickButtonCallback);\r\n                };\r\n                g.prototype.onFinish = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onFinish = e;\r\n                    return function () {\r\n                        _this.callbacks.onFinish = null;\r\n                    };\r\n                };\r\n                g.prototype.onFinishRound = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onFinishRound = e;\r\n                    return function () { return (_this.callbacks.onFinishRound = null); };\r\n                };\r\n                g.prototype.shareState = function (e) {\r\n                    void 0;\r\n                    var t = e.player, n = e.timeSinceStart, i = e.time, r = e.round;\r\n                    if (r === this.state.round) {\r\n                        this[\"char\" + t + \"Shape\"].uvs = l.getSpriteUv(3, d, 64, 71);\r\n                        this.ui.updateTime({ player: t, time: n });\r\n                    }\r\n                };\r\n                g.prototype.onShareState = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onShareState = e;\r\n                    return function () { return (_this.callbacks.onShareState = null); };\r\n                };\r\n                g.prototype.update = function (e) {\r\n                    if (this.state.initialized)\r\n                        if (!this.state.waitingRound &&\r\n                            !this.state.started &&\r\n                            Date.now() >= this.state.startTime) {\r\n                            void 0;\r\n                            this.start();\r\n                        }\r\n                        else if (this.state.started &&\r\n                            this.state.waitingRound &&\r\n                            Date.now() >= this.state.roundStartTime) {\r\n                            void 0;\r\n                            this.startRound();\r\n                        }\r\n                        else\r\n                            Date.now() >= this.state.roundStartTime;\r\n                };\r\n                return g;\r\n            }());\r\n            t.AttackGame = g;\r\n            g.id = 'Attack';\r\n            g.timeToWaitForOtherAnswer = 1;\r\n            g.instructions =\r\n                '2 old warriors on each player side, \\n    faster than your opponent,\\n    press the appropriate key: E, F or CLICK';\r\n        },\r\n        function (e, t, n) {\r\n            var i = (this && this.__awaiter) ||\r\n                function (e, t, n, i) {\r\n                    function r(e) {\r\n                        return e instanceof n\r\n                            ? e\r\n                            : new n(function (t) {\r\n                                t(e);\r\n                            });\r\n                    }\r\n                    return new (n || (n = Promise))(function (n, o) {\r\n                        function s(e) {\r\n                            try {\r\n                                c(i.next(e));\r\n                            }\r\n                            catch (e) {\r\n                                o(e);\r\n                            }\r\n                        }\r\n                        function a(e) {\r\n                            try {\r\n                                c(i['throw'](e));\r\n                            }\r\n                            catch (e) {\r\n                                o(e);\r\n                            }\r\n                        }\r\n                        function c(e) {\r\n                            e.done ? n(e.value) : r(e.value).then(s, a);\r\n                        }\r\n                        c((i = i.apply(e, t || [])).next());\r\n                    });\r\n                };\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.ObstacleGame = void 0;\r\n            var r = n(3), o = n(67), s = n(2), a = n(6), c = n(5), l = function (_a) {\r\n                var e = _a.getRandomInt, t = _a.level;\r\n                var n = 80 * Math.log(t + 1);\r\n                var i = n, r = [];\r\n                var o = 2, s = 8;\r\n                var a = 1;\r\n                for (; r.length < n;) {\r\n                    r.push.apply(r, __spread(new Array(e(o, s) + (a ? 4 : 0)).fill(0), [1]));\r\n                    a = 0;\r\n                }\r\n                r.push.apply(r, __spread(new Array(3).fill(0)));\r\n                return r;\r\n            };\r\n            var u = /** @class */ (function () {\r\n                function u(e, _a) {\r\n                    var t = _a.seed, n = _a.currentPlayer, _b = _a.level, i = _b === void 0 ? 1 : _b, s = _a.gameIndex;\r\n                    this.state = {\r\n                        initialized: 0,\r\n                        started: 0,\r\n                        currentLeg: 1,\r\n                        blocked: 1,\r\n                        startTime: Number.MAX_VALUE,\r\n                    };\r\n                    this.callbacks = { onFinish: null, onShareState: null };\r\n                    this.root = e;\r\n                    this.scene = new Entity();\r\n                    this.scene.addComponent(new Transform({ position: new Vector3(0, 0, -0.001) }));\r\n                    this.ui = c.createUI(this.scene);\r\n                    this.gameSetup = {\r\n                        seed: t.toString(),\r\n                        currentPlayer: n,\r\n                        level: i,\r\n                        gameIndex: s,\r\n                    };\r\n                    this.randomizer = r.seedGen.create(t.toString());\r\n                    var a = 1 === n ? 2 : 1, u = l({ getRandomInt: this.getRandomInt.bind(this), level: i });\r\n                    void 0;\r\n                    this.screen1 = o.createScreen(this.scene, { player: 1, track: u });\r\n                    this.screen2 = o.createScreen(this.scene, { player: 2, track: u });\r\n                    this.roundResult1 = c.createRoundResult(this.scene, { player: 1 });\r\n                    this.roundResult2 = c.createRoundResult(this.scene, { player: 2 });\r\n                    this.roundResult1.hide();\r\n                    this.roundResult2.hide();\r\n                    this.moveLeg1 = this.moveLeg1.bind(this);\r\n                    this.moveLeg2 = this.moveLeg2.bind(this);\r\n                    this.jump = this.jump.bind(this);\r\n                    engine.addSystem(this);\r\n                }\r\n                u.prototype.setStartTime = function (e) {\r\n                    this.state.startTime = e;\r\n                };\r\n                u.prototype.getPlayerScreen = function (e) {\r\n                    return this['screen' + e];\r\n                };\r\n                u.prototype.init = function () {\r\n                    this.state.initialized = 1;\r\n                    this.scene.setParent(this.root);\r\n                };\r\n                u.prototype.tempBlock = function () {\r\n                    var _this = this;\r\n                    this.state.blocked = 1;\r\n                    this['screen' + this.gameSetup.currentPlayer].showCross();\r\n                    s.playOnce('fail');\r\n                    setTimeout(function () {\r\n                        _this.state.blocked = 0;\r\n                        _this['screen' + _this.gameSetup.currentPlayer].hideCross();\r\n                    }, 1e3);\r\n                };\r\n                u.prototype.moveLeg1 = function () {\r\n                    if (this.state.blocked || !this.state.started)\r\n                        return;\r\n                    var e = this.getPlayerScreen(this.gameSetup.currentPlayer);\r\n                    if (this.state.blocked ||\r\n                        1 !== this.state.currentLeg ||\r\n                        e.getScreenState().moving)\r\n                        return;\r\n                    e.moveScreen();\r\n                    this.state.currentLeg = 2;\r\n                    e.getNextStepValue() ? this.tempBlock() : s.playOnce('ok');\r\n                    var t = this.getPercentage(this.gameSetup.currentPlayer);\r\n                    void 0;\r\n                    this.ui.updateScore({ player: this.gameSetup.currentPlayer, score: t });\r\n                    this.callbacks.onShareState({\r\n                        movement: '1',\r\n                        player: this.gameSetup.currentPlayer,\r\n                        percentage: t,\r\n                    });\r\n                };\r\n                u.prototype.moveLeg2 = function () {\r\n                    if (this.state.blocked || !this.state.started)\r\n                        return;\r\n                    var e = this.getPlayerScreen(this.gameSetup.currentPlayer);\r\n                    if (this.state.blocked ||\r\n                        2 !== this.state.currentLeg ||\r\n                        e.getScreenState().moving)\r\n                        return;\r\n                    e.moveScreen();\r\n                    this.state.currentLeg = 1;\r\n                    e.getNextStepValue() ? this.tempBlock() : s.playOnce('ok');\r\n                    var t = this.getPercentage(this.gameSetup.currentPlayer);\r\n                    this.ui.updateScore({ player: this.gameSetup.currentPlayer, score: t });\r\n                    this.callbacks.onShareState({\r\n                        movement: '2',\r\n                        player: this.gameSetup.currentPlayer,\r\n                        percentage: t,\r\n                    });\r\n                };\r\n                u.prototype.jump = function () {\r\n                    if (this.state.blocked || !this.state.started)\r\n                        return;\r\n                    var e = this.getPlayerScreen(this.gameSetup.currentPlayer);\r\n                    if (1 !== e.getNextStepValue())\r\n                        return;\r\n                    if (e.getScreenState().moving)\r\n                        return;\r\n                    e.moveScreen(1);\r\n                    var t = this.getPercentage(this.gameSetup.currentPlayer, 1);\r\n                    this.ui.updateScore({ player: this.gameSetup.currentPlayer, score: t });\r\n                    this.callbacks.onShareState({\r\n                        movement: 'jump',\r\n                        player: this.gameSetup.currentPlayer,\r\n                        percentage: t,\r\n                    });\r\n                    s.playOnce('jump');\r\n                };\r\n                u.prototype.getPercentage = function (e, t) {\r\n                    var n = this['screen' + e].getScreenState().currentStep + (t ? 2 : 1), i = this['screen' + e].getTotalSteps() - 4;\r\n                    return Math.floor((100 * n) / i);\r\n                };\r\n                u.prototype.start = function () {\r\n                    var _this = this;\r\n                    this.state.started = 1;\r\n                    (function () {\r\n                        return i(_this, void 0, void 0, function () {\r\n                            var e;\r\n                            var _this = this;\r\n                            return __generator(this, function (_a) {\r\n                                switch (_a.label) {\r\n                                    case 0:\r\n                                        s.playLoop('race', { volume: 0.5 });\r\n                                        return [4 /*yield*/, h(3e3)];\r\n                                    case 1:\r\n                                        _a.sent();\r\n                                        s.playOnce('readygo');\r\n                                        a.updateTextPanel({ value: 'READY!' });\r\n                                        return [4 /*yield*/, h(700)];\r\n                                    case 2:\r\n                                        _a.sent();\r\n                                        a.updateTextPanel({ value: 'STEADY!' });\r\n                                        return [4 /*yield*/, h(800)];\r\n                                    case 3:\r\n                                        _a.sent();\r\n                                        a.updateTextPanel({ value: 'GO!' });\r\n                                        void 0;\r\n                                        e = this.getPlayerScreen(this.gameSetup.currentPlayer);\r\n                                        this.state.blocked = 0;\r\n                                        if (this.gameSetup.currentPlayer) {\r\n                                            this.state.blocked = 0;\r\n                                            Input.instance.subscribe('BUTTON_DOWN', ActionButton.PRIMARY, 0, this.moveLeg1);\r\n                                            Input.instance.subscribe('BUTTON_DOWN', ActionButton.SECONDARY, 0, this.moveLeg2);\r\n                                            Input.instance.subscribe('BUTTON_DOWN', ActionButton.POINTER, 0, this.jump);\r\n                                        }\r\n                                        e.onMove(function (e) {\r\n                                            e % 2 == 0;\r\n                                        });\r\n                                        e.onFinishScreen(function () {\r\n                                            _this.block();\r\n                                            s.stopSound('race');\r\n                                            var e = Date.now() - _this.state.startTime;\r\n                                            _this.callbacks.onFinish({\r\n                                                time: e,\r\n                                                isWinner: 1,\r\n                                                gameIndex: _this.gameSetup.gameIndex,\r\n                                                roundIndex: 0,\r\n                                            });\r\n                                            _this.ui.updateTime({\r\n                                                player: _this.gameSetup.currentPlayer,\r\n                                                time: e,\r\n                                            });\r\n                                            _this.ui.updateScore({\r\n                                                player: _this.gameSetup.currentPlayer,\r\n                                                score: 100,\r\n                                            });\r\n                                            _this.callbacks.onShareState({\r\n                                                player: _this.gameSetup.currentPlayer,\r\n                                                timeSinceStart: e,\r\n                                                percentage: 100,\r\n                                            });\r\n                                        });\r\n                                        this.screen1.handleVisibility();\r\n                                        this.screen2.handleVisibility();\r\n                                        return [4 /*yield*/, h(1e3)];\r\n                                    case 4:\r\n                                        _a.sent();\r\n                                        a.updateTextPanel({ value: '' });\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        });\r\n                    })();\r\n                };\r\n                u.prototype.update = function (e) {\r\n                    if (this.state.initialized)\r\n                        if (!this.state.started && Date.now() - 4e3 >= this.state.startTime)\r\n                            this.start();\r\n                        else {\r\n                            this.state.started &&\r\n                                this.getPlayerScreen(1).getScreenState().moving &&\r\n                                this.getPlayerScreen(1).updateScreen(e);\r\n                            this.state.started &&\r\n                                this.getPlayerScreen(2).getScreenState().moving &&\r\n                                this.getPlayerScreen(2).updateScreen(e);\r\n                        }\r\n                };\r\n                u.prototype.destroy = function () {\r\n                    s.stopSound('race');\r\n                    a.updateTextPanel({ value: '' });\r\n                    Input.instance.unsubscribe('BUTTON_DOWN', ActionButton.PRIMARY, this.moveLeg1);\r\n                    Input.instance.unsubscribe('BUTTON_DOWN', ActionButton.SECONDARY, this.moveLeg2);\r\n                    Input.instance.unsubscribe('BUTTON_DOWN', ActionButton.POINTER, this.jump);\r\n                    this.scene.setParent(null);\r\n                    engine.removeEntity(this.scene);\r\n                    engine.removeSystem(this);\r\n                };\r\n                u.prototype.block = function () {\r\n                    this.state.blocked = 1;\r\n                    Input.instance.unsubscribe('BUTTON_DOWN', ActionButton.PRIMARY, this.moveLeg1);\r\n                    Input.instance.unsubscribe('BUTTON_DOWN', ActionButton.SECONDARY, this.moveLeg2);\r\n                    Input.instance.unsubscribe('BUTTON_DOWN', ActionButton.POINTER, this.jump);\r\n                };\r\n                u.prototype.finish = function (_a) {\r\n                    var e = _a.winner;\r\n                    var t = 1 === e ? 2 : 1;\r\n                    this.roundResult1.show();\r\n                    this.roundResult2.show();\r\n                    this['roundResult' + e].update(1);\r\n                    this['roundResult' + t].update(0);\r\n                };\r\n                u.prototype.onFinish = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onFinish = e;\r\n                    return function () { return (_this.callbacks.onFinish = null); };\r\n                };\r\n                u.prototype.onShareState = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onShareState = e;\r\n                    return function () { return (_this.callbacks.onShareState = null); };\r\n                };\r\n                u.prototype.shareState = function (e) {\r\n                    void 0;\r\n                    var t = e.movement, n = e.player, i = e.timeSinceStart, r = e.percentage;\r\n                    if (i)\r\n                        this.ui.updateTime({ player: n, time: i });\r\n                    else {\r\n                        var e_15 = this.getPlayerScreen(n);\r\n                        '1' === t || '2' === t ? e_15.moveScreen() : e_15.moveScreen(1);\r\n                    }\r\n                    this.ui.updateScore({ player: n, score: r });\r\n                };\r\n                u.prototype.getRandomInt = function (e, t, n) {\r\n                    var i = Math.floor(this.randomizer.random() * (t - e + 1)) + e;\r\n                    return i === n ? this.getRandomInt(e, t, n) : i;\r\n                };\r\n                return u;\r\n            }());\r\n            t.ObstacleGame = u;\r\n            u.id = 'Obstacle';\r\n            u.instructions =\r\n                'Alternate E and F  with rythm to run,\\n    when red obstacle right in front,\\n    Press click to jump!\\n    ';\r\n            function h(e) {\r\n                return new Promise(function (t) { return setTimeout(t, e); });\r\n            }\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.MathGame = void 0;\r\n            var i = n(2), r = n(1), o = n(4), s = n(3), a = n(9), c = n(0), l = n(5), u = 5, h = 4 / 128, d = 144, p = function (e, _a) {\r\n                var t = _a.player;\r\n                var n = new Entity(), i = new PlaneShape();\r\n                i.withCollisions = 0;\r\n                i.uvs = c.getSpriteUv(1, d, 64, 64);\r\n                n.addComponent(r.spriteMaterial);\r\n                n.addComponent(i);\r\n                n.addComponent(new Transform({\r\n                    position: new Vector3(1 === t ? -(2.2 + 2 * h) : 2.2 - 3 * h, 1.5 - 2 * h, -0.002),\r\n                    scale: new Vector3(1 === t ? 2 : -2, 2, 1),\r\n                }));\r\n                n.setParent(e);\r\n                return i;\r\n            };\r\n            var f = /** @class */ (function () {\r\n                function f(e, _a) {\r\n                    var t = _a.seed, n = _a.level, i = _a.currentPlayer, r = _a.gameIndex;\r\n                    this.state = {\r\n                        blocked: 0,\r\n                        started: 0,\r\n                        initialized: 0,\r\n                        startTime: Number.MAX_VALUE,\r\n                        roundStartTime: Number.MAX_VALUE,\r\n                        lastRoundStartTime: Number.MAX_VALUE,\r\n                        waitingRound: 0,\r\n                        round: 0,\r\n                        finished: 0,\r\n                        score1: 0,\r\n                        score2: 0,\r\n                    };\r\n                    this.callbacks = {\r\n                        onFinish: null,\r\n                        onShareState: null,\r\n                        onFinishRound: null,\r\n                    };\r\n                    this.scene = new Entity();\r\n                    this.scene.addComponent(new Transform({ position: new Vector3(0, 0, -0.002) }));\r\n                    this.ui = l.createUI(this.scene);\r\n                    this.teacher1 = p(this.scene, { player: 1 });\r\n                    this.teacher2 = p(this.scene, { player: 2 });\r\n                    this.player1 = l.createPlayerAnswer(this.scene, { player: 1 });\r\n                    this.player2 = l.createPlayerAnswer(this.scene, { player: 2 });\r\n                    this.player1.hide();\r\n                    this.player2.hide();\r\n                    this.roundResult1 = l.createRoundResult(this.scene, { player: 1 });\r\n                    this.roundResult2 = l.createRoundResult(this.scene, { player: 2 });\r\n                    this.roundResult1.hide();\r\n                    this.roundResult2.hide();\r\n                    this.gameSetup = { seed: t, currentPlayer: i, level: n, gameIndex: r };\r\n                    this.root = e;\r\n                    this.randomizer = s.seedGen.create(t.toString());\r\n                    var o = new Entity();\r\n                    this.question = new TextShape('');\r\n                    this.question.withCollisions = 0;\r\n                    this.question.vTextAlign = 'top';\r\n                    this.question.fontSize = 5;\r\n                    o.addComponent(this.question);\r\n                    o.addComponent(new Transform({ position: new Vector3(0, 3.5, -0.001) }));\r\n                    o.setParent(this.scene);\r\n                    engine.addSystem(this);\r\n                }\r\n                f.prototype.setStartTime = function (e) {\r\n                    this.state.startTime = e;\r\n                };\r\n                f.prototype.setRoundStartTime = function (e) {\r\n                    void 0;\r\n                    this.state.roundStartTime = e;\r\n                };\r\n                f.prototype.onClickAnswer = function (e) {\r\n                    if (this.state.blocked || !this.state.started)\r\n                        return;\r\n                    this.state.blocked = 1;\r\n                    i.playOnce('swing');\r\n                    var t = this['player' + this.gameSetup.currentPlayer];\r\n                    t.show();\r\n                    t.wrapperEntity\r\n                        .getComponent(Transform)\r\n                        .position.set(this.answersT[e].position.x +\r\n                        (1 === this.gameSetup.currentPlayer ? -0.2 : 0.2), this.answersT[e].position.y, this.answersT[e].position.z);\r\n                    var n = this.answers[e].value === this.answers[this.solutionIndex].value;\r\n                    t.setSprite(n);\r\n                    var r = a.getTimeSinceStart(0 === this.state.round\r\n                        ? this.state.startTime\r\n                        : this.state.lastRoundStartTime), o = n ? r : 999999999 - r;\r\n                    this.callbacks.onShareState({\r\n                        type: 'election',\r\n                        player: this.gameSetup.currentPlayer,\r\n                        index: e,\r\n                        time: o,\r\n                        timeSinceStart: r,\r\n                        round: this.state.round,\r\n                    });\r\n                    this.ui.updateTime({ player: this.gameSetup.currentPlayer, time: r });\r\n                    if (this.state.round < u - 1) {\r\n                        this.callbacks.onFinishRound({\r\n                            player: this.gameSetup.currentPlayer,\r\n                            time: o,\r\n                            round: this.state.round,\r\n                            isWinner: n,\r\n                            gameIndex: this.gameSetup.gameIndex,\r\n                            roundIndex: this.state.round,\r\n                        });\r\n                        this.state.waitingRound = 1;\r\n                    }\r\n                    else\r\n                        this.callbacks.onFinish({\r\n                            player: this.gameSetup.currentPlayer,\r\n                            time: o,\r\n                            round: this.state.round,\r\n                            isWinner: n,\r\n                            gameIndex: this.gameSetup.gameIndex,\r\n                            roundIndex: this.state.round,\r\n                        });\r\n                };\r\n                f.prototype.init = function () {\r\n                    i.playLoop('money', { volume: 0.5 });\r\n                    this.state.initialized = 1;\r\n                    o.updateSpritePanel({ uvs: c.getSpriteUv(3, 0, 192, 128) });\r\n                    o.showSpritePanel();\r\n                    this.scene.setParent(this.root);\r\n                };\r\n                f.prototype.block = function () {\r\n                    this.state.blocked = 1;\r\n                };\r\n                f.prototype.destroy = function () {\r\n                    i.stopSound('money');\r\n                    o.hideSpritePanel();\r\n                    this.scene.setParent(null);\r\n                    engine.removeEntity(this.scene);\r\n                };\r\n                f.prototype.start = function () {\r\n                    var _this = this;\r\n                    this.ui.hideTime();\r\n                    var e = Math.floor(50 * this.randomizer.random()), t = Math.floor(50 * this.randomizer.random());\r\n                    this.question.value = e + \" + \" + t;\r\n                    this.state.started = 1;\r\n                    var n = e + t, i = (this.solutionIndex = Math.floor(6 * this.randomizer.random())), r = n - 1, o = this.getRandomIntExcept(0, 5, [i]), s = n - 10, a = this.getRandomIntExcept(0, 5, [i, o]);\r\n                    this.answers = Array(6).fill(null);\r\n                    this.answersT = Array(6).fill(null);\r\n                    var c = [], l = new PlaneShape(), u = new Material();\r\n                    u.albedoColor = new Color4(1, 1, 1, 0.05);\r\n                    this.answers.forEach(function (e, t) {\r\n                        var h = new Entity(), d = new Entity();\r\n                        l.withCollisions = 0;\r\n                        d.addComponent(l);\r\n                        d.addComponent(u);\r\n                        _this.answers[t] = new TextShape();\r\n                        _this.answers[t].withCollisions = 0;\r\n                        _this.answers[t].fontSize = 3;\r\n                        h.addComponent(_this.answers[t]);\r\n                        _this.answers[t].value = c[t] =\r\n                            t === i\r\n                                ? n\r\n                                : t === o\r\n                                    ? r\r\n                                    : t === a\r\n                                        ? s\r\n                                        : _this.getRandomIntExcept(0, 100, c);\r\n                        _this.answers[t].visible = 0;\r\n                        h.addComponent(new Transform({ position: new Vector3(0, 0, -0.01) }));\r\n                        _this.answersT[t] = new Transform({\r\n                            position: new Vector3(0 === t || 3 === t ? -1 : 1 === t || 4 === t ? 0 : 1, t < 3 ? 2.5 : 1.5, 0),\r\n                            scale: new Vector3(0.9, 0.9, 0.9),\r\n                        });\r\n                        d.addComponent(_this.answersT[t]);\r\n                        d.addComponent(new OnClick(function () {\r\n                            _this.onClickAnswer(t);\r\n                        }));\r\n                        d.setParent(_this.scene);\r\n                        h.setParent(d);\r\n                    });\r\n                };\r\n                f.prototype.startRound = function () {\r\n                    var _this = this;\r\n                    this.state.round++;\r\n                    this.roundResult1.hide();\r\n                    this.roundResult2.hide();\r\n                    this.ui.hideTime();\r\n                    this.player1.hide();\r\n                    this.player2.hide();\r\n                    this.question.value = '';\r\n                    this.state.lastRoundStartTime = this.state.roundStartTime;\r\n                    this.state.roundStartTime = Number.MAX_VALUE;\r\n                    this.state.waitingRound = 0;\r\n                    this.answers.forEach(function (e, t) {\r\n                        _this.answers[t].value = '';\r\n                    });\r\n                    this.question.value = '';\r\n                    this.teacher1.uvs = c.getSpriteUv(1, d, 64, 64);\r\n                    this.teacher2.uvs = c.getSpriteUv(1, d, 64, 64);\r\n                    setTimeout(function () {\r\n                        _this.gameSetup.currentPlayer && (_this.state.blocked = 0);\r\n                        var e = Math.floor(50 * _this.randomizer.random()), t = Math.floor(50 * _this.randomizer.random());\r\n                        _this.question.value = e + \" + \" + t;\r\n                        var n = e + t, i = (_this.solutionIndex = Math.floor(6 * _this.randomizer.random())), r = n - 1, o = _this.getRandomIntExcept(0, 5, [i]), s = n - 10, a = _this.getRandomIntExcept(0, 5, [i, o]), c = [];\r\n                        _this.answers.forEach(function (e, t) {\r\n                            _this.answers[t].value = c[t] =\r\n                                t === i\r\n                                    ? n\r\n                                    : t === o\r\n                                        ? r\r\n                                        : t === a\r\n                                            ? s\r\n                                            : _this.getRandomIntExcept(0, 100, c);\r\n                        });\r\n                    }, 500);\r\n                };\r\n                f.prototype.update = function (e) {\r\n                    if (this.state.initialized)\r\n                        if (!this.state.waitingRound &&\r\n                            !this.state.started &&\r\n                            Date.now() >= this.state.startTime) {\r\n                            void 0;\r\n                            this.start();\r\n                        }\r\n                        else\r\n                            this.state.started &&\r\n                                this.state.waitingRound &&\r\n                                Date.now() >= this.state.roundStartTime\r\n                                ? this.startRound()\r\n                                : Date.now() >= this.state.roundStartTime;\r\n                };\r\n                f.prototype.finish = function (e) {\r\n                    var t = e.winner, n = 1 === t ? 2 : 1;\r\n                    this.state.blocked = 1;\r\n                    this['teacher' + t].uvs = c.getSpriteUv(3, d, 64, 64);\r\n                    this['teacher' + n].uvs = c.getSpriteUv(2, d, 64, 64);\r\n                    t === this.gameSetup.currentPlayer\r\n                        ? i.playOnce('wow')\r\n                        : i.playOnce('fail');\r\n                    this.roundResult1.show();\r\n                    this.roundResult2.show();\r\n                    this['roundResult' + t].update(1);\r\n                    this['roundResult' + n].update(0);\r\n                };\r\n                f.prototype.finishRound = function (_a) {\r\n                    var e = _a.winner;\r\n                    void 0;\r\n                    this.state.blocked = 1;\r\n                    this.state['score' + e] += 1;\r\n                    this.ui.updateScore({ player: e, score: this.state['score' + e] });\r\n                    var t = 1 === e ? 2 : 1;\r\n                    void 0;\r\n                    this['teacher' + e].uvs = c.getSpriteUv(3, d, 64, 64);\r\n                    this['teacher' + t].uvs = c.getSpriteUv(2, d, 64, 64);\r\n                    e === this.gameSetup.currentPlayer\r\n                        ? i.playOnce('wow')\r\n                        : i.playOnce('fail');\r\n                    this['roundResult' + e].update(1);\r\n                    this['roundResult' + t].update(0);\r\n                    this.roundResult1.show();\r\n                    this.roundResult2.show();\r\n                    this.state.waitingRound = 1;\r\n                };\r\n                f.prototype.onFinish = function (e) {\r\n                    this.callbacks.onFinish = e;\r\n                };\r\n                f.prototype.onFinishRound = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onFinishRound = e;\r\n                    return function () { return (_this.callbacks.onFinishRound = null); };\r\n                };\r\n                f.prototype.shareState = function (e) {\r\n                    var t = e.player, n = e.index, i = e.timeSinceStart, r = e.time, o = e.round;\r\n                    if (o !== this.state.round)\r\n                        return;\r\n                    var s = n === this.solutionIndex, a = this['player' + t];\r\n                    a.show();\r\n                    a.wrapperEntity\r\n                        .getComponent(Transform)\r\n                        .position.set(this.answersT[n].position.x + (1 === t ? -0.2 : 0.2), this.answersT[n].position.y, this.answersT[n].position.z);\r\n                    a.setSprite(s);\r\n                    this.ui.updateTime({ player: t, time: i });\r\n                };\r\n                f.prototype.onShareState = function (e) {\r\n                    this.callbacks.onShareState = e;\r\n                };\r\n                f.prototype.getRandomIntExcept = function (e, t, n) {\r\n                    var i = e + Math.floor(this.randomizer.random() * (t + 1 - e));\r\n                    if (!n)\r\n                        return i;\r\n                    for (; ~n.indexOf(i);)\r\n                        i = e + Math.floor(this.randomizer.random() * (t + 1 - e));\r\n                    return i;\r\n                };\r\n                return f;\r\n            }());\r\n            t.MathGame = f;\r\n            f.id = 'Math';\r\n            f.instructions = 'Math\\nClick the correct answer';\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.DifferentGame = void 0;\r\n            var i = n(5), r = n(3), o = n(1), s = n(0), a = n(2), c = n(4), l = n(6), u = n(9), h = 192, d = function (e, t, n) {\r\n                var i = new Entity(), r = new PlaneShape();\r\n                var a = 0;\r\n                i.addComponent(r);\r\n                i.addComponent(o.spriteMaterial);\r\n                i.addComponent(new Transform({\r\n                    scale: new Vector3(1.9, 1.9, 1.9),\r\n                    position: new Vector3(0 === t ? -2 : 1 === t ? 0 : 2, 2, -0.001),\r\n                }));\r\n                r.uvs = s.getSpriteUv(1, h, 64, 64);\r\n                r.uvs = s.getSpriteUv(0, 0, 0, 0);\r\n                i.setParent(e);\r\n                i.addComponent(new OnClick(function () {\r\n                    n(t);\r\n                }));\r\n                return {\r\n                    setIndex: function (e) {\r\n                        a = e;\r\n                        r.uvs = s.getSpriteUv(a, h, 64, 64);\r\n                    },\r\n                    getSpriteIndex: function () { return a; },\r\n                    hide: function () {\r\n                        r.uvs = s.getSpriteUv(0, 0, 0, 0);\r\n                    },\r\n                };\r\n            }, p = 5;\r\n            var f = /** @class */ (function () {\r\n                function f(e, _a) {\r\n                    var _this = this;\r\n                    var t = _a.seed, n = _a.level, o = _a.currentPlayer, s = _a.gameIndex;\r\n                    this.callbacks = {\r\n                        onFinish: null,\r\n                        onShareState: null,\r\n                        onFinishRound: null,\r\n                    };\r\n                    this.state = {\r\n                        blocked: 0,\r\n                        started: 0,\r\n                        initialized: 0,\r\n                        startTime: Number.MAX_VALUE,\r\n                        roundStartTime: Number.MAX_VALUE,\r\n                        lastRoundStartTime: Number.MAX_VALUE,\r\n                        waitingRound: 0,\r\n                        round: 0,\r\n                        finished: 0,\r\n                        score1: 0,\r\n                        score2: 0,\r\n                        equalSpriteIndex: 0,\r\n                        differentSpriteIndex: 0,\r\n                        answerPositions: [1, 0, 0],\r\n                    };\r\n                    this.gameSetup = { seed: t, currentPlayer: o, level: n, gameIndex: s };\r\n                    this.root = e;\r\n                    this.scene = new Entity();\r\n                    this.scene.addComponent(new Transform({ position: new Vector3(0, 0, -0.002) }));\r\n                    this.ui = i.createUI(this.scene);\r\n                    this.player1 = i.createPlayerAnswer(this.scene, { player: 1 });\r\n                    this.player2 = i.createPlayerAnswer(this.scene, { player: 2 });\r\n                    this.player1.hide();\r\n                    this.player2.hide();\r\n                    void 0;\r\n                    this.randomizer = r.seedGen.create(t.toString());\r\n                    this.onClickAnswer = this.onClickAnswer.bind(this);\r\n                    this.answers = [0, 1, 2].map(function (e) {\r\n                        return d(_this.scene, e, _this.onClickAnswer);\r\n                    });\r\n                    engine.addSystem(this);\r\n                    o || (this.state.blocked = 1);\r\n                }\r\n                f.prototype.onClickAnswer = function (e) {\r\n                    if (this.state.blocked || !this.state.started)\r\n                        return;\r\n                    this.state.blocked = 1;\r\n                    a.playOnce('swing');\r\n                    var t = !!this.state.answerPositions[e];\r\n                    void 0;\r\n                    var n = this['player' + this.gameSetup.currentPlayer];\r\n                    n.show();\r\n                    n.wrapperEntity\r\n                        .getComponent(Transform)\r\n                        .position.set((0 === e ? -2 : 1 === e ? 0 : 2) +\r\n                        (1 === this.gameSetup.currentPlayer ? -0.5 : 0.5), 2, -0.002);\r\n                    n.setSprite(t);\r\n                    var i = u.getTimeSinceStart(0 === this.state.round\r\n                        ? this.state.startTime\r\n                        : this.state.lastRoundStartTime), r = t ? i : 999999999 - i;\r\n                    this.callbacks.onShareState({\r\n                        player: this.gameSetup.currentPlayer,\r\n                        isWinner: t,\r\n                        answerIndex: e,\r\n                        time: r,\r\n                        timeSinceStart: i,\r\n                        round: this.state.round,\r\n                    });\r\n                    this.ui.updateTime({ player: this.gameSetup.currentPlayer, time: i });\r\n                    if (this.state.round < p - 1) {\r\n                        this.callbacks.onFinishRound({\r\n                            player: this.gameSetup.currentPlayer,\r\n                            time: r,\r\n                            roundIndex: this.state.round,\r\n                            gameIndex: this.gameSetup.gameIndex,\r\n                        });\r\n                        this.state.waitingRound = 1;\r\n                    }\r\n                    else\r\n                        this.callbacks.onFinish({\r\n                            player: this.gameSetup.currentPlayer,\r\n                            time: r,\r\n                            roundIndex: this.state.round,\r\n                            gameIndex: this.gameSetup.gameIndex,\r\n                        });\r\n                };\r\n                f.prototype.init = function () {\r\n                    l.updateTextPanel({\r\n                        value: 'Which is different?',\r\n                        color: Color3.Black(),\r\n                    });\r\n                    a.playLoop('money', { volume: 0.5 });\r\n                    this.state.initialized = 1;\r\n                    c.updateSpritePanel({ uvs: s.getSpriteUv(9, 0, 192, 128) });\r\n                    c.showSpritePanel();\r\n                    this.scene.setParent(this.root);\r\n                };\r\n                f.prototype.setStartTime = function (e) {\r\n                    void 0;\r\n                    this.state.startTime = e;\r\n                };\r\n                f.prototype.setRoundStartTime = function (e) {\r\n                    this.state.roundStartTime = e;\r\n                };\r\n                f.prototype.finish = function (e) {\r\n                    var t = e.winner, n = 1 === t ? 2 : 1;\r\n                    this.state.blocked = 1;\r\n                    t === this.gameSetup.currentPlayer\r\n                        ? a.playOnce('wow')\r\n                        : a.playOnce('fail');\r\n                };\r\n                f.prototype.finishRound = function (_a) {\r\n                    var e = _a.winner;\r\n                    this.state.blocked = 1;\r\n                    this.state['score' + e] += 1;\r\n                    this.ui.updateScore({ player: e, score: this.state['score' + e] });\r\n                    var t = 1 === e ? 2 : 1;\r\n                    e === this.gameSetup.currentPlayer\r\n                        ? a.playOnce('wow')\r\n                        : a.playOnce('fail');\r\n                    this.state.waitingRound = 1;\r\n                };\r\n                f.prototype.reproduceRound = function () {\r\n                    var _this = this;\r\n                    this.gameSetup.currentPlayer && (this.state.blocked = 0);\r\n                    this.ui.hideTime();\r\n                    l.updateTextPanel({\r\n                        value: 'Which is different?',\r\n                        color: Color3.Black(),\r\n                    });\r\n                    this.state.equalSpriteIndex = this.getRandomIntExcept(1, 9);\r\n                    this.state.differentSpriteIndex = this.getRandomIntExcept(1, 9, [\r\n                        this.state.equalSpriteIndex,\r\n                    ]);\r\n                    void 0;\r\n                    this.state.answerPositions = m([1, 0, 0], this.randomizer.random);\r\n                    this.state.answerPositions.forEach(function (e, t) {\r\n                        e\r\n                            ? _this.answers[t].setIndex(_this.state.differentSpriteIndex)\r\n                            : _this.answers[t].setIndex(_this.state.equalSpriteIndex);\r\n                    });\r\n                };\r\n                f.prototype.start = function () {\r\n                    void 0;\r\n                    this.state.started = 1;\r\n                    this.reproduceRound();\r\n                };\r\n                f.prototype.startRound = function () {\r\n                    var _this = this;\r\n                    this.state.round++;\r\n                    this.player1.hide();\r\n                    this.player2.hide();\r\n                    this.state.lastRoundStartTime = this.state.roundStartTime;\r\n                    this.state.roundStartTime = Number.MAX_VALUE;\r\n                    this.state.waitingRound = 0;\r\n                    this.answers.forEach(function (e) { return e.hide(); });\r\n                    setTimeout(function () {\r\n                        _this.reproduceRound();\r\n                    }, 500);\r\n                };\r\n                f.prototype.block = function () {\r\n                    this.state.blocked = 1;\r\n                };\r\n                f.prototype.update = function (e) {\r\n                    this.state.initialized &&\r\n                        (!this.state.waitingRound &&\r\n                            !this.state.started &&\r\n                            Date.now() >= this.state.startTime\r\n                            ? this.start()\r\n                            : this.state.started &&\r\n                                this.state.waitingRound &&\r\n                                Date.now() >= this.state.roundStartTime &&\r\n                                this.startRound());\r\n                };\r\n                f.prototype.shareState = function (_a) {\r\n                    var e = _a.player, t = _a.answerIndex, n = _a.isWinner, i = _a.timeSinceStart, r = _a.round;\r\n                    this.ui.updateTime({ player: e, time: i });\r\n                    var o = this['player' + e], s = t;\r\n                    o.setSprite(n);\r\n                    o.show();\r\n                    o.wrapperEntity\r\n                        .getComponent(Transform)\r\n                        .position.set((0 === s ? -2 : 1 === s ? 0 : 2) + (1 === e ? -0.5 : 0.5), 2, -0.002);\r\n                };\r\n                f.prototype.destroy = function () {\r\n                    a.stopSound('money');\r\n                    c.hideSpritePanel();\r\n                    this.scene.setParent(null);\r\n                    engine.removeEntity(this.scene);\r\n                };\r\n                f.prototype.onFinish = function (e) {\r\n                    this.callbacks.onFinish = e;\r\n                };\r\n                f.prototype.onFinishRound = function (e) {\r\n                    this.callbacks.onFinishRound = e;\r\n                };\r\n                f.prototype.onShareState = function (e) {\r\n                    this.callbacks.onShareState = e;\r\n                };\r\n                f.prototype.getRandomIntExcept = function (e, t, n) {\r\n                    var i = e + Math.floor(this.randomizer.random() * (t + 1 - e));\r\n                    if (!n)\r\n                        return i;\r\n                    for (; ~n.indexOf(i);)\r\n                        i = e + Math.floor(this.randomizer.random() * (t + 1 - e));\r\n                    return i;\r\n                };\r\n                return f;\r\n            }());\r\n            t.DifferentGame = f;\r\n            f.id = 'Different';\r\n            f.instructions = 'Different\\nClick the image that is different';\r\n            function m(e, t) {\r\n                for (var n = e.length, i, r; 0 !== n;) {\r\n                    r = Math.floor(t() * n);\r\n                    i = e[(n -= 1)];\r\n                    e[n] = e[r];\r\n                    e[r] = i;\r\n                }\r\n                return e;\r\n            }\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.FroggerGame = void 0;\r\n            var i = n(70), r = n(3), o = n(5), s = n(2), a = n(6), c = {\r\n                UP: ActionButton.POINTER,\r\n                LEFT: ActionButton.PRIMARY,\r\n                RIGHT: ActionButton.SECONDARY,\r\n            };\r\n            var l = /** @class */ (function () {\r\n                function l(e, _a) {\r\n                    var _this = this;\r\n                    var t = _a.seed, n = _a.currentPlayer, _b = _a.level, s = _b === void 0 ? 1 : _b, a = _a.gameIndex;\r\n                    this.callbacks = { onFinish: null, onShareState: null };\r\n                    this.state = {\r\n                        blocked: 0,\r\n                        started: 0,\r\n                        initialized: 0,\r\n                        startTime: Number.MAX_VALUE,\r\n                        finished: 0,\r\n                    };\r\n                    this.root = e;\r\n                    this.scene = new Entity();\r\n                    this.scene.addComponent(new Transform({ position: new Vector3(0, 0, -0.001) }));\r\n                    this.ui = o.createUI(this.scene);\r\n                    this.gameSetup = { seed: t, currentPlayer: n, level: s, gameIndex: a };\r\n                    this.randomizer = r.seedGen.create(t.toString());\r\n                    this.screen1 = i.createScreen(this.scene, { player: 1, seed: t });\r\n                    this.screen2 = i.createScreen(this.scene, { player: 2, seed: t });\r\n                    this.roundResult1 = o.createRoundResult(this.scene, { player: 1 });\r\n                    this.roundResult2 = o.createRoundResult(this.scene, { player: 2 });\r\n                    this.roundResult1.hide();\r\n                    this.roundResult2.hide();\r\n                    n &&\r\n                        this['screen' + n].onStateChange(function (e) {\r\n                            _this.ui.updateScore({ score: e.score, player: n });\r\n                            var _a = e.frogPosition, t = _a.x, i = _a.y, r = _a.z;\r\n                            _this.callbacks.onShareState(Object.assign(Object.assign({}, e), {\r\n                                player: n,\r\n                                frogPosition: { x: t, y: i, z: r },\r\n                                takenSammiches: e.takenSammiches,\r\n                            }));\r\n                            void 0;\r\n                            if (5 === e.score && !_this.state.finished) {\r\n                                var e_16 = Date.now() - _this.state.startTime;\r\n                                _this.block();\r\n                                n && _this['screen' + n].block();\r\n                                _this.state.finished = 1;\r\n                                _this.callbacks.onFinish({\r\n                                    isWinner: 1,\r\n                                    time: e_16,\r\n                                    player: n,\r\n                                    gameIndex: _this.gameSetup.gameIndex,\r\n                                    roundIndex: 0,\r\n                                });\r\n                            }\r\n                        });\r\n                    engine.addSystem(this);\r\n                    this.up = this.up.bind(this);\r\n                    this.left = this.left.bind(this);\r\n                    this.right = this.right.bind(this);\r\n                }\r\n                l.prototype.setStartTime = function (e) {\r\n                    this.state.startTime = e;\r\n                };\r\n                l.prototype.getPlayerScreen = function (e) {\r\n                    return this['screen' + e];\r\n                };\r\n                l.prototype.init = function () {\r\n                    this.state.initialized = 1;\r\n                    this.scene.setParent(this.root);\r\n                    s.playLoop('race', { volume: 0.5 });\r\n                };\r\n                l.prototype.start = function () {\r\n                    void 0;\r\n                    this.state.started = 1;\r\n                    if (this.gameSetup.currentPlayer) {\r\n                        Input.instance.subscribe('BUTTON_DOWN', c.UP, 0, this.up);\r\n                        Input.instance.subscribe('BUTTON_DOWN', c.LEFT, 0, this.left);\r\n                        Input.instance.subscribe('BUTTON_DOWN', c.RIGHT, 0, this.right);\r\n                    }\r\n                };\r\n                l.prototype.up = function () {\r\n                    var e;\r\n                    this.state.started &&\r\n                        !this.state.blocked &&\r\n                        (null === (e = this.getPlayerScreen(this.gameSetup.currentPlayer)) ||\r\n                            void 0 === e\r\n                            ? void 0\r\n                            : e.up());\r\n                };\r\n                l.prototype.left = function () {\r\n                    var e;\r\n                    this.state.started &&\r\n                        !this.state.blocked &&\r\n                        (null === (e = this.getPlayerScreen(this.gameSetup.currentPlayer)) ||\r\n                            void 0 === e\r\n                            ? void 0\r\n                            : e.left());\r\n                };\r\n                l.prototype.right = function () {\r\n                    var e;\r\n                    this.state.started &&\r\n                        !this.state.blocked &&\r\n                        (null === (e = this.getPlayerScreen(this.gameSetup.currentPlayer)) ||\r\n                            void 0 === e\r\n                            ? void 0\r\n                            : e.right());\r\n                };\r\n                l.prototype.update = function (e) {\r\n                    if (this.state.initialized)\r\n                        if (!this.state.started && Date.now() - 4e3 >= this.state.startTime)\r\n                            this.start();\r\n                        else {\r\n                            this.state.started &&\r\n                                this.getPlayerScreen(1).updateScreen(e, 1 === this.gameSetup.currentPlayer);\r\n                            this.state.started &&\r\n                                this.getPlayerScreen(2).updateScreen(e, 2 === this.gameSetup.currentPlayer);\r\n                        }\r\n                };\r\n                l.prototype.block = function () {\r\n                    this.state.blocked = 1;\r\n                    this.gameSetup.currentPlayer &&\r\n                        this['screen' + this.gameSetup.currentPlayer].block();\r\n                };\r\n                l.prototype.destroy = function () {\r\n                    void 0;\r\n                    s.stopSound('race');\r\n                    a.updateTextPanel({ value: '' });\r\n                    Input.instance.unsubscribe('BUTTON_DOWN', c.UP, this.up);\r\n                    Input.instance.unsubscribe('BUTTON_DOWN', c.LEFT, this.left);\r\n                    Input.instance.unsubscribe('BUTTON_DOWN', c.RIGHT, this.right);\r\n                    this.scene.setParent(null);\r\n                    engine.removeEntity(this.scene);\r\n                    engine.removeSystem(this);\r\n                };\r\n                l.prototype.shareState = function (_a) {\r\n                    var e = _a.score, t = _a.player, n = _a.frogPosition, i = _a.takenSammiches;\r\n                    void 0;\r\n                    var _b = n || {}, r = _b.x, o = _b.y, s = _b.z;\r\n                    this.ui.updateScore({ score: e, player: t });\r\n                    this['screen' + t].setFrogPosition(r, o, s);\r\n                    this['screen' + t].setTakenSammiches(i);\r\n                };\r\n                l.prototype.finish = function (_a) {\r\n                    var e = _a.winner;\r\n                    void 0;\r\n                    var t = 1 === e ? 2 : 1;\r\n                    this.roundResult1.show();\r\n                    this.roundResult2.show();\r\n                    this['roundResult' + e].update(1);\r\n                    this['roundResult' + t].update(0);\r\n                };\r\n                l.prototype.onFinish = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onFinish = e;\r\n                    return function () { return (_this.callbacks.onFinish = null); };\r\n                };\r\n                l.prototype.onShareState = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onShareState = e;\r\n                    return function () { return (_this.callbacks.onShareState = null); };\r\n                };\r\n                return l;\r\n            }());\r\n            t.FroggerGame = l;\r\n            l.id = 'Frogger';\r\n            l.instructions =\r\n                'cross the roads and\\ntake all sammiches\\npressing E F and CLICK';\r\n        },\r\n        function (e, t, n) {\r\n            n.r(t);\r\n            n.d(t, 'send', function () {\r\n                return r;\r\n            });\r\n            n.d(t, 'get', function () {\r\n                return o;\r\n            });\r\n            n.d(t, 'post', function () {\r\n                return s;\r\n            });\r\n            n.d(t, 'patch', function () {\r\n                return a;\r\n            });\r\n            n.d(t, 'del', function () {\r\n                return c;\r\n            });\r\n            n.d(t, 'put', function () {\r\n                return l;\r\n            });\r\n            function i(e, t) {\r\n                t.headers = e.headers || {};\r\n                t.statusMessage = e.statusText;\r\n                t.statusCode = e.status;\r\n                t.data = e.response;\r\n            }\r\n            function r(e, t, n) {\r\n                return new Promise(function (r, o) {\r\n                    n = n || {};\r\n                    var s, a, c, l, u = new XMLHttpRequest(), h = n.headers || {};\r\n                    n.timeout && (u.timeout = n.timeout);\r\n                    u.ontimeout = u.onerror = function (e) {\r\n                        e.timeout = 'timeout' == e.type;\r\n                        o(e);\r\n                    };\r\n                    u.open(e, t.href || t);\r\n                    u.onload = function () {\r\n                        l = u\r\n                            .getAllResponseHeaders()\r\n                            .trim()\r\n                            .split(/[\\r\\n]+/);\r\n                        i(u, u);\r\n                        for (; (c = l.shift());) {\r\n                            c = c.split(': ');\r\n                            u.headers[c.shift().toLowerCase()] = c.join(': ');\r\n                        }\r\n                        if ((c = u.headers['content-type']) && ~c.indexOf('application/json'))\r\n                            try {\r\n                                u.data = JSON.parse(u.data, n.reviver);\r\n                            }\r\n                            catch (e) {\r\n                                i(u, e);\r\n                                return o(e);\r\n                            }\r\n                        ;\r\n                        (u.status >= 400 ? o : r)(u);\r\n                    };\r\n                    if ((a = n.body) && 'object' == typeof a) {\r\n                        h['content-type'] = 'application/json';\r\n                        a = JSON.stringify(a);\r\n                    }\r\n                    u.withCredentials = !!n.withCredentials;\r\n                    for (s in h)\r\n                        u.setRequestHeader(s, h[s]);\r\n                    u.send(a);\r\n                });\r\n            }\r\n            var o = r.bind(r, 'GET'), s = r.bind(r, 'POST'), a = r.bind(r, 'PATCH'), c = r.bind(r, 'DELETE'), l = r.bind(r, 'PUT');\r\n        },\r\n        function (e, t, n) {\r\n            var i = (this && this.__importStar) ||\r\n                function (e) {\r\n                    if (e && e.__esModule)\r\n                        return e;\r\n                    var t = {};\r\n                    if (null != e)\r\n                        for (var n in e)\r\n                            Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);\r\n                    t['default'] = e;\r\n                    return t;\r\n                };\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            var r = i(n(39)), o = n(79), s = n(80), a = n(81), c = n(40), l = n(41), u = i(n(42)), h = i(n(43)), d = (function () {\r\n                function e(e, t) {\r\n                    var n = this;\r\n                    this.onJoin = o.createSignal();\r\n                    this.onStateChange = o.createSignal();\r\n                    this.onError = o.createSignal();\r\n                    this.onLeave = o.createSignal();\r\n                    this.hasJoined = 0;\r\n                    this.onMessageHandlers = s.createNanoEvents();\r\n                    this.id = null;\r\n                    this.name = e;\r\n                    if (t) {\r\n                        this.serializer = new (c.getSerializer('schema'))();\r\n                        this.rootSchema = t;\r\n                        this.serializer.state = new t();\r\n                    }\r\n                    else\r\n                        this.serializer = new (c.getSerializer('fossil-delta'))();\r\n                    this.onError(function (e, t) { });\r\n                    this.onLeave(function () {\r\n                        return n.removeAllListeners();\r\n                    });\r\n                }\r\n                e.prototype.connect = function (e) {\r\n                    var t = this;\r\n                    this.connection = new a.Connection(e, 0);\r\n                    this.connection.reconnectEnabled = 0;\r\n                    this.connection.onmessage = this.onMessageCallback.bind(this);\r\n                    this.connection.onclose = function (e) {\r\n                        if (t.hasJoined)\r\n                            t.onLeave.invoke(e.code);\r\n                        else {\r\n                            void 0;\r\n                            t.onError.invoke(e.code, e.reason);\r\n                        }\r\n                    };\r\n                    this.connection.onerror = function (e) {\r\n                        void 0;\r\n                        t.onError.invoke(e.code, e.reason);\r\n                    };\r\n                    this.connection.open();\r\n                };\r\n                e.prototype.leave = function (e) {\r\n                    void 0 === e && (e = 1);\r\n                    this.connection\r\n                        ? e\r\n                            ? this.connection.send([l.Protocol.LEAVE_ROOM])\r\n                            : this.connection.close()\r\n                        : this.onLeave.invoke(4e3);\r\n                };\r\n                e.prototype.onMessage = function (e, t) {\r\n                    return this.onMessageHandlers.on(this.getMessageHandlerKey(e), t);\r\n                };\r\n                e.prototype.send = function (e, t) {\r\n                    var n = [l.Protocol.ROOM_DATA], i;\r\n                    'string' == typeof e ? u.string(n, e) : u.number(n, e);\r\n                    if (void 0 !== t) {\r\n                        var o = r.encode(t);\r\n                        (i = new Uint8Array(n.length + o.byteLength)).set(new Uint8Array(n), 0);\r\n                        i.set(new Uint8Array(o), n.length);\r\n                    }\r\n                    else\r\n                        i = new Uint8Array(n);\r\n                    this.connection.send(i.buffer);\r\n                };\r\n                Object.defineProperty(e.prototype, 'state', {\r\n                    get: function () {\r\n                        return this.serializer.getState();\r\n                    },\r\n                    enumerable: 1,\r\n                    configurable: 1,\r\n                });\r\n                e.prototype.listen = function (e, t, n) {\r\n                    if ('schema' !== this.serializerId) {\r\n                        this.serializerId;\r\n                        return this.serializer.api.listen(e, t, n);\r\n                    }\r\n                    void 0;\r\n                };\r\n                e.prototype.removeListener = function (e) {\r\n                    return this.serializer.api.removeListener(e);\r\n                };\r\n                e.prototype.removeAllListeners = function () {\r\n                    this.serializer && this.serializer.teardown();\r\n                    this.onJoin.clear();\r\n                    this.onStateChange.clear();\r\n                    this.onError.clear();\r\n                    this.onLeave.clear();\r\n                };\r\n                e.prototype.onMessageCallback = function (e) {\r\n                    var t = Array.from(new Uint8Array(e.data)), n = t[0];\r\n                    if (n === l.Protocol.JOIN_ROOM) {\r\n                        var i = 1;\r\n                        this.serializerId = l.utf8Read(t, i);\r\n                        i += l.utf8Length(this.serializerId);\r\n                        var o = c.getSerializer(this.serializerId);\r\n                        if (!o)\r\n                            throw new Error('missing serializer: ' + this.serializerId);\r\n                        'fossil-delta' === this.serializerId ||\r\n                            this.rootSchema ||\r\n                            (this.serializer = new o());\r\n                        t.length > i &&\r\n                            this.serializer.handshake &&\r\n                            this.serializer.handshake(t, { offset: 1 });\r\n                        this.hasJoined = 1;\r\n                        this.onJoin.invoke();\r\n                        this.connection.send([l.Protocol.JOIN_ROOM]);\r\n                    }\r\n                    else if (n === l.Protocol.ERROR) {\r\n                        var s = { offset: 1 }, a = h.number(t, s), u = h.string(t, s);\r\n                        this.onError.invoke(a, u);\r\n                    }\r\n                    else if (n === l.Protocol.LEAVE_ROOM)\r\n                        this.leave();\r\n                    else if (n === l.Protocol.ROOM_DATA_SCHEMA) {\r\n                        var d, p, u;\r\n                        (u = new (p = this.serializer\r\n                            .getState()\r\n                            .constructor._context.get(t[1]))()).decode(t, { offset: 2 });\r\n                        this.dispatchMessage(p, u);\r\n                    }\r\n                    else if (n === l.Protocol.ROOM_STATE) {\r\n                        t.shift();\r\n                        this.setState(t);\r\n                    }\r\n                    else if (n === l.Protocol.ROOM_STATE_PATCH) {\r\n                        t.shift();\r\n                        this.patch(t);\r\n                    }\r\n                    else if (n === l.Protocol.ROOM_DATA) {\r\n                        var f = { offset: 1 }, p = h.stringCheck(t, f) ? h.string(t, f) : h.number(t, f), u = t.length > f.offset ? r.decode(e.data, f.offset) : void 0;\r\n                        this.dispatchMessage(p, u);\r\n                    }\r\n                };\r\n                e.prototype.setState = function (e) {\r\n                    this.serializer.setState(e);\r\n                    this.onStateChange.invoke(this.serializer.getState());\r\n                };\r\n                e.prototype.patch = function (e) {\r\n                    this.serializer.patch(e);\r\n                    this.onStateChange.invoke(this.serializer.getState());\r\n                };\r\n                e.prototype.dispatchMessage = function (e, t) {\r\n                    var n = this.getMessageHandlerKey(e);\r\n                    this.onMessageHandlers.events[n]\r\n                        ? this.onMessageHandlers.emit(n, t)\r\n                        : this.onMessageHandlers.events['*']\r\n                            ? this.onMessageHandlers.emit('*', e, t)\r\n                            : void 0;\r\n                };\r\n                e.prototype.getMessageHandlerKey = function (e) {\r\n                    switch (typeof e) {\r\n                        case 'function':\r\n                            return '$' + e._typeid;\r\n                        case 'string':\r\n                            return e;\r\n                        case 'number':\r\n                            return 'i' + e;\r\n                        default:\r\n                            throw new Error('invalid message type.');\r\n                    }\r\n                };\r\n                return e;\r\n            })();\r\n            t.Room = d;\r\n        },\r\n        function (e, t, n) {\r\n            var i = (this && this.__importDefault) ||\r\n                function (e) {\r\n                    return e && e.__esModule ? e : { default: e };\r\n                };\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            var r = i(n(77)), o = i(n(78));\r\n            t.decode = r.default;\r\n            t.encode = o.default;\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            var i = {};\r\n            function r(e, t) {\r\n                i[e] = t;\r\n            }\r\n            t.registerSerializer = r;\r\n            function o(e) {\r\n                return i[e];\r\n            }\r\n            t.getSerializer = o;\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            var i, r;\r\n            (function (e) {\r\n                e[(e['HANDSHAKE'] = 9)] = 'HANDSHAKE';\r\n                e[(e['JOIN_ROOM'] = 10)] = 'JOIN_ROOM';\r\n                e[(e['ERROR'] = 11)] = 'ERROR';\r\n                e[(e['LEAVE_ROOM'] = 12)] = 'LEAVE_ROOM';\r\n                e[(e['ROOM_DATA'] = 13)] = 'ROOM_DATA';\r\n                e[(e['ROOM_STATE'] = 14)] = 'ROOM_STATE';\r\n                e[(e['ROOM_STATE_PATCH'] = 15)] = 'ROOM_STATE_PATCH';\r\n                e[(e['ROOM_DATA_SCHEMA'] = 16)] = 'ROOM_DATA_SCHEMA';\r\n            })((i = t.Protocol || (t.Protocol = {})));\r\n            (function (e) {\r\n                e[(e['MATCHMAKE_NO_HANDLER'] = 4210)] = 'MATCHMAKE_NO_HANDLER';\r\n                e[(e['MATCHMAKE_INVALID_CRITERIA'] = 4211)] = 'MATCHMAKE_INVALID_CRITERIA';\r\n                e[(e['MATCHMAKE_INVALID_ROOM_ID'] = 4212)] = 'MATCHMAKE_INVALID_ROOM_ID';\r\n                e[(e['MATCHMAKE_UNHANDLED'] = 4213)] = 'MATCHMAKE_UNHANDLED';\r\n                e[(e['MATCHMAKE_EXPIRED'] = 4214)] = 'MATCHMAKE_EXPIRED';\r\n                e[(e['AUTH_FAILED'] = 4215)] = 'AUTH_FAILED';\r\n                e[(e['APPLICATION_ERROR'] = 4216)] = 'APPLICATION_ERROR';\r\n            })((r = t.ErrorCode || (t.ErrorCode = {})));\r\n            function o(e, t) {\r\n                for (var n = e[t++], i = '', r = 0, o = t, s = t + n; o < s; o++) {\r\n                    var a = e[o];\r\n                    if (0 != (128 & a))\r\n                        if (192 != (224 & a))\r\n                            if (224 != (240 & a)) {\r\n                                if (240 != (248 & a))\r\n                                    throw new Error('Invalid byte ' + a.toString(16));\r\n                                if ((r =\r\n                                    ((7 & a) << 18) |\r\n                                        ((63 & e[++o]) << 12) |\r\n                                        ((63 & e[++o]) << 6) |\r\n                                        ((63 & e[++o]) << 0)) >= 65536) {\r\n                                    r -= 65536;\r\n                                    i += String.fromCharCode(55296 + (r >>> 10), 56320 + (1023 & r));\r\n                                }\r\n                                else\r\n                                    i += String.fromCharCode(r);\r\n                            }\r\n                            else\r\n                                i += String.fromCharCode(((15 & a) << 12) | ((63 & e[++o]) << 6) | ((63 & e[++o]) << 0));\r\n                        else\r\n                            i += String.fromCharCode(((31 & a) << 6) | (63 & e[++o]));\r\n                    else\r\n                        i += String.fromCharCode(a);\r\n                }\r\n                return i;\r\n            }\r\n            t.utf8Read = o;\r\n            function s(e) {\r\n                void 0 === e && (e = '');\r\n                for (var t = 0, n = 0, i = 0, r = e.length; i < r; i++)\r\n                    if ((t = e.charCodeAt(i)) < 128)\r\n                        n += 1;\r\n                    else if (t < 2048)\r\n                        n += 2;\r\n                    else if (t < 55296 || t >= 57344)\r\n                        n += 3;\r\n                    else {\r\n                        i++;\r\n                        n += 4;\r\n                    }\r\n                return n + 1;\r\n            }\r\n            t.utf8Length = s;\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.number = t.string = t.boolean = t.writeFloat64 = t.writeFloat32 = t.float64 = t.float32 = t.uint64 = t.int64 = t.uint32 = t.int32 = t.uint16 = t.int16 = t.uint8 = t.int8 = t.utf8Write = void 0;\r\n            function i(e) {\r\n                for (var t = 0, n = 0, i = 0, r = e.length; i < r; i++)\r\n                    if ((t = e.charCodeAt(i)) < 128)\r\n                        n += 1;\r\n                    else if (t < 2048)\r\n                        n += 2;\r\n                    else if (t < 55296 || t >= 57344)\r\n                        n += 3;\r\n                    else {\r\n                        i++;\r\n                        n += 4;\r\n                    }\r\n                return n;\r\n            }\r\n            function r(e, t, n) {\r\n                for (var i = 0, r = 0, o = n.length; r < o; r++)\r\n                    if ((i = n.charCodeAt(r)) < 128)\r\n                        e[t++] = i;\r\n                    else if (i < 2048) {\r\n                        e[t++] = 192 | (i >> 6);\r\n                        e[t++] = 128 | (63 & i);\r\n                    }\r\n                    else if (i < 55296 || i >= 57344) {\r\n                        e[t++] = 224 | (i >> 12);\r\n                        e[t++] = 128 | ((i >> 6) & 63);\r\n                        e[t++] = 128 | (63 & i);\r\n                    }\r\n                    else {\r\n                        r++;\r\n                        i = 65536 + (((1023 & i) << 10) | (1023 & n.charCodeAt(r)));\r\n                        e[t++] = 240 | (i >> 18);\r\n                        e[t++] = 128 | ((i >> 12) & 63);\r\n                        e[t++] = 128 | ((i >> 6) & 63);\r\n                        e[t++] = 128 | (63 & i);\r\n                    }\r\n            }\r\n            t.utf8Write = r;\r\n            function o(e, t) {\r\n                e.push(255 & t);\r\n            }\r\n            t.int8 = o;\r\n            function s(e, t) {\r\n                e.push(255 & t);\r\n            }\r\n            t.uint8 = s;\r\n            function a(e, t) {\r\n                e.push(255 & t);\r\n                e.push((t >> 8) & 255);\r\n            }\r\n            t.int16 = a;\r\n            function c(e, t) {\r\n                e.push(255 & t);\r\n                e.push((t >> 8) & 255);\r\n            }\r\n            t.uint16 = c;\r\n            function l(e, t) {\r\n                e.push(255 & t);\r\n                e.push((t >> 8) & 255);\r\n                e.push((t >> 16) & 255);\r\n                e.push((t >> 24) & 255);\r\n            }\r\n            t.int32 = l;\r\n            function u(e, t) {\r\n                var n = t >> 24, i = t >> 16, r = t >> 8, o = t;\r\n                e.push(255 & o);\r\n                e.push(255 & r);\r\n                e.push(255 & i);\r\n                e.push(255 & n);\r\n            }\r\n            t.uint32 = u;\r\n            function h(e, t) {\r\n                var n = Math.floor(t / Math.pow(2, 32)), i;\r\n                u(e, t >>> 0);\r\n                u(e, n);\r\n            }\r\n            t.int64 = h;\r\n            function d(e, t) {\r\n                var n = (t / Math.pow(2, 32)) >> 0, i;\r\n                u(e, t >>> 0);\r\n                u(e, n);\r\n            }\r\n            t.uint64 = d;\r\n            function p(e, t) {\r\n                S(e, t);\r\n            }\r\n            t.float32 = p;\r\n            function f(e, t) {\r\n                b(e, t);\r\n            }\r\n            t.float64 = f;\r\n            var m = 1, g = new Int32Array(2), y = new Float32Array(g.buffer), v = new Float64Array(g.buffer);\r\n            function S(e, t) {\r\n                y[0] = t;\r\n                l(e, g[0]);\r\n            }\r\n            t.writeFloat32 = S;\r\n            function b(e, t) {\r\n                v[0] = t;\r\n                l(e, g[m ? 0 : 1]);\r\n                l(e, g[m ? 1 : 0]);\r\n            }\r\n            t.writeFloat64 = b;\r\n            function w(e, t) {\r\n                return s(e, t ? 1 : 0);\r\n            }\r\n            t.boolean = w;\r\n            function _(e, t) {\r\n                t || (t = '');\r\n                var n = i(t), o = 0;\r\n                if (n < 32) {\r\n                    e.push(160 | n);\r\n                    o = 1;\r\n                }\r\n                else if (n < 256) {\r\n                    e.push(217);\r\n                    s(e, n);\r\n                    o = 2;\r\n                }\r\n                else if (n < 65536) {\r\n                    e.push(218);\r\n                    c(e, n);\r\n                    o = 3;\r\n                }\r\n                else {\r\n                    if (!(n < 4294967296))\r\n                        throw new Error('String too long');\r\n                    e.push(219);\r\n                    u(e, n);\r\n                    o = 5;\r\n                }\r\n                r(e, e.length, t);\r\n                return o + n;\r\n            }\r\n            t.string = _;\r\n            function T(e, t) {\r\n                if (isNaN(t))\r\n                    return T(e, 0);\r\n                if (!isFinite(t))\r\n                    return T(e, t > 0 ? Number.MAX_SAFE_INTEGER : -Number.MAX_SAFE_INTEGER);\r\n                if (t !== (0 | t)) {\r\n                    e.push(203);\r\n                    b(e, t);\r\n                    return 9;\r\n                }\r\n                if (t >= 0) {\r\n                    if (t < 128) {\r\n                        s(e, t);\r\n                        return 1;\r\n                    }\r\n                    if (t < 256) {\r\n                        e.push(204);\r\n                        s(e, t);\r\n                        return 2;\r\n                    }\r\n                    if (t < 65536) {\r\n                        e.push(205);\r\n                        c(e, t);\r\n                        return 3;\r\n                    }\r\n                    if (t < 4294967296) {\r\n                        e.push(206);\r\n                        u(e, t);\r\n                        return 5;\r\n                    }\r\n                    e.push(207);\r\n                    d(e, t);\r\n                    return 9;\r\n                }\r\n                if (t >= -32) {\r\n                    e.push(t);\r\n                    return 1;\r\n                }\r\n                if (t >= -128) {\r\n                    e.push(208);\r\n                    o(e, t);\r\n                    return 2;\r\n                }\r\n                if (t >= -32768) {\r\n                    e.push(209);\r\n                    a(e, t);\r\n                    return 3;\r\n                }\r\n                if (t >= -2147483648) {\r\n                    e.push(210);\r\n                    l(e, t);\r\n                    return 5;\r\n                }\r\n                e.push(211);\r\n                h(e, t);\r\n                return 9;\r\n            }\r\n            t.number = T;\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.indexChangeCheck = t.nilCheck = t.arrayCheck = t.numberCheck = t.number = t.stringCheck = t.string = t.boolean = t.readFloat64 = t.readFloat32 = t.uint64 = t.int64 = t.float64 = t.float32 = t.uint32 = t.int32 = t.uint16 = t.int16 = t.uint8 = t.int8 = void 0;\r\n            var i = n(44);\r\n            function r(e, t, n) {\r\n                for (var i = '', r = 0, o = t, s = t + n; o < s; o++) {\r\n                    var a = e[o];\r\n                    if (0 != (128 & a))\r\n                        if (192 != (224 & a))\r\n                            if (224 != (240 & a)) {\r\n                                if (240 != (248 & a))\r\n                                    throw new Error('Invalid byte ' + a.toString(16));\r\n                                if ((r =\r\n                                    ((7 & a) << 18) |\r\n                                        ((63 & e[++o]) << 12) |\r\n                                        ((63 & e[++o]) << 6) |\r\n                                        ((63 & e[++o]) << 0)) >= 65536) {\r\n                                    r -= 65536;\r\n                                    i += String.fromCharCode(55296 + (r >>> 10), 56320 + (1023 & r));\r\n                                }\r\n                                else\r\n                                    i += String.fromCharCode(r);\r\n                            }\r\n                            else\r\n                                i += String.fromCharCode(((15 & a) << 12) | ((63 & e[++o]) << 6) | ((63 & e[++o]) << 0));\r\n                        else\r\n                            i += String.fromCharCode(((31 & a) << 6) | (63 & e[++o]));\r\n                    else\r\n                        i += String.fromCharCode(a);\r\n                }\r\n                return i;\r\n            }\r\n            function o(e, t) {\r\n                return (s(e, t) << 24) >> 24;\r\n            }\r\n            t.int8 = o;\r\n            function s(e, t) {\r\n                return e[t.offset++];\r\n            }\r\n            t.uint8 = s;\r\n            function a(e, t) {\r\n                return (c(e, t) << 16) >> 16;\r\n            }\r\n            t.int16 = a;\r\n            function c(e, t) {\r\n                return e[t.offset++] | (e[t.offset++] << 8);\r\n            }\r\n            t.uint16 = c;\r\n            function l(e, t) {\r\n                return (e[t.offset++] |\r\n                    (e[t.offset++] << 8) |\r\n                    (e[t.offset++] << 16) |\r\n                    (e[t.offset++] << 24));\r\n            }\r\n            t.int32 = l;\r\n            function u(e, t) {\r\n                return l(e, t) >>> 0;\r\n            }\r\n            t.uint32 = u;\r\n            function h(e, t) {\r\n                return S(e, t);\r\n            }\r\n            t.float32 = h;\r\n            function d(e, t) {\r\n                return b(e, t);\r\n            }\r\n            t.float64 = d;\r\n            function p(e, t) {\r\n                var n = u(e, t), i;\r\n                return l(e, t) * Math.pow(2, 32) + n;\r\n            }\r\n            t.int64 = p;\r\n            function f(e, t) {\r\n                var n = u(e, t), i;\r\n                return u(e, t) * Math.pow(2, 32) + n;\r\n            }\r\n            t.uint64 = f;\r\n            var m = 1, g = new Int32Array(2), y = new Float32Array(g.buffer), v = new Float64Array(g.buffer);\r\n            function S(e, t) {\r\n                g[0] = l(e, t);\r\n                return y[0];\r\n            }\r\n            t.readFloat32 = S;\r\n            function b(e, t) {\r\n                g[m ? 0 : 1] = l(e, t);\r\n                g[m ? 1 : 0] = l(e, t);\r\n                return v[0];\r\n            }\r\n            t.readFloat64 = b;\r\n            function w(e, t) {\r\n                return s(e, t) > 0;\r\n            }\r\n            t.boolean = w;\r\n            function _(e, t) {\r\n                var n = e[t.offset++], i;\r\n                n < 192\r\n                    ? (i = 31 & n)\r\n                    : 217 === n\r\n                        ? (i = s(e, t))\r\n                        : 218 === n\r\n                            ? (i = c(e, t))\r\n                            : 219 === n && (i = u(e, t));\r\n                var o = r(e, t.offset, i);\r\n                t.offset += i;\r\n                return o;\r\n            }\r\n            t.string = _;\r\n            function T(e, t) {\r\n                var n = e[t.offset];\r\n                return (n < 192 && n > 160) || 217 === n || 218 === n || 219 === n;\r\n            }\r\n            t.stringCheck = T;\r\n            function C(e, t) {\r\n                var n = e[t.offset++];\r\n                return n < 128\r\n                    ? n\r\n                    : 202 === n\r\n                        ? S(e, t)\r\n                        : 203 === n\r\n                            ? b(e, t)\r\n                            : 204 === n\r\n                                ? s(e, t)\r\n                                : 205 === n\r\n                                    ? c(e, t)\r\n                                    : 206 === n\r\n                                        ? u(e, t)\r\n                                        : 207 === n\r\n                                            ? f(e, t)\r\n                                            : 208 === n\r\n                                                ? o(e, t)\r\n                                                : 209 === n\r\n                                                    ? a(e, t)\r\n                                                    : 210 === n\r\n                                                        ? l(e, t)\r\n                                                        : 211 === n\r\n                                                            ? p(e, t)\r\n                                                            : n > 223\r\n                                                                ? -1 * (255 - n + 1)\r\n                                                                : void 0;\r\n            }\r\n            t.number = C;\r\n            function P(e, t) {\r\n                var n = e[t.offset];\r\n                return n < 128 || (n >= 202 && n <= 211);\r\n            }\r\n            t.numberCheck = P;\r\n            function R(e, t) {\r\n                return e[t.offset] < 160;\r\n            }\r\n            t.arrayCheck = R;\r\n            function E(e, t) {\r\n                return e[t.offset] === i.NIL;\r\n            }\r\n            t.nilCheck = E;\r\n            function O(e, t) {\r\n                return e[t.offset] === i.INDEX_CHANGE;\r\n            }\r\n            t.indexChangeCheck = O;\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.TYPE_ID = t.INDEX_CHANGE = t.NIL = t.END_OF_STRUCTURE = void 0;\r\n            t.END_OF_STRUCTURE = 193;\r\n            t.NIL = 192;\r\n            t.INDEX_CHANGE = 212;\r\n            t.TYPE_ID = 213;\r\n        },\r\n        function (e, t, n) {\r\n            var i = (this && this.__awaiter) ||\r\n                function (e, t, n, i) {\r\n                    function r(e) {\r\n                        return e instanceof n\r\n                            ? e\r\n                            : new n(function (t) {\r\n                                t(e);\r\n                            });\r\n                    }\r\n                    return new (n || (n = Promise))(function (n, o) {\r\n                        function s(e) {\r\n                            try {\r\n                                c(i.next(e));\r\n                            }\r\n                            catch (e) {\r\n                                o(e);\r\n                            }\r\n                        }\r\n                        function a(e) {\r\n                            try {\r\n                                c(i['throw'](e));\r\n                            }\r\n                            catch (e) {\r\n                                o(e);\r\n                            }\r\n                        }\r\n                        function c(e) {\r\n                            e.done ? n(e.value) : r(e.value).then(s, a);\r\n                        }\r\n                        c((i = i.apply(e, t || [])).next());\r\n                    });\r\n                }, r = (this && this.__generator) ||\r\n                function (e, t) {\r\n                    var n = {\r\n                        label: 0,\r\n                        sent: function () {\r\n                            if (1 & o[0])\r\n                                throw o[1];\r\n                            return o[1];\r\n                        },\r\n                        trys: [],\r\n                        ops: [],\r\n                    }, i, r, o, s;\r\n                    return ((s = { next: a(0), throw: a(1), return: a(2) }),\r\n                        'function' == typeof Symbol &&\r\n                            (s[Symbol.iterator] = function () {\r\n                                return this;\r\n                            }),\r\n                        s);\r\n                    function a(e) {\r\n                        return function (t) {\r\n                            return c([e, t]);\r\n                        };\r\n                    }\r\n                    function c(s) {\r\n                        if (i)\r\n                            throw new TypeError('Generator is already executing.');\r\n                        for (; n;)\r\n                            try {\r\n                                if (((i = 1),\r\n                                    r &&\r\n                                        (o =\r\n                                            2 & s[0]\r\n                                                ? r['return']\r\n                                                : s[0]\r\n                                                    ? r['throw'] || ((o = r['return']) && o.call(r), 0)\r\n                                                    : r.next) &&\r\n                                        !(o = o.call(r, s[1])).done))\r\n                                    return o;\r\n                                ((r = 0), o) && (s = [2 & s[0], o.value]);\r\n                                switch (s[0]) {\r\n                                    case 0:\r\n                                    case 1:\r\n                                        o = s;\r\n                                        break;\r\n                                    case 4:\r\n                                        n.label++;\r\n                                        return { value: s[1], done: 0 };\r\n                                    case 5:\r\n                                        n.label++;\r\n                                        r = s[1];\r\n                                        s = [0];\r\n                                        continue;\r\n                                    case 7:\r\n                                        s = n.ops.pop();\r\n                                        n.trys.pop();\r\n                                        continue;\r\n                                    default:\r\n                                        if (!((o = n.trys), (o = o.length > 0 && o[o.length - 1])) &&\r\n                                            (6 === s[0] || 2 === s[0])) {\r\n                                            n = 0;\r\n                                            continue;\r\n                                        }\r\n                                        if (3 === s[0] && (!o || (s[1] > o[0] && s[1] < o[3]))) {\r\n                                            n.label = s[1];\r\n                                            break;\r\n                                        }\r\n                                        if (6 === s[0] && n.label < o[1]) {\r\n                                            n.label = o[1];\r\n                                            o = s;\r\n                                            break;\r\n                                        }\r\n                                        if (o && n.label < o[2]) {\r\n                                            n.label = o[2];\r\n                                            n.ops.push(s);\r\n                                            break;\r\n                                        }\r\n                                        o[2] && n.ops.pop();\r\n                                        n.trys.pop();\r\n                                        continue;\r\n                                }\r\n                                s = t.call(e, n);\r\n                            }\r\n                            catch (e) {\r\n                                s = [6, e];\r\n                                r = 0;\r\n                            }\r\n                            finally {\r\n                                i = o = 0;\r\n                            }\r\n                        if (5 & s[0])\r\n                            throw s[1];\r\n                        return { value: s[0] ? s[1] : void 0, done: 1 };\r\n                    }\r\n                }, o = (this && this.__importStar) ||\r\n                function (e) {\r\n                    if (e && e.__esModule)\r\n                        return e;\r\n                    var t = {};\r\n                    if (null != e)\r\n                        for (var n in e)\r\n                            Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);\r\n                    t['default'] = e;\r\n                    return t;\r\n                };\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            var s = o(n(37)), a = n(85), c = 'colyseus-auth-token', l;\r\n            (function (e) {\r\n                e['ios'] = 'ios';\r\n                e['android'] = 'android';\r\n            })((l = t.Platform || (t.Platform = {})));\r\n            var u = (function () {\r\n                function e(e) {\r\n                    var t = this;\r\n                    this._id = void 0;\r\n                    this.username = void 0;\r\n                    this.displayName = void 0;\r\n                    this.avatarUrl = void 0;\r\n                    this.isAnonymous = void 0;\r\n                    this.email = void 0;\r\n                    this.lang = void 0;\r\n                    this.location = void 0;\r\n                    this.timezone = void 0;\r\n                    this.metadata = void 0;\r\n                    this.devices = void 0;\r\n                    this.facebookId = void 0;\r\n                    this.twitterId = void 0;\r\n                    this.googleId = void 0;\r\n                    this.gameCenterId = void 0;\r\n                    this.steamId = void 0;\r\n                    this.friendIds = void 0;\r\n                    this.blockedUserIds = void 0;\r\n                    this.createdAt = void 0;\r\n                    this.updatedAt = void 0;\r\n                    this.token = void 0;\r\n                    this.endpoint = e.replace('ws', 'http');\r\n                    a.getItem(c, function (e) {\r\n                        return (t.token = e);\r\n                    });\r\n                }\r\n                Object.defineProperty(e.prototype, 'hasToken', {\r\n                    get: function () {\r\n                        return !!this.token;\r\n                    },\r\n                    enumerable: 1,\r\n                    configurable: 1,\r\n                });\r\n                e.prototype.login = function (e) {\r\n                    void 0 === e && (e = {});\r\n                    return i(this, void 0, void 0, function () {\r\n                        var t, n, i;\r\n                        return r(this, function (r) {\r\n                            switch (r.label) {\r\n                                case 0:\r\n                                    t = Object.assign({}, e);\r\n                                    this.hasToken && (t.token = this.token);\r\n                                    return [4, this.request('post', '/auth', t)];\r\n                                case 1:\r\n                                    n = r.sent();\r\n                                    this.token = n.token;\r\n                                    a.setItem(c, this.token);\r\n                                    for (i in n)\r\n                                        this.hasOwnProperty(i) && (this[i] = n[i]);\r\n                                    this.registerPingService();\r\n                                    return [2, this];\r\n                            }\r\n                        });\r\n                    });\r\n                };\r\n                e.prototype.save = function () {\r\n                    return i(this, void 0, void 0, function () {\r\n                        return r(this, function (e) {\r\n                            switch (e.label) {\r\n                                case 0:\r\n                                    return [\r\n                                        4,\r\n                                        this.request('put', '/auth', {}, {\r\n                                            username: this.username,\r\n                                            displayName: this.displayName,\r\n                                            avatarUrl: this.avatarUrl,\r\n                                            lang: this.lang,\r\n                                            location: this.location,\r\n                                            timezone: this.timezone,\r\n                                        }),\r\n                                    ];\r\n                                case 1:\r\n                                    e.sent();\r\n                                    return [2, this];\r\n                            }\r\n                        });\r\n                    });\r\n                };\r\n                e.prototype.getFriends = function () {\r\n                    return i(this, void 0, void 0, function () {\r\n                        return r(this, function (e) {\r\n                            switch (e.label) {\r\n                                case 0:\r\n                                    return [4, this.request('get', '/friends/all')];\r\n                                case 1:\r\n                                    return [2, e.sent()];\r\n                            }\r\n                        });\r\n                    });\r\n                };\r\n                e.prototype.getOnlineFriends = function () {\r\n                    return i(this, void 0, void 0, function () {\r\n                        return r(this, function (e) {\r\n                            switch (e.label) {\r\n                                case 0:\r\n                                    return [4, this.request('get', '/friends/online')];\r\n                                case 1:\r\n                                    return [2, e.sent()];\r\n                            }\r\n                        });\r\n                    });\r\n                };\r\n                e.prototype.getFriendRequests = function () {\r\n                    return i(this, void 0, void 0, function () {\r\n                        return r(this, function (e) {\r\n                            switch (e.label) {\r\n                                case 0:\r\n                                    return [4, this.request('get', '/friends/requests')];\r\n                                case 1:\r\n                                    return [2, e.sent()];\r\n                            }\r\n                        });\r\n                    });\r\n                };\r\n                e.prototype.sendFriendRequest = function (e) {\r\n                    return i(this, void 0, void 0, function () {\r\n                        return r(this, function (t) {\r\n                            switch (t.label) {\r\n                                case 0:\r\n                                    return [\r\n                                        4,\r\n                                        this.request('post', '/friends/requests', { userId: e }),\r\n                                    ];\r\n                                case 1:\r\n                                    return [2, t.sent()];\r\n                            }\r\n                        });\r\n                    });\r\n                };\r\n                e.prototype.acceptFriendRequest = function (e) {\r\n                    return i(this, void 0, void 0, function () {\r\n                        return r(this, function (t) {\r\n                            switch (t.label) {\r\n                                case 0:\r\n                                    return [\r\n                                        4,\r\n                                        this.request('put', '/friends/requests', { userId: e }),\r\n                                    ];\r\n                                case 1:\r\n                                    return [2, t.sent()];\r\n                            }\r\n                        });\r\n                    });\r\n                };\r\n                e.prototype.declineFriendRequest = function (e) {\r\n                    return i(this, void 0, void 0, function () {\r\n                        return r(this, function (t) {\r\n                            switch (t.label) {\r\n                                case 0:\r\n                                    return [\r\n                                        4,\r\n                                        this.request('del', '/friends/requests', { userId: e }),\r\n                                    ];\r\n                                case 1:\r\n                                    return [2, t.sent()];\r\n                            }\r\n                        });\r\n                    });\r\n                };\r\n                e.prototype.blockUser = function (e) {\r\n                    return i(this, void 0, void 0, function () {\r\n                        return r(this, function (t) {\r\n                            switch (t.label) {\r\n                                case 0:\r\n                                    return [\r\n                                        4,\r\n                                        this.request('post', '/friends/block', { userId: e }),\r\n                                    ];\r\n                                case 1:\r\n                                    return [2, t.sent()];\r\n                            }\r\n                        });\r\n                    });\r\n                };\r\n                e.prototype.unblockUser = function (e) {\r\n                    return i(this, void 0, void 0, function () {\r\n                        return r(this, function (t) {\r\n                            switch (t.label) {\r\n                                case 0:\r\n                                    return [4, this.request('put', '/friends/block', { userId: e })];\r\n                                case 1:\r\n                                    return [2, t.sent()];\r\n                            }\r\n                        });\r\n                    });\r\n                };\r\n                e.prototype.request = function (e, t, n, o, a) {\r\n                    void 0 === n && (n = {});\r\n                    void 0 === a && (a = {});\r\n                    return i(this, void 0, void 0, function () {\r\n                        var i, c, l, u;\r\n                        return r(this, function (r) {\r\n                            switch (r.label) {\r\n                                case 0:\r\n                                    a['Accept'] = 'application/json';\r\n                                    this.hasToken && (a['Authorization'] = 'Bearer ' + this.token);\r\n                                    i = [];\r\n                                    for (c in n)\r\n                                        i.push(c + '=' + n[c]);\r\n                                    l = i.length > 0 ? '?' + i.join('&') : '';\r\n                                    u = { headers: a };\r\n                                    o && (u.body = o);\r\n                                    return [4, s[e]('' + this.endpoint + t + l, u)];\r\n                                case 1:\r\n                                    return [2, r.sent().data];\r\n                            }\r\n                        });\r\n                    });\r\n                };\r\n                e.prototype.logout = function () {\r\n                    this.token = void 0;\r\n                    a.removeItem(c);\r\n                    this.unregisterPingService();\r\n                };\r\n                e.prototype.registerPingService = function (e) {\r\n                    var t = this;\r\n                    void 0 === e && (e = 15e3);\r\n                    this.unregisterPingService();\r\n                    this.keepOnlineInterval = setInterval(function () {\r\n                        return t.request('get', '/auth');\r\n                    }, e);\r\n                };\r\n                e.prototype.unregisterPingService = function () {\r\n                    clearInterval(this.keepOnlineInterval);\r\n                };\r\n                return e;\r\n            })();\r\n            t.Auth = u;\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            var i = n(13);\r\n            Object.defineProperty(t, 'Schema', {\r\n                enumerable: 1,\r\n                get: function () {\r\n                    return i.Schema;\r\n                },\r\n            });\r\n            var r = n(11);\r\n            Object.defineProperty(t, 'MapSchema', {\r\n                enumerable: 1,\r\n                get: function () {\r\n                    return r.MapSchema;\r\n                },\r\n            });\r\n            var o = n(10);\r\n            Object.defineProperty(t, 'ArraySchema', {\r\n                enumerable: 1,\r\n                get: function () {\r\n                    return o.ArraySchema;\r\n                },\r\n            });\r\n            var s = n(94);\r\n            Object.defineProperty(t, 'dumpChanges', {\r\n                enumerable: 1,\r\n                get: function () {\r\n                    return s.dumpChanges;\r\n                },\r\n            });\r\n            var a = n(95);\r\n            Object.defineProperty(t, 'Reflection', {\r\n                enumerable: 1,\r\n                get: function () {\r\n                    return a.Reflection;\r\n                },\r\n            });\r\n            Object.defineProperty(t, 'ReflectionType', {\r\n                enumerable: 1,\r\n                get: function () {\r\n                    return a.ReflectionType;\r\n                },\r\n            });\r\n            Object.defineProperty(t, 'ReflectionField', {\r\n                enumerable: 1,\r\n                get: function () {\r\n                    return a.ReflectionField;\r\n                },\r\n            });\r\n            var c = n(48);\r\n            Object.defineProperty(t, 'type', {\r\n                enumerable: 1,\r\n                get: function () {\r\n                    return c.type;\r\n                },\r\n            });\r\n            Object.defineProperty(t, 'deprecated', {\r\n                enumerable: 1,\r\n                get: function () {\r\n                    return c.deprecated;\r\n                },\r\n            });\r\n            Object.defineProperty(t, 'filter', {\r\n                enumerable: 1,\r\n                get: function () {\r\n                    return c.filter;\r\n                },\r\n            });\r\n            Object.defineProperty(t, 'defineTypes', {\r\n                enumerable: 1,\r\n                get: function () {\r\n                    return c.defineTypes;\r\n                },\r\n            });\r\n            Object.defineProperty(t, 'Context', {\r\n                enumerable: 1,\r\n                get: function () {\r\n                    return c.Context;\r\n                },\r\n            });\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.ChangeTree = void 0;\r\n            var i = n(13), r = n(10), o = n(11), s = (function () {\r\n                function e(e, t, n) {\r\n                    void 0 === e && (e = {});\r\n                    void 0 === t && (t = null);\r\n                    this.changed = 0;\r\n                    this.changes = new Set();\r\n                    this.allChanges = new Set();\r\n                    this.deletedKeys = {};\r\n                    this.fieldIndexes = e;\r\n                    this.parent = n;\r\n                    this.parentField = t;\r\n                }\r\n                e.prototype.change = function (e, t) {\r\n                    void 0 === t && (t = 0);\r\n                    var n = this.fieldIndexes[e], i = 'number' == typeof n ? n : e;\r\n                    if (t) {\r\n                        if (t) {\r\n                            this.changed = 1;\r\n                            this.changes.add(i);\r\n                            this.allChanges.delete(i);\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.changed = 1;\r\n                        this.changes.add(i);\r\n                        this.allChanges.add(i);\r\n                    }\r\n                    this.parent && this.parent.change(this.parentField);\r\n                };\r\n                e.prototype.mapIndex = function (e, t) {\r\n                    if ('object' == typeof e) {\r\n                        if (!this.indexMap) {\r\n                            this.indexMap = new Map();\r\n                            this.indexChange = new Map();\r\n                        }\r\n                        this.indexMap.set(e, t);\r\n                    }\r\n                };\r\n                e.prototype.getIndex = function (e) {\r\n                    return this.indexMap && this.indexMap.get(e);\r\n                };\r\n                e.prototype.deleteIndex = function (e) {\r\n                    if ('object' == typeof e) {\r\n                        this.deletedKeys[this.indexMap.get(e)] = 1;\r\n                        this.indexMap.delete(e);\r\n                    }\r\n                };\r\n                e.prototype.isDeleted = function (e) {\r\n                    return void 0 !== this.deletedKeys[e];\r\n                };\r\n                e.prototype.mapIndexChange = function (e, t) {\r\n                    'object' != typeof e ||\r\n                        this.indexChange.has(e) ||\r\n                        this.indexChange.set(e, t);\r\n                };\r\n                e.prototype.getIndexChange = function (e) {\r\n                    return this.indexChange && this.indexChange.get(e);\r\n                };\r\n                e.prototype.deleteIndexChange = function (e) {\r\n                    'object' == typeof e && this.indexChange.delete(e);\r\n                };\r\n                e.prototype.changeAll = function (e) {\r\n                    if (e instanceof i.Schema) {\r\n                        var t = e['_schema'];\r\n                        for (var n in t) {\r\n                            ;\r\n                            (e[n] instanceof i.Schema ||\r\n                                e[n] instanceof r.ArraySchema ||\r\n                                e[n] instanceof o.MapSchema) &&\r\n                                !e[n].$changes.parent.parent &&\r\n                                (e[n].$changes.parent = this);\r\n                            void 0 !== e[n] && this.change(n);\r\n                        }\r\n                    }\r\n                    else\r\n                        for (var s, a = 0, c = Object.keys(e); a < c.length; a++) {\r\n                            var l = c[a];\r\n                            void 0 !== e[l] && this.change(l);\r\n                        }\r\n                };\r\n                e.prototype.discard = function () {\r\n                    this.changed = 0;\r\n                    this.changes.clear();\r\n                    this.deletedKeys = {};\r\n                    this.indexChange && this.indexChange.clear();\r\n                };\r\n                e.prototype.clone = function () {\r\n                    return new e(this.fieldIndexes, this.parentField, void 0);\r\n                };\r\n                return e;\r\n            })();\r\n            t.ChangeTree = s;\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.defineTypes = t.deprecated = t.filter = t.type = t.globalContext = t.Context = void 0;\r\n            var i = n(47), r = n(13), o = (function () {\r\n                function e() {\r\n                    this.types = {};\r\n                    this.schemas = new Map();\r\n                }\r\n                e.prototype.has = function (e) {\r\n                    return this.schemas.has(e);\r\n                };\r\n                e.prototype.get = function (e) {\r\n                    return this.types[e];\r\n                };\r\n                e.prototype.add = function (e) {\r\n                    e._typeid = this.schemas.size;\r\n                    this.types[e._typeid] = e;\r\n                    this.schemas.set(e, e._typeid);\r\n                };\r\n                return e;\r\n            })();\r\n            t.Context = o;\r\n            t.globalContext = new o();\r\n            function s(e, n) {\r\n                void 0 === n && (n = t.globalContext);\r\n                return function (t, o) {\r\n                    var s = t.constructor;\r\n                    s._context = n;\r\n                    if (!n.has(s)) {\r\n                        n.add(s);\r\n                        s._schema = Object.assign({}, s._schema || {});\r\n                        s._indexes = Object.assign({}, s._indexes || {});\r\n                        s._fieldsByIndex = Object.assign({}, s._fieldsByIndex || {});\r\n                        s._descriptors = Object.assign({}, s._descriptors || {});\r\n                        s._deprecated = Object.assign({}, s._deprecated || {});\r\n                    }\r\n                    var a = Object.keys(s._schema).length;\r\n                    s._fieldsByIndex[a] = o;\r\n                    s._indexes[o] = a;\r\n                    s._schema[o] = e;\r\n                    if (!s._descriptors[o]) {\r\n                        var c = Array.isArray(e), l = !c && e.map, u = 'function' == typeof s._schema[o], h = '_' + o;\r\n                        s._descriptors[h] = { enumerable: 0, configurable: 0, writable: 1 };\r\n                        s._descriptors[o] = {\r\n                            get: function () {\r\n                                return this[h];\r\n                            },\r\n                            set: function (e) {\r\n                                ;\r\n                                (c || l) &&\r\n                                    (e = new Proxy(e, {\r\n                                        get: function (e, t) {\r\n                                            return e[t];\r\n                                        },\r\n                                        set: function (e, t, n) {\r\n                                            if ('length' !== t && 0 !== t.indexOf('$')) {\r\n                                                var o = c ? Number(t) : String(t);\r\n                                                if (!e.$sorting) {\r\n                                                    var s = e.$changes.getIndex(n);\r\n                                                    void 0 !== s && e.$changes.mapIndexChange(n, s);\r\n                                                    e.$changes.mapIndex(n, o);\r\n                                                }\r\n                                                if (n instanceof r.Schema) {\r\n                                                    if (!n.$changes.parent) {\r\n                                                        n.$changes = new i.ChangeTree(n._indexes, o, e.$changes);\r\n                                                        n.$changes.changeAll(n);\r\n                                                    }\r\n                                                }\r\n                                                else\r\n                                                    e[t] = n;\r\n                                                e.$changes.change(o);\r\n                                            }\r\n                                            else\r\n                                                n !== e[t];\r\n                                            e[t] = n;\r\n                                            return 1;\r\n                                        },\r\n                                        deleteProperty: function (e, t) {\r\n                                            var n = e[t];\r\n                                            if (l && void 0 !== n) {\r\n                                                e.$changes.deleteIndex(n);\r\n                                                e.$changes.deleteIndexChange(n);\r\n                                                n.$changes && delete n.$changes.parent;\r\n                                            }\r\n                                            delete e[t];\r\n                                            var i = c ? Number(t) : String(t);\r\n                                            e.$changes.change(i, 1);\r\n                                            return 1;\r\n                                        },\r\n                                    }));\r\n                                if (e !== this[h]) {\r\n                                    this[h] = e;\r\n                                    if (c) {\r\n                                        this.$changes.change(o);\r\n                                        e.$changes = new i.ChangeTree({}, o, this.$changes);\r\n                                        for (var t = 0; t < e.length; t++) {\r\n                                            if (e[t] instanceof r.Schema) {\r\n                                                e[t].$changes = new i.ChangeTree(e[t]._indexes, t, e.$changes);\r\n                                                e[t].$changes.changeAll(e[t]);\r\n                                            }\r\n                                            e.$changes.mapIndex(e[t], t);\r\n                                            e.$changes.change(t);\r\n                                        }\r\n                                    }\r\n                                    else if (l) {\r\n                                        e.$changes = new i.ChangeTree({}, o, this.$changes);\r\n                                        this.$changes.change(o);\r\n                                        for (var n in e) {\r\n                                            if (e[n] instanceof r.Schema) {\r\n                                                e[n].$changes = new i.ChangeTree(e[n]._indexes, n, e.$changes);\r\n                                                e[n].$changes.changeAll(e[n]);\r\n                                            }\r\n                                            e.$changes.mapIndex(e[n], n);\r\n                                            e.$changes.change(n);\r\n                                        }\r\n                                    }\r\n                                    else if (u) {\r\n                                        this.$changes.change(o);\r\n                                        if (e) {\r\n                                            e.$changes = new i.ChangeTree(e._indexes, o, this.$changes);\r\n                                            e.$changes.changeAll(e);\r\n                                        }\r\n                                    }\r\n                                    else\r\n                                        this.$changes.change(o);\r\n                                }\r\n                            },\r\n                            enumerable: 1,\r\n                            configurable: 1,\r\n                        };\r\n                    }\r\n                };\r\n            }\r\n            t.type = s;\r\n            function a(e) {\r\n                return function (t, n) {\r\n                    var i = t.constructor;\r\n                    i._filters || (i._filters = {});\r\n                    i._filters[n] = e;\r\n                };\r\n            }\r\n            t.filter = a;\r\n            function c(e, n) {\r\n                void 0 === e && (e = 1);\r\n                void 0 === n && (n = t.globalContext);\r\n                return function (t, n) {\r\n                    var i = t.constructor;\r\n                    i._deprecated[n] = 1;\r\n                    e &&\r\n                        (i._descriptors[n] = {\r\n                            get: function () {\r\n                                throw new Error(n + ' is deprecated.');\r\n                            },\r\n                            set: function (e) { },\r\n                            enumerable: 0,\r\n                            configurable: 1,\r\n                        });\r\n                };\r\n            }\r\n            t.deprecated = c;\r\n            function l(e, n, i) {\r\n                void 0 === i && (i = t.globalContext);\r\n                for (var r in n)\r\n                    s(n[r], i)(e.prototype, r);\r\n                return e;\r\n            }\r\n            t.defineTypes = l;\r\n        },\r\n        function (e, t, n) {\r\n            var i = (this && this.__awaiter) ||\r\n                function (e, t, n, i) {\r\n                    function r(e) {\r\n                        return e instanceof n\r\n                            ? e\r\n                            : new n(function (t) {\r\n                                t(e);\r\n                            });\r\n                    }\r\n                    return new (n || (n = Promise))(function (n, o) {\r\n                        function s(e) {\r\n                            try {\r\n                                c(i.next(e));\r\n                            }\r\n                            catch (e) {\r\n                                o(e);\r\n                            }\r\n                        }\r\n                        function a(e) {\r\n                            try {\r\n                                c(i['throw'](e));\r\n                            }\r\n                            catch (e) {\r\n                                o(e);\r\n                            }\r\n                        }\r\n                        function c(e) {\r\n                            e.done ? n(e.value) : r(e.value).then(s, a);\r\n                        }\r\n                        c((i = i.apply(e, t || [])).next());\r\n                    });\r\n                }, r = (this && this.__importDefault) ||\r\n                function (e) {\r\n                    return e && e.__esModule ? e : { default: e };\r\n                };\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            var o = n(50), s = n(51), a = n(55), c = n(72), l = n(73), u = n(6), h = n(4), d = n(2), p = n(0), f = n(5), m = r(n(23)), g = n(18), y = n(96), v = n(19), S = n(97), b = n(1);\r\n            engine['PRODI'] = 1;\r\n            var w = m.default.CostumeGame, _ = 2222222231;\r\n            void 0;\r\n            var T = function (e, _a) {\r\n                var t = _a.lobbyRoom, n = _a.trackSeed, r = _a.minGames, _b = _a.alreadyStarted, o = _b === void 0 ? 0 : _b;\r\n                return i(void 0, void 0, void 0, function () {\r\n                    var i;\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                void 0;\r\n                                return [4 /*yield*/, c.createSpectatorTrack(e, {\r\n                                        lobbyRoom: t,\r\n                                        trackSeed: n,\r\n                                        minGames: r,\r\n                                        alreadyStarted: o,\r\n                                    })];\r\n                            case 1:\r\n                                i = _a.sent();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                });\r\n            }, C = function (e, _a) {\r\n                var t = _a.gameRoom, n = _a.lobbyRoom, r = _a.user, o = _a.trackSeed, s = _a.player, c = _a.minGames;\r\n                return i(void 0, void 0, void 0, function () {\r\n                    var i, l;\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0: return [4 /*yield*/, a.createTrack(e, {\r\n                                    gameRoom: t,\r\n                                    lobbyRoom: n,\r\n                                    user: r,\r\n                                    trackSeed: o,\r\n                                    minGames: c,\r\n                                })];\r\n                            case 1:\r\n                                i = _a.sent();\r\n                                i.onScore(function () {\r\n                                    var e = [];\r\n                                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                                        e[_i] = arguments[_i];\r\n                                    }\r\n                                    void 0;\r\n                                });\r\n                                i.onFinish(function () {\r\n                                    void 0;\r\n                                });\r\n                                t.state.onChange = function (e) {\r\n                                    void 0;\r\n                                    if (t.state.player1 &&\r\n                                        t.state.player2 &&\r\n                                        t.state.minGames <= t.state.currentGameIndex &&\r\n                                        t.state.score.player1 !== t.state.score.player2) {\r\n                                        var e_17 = (t.state.score.player1 || 0) > (t.state.score.player2 || 0)\r\n                                            ? 1\r\n                                            : 2, i_4 = 1 === e_17 ? 2 : 1, r_4 = n.state['player' + e_17].displayName + \"\\npwned\\n\" + n.state['player' + i_4].displayName;\r\n                                        t.state.player1.skipEnd || t.state.player2.skipEnd\r\n                                            ? u.updateTextPanel({\r\n                                                value: 'One player still have to click\\nto skip end screen.\\n\\n' +\r\n                                                    r_4,\r\n                                            })\r\n                                            : u.updateTextPanel({\r\n                                                value: 'Players must click to skip end screen\\n\\n' + r_4,\r\n                                            });\r\n                                    }\r\n                                    ![t.state.player1.readyNext, t.state.player2.readyNext].every(function (e) { return e; }) &&\r\n                                        (t.state.player1.readyNext || t.state.player2.readyNext) &&\r\n                                        t.state['player' + s].readyNext\r\n                                        ? u.updateTextPanel({ value: 'Waiting for other player' })\r\n                                        : 'Waiting for other player' === u.getTextPanelValue() &&\r\n                                            u.updateTextPanel({ value: '' });\r\n                                };\r\n                                t.onMessage('*', function () {\r\n                                    var e = [];\r\n                                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                                        e[_i] = arguments[_i];\r\n                                    }\r\n                                    void 0;\r\n                                });\r\n                                l = undefined;\r\n                                return [2 /*return*/, function () {\r\n                                        t.dispose();\r\n                                        t = null;\r\n                                    }];\r\n                        }\r\n                    });\r\n                });\r\n            };\r\n            var P;\r\n            var R = /** @class */ (function () {\r\n                function R(e, t) {\r\n                    var _this = this;\r\n                    this.state = { countToCheckCamera: 0 };\r\n                    (function () {\r\n                        return i(_this, void 0, void 0, function () {\r\n                            var _a, n, i, r, a, c, m, R, E, O, I, A, x, k, M, N, F, _b, D, U, e_18, j, B, e_19, t_3, e_20, t_4, r_5, o_2;\r\n                            return __generator(this, function (_c) {\r\n                                switch (_c.label) {\r\n                                    case 0:\r\n                                        _a = JSON.parse(t.host_data).sammichgame, n = _a.position, i = _a.rotation, r = _a.scale, a = _a.hideFrame, c = _a.hideBoard, m = _a.hideAd, R = _a.soundDistance, E = _a.showJoinVoice, O = _a.voiceChannel, I = _a.showScenario, A = _a.serverWs, x = _a.serverHttp, k = JSON.parse(t.host_data).sammichgame.gameID.replace(',', '_'), M = new l.Client('' + (A || g.WS_HOST));\r\n                                        void 0;\r\n                                        return [4 /*yield*/, f.sleep(0)];\r\n                                    case 1:\r\n                                        _c.sent();\r\n                                        b.loadTexture();\r\n                                        d.loadSounds();\r\n                                        if (!e.getUserData) return [3 /*break*/, 3];\r\n                                        return [4 /*yield*/, e.getUserData()];\r\n                                    case 2:\r\n                                        _b = _c.sent();\r\n                                        return [3 /*break*/, 4];\r\n                                    case 3:\r\n                                        _b = e.user.data;\r\n                                        _c.label = 4;\r\n                                    case 4:\r\n                                        N = _b;\r\n                                        return [4 /*yield*/, S.getLand()];\r\n                                    case 5:\r\n                                        F = _c.sent();\r\n                                        v.setHostData({\r\n                                            land: F,\r\n                                            gameID: k,\r\n                                            position: n,\r\n                                            rotation: i,\r\n                                            scale: r,\r\n                                            hideFrame: a,\r\n                                            hideBoard: c,\r\n                                            hideAd: m,\r\n                                            soundDistance: R,\r\n                                            showJoinVoice: E,\r\n                                            voiceChannel: O,\r\n                                            showScenario: I,\r\n                                            serverWs: A,\r\n                                            serverHttp: x,\r\n                                        });\r\n                                        void 0;\r\n                                        void 0;\r\n                                        D = new Entity();\r\n                                        u.createTextPanel(D, '');\r\n                                        h.createSpritePanel(D);\r\n                                        h.updateSpritePanel({ uvs: p.getSpriteUv(1, 0, 192, 128) });\r\n                                        this.rootTransform = new Transform({\r\n                                            position: new Vector3(n.x, n.y, n.z),\r\n                                            scale: new Vector3(r.x, r.y, r.z),\r\n                                        });\r\n                                        this.rootTransform.rotation.setEuler(i.x, i.y, i.z);\r\n                                        D.addComponent(this.rootTransform);\r\n                                        engine.addEntity(D);\r\n                                        U = new Entity();\r\n                                        U.addComponent(new Transform({ position: new Vector3(0, 2, -2) }));\r\n                                        U.setParent(D);\r\n                                        d.addSoundsToEntity(U);\r\n                                        a || o.createFrame(D);\r\n                                        m ||\r\n                                            p.createSpriteEntity(D, {\r\n                                                position: new Vector3(0.25, -0.4, -0.14),\r\n                                                scale: new Vector3(6.5, 0.75, 1),\r\n                                                uvs: p.getSpriteUv(1, 40, 384, 64),\r\n                                            });\r\n                                        P = s.createLobbyControl(D, {\r\n                                            gameID: k,\r\n                                            client: M,\r\n                                            user: N,\r\n                                            hideBoard: c,\r\n                                        });\r\n                                        if (!engine['PRODI']) {\r\n                                            h.hideSpritePanel();\r\n                                            d.toggleMusic();\r\n                                            e_18 = new w(D, { seed: _, currentPlayer: 2, level: 1 });\r\n                                            e_18.setStartTime(Date.now() + 2e3);\r\n                                            e_18.onFinish(function () { });\r\n                                            e_18.onFinishRound && e_18.onFinishRound(function () { });\r\n                                            e_18.onShareState(function (t) {\r\n                                                e_18.shareState(Object.assign(Object.assign({}, t), {\r\n                                                    player: 1,\r\n                                                    senderPlayer: 1,\r\n                                                }));\r\n                                            });\r\n                                            e_18.init();\r\n                                        }\r\n                                        j = function (e, _a) {\r\n                                            var t = _a.trackSeed, n = _a.player, i = _a.minGames;\r\n                                            void 0;\r\n                                            C(D, {\r\n                                                gameRoom: e,\r\n                                                lobbyRoom: P.getLobbyRoom(),\r\n                                                user: N,\r\n                                                trackSeed: t,\r\n                                                player: n,\r\n                                                minGames: i,\r\n                                            });\r\n                                            P.getLobbyRoom().onMessage('PLAYER_LEFT', function (_a) {\r\n                                                var e = _a.displayName;\r\n                                                void 0;\r\n                                                y.showNotification(e + ' left the game');\r\n                                            });\r\n                                        };\r\n                                        P.onPlayersFull(function (_a) {\r\n                                            var e = _a.lobbyRoom, t = _a.trackSeed, n = _a.minGames;\r\n                                            void 0;\r\n                                            T(D, { lobbyRoom: P.getLobbyRoom(), trackSeed: t, minGames: n });\r\n                                            P.getLobbyRoom().onMessage('PLAYER_LEFT', function (_a) {\r\n                                                var e = _a.displayName;\r\n                                                void 0;\r\n                                                y.showNotification(e + ' left the game');\r\n                                            });\r\n                                        });\r\n                                        P.onGameRunning(function (_a) {\r\n                                            var e = _a.lobbyRoom, t = _a.minGames;\r\n                                            void 0;\r\n                                            T(D, {\r\n                                                lobbyRoom: P.getLobbyRoom(),\r\n                                                trackSeed: e.state.trackSeed,\r\n                                                minGames: t,\r\n                                                alreadyStarted: 1,\r\n                                            });\r\n                                            P.getLobbyRoom().onMessage('PLAYER_LEFT', function (_a) {\r\n                                                var e = _a.displayName;\r\n                                                void 0;\r\n                                                y.showNotification(e + ' left the game');\r\n                                            });\r\n                                        });\r\n                                        P.onChangeState(function (e, t) {\r\n                                            void 0;\r\n                                        });\r\n                                        P.onCreate(function (e, _a) {\r\n                                            var t = _a.minGames;\r\n                                            void 0;\r\n                                            e.onMessage('GAME_FULL', function (_a) {\r\n                                                var n = _a.trackSeed;\r\n                                                return j(e, { trackSeed: n, player: 1, minGames: t });\r\n                                            });\r\n                                        });\r\n                                        P.onJoin(function (e, _a) {\r\n                                            var t = _a.minGames;\r\n                                            void 0;\r\n                                            e.onMessage('GAME_FULL', function (_a) {\r\n                                                var n = _a.trackSeed;\r\n                                                return j(e, { trackSeed: n, player: 2, minGames: t });\r\n                                            });\r\n                                        });\r\n                                        B = '' +\r\n                                            (engine['RESOURCE_BASE'] || globalThis['RESOURCE_BASE'] || '');\r\n                                        if (E) {\r\n                                            e_19 = new Entity(), t_3 = new GLTFShape(B + 'models/joinVoice.glb');\r\n                                            e_19.addComponent(new Transform({\r\n                                                position: new Vector3(0, n.y - 1.5, -13),\r\n                                                scale: new Vector3(1.5, 2, 2),\r\n                                            }));\r\n                                            e_19.addComponent(t_3);\r\n                                            e_19.addComponent(new OnPointerDown(function () {\r\n                                                openExternalURL(\"https://meet.jit.si/\" + O + \"#config.startWithAudioMuted=true&config.startWithVideoMuted=true\");\r\n                                            }));\r\n                                            e_19.setParent(D);\r\n                                        }\r\n                                        if (I) {\r\n                                            e_20 = new Entity(), t_4 = new GLTFShape(B + 'models/sammich-scene.glb'), r_5 = 0 === i.y ? 0 : 90 === i.y ? -6 : 180 === i.y ? 0 : 6, o_2 = 0 === i.y ? -6 : 90 === i.y ? 0 : 180 === i.y ? 6 : 0;\r\n                                            e_20.addComponent(new Transform({\r\n                                                position: new Vector3(n.x + r_5, 0, n.z + o_2),\r\n                                                rotation: Quaternion.Euler(i.x, i.y - 180, i.z),\r\n                                                scale: new Vector3(1, 1, 1),\r\n                                            }));\r\n                                            e_20.addComponent(t_4);\r\n                                            engine.addEntity(e_20);\r\n                                        }\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        });\r\n                    })();\r\n                }\r\n                R.prototype.update = function (e) {\r\n                    this.state.countToCheckCamera += e;\r\n                    if (this.state.countToCheckCamera >= 1) {\r\n                        var _a = v.getHostData(), e_21 = _a.position, t_5 = _a.soundDistance, n_5 = t_5\r\n                            ? { x1: e_21.x - t_5, x2: e_21.x + t_5, z1: e_21.z - t_5, z2: e_21.z + t_5 }\r\n                            : { x1: 0, x2: 16, z1: 0, z2: 16 }, _b = Camera.instance.position, i_5 = _b.x, r_6 = _b.y, o_3 = _b.z;\r\n                        void 0;\r\n                        if (Camera.instance.position.x >= n_5.x1 &&\r\n                            Camera.instance.position.x <= n_5.x2 &&\r\n                            Camera.instance.position.z >= n_5.z1 &&\r\n                            Camera.instance.position.z <= n_5.z2) {\r\n                            void 0;\r\n                            d.setTotalMute(0);\r\n                        }\r\n                        else {\r\n                            void 0;\r\n                            d.setTotalMute(1);\r\n                        }\r\n                        this.state.countToCheckCamera = 0;\r\n                    }\r\n                    var t = new Transform();\r\n                };\r\n                R.prototype.refreshHost = function (e) {\r\n                    if (!this.rootTransform)\r\n                        return;\r\n                    var _a = JSON.parse(e.host_data).sammichgame, t = _a.position, n = _a.rotation, i = _a.scale, r = _a.gameID;\r\n                    this.rootTransform.position.set(t.x, t.y, t.z);\r\n                    this.rootTransform.rotation.setEuler(n.x, n.y, n.z);\r\n                    this.rootTransform.scale.set(i.x, i.y, i.z);\r\n                };\r\n                return R;\r\n            }());\r\n            t.default = R;\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.createFrame = void 0;\r\n            t.createFrame = function (e) {\r\n                var t = '' + (engine['RESOURCE_BASE'] || globalThis['RESOURCE_BASE'] || ''), n = new GLTFShape(t + 'models/frame.glb'), i = new Material();\r\n                n.withCollisions = 0;\r\n                i.albedoColor = Color3.FromHexString('#333333');\r\n                i.specularIntensity = 0.1;\r\n                i.roughness = 0.9;\r\n                i.metallic = 0.1;\r\n                var r = new Transform({ position: new Vector3(0, -0.76, 0) }), o = new Entity();\r\n                o.addComponent(n);\r\n                o.addComponent(i);\r\n                o.addComponent(r);\r\n                o.setParent(e);\r\n            };\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.createLobbyControl = void 0;\r\n            var i = n(52), r = n(53), o = n(54), s = n(6), a = n(4), c = n(2), l = n(14), u = n(0);\r\n            var h = null;\r\n            var d = {\r\n                onCreate: null,\r\n                onJoin: null,\r\n                onPlayersFull: null,\r\n                onChangeState: null,\r\n                onMessage: null,\r\n                onSpectatorMessage: null,\r\n                onGameRunning: null,\r\n            };\r\n            var p = 1;\r\n            t.createLobbyControl = function (e, _a) {\r\n                var t = _a.gameID, n = _a.user, f = _a.client, m = _a.hideBoard;\r\n                var g = i.createStartButtonPanel(e);\r\n                m || o.createBoard(e);\r\n                g.showJoinButtonOn(function () {\r\n                    void 0;\r\n                    return h && h.state && h.state.initialized\r\n                        ? h.state.player1 && h.state.player1.userId === n.userId\r\n                            ? 0\r\n                            : h.state.player1 && !h.state.player2\r\n                                ? 1\r\n                                : 0\r\n                        : 0;\r\n                });\r\n                g.showCreateButtonOn(function () {\r\n                    void 0;\r\n                    return h && h.state && h.state.initialized\r\n                        ? h.state.player1\r\n                            ? 0\r\n                            : h.state.player1\r\n                                ? void 0\r\n                                : 1\r\n                        : 0;\r\n                });\r\n                g.showCancelButtonOn(function () {\r\n                    var e;\r\n                    void 0;\r\n                    return (null === (e = null == h ? void 0 : h.state) || void 0 === e\r\n                        ? void 0\r\n                        : e.player1) && h.state.player2\r\n                        ? 0\r\n                        : h && h.state && h.state.initialized && h.state.player1\r\n                            ? h.state.player1 && h.state.player1.userId === n.userId\r\n                                ? 1\r\n                                : void 0\r\n                            : 0;\r\n                });\r\n                g.update();\r\n                r.joinOrCreateGameLobby(f, { gameID: t, user: n }).then(function (e) {\r\n                    s.updateTextPanel({\r\n                        value: '',\r\n                        color: Color3.FromHexString('#ffffff'),\r\n                    });\r\n                    void 0;\r\n                    h = e.room;\r\n                    var i = null;\r\n                    h.onMessage('GAME_FULL', function (_a) {\r\n                        var e = _a.trackSeed, t = _a.minGames;\r\n                        d.onPlayersFull({ lobbyRoom: h, trackSeed: e, minGames: t });\r\n                    });\r\n                    h.state.onChange = function (e) {\r\n                        var t;\r\n                        g.update();\r\n                        void 0;\r\n                        o.updateBoard(h);\r\n                        void 0;\r\n                        if (h.state.player1 && !h.state.player2) {\r\n                            c.stopAllSounds();\r\n                            c.playLoop('music2');\r\n                            s.updateTextPanel({\r\n                                value: h.state.player1.displayName +\r\n                                    ' as player 1\\nwaiting for someone to join',\r\n                                bottom: 1,\r\n                                color: Color3.Black(),\r\n                                hTextAlign: 'left',\r\n                            });\r\n                            a.updateSpritePanel({ uvs: u.getSpriteUv(1, 0, 192, 128) });\r\n                            a.showSpritePanel();\r\n                        }\r\n                        if (!h.state.player1 && !h.state.player2 && engine['PRODI']) {\r\n                            l.removeVideoPanel();\r\n                            a.updateSpritePanel({ uvs: u.getSpriteUv(1, 0, 192, 128) });\r\n                            a.showSpritePanel();\r\n                            (null === (t = h.state.lastPlayer1) || void 0 === t\r\n                                ? void 0\r\n                                : t.displayName)\r\n                                ? s.updateTextPanel({\r\n                                    value: h.state.lastPlayer1.displayName + \" \" + h.state.lastPlayer1.score + \" - \" + h.state.lastPlayer2.score + \" \" + h.state.lastPlayer2.displayName,\r\n                                })\r\n                                : s.updateTextPanel({ value: '' });\r\n                            c.stopAllSounds();\r\n                        }\r\n                        if (h.state.player1 && h.state.player2 && !i() && (f() || p)) {\r\n                            void 0;\r\n                            c.stopAllSounds();\r\n                            s.updateTextPanel({\r\n                                value: h.state.player1.displayName + \" and \" + h.state.player2.displayName + \"\\nare playing\",\r\n                            });\r\n                            a.updateSpritePanel({ uvs: u.getSpriteUv(9, 0, 192, 128) });\r\n                            a.showSpritePanel();\r\n                            p && d.onGameRunning({ lobbyRoom: h, minGames: r });\r\n                        }\r\n                        p = 0;\r\n                        function i() {\r\n                            var e;\r\n                            return (h.state.player1 &&\r\n                                h.state.player2 &&\r\n                                (h.state.player1.userId === n.userId ||\r\n                                    (null === (e = h.state.player2) || void 0 === e\r\n                                        ? void 0\r\n                                        : e.userId) === n.userId));\r\n                        }\r\n                        function f() {\r\n                            var t = e.find(function (e) { return 'player2' === e.field; }) || {};\r\n                            return t.value && !t.previousValue;\r\n                        }\r\n                        function m(e) {\r\n                            var t = y(e, 'trackSeed');\r\n                            return t.value != t.value;\r\n                        }\r\n                        function y(e, t) {\r\n                            return e.find(function (e) { return e.field === t; });\r\n                        }\r\n                    };\r\n                    h.state.onAdd = function (e, t) {\r\n                        void 0;\r\n                    };\r\n                    h.state.onRemove = function (e, t) {\r\n                        void 0;\r\n                    };\r\n                    var r = 5;\r\n                    g.onRequestCreate(function () {\r\n                        h.state.player1 ||\r\n                            e\r\n                                .requestCreate({\r\n                                gameID: t,\r\n                                user: n,\r\n                                minGames: r,\r\n                                lobbySessionId: h.sessionId,\r\n                            })\r\n                                .then(function (_a) {\r\n                                var e = _a.sessionId, t = _a.gameRoom;\r\n                                i = t;\r\n                                d.onCreate(t, { minGames: r });\r\n                            }, function () {\r\n                                void 0;\r\n                            });\r\n                    });\r\n                    g.onRequestCancel(function () {\r\n                        i && i.leave();\r\n                    });\r\n                    g.onRequestJoin(function () {\r\n                        void 0;\r\n                        h.state.player2 ||\r\n                            e\r\n                                .requestJoin({\r\n                                roomID: h.state.gameRoomID,\r\n                                gameID: t,\r\n                                user: n,\r\n                                lobbySessionId: h.sessionId,\r\n                            })\r\n                                .then(function (_a) {\r\n                                var e = _a.gameRoom;\r\n                                i = e;\r\n                                d.onJoin(e, { minGames: r });\r\n                            }, function () {\r\n                                void 0;\r\n                            });\r\n                    });\r\n                }, function (e) {\r\n                    s.updateTextPanel({\r\n                        value: 'Unable to connect to server.\\nServer could be down.\\n\\nAlso some adblockers can\\nblock websocket connection.\\n\\nTry to refresh when problem solved.',\r\n                        color: Color3.FromHexString('#ff0000'),\r\n                    });\r\n                    log('ERR__', e);\r\n                });\r\n                return {\r\n                    onCreate: function (e) {\r\n                        d.onCreate = e;\r\n                        return function () { return (d.onCreate = null); };\r\n                    },\r\n                    onJoin: function (e) {\r\n                        d.onJoin = e;\r\n                        return function () { return (d.onJoin = null); };\r\n                    },\r\n                    onPlayersFull: function (e) {\r\n                        d.onPlayersFull = e;\r\n                        return function () { return (d.onPlayersFull = null); };\r\n                    },\r\n                    onGameRunning: function (e) {\r\n                        d.onGameRunning = e;\r\n                        return function () { return (d.onGameRunning = null); };\r\n                    },\r\n                    onChangeState: function (e) {\r\n                        d.onChangeState = e;\r\n                        return function () { return (d.onChangeState = null); };\r\n                    },\r\n                    onMessage: function (e) {\r\n                        d.onMessage = e;\r\n                        return function () { return d.onMessage; };\r\n                    },\r\n                    update: function () { },\r\n                    getLobbyRoom: function () { return h; },\r\n                    hide: function () { },\r\n                };\r\n            };\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.updateStartButtonPanel = t.onRequestCancel = t.onRequestJoin = t.onRequestCreate = t.showJoinButtonOn = t.showCreateButtonOn = t.showCancelButtonOn = t.createStartButtonPanel = void 0;\r\n            var i = n(1), r = n(0), o = {\r\n                showCreateButtonOn: null,\r\n                showJoinButtonOn: null,\r\n                showCancelButtonOn: null,\r\n            };\r\n            var s = null, a = null, c = null;\r\n            var l = {\r\n                onRequestCreate: null,\r\n                onRequestJoin: null,\r\n                onRequestCancel: null,\r\n            }, u = function (e, t, n) {\r\n                var o = { onClick: null };\r\n                var s = new Entity(), a = new Transform({ position: n });\r\n                s.addComponent(a);\r\n                var c = new Entity(), l = new PlaneShape();\r\n                l.withCollisions = 0;\r\n                l.uvs = r.getSpriteUv('create' === t ? 1 : 'join' === t ? 2 : 9, 256, 48, 32);\r\n                c.addComponent(i.spriteMaterial);\r\n                c.addComponent(l);\r\n                l.visible = 0;\r\n                c.addComponent(new Transform({\r\n                    scale: new Vector3(1.5, 1, 1),\r\n                    position: new Vector3(0, 0, 0),\r\n                }));\r\n                c.addComponent(new OnClick(function () {\r\n                    o.onClick();\r\n                }));\r\n                c.setParent(s);\r\n                s.setParent(e);\r\n                var u = function () {\r\n                    l.visible = 0;\r\n                };\r\n                u();\r\n                return {\r\n                    onClick: function (e) {\r\n                        o.onClick = e;\r\n                        return function () { return (o.onClick = null); };\r\n                    },\r\n                    show: function () {\r\n                        l.visible = 1;\r\n                    },\r\n                    hide: u,\r\n                };\r\n            }, h = 0.03125;\r\n            t.createStartButtonPanel = function (e) {\r\n                var n = new Entity(), i = (25 * h) / 2 + 2 * h;\r\n                s = u(n, 'create', new Vector3(-(3 - (48 * h) / 2 - 2 * h), i, -0.01));\r\n                s.onClick(function () { return l.onRequestCreate(); });\r\n                a = u(n, 'join', new Vector3(3 - (48 * h) / 2 - 2 * h, i, -0.01));\r\n                a.onClick(function () { return l.onRequestJoin(); });\r\n                c = u(n, 'cancel', new Vector3(-(3 - (48 * h) / 2 - 2 * h), i + 36 * h, -0.01));\r\n                c.onClick(function () { return l.onRequestCancel(); });\r\n                engine['PRODI'] && n.setParent(e);\r\n                return {\r\n                    onRequestCreate: t.onRequestCreate,\r\n                    onRequestJoin: t.onRequestJoin,\r\n                    onRequestCancel: t.onRequestCancel,\r\n                    showCreateButtonOn: t.showCreateButtonOn,\r\n                    showJoinButtonOn: t.showJoinButtonOn,\r\n                    showCancelButtonOn: t.showCancelButtonOn,\r\n                    update: t.updateStartButtonPanel,\r\n                };\r\n            };\r\n            t.showCancelButtonOn = function (e) {\r\n                o.showCancelButtonOn = e;\r\n                return function () { return (o.showCancelButtonOn = null); };\r\n            };\r\n            t.showCreateButtonOn = function (e) {\r\n                o.showCreateButtonOn = e;\r\n                return function () { return (o.showCreateButtonOn = null); };\r\n            };\r\n            t.showJoinButtonOn = function (e) {\r\n                o.showJoinButtonOn = e;\r\n                return function () { return (o.showJoinButtonOn = null); };\r\n            };\r\n            t.onRequestCreate = function (e) {\r\n                l.onRequestCreate = e;\r\n                return function () { return (l.onRequestCreate = null); };\r\n            };\r\n            t.onRequestJoin = function (e) {\r\n                l.onRequestJoin = e;\r\n                return function () { return (l.onRequestJoin = null); };\r\n            };\r\n            t.onRequestCancel = function (e) {\r\n                l.onRequestCancel = e;\r\n                return function () { return (l.onRequestCancel = null); };\r\n            };\r\n            t.updateStartButtonPanel = function () {\r\n                o.showCreateButtonOn() ? s.show() : s.hide();\r\n                o.showJoinButtonOn() ? a.show() : a.hide();\r\n                o.showCancelButtonOn() ? c.show() : c.hide();\r\n            };\r\n        },\r\n        function (e, t, n) {\r\n            var i = (this && this.__awaiter) ||\r\n                function (e, t, n, i) {\r\n                    function r(e) {\r\n                        return e instanceof n\r\n                            ? e\r\n                            : new n(function (t) {\r\n                                t(e);\r\n                            });\r\n                    }\r\n                    return new (n || (n = Promise))(function (n, o) {\r\n                        function s(e) {\r\n                            try {\r\n                                c(i.next(e));\r\n                            }\r\n                            catch (e) {\r\n                                o(e);\r\n                            }\r\n                        }\r\n                        function a(e) {\r\n                            try {\r\n                                c(i['throw'](e));\r\n                            }\r\n                            catch (e) {\r\n                                o(e);\r\n                            }\r\n                        }\r\n                        function c(e) {\r\n                            e.done ? n(e.value) : r(e.value).then(s, a);\r\n                        }\r\n                        c((i = i.apply(e, t || [])).next());\r\n                    });\r\n                };\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.joinOrCreateGameLobby = void 0;\r\n            var r = n(18), o = n(19), s = (globalThis && globalThis.navigator) || {};\r\n            t.joinOrCreateGameLobby = function (e, _a) {\r\n                var t = _a.gameID, n = _a.user;\r\n                return i(void 0, void 0, void 0, function () {\r\n                    var a;\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                a = o.getHostData().serverHttp;\r\n                                return [4 /*yield*/, fetch((a || r.HTTP_HOST) + \"/game?id=\" + t)];\r\n                            case 1:\r\n                                _a.sent();\r\n                                return [2 /*return*/, new Promise(function (r, a) {\r\n                                        return i(void 0, void 0, void 0, function () {\r\n                                            var c;\r\n                                            return __generator(this, function (_a) {\r\n                                                c = o.getHostData().land;\r\n                                                void 0;\r\n                                                e.joinOrCreate('gameLobby_' + t, {\r\n                                                    gameID: t,\r\n                                                    user: n,\r\n                                                    land: c,\r\n                                                    clientInfo: { language: s.language || null },\r\n                                                })\r\n                                                    .then(function (n) {\r\n                                                    void 0;\r\n                                                    r({\r\n                                                        requestCreate: function (_a) {\r\n                                                            var t = _a.gameID, n = _a.user, r = _a.minGames, o = _a.lobbySessionId;\r\n                                                            return i(void 0, void 0, void 0, function () {\r\n                                                                return __generator(this, function (_a) {\r\n                                                                    log('requestCreate', t, n);\r\n                                                                    return [2 /*return*/, e\r\n                                                                            .create('game_' + t, {\r\n                                                                            gameID: t,\r\n                                                                            user: Object.assign(Object.assign({}, n), {\r\n                                                                                address: n.address || 'empty',\r\n                                                                            }),\r\n                                                                            minGames: r,\r\n                                                                            lobbySessionId: o,\r\n                                                                            land: c,\r\n                                                                        })\r\n                                                                            .then(function (e) { return ({\r\n                                                                            sessionId: e.sessionId,\r\n                                                                            gameRoomID: e.id,\r\n                                                                            gameRoom: e,\r\n                                                                        }); }, function () {\r\n                                                                            void 0;\r\n                                                                        })];\r\n                                                                });\r\n                                                            });\r\n                                                        },\r\n                                                        requestJoin: function (_a) {\r\n                                                            var n = _a.roomID, r = _a.user, o = _a.lobbySessionId;\r\n                                                            return i(void 0, void 0, void 0, function () {\r\n                                                                return __generator(this, function (_a) {\r\n                                                                    log('requestJoin', n);\r\n                                                                    return [2 /*return*/, e\r\n                                                                            .joinById(n, {\r\n                                                                            gameID: t,\r\n                                                                            user: Object.assign(Object.assign({}, r), {\r\n                                                                                address: r.address || 'empty',\r\n                                                                            }),\r\n                                                                            lobbySessionId: o,\r\n                                                                            land: c,\r\n                                                                        })\r\n                                                                            .then(function (e) { return ({\r\n                                                                            sessionId: e.sessionId,\r\n                                                                            gameRoomID: e.id,\r\n                                                                            gameRoom: e,\r\n                                                                        }); }, function () {\r\n                                                                            void 0;\r\n                                                                        })];\r\n                                                                });\r\n                                                            });\r\n                                                        },\r\n                                                        room: n,\r\n                                                    });\r\n                                                })\r\n                                                    .catch(function (e) {\r\n                                                    a({ message: '_join error', error: e });\r\n                                                });\r\n                                                return [2 /*return*/];\r\n                                            });\r\n                                        });\r\n                                    })];\r\n                        }\r\n                    });\r\n                });\r\n            };\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.updateBoard = t.createBoard = void 0;\r\n            var i = n(0), r = n(2), o = { player1: new Entity(), player2: new Entity() };\r\n            t.createBoard = function (e) {\r\n                var t = new TextShape(), n = new TextShape(), s = new Entity();\r\n                s.addComponent(new Transform({ position: new Vector3(0, 4, -0.15) }));\r\n                s.setParent(e);\r\n                t.color = Color3.FromHexString('#6666ff');\r\n                n.color = Color3.FromHexString('#ffff00');\r\n                t.hTextAlign = 'left';\r\n                t.vTextAlign = n.vTextAlign = 'top';\r\n                n.hTextAlign = 'right';\r\n                t.fontSize = n.fontSize = 2;\r\n                o.player1.addComponent(t);\r\n                o.player2.addComponent(n);\r\n                o.player1.addComponent(new Transform({ position: new Vector3(-2.99, 0.5, -0.001) }));\r\n                o.player2.addComponent(new Transform({ position: new Vector3(2.99, 0.5, -0.001) }));\r\n                o.player1.setParent(s);\r\n                o.player2.setParent(s);\r\n                var a = new Entity(), c = new Material();\r\n                a.addComponent(c);\r\n                c.transparencyMode = 1;\r\n                c.specularIntensity = 0;\r\n                c.roughness = 1;\r\n                c.metallic = 0;\r\n                c.alphaTest = 0.5;\r\n                c.albedoColor = new Color4(0, 0, 0, 0.7);\r\n                a.addComponent(new PlaneShape());\r\n                a.addComponent(new Transform({\r\n                    scale: new Vector3(6, 0.5, 1),\r\n                    position: new Vector3(0, 0.25, 0),\r\n                }));\r\n                a.setParent(s);\r\n                var l = 1;\r\n                var u = i.createSpriteEntity(s, {\r\n                    uvs: i.getSpriteUv(10, 2048, 16, 16),\r\n                    position: new Vector3(0, 0.25, -0.001),\r\n                    scale: new Vector3(0.5, 0.5, 1),\r\n                });\r\n                u.getEntity().addComponent(new OnClick(function () {\r\n                    r.toggleMusic();\r\n                    l = !l;\r\n                    u.getShape().uvs = l\r\n                        ? i.getSpriteUv(10, 2048, 16, 16)\r\n                        : i.getSpriteUv(11, 2048, 16, 16);\r\n                }));\r\n            };\r\n            t.updateBoard = function (e) {\r\n                e.state.player1 &&\r\n                    (o.player1.getComponent(TextShape).value = (e.state.player1.score || 0) + \" points\\n\" + e.state.player1.displayName);\r\n                e.state.player2 &&\r\n                    (o.player2.getComponent(TextShape).value = (e.state.player2.score || 0) + \" points\\n\" + e.state.player2.displayName);\r\n                e.state.player1 || (o.player1.getComponent(TextShape).value = '<free>');\r\n                e.state.player2 || (o.player2.getComponent(TextShape).value = '<free>');\r\n            };\r\n        },\r\n        function (e, t, n) {\r\n            var i = (this && this.__awaiter) ||\r\n                function (e, t, n, i) {\r\n                    function r(e) {\r\n                        return e instanceof n\r\n                            ? e\r\n                            : new n(function (t) {\r\n                                t(e);\r\n                            });\r\n                    }\r\n                    return new (n || (n = Promise))(function (n, o) {\r\n                        function s(e) {\r\n                            try {\r\n                                c(i.next(e));\r\n                            }\r\n                            catch (e) {\r\n                                o(e);\r\n                            }\r\n                        }\r\n                        function a(e) {\r\n                            try {\r\n                                c(i['throw'](e));\r\n                            }\r\n                            catch (e) {\r\n                                o(e);\r\n                            }\r\n                        }\r\n                        function c(e) {\r\n                            e.done ? n(e.value) : r(e.value).then(s, a);\r\n                        }\r\n                        c((i = i.apply(e, t || [])).next());\r\n                    });\r\n                };\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.createTrack = void 0;\r\n            var r = n(6), o = n(2), s = n(4), a = n(14), c = n(0), l = n(20);\r\n            var u = 0;\r\n            t.createTrack = function (e, _a) {\r\n                var t = _a.gameRoom, n = _a.lobbyRoom, p = _a.user, f = _a.trackSeed, m = _a.minGames;\r\n                return i(void 0, void 0, void 0, function () {\r\n                    function w(e) {\r\n                        g.onScore = e;\r\n                        return function () { return (g.onScore = null); };\r\n                    }\r\n                    function _(e) {\r\n                        g.onFinish = e;\r\n                        return function () { return (g.onFinish = null); };\r\n                    }\r\n                    function T() {\r\n                        g.onFinish = g.onScore = null;\r\n                    }\r\n                    function C(t) {\r\n                        var _this = this;\r\n                        t.onMessage('SHARE_STATE', function (e) {\r\n                            S && S.shareState(e || {});\r\n                        });\r\n                        t.onLeave(function (e) {\r\n                            void 0;\r\n                            S && S.destroy();\r\n                            S = null;\r\n                            a.removeVideoPanel();\r\n                            s.updateSpritePanel({ uvs: c.getSpriteUv(1, 0, 192, 128) });\r\n                            s.showSpritePanel();\r\n                        });\r\n                        t.onMessage('FINSIH_AGREE', function (_a) {\r\n                            var o = _a.winner, s = _a.nextSeed, c = _a.nextIndex;\r\n                            return i(_this, void 0, void 0, function () {\r\n                                var i, n_6, i_6;\r\n                                return __generator(this, function (_a) {\r\n                                    switch (_a.label) {\r\n                                        case 0:\r\n                                            void 0;\r\n                                            S.finish && S.finish({ winner: o });\r\n                                            g.onScore({ score1: v.score1, score2: v.score2 });\r\n                                            i = n.state['player' + o].displayName;\r\n                                            r.updateTextPanel({ value: \"(\" + o + \") \" + i + \" wins\" });\r\n                                            return [4 /*yield*/, d(2e3)];\r\n                                        case 1:\r\n                                            _a.sent();\r\n                                            S.destroy();\r\n                                            S = null;\r\n                                            if (v.currentIndex + 1 >= y.length && v.score1 === v.score2) {\r\n                                                y.push(l.generateTrack(s, 1)[0]);\r\n                                                void 0;\r\n                                            }\r\n                                            if (v.currentIndex < y.length) {\r\n                                                v.currentIndex = c;\r\n                                                R({ nextSeed: s });\r\n                                                P(S, t);\r\n                                                n_6 = y[c].Game.instructions || 'ERROR: MISSING_INSTRUCTIONS';\r\n                                                a.reproduceVideo(e, y[c].Game.id);\r\n                                                r.updateTextPanel({\r\n                                                    value: n_6 +\r\n                                                        '\\n\\nClick when ready to play\\n or waiting 20 seconds',\r\n                                                });\r\n                                                i_6 = function () {\r\n                                                    Input.instance.unsubscribe('BUTTON_DOWN', ActionButton.POINTER, i_6);\r\n                                                    r.updateTextPanel({ value: 'waiting for other user' });\r\n                                                    t.send('READY_NEXT', {\r\n                                                        senderPlayer: v.currentPlayer,\r\n                                                        games: y.map(function (e) { return e.Game.id; }),\r\n                                                    });\r\n                                                };\r\n                                                Input.instance.subscribe('BUTTON_DOWN', ActionButton.POINTER, 0, i_6);\r\n                                            }\r\n                                            return [2 /*return*/];\r\n                                    }\r\n                                });\r\n                            });\r\n                        });\r\n                        t.onMessage('NEXT_GAME', function (_a) {\r\n                            var e = _a.serverTime, t = _a.startTime;\r\n                            v.currentRoundIndex = 0;\r\n                            Input.instance.unsubscribe('BUTTON_DOWN', ActionButton.POINTER, b);\r\n                            void 0;\r\n                            r.updateTextPanel({ value: '' });\r\n                            o.stopAllSounds();\r\n                            S && S.init();\r\n                            a.removeVideoPanel();\r\n                            u = e - Date.now();\r\n                            S.setStartTime(h(t));\r\n                        });\r\n                        t.onMessage('NEXT_ROUND', function (_a) {\r\n                            var e = _a.winner, t = _a.serverTime, n = _a.startTime, i = _a.roundIndex;\r\n                            v.currentRoundIndex++;\r\n                            void 0;\r\n                            u = t - Date.now();\r\n                            S.finishRound && S.finishRound({ winner: e });\r\n                            var r = h(n);\r\n                            void 0;\r\n                            void 0;\r\n                            S.setRoundStartTime && S.setRoundStartTime(r);\r\n                        });\r\n                        t.onMessage('FINISH_TRACK', function (_a) {\r\n                            var e = _a.score;\r\n                            return i(_this, void 0, void 0, function () {\r\n                                var n, i;\r\n                                return __generator(this, function (_a) {\r\n                                    void 0;\r\n                                    S.destroy();\r\n                                    S = null;\r\n                                    o.playOnce('pwned');\r\n                                    n = (e.player1 || 0) > (e.player2 || 0) ? 1 : 2;\r\n                                    s.updateSpritePanel({\r\n                                        uvs: c.getSpriteUv(8, 0, 192, 128),\r\n                                        scale: new Vector3(1 === n ? 6 : -6, 4, 1),\r\n                                    });\r\n                                    s.showSpritePanel();\r\n                                    g.onFinish({ score: e });\r\n                                    i = function () {\r\n                                        t.send('SKIP_END', { senderPlayer: v.currentPlayer });\r\n                                    };\r\n                                    Input.instance.subscribe('BUTTON_DOWN', ActionButton.POINTER, 0, i);\r\n                                    t.onLeave(function () {\r\n                                        return Input.instance.unsubscribe('BUTTON_DOWN', ActionButton.POINTER, i);\r\n                                    });\r\n                                    return [2 /*return*/];\r\n                                });\r\n                            });\r\n                        });\r\n                    }\r\n                    function P(e, t) {\r\n                        e.onFinish(function (_a) {\r\n                            var n = _a.time, i = _a.isWinner, r = _a.score, o = _a.gameIndex, s = _a.roundIndex;\r\n                            void 0;\r\n                            e.block();\r\n                            var a = 1 === v.currentPlayer ? 2 : 1, c = i ? v.currentPlayer : a;\r\n                            void 0;\r\n                            t.send('FINISH_GAME', {\r\n                                winner: c,\r\n                                time: n,\r\n                                score: r,\r\n                                senderPlayer: v.currentPlayer,\r\n                                userId: p.userId,\r\n                                currentGameIndex: o,\r\n                                currentRoundIndex: s,\r\n                                gameName: e.id,\r\n                            });\r\n                        });\r\n                        e.onFinishRound &&\r\n                            e.onFinishRound(function (_a) {\r\n                                var n = _a.player, i = _a.time, r = _a.score, o = _a.isWinner, s = _a.roundIndex, a = _a.gameIndex;\r\n                                var c = 1 === v.currentPlayer ? 2 : 1, l = o ? v.currentPlayer : c;\r\n                                t.send('READY_ROUND', {\r\n                                    player: n,\r\n                                    time: i,\r\n                                    score: r,\r\n                                    winner: l,\r\n                                    currentGameIndex: a,\r\n                                    currentRoundIndex: s,\r\n                                    gameName: e.id,\r\n                                });\r\n                            });\r\n                        e.onShareState(function (e) {\r\n                            t.send('SHARE_STATE', {\r\n                                sharedState: e,\r\n                                userId: p.userId,\r\n                                senderPlayer: v.currentPlayer,\r\n                                currentGameIndex: v.currentIndex,\r\n                                currentRoundIndex: v.currentRoundIndex,\r\n                            });\r\n                        });\r\n                    }\r\n                    function R(_a) {\r\n                        var t = _a.nextSeed;\r\n                        void 0;\r\n                        if (S) {\r\n                            S.destroy();\r\n                            S = null;\r\n                        }\r\n                        var n = y[v.currentIndex].Game;\r\n                        S = new n(e, {\r\n                            seed: t,\r\n                            currentPlayer: v.currentPlayer,\r\n                            level: 1,\r\n                            gameIndex: v.currentIndex,\r\n                        });\r\n                    }\r\n                    function E() {\r\n                        var e;\r\n                        return (n.state.player1 &&\r\n                            n.state.player2 &&\r\n                            (n.state.player1.userId === p.userId ||\r\n                                (null === (e = n.state.player2) || void 0 === e\r\n                                    ? void 0\r\n                                    : e.userId) === p.userId));\r\n                    }\r\n                    var g, y, v, S, b;\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                g = { onScore: null, onFinish: null }, y = l.generateTrack(f, m);\r\n                                void 0;\r\n                                v = {\r\n                                    currentIndex: 0,\r\n                                    currentPlayer: 0,\r\n                                    currentRoundIndex: 0,\r\n                                    score1: 0,\r\n                                    score2: 0,\r\n                                };\r\n                                n.state.player1.userId === p.userId && (v.currentPlayer = 1);\r\n                                n.state.player2.userId === p.userId && (v.currentPlayer = 2);\r\n                                o.stopSound('music2');\r\n                                return [4 /*yield*/, d(100)];\r\n                            case 1:\r\n                                _a.sent();\r\n                                o.playOnce('vs', { volume: 1 });\r\n                                s.updateSpritePanel({ uvs: c.getSpriteUv(10, 0, 192, 128) });\r\n                                r.updateTextPanel({\r\n                                    value: n.state.player1.displayName + \" (left)\\nVS\\n\" + n.state.player2.displayName + \" (right)\",\r\n                                    bottom: 0,\r\n                                    color: Color3.White(),\r\n                                });\r\n                                return [4 /*yield*/, d(3e3)];\r\n                            case 2:\r\n                                _a.sent();\r\n                                a.reproduceVideo(e, y[0].Game.id);\r\n                                s.hideSpritePanel();\r\n                                r.updateTextPanel({\r\n                                    value: y[0].Game.instructions +\r\n                                        '\\n\\nClick when ready to play\\nor waiting 20 seconds',\r\n                                });\r\n                                S = new y[v.currentIndex].Game(e, {\r\n                                    seed: f,\r\n                                    currentPlayer: v.currentPlayer,\r\n                                    level: 1,\r\n                                    gameIndex: 0,\r\n                                });\r\n                                P(S, t);\r\n                                C(t);\r\n                                b = function () {\r\n                                    t.send('READY_NEXT', {\r\n                                        senderPlayer: v.currentPlayer,\r\n                                        games: (y || []).map(function (e) { return e.Game.id; }),\r\n                                    });\r\n                                    Input.instance.unsubscribe('BUTTON_DOWN', ActionButton.POINTER, b);\r\n                                    r.updateTextPanel({ value: 'waiting for other user' });\r\n                                };\r\n                                Input.instance.subscribe('BUTTON_DOWN', ActionButton.POINTER, 0, b);\r\n                                return [2 /*return*/, {\r\n                                        onScore: w,\r\n                                        onFinish: _,\r\n                                        dispose: function () {\r\n                                            void 0;\r\n                                        },\r\n                                    }];\r\n                        }\r\n                    });\r\n                });\r\n            };\r\n            function h(e) {\r\n                return e - u;\r\n            }\r\n            function d(e) {\r\n                return new Promise(function (t) { return setTimeout(t, e); });\r\n            }\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.createModel = void 0;\r\n            var i = n(57), r = n(58), o = n(59), s = n(60), a = n(1), c = n(0);\r\n            t.createModel = function (e, _a) {\r\n                var t = _a.modelDefinition, n = _a.position, l = _a.scale, _b = _a.showLabel, u = _b === void 0 ? '' : _b;\r\n                var h = new Entity();\r\n                h.addComponent(new Transform({ position: n, scale: l }));\r\n                var d = new Entity(), p = new PlaneShape();\r\n                p.withCollisions = 0;\r\n                p.isPointerBlocker = 0;\r\n                p.uvs = c.getSpriteUv(16, 112, 64, 128);\r\n                var f = undefined;\r\n                new Material().albedoColor = new Color3(1, 0, 0);\r\n                var m = new Transform({\r\n                    scale: new Vector3(-1, 2, -1),\r\n                    position: new Vector3(0, 0, 0),\r\n                });\r\n                m.rotation.setEuler(0, 180, 0);\r\n                d.addComponent(m);\r\n                d.addComponent(a.spriteMaterial);\r\n                d.addComponent(p);\r\n                d.setParent(h);\r\n                h.setParent(e);\r\n                var g = { glasses: null, hair: null, shirt: null, pants: null };\r\n                g.glasses = r.createGlasses(h, {\r\n                    partDefinition: { type: 'glasses', index: t.glasses },\r\n                });\r\n                g.hair = i.createHair(h, {\r\n                    partDefinition: { type: 'hair', index: t.hair },\r\n                });\r\n                g.pants = s.createPants(h, {\r\n                    partDefinition: { type: 'pants', index: t.pants },\r\n                });\r\n                g.shirt = o.createShirt(h, {\r\n                    partDefinition: { type: 'shirt', index: t.shirt },\r\n                });\r\n                if (u) {\r\n                    var e_22 = new Entity();\r\n                    e_22.setParent(h);\r\n                    var t_6 = new TextShape('model');\r\n                    t_6.fontSize = 2;\r\n                    t_6.font = new Font(Fonts.SanFrancisco_Heavy);\r\n                    e_22.addComponent(t_6);\r\n                    e_22.addComponent(new Transform({ position: new Vector3(0, 1.3, 0) }));\r\n                }\r\n                var y = function (_a) {\r\n                    var e = _a.partDefinition;\r\n                };\r\n                return {\r\n                    entity: h,\r\n                    update: function (e) {\r\n                        if (!e)\r\n                            debugger;\r\n                        g[e.type].updateIndex(e.index);\r\n                    },\r\n                    dispose: function () { },\r\n                };\r\n            };\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.createHair = void 0;\r\n            var i = n(8), r = n(1), o = n(0);\r\n            t.createHair = function (e, _a) {\r\n                var t = _a.partDefinition;\r\n                var n = 4 / 128 / 2, s = new Entity(), a = new PlaneShape();\r\n                a.withCollisions = 0;\r\n                var c = new Transform({\r\n                    position: new Vector3(0.25 - 15 * n, 0.375 + 23 * n, -3e-4),\r\n                    scale: new Vector3(1, 1, 1),\r\n                });\r\n                s.addComponent(a);\r\n                s.addComponent(c);\r\n                s.addComponent(r.spriteMaterial);\r\n                s.setParent(e);\r\n                a.uvs = o.getSpriteUv(t.index, i.PART_OFFSET_INDEX['hair'], i.PART_SIZE_WIDTH['hair']);\r\n                return {\r\n                    dispose: function () {\r\n                        e.setParent(null);\r\n                        engine.removeEntity(s);\r\n                    },\r\n                    updateIndex: function (e) {\r\n                        a.uvs = o.getSpriteUv(e, i.PART_OFFSET_INDEX['hair'], i.PART_SIZE_WIDTH['hair']);\r\n                    },\r\n                };\r\n            };\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.createGlasses = void 0;\r\n            var i = n(8), r = n(1), o = n(0);\r\n            t.createGlasses = function (e, _a) {\r\n                var t = _a.partDefinition;\r\n                var n = 4 / 128 / 2, s = new Entity(), a = new PlaneShape();\r\n                a.withCollisions = 0;\r\n                var c = new Transform({\r\n                    position: new Vector3(0.25 - 15 * n, 0.375 + 8 * n, -5e-4),\r\n                    scale: new Vector3(1, 1, 1),\r\n                });\r\n                s.addComponent(a);\r\n                s.addComponent(c);\r\n                s.addComponent(r.spriteMaterial);\r\n                s.setParent(e);\r\n                a.uvs = o.getSpriteUv(t.index, i.PART_OFFSET_INDEX['glasses'], i.PART_SIZE_WIDTH['glasses'], i.PART_SIZE_HEIGHT['glasses']);\r\n                return {\r\n                    dispose: function () {\r\n                        e.setParent(null);\r\n                        engine.removeEntity(s);\r\n                    },\r\n                    updateIndex: function (e) {\r\n                        a.uvs = o.getSpriteUv(e, i.PART_OFFSET_INDEX['glasses'], i.PART_SIZE_WIDTH['glasses'], i.PART_SIZE_HEIGHT['glasses']);\r\n                    },\r\n                };\r\n            };\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.createShirt = void 0;\r\n            var i = n(8), r = n(1), o = n(0);\r\n            t.createShirt = function (e, _a) {\r\n                var t = _a.partDefinition;\r\n                var n = 4 / 128 / 2, s = new Entity(), a = new PlaneShape();\r\n                a.withCollisions = 0;\r\n                var c = new Transform({\r\n                    position: new Vector3(4 * n, 0.5 - 15 * n, -0.002),\r\n                    scale: new Vector3(1, 1, 1),\r\n                });\r\n                s.addComponent(a);\r\n                s.addComponent(c);\r\n                s.addComponent(r.spriteMaterial);\r\n                s.setParent(e);\r\n                a.uvs = o.getSpriteUv(t.index, i.PART_OFFSET_INDEX['shirt'], i.PART_SIZE_WIDTH['shirt']);\r\n                return {\r\n                    dispose: function () {\r\n                        e.setParent(null);\r\n                        engine.removeEntity(s);\r\n                    },\r\n                    updateIndex: function (e) {\r\n                        a.uvs = o.getSpriteUv(e, i.PART_OFFSET_INDEX['shirt'], i.PART_SIZE_WIDTH['shirt']);\r\n                    },\r\n                };\r\n            };\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.createPants = void 0;\r\n            var i = n(8), r = n(1), o = n(0);\r\n            t.createPants = function (e, _a) {\r\n                var t = _a.partDefinition;\r\n                var n = 4 / 128 / 2, s = new Entity(), a = new PlaneShape();\r\n                a.withCollisions = 0;\r\n                var c = new Transform({\r\n                    position: new Vector3(5 * n, 2 * n - 0.5, -0.001),\r\n                    scale: new Vector3(1, 1, 1),\r\n                });\r\n                s.addComponent(a);\r\n                s.addComponent(c);\r\n                s.addComponent(r.spriteMaterial);\r\n                s.setParent(e);\r\n                a.uvs = o.getSpriteUv(t.index, i.PART_OFFSET_INDEX['pants'], i.PART_SIZE_WIDTH['pants']);\r\n                return {\r\n                    dispose: function () {\r\n                        e.setParent(null);\r\n                        engine.removeEntity(s);\r\n                    },\r\n                    updateIndex: function (e) {\r\n                        a.uvs = o.getSpriteUv(e, i.PART_OFFSET_INDEX['pants'], i.PART_SIZE_WIDTH['pants']);\r\n                    },\r\n                };\r\n            };\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.createCollection = t.MAX_INDEX = void 0;\r\n            t.MAX_INDEX = { hair: 10, glasses: 5, shirt: 5, pants: 5 };\r\n            var i = ['hair', 'glasses', 'shirt', 'pants'];\r\n            t.createCollection = function (e, n) {\r\n                void 0;\r\n                var r = Object.keys(n).map(function (e) { return ({ type: e, index: n[e] }); }), o = __spread(r);\r\n                i.forEach(function (n) {\r\n                    var i = 3;\r\n                    var _loop_2 = function () {\r\n                        var i_7 = e(1, t.MAX_INDEX[n]);\r\n                        var s_1 = r.find(function (e) { return e.type === n; });\r\n                        for (; i_7 === s_1.index || o.find(function (e) { return e.type === n && e.index === i_7; });)\r\n                            i_7 = e(1, t.MAX_INDEX[n]);\r\n                        o.push({ type: n, index: i_7 });\r\n                    };\r\n                    for (; i--;) {\r\n                        _loop_2();\r\n                    }\r\n                });\r\n                return s(o);\r\n                function s(t) {\r\n                    for (var n = t.length, i, r; 0 !== n;) {\r\n                        r = Math.floor((e(1, 100) / 100) * n);\r\n                        i = t[(n -= 1)];\r\n                        t[n] = t[r];\r\n                        t[r] = i;\r\n                    }\r\n                    return t;\r\n                }\r\n            };\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.createCollectionControl = void 0;\r\n            var i = n(8), r = n(22), o = n(1), s = n(0), a = n(2), c = 0.7, l = 0, u = -0.7;\r\n            t.createCollectionControl = function (e, _a) {\r\n                var t = _a.collection, n = _a.side, _b = _a.avoidAdd, h = _b === void 0 ? 0 : _b;\r\n                var d = new Entity(), p = new Entity(), f = new Entity(), m = new Entity(), g = new Entity(), y = new TextShape('E');\r\n                y.fontSize = 2;\r\n                g.addComponent(y);\r\n                g.addComponent(new Transform({\r\n                    position: new Vector3(1 === n ? -0.3 : 0.3, 0.8, -0.002),\r\n                }));\r\n                g.setParent(d);\r\n                var v = new Entity(), S = new TextShape('F');\r\n                S.fontSize = 2;\r\n                v.addComponent(S);\r\n                v.addComponent(new Transform({\r\n                    position: new Vector3(1 === n ? -0.3 : 0.3, -0.75, -0.002),\r\n                }));\r\n                v.setParent(d);\r\n                p.setParent(d);\r\n                f.setParent(d);\r\n                m.setParent(d);\r\n                var b = t[0], w = t[1], _ = t[2];\r\n                var T = 1;\r\n                var C = new PlaneShape(), P = new PlaneShape(), R = new PlaneShape(), E = new Vector3(0.5, 0.5, 0.5);\r\n                p.addComponent(new Transform({ position: new Vector3(0, c, 0), scale: E }));\r\n                m.addComponent(new Transform({\r\n                    position: new Vector3(0, l, 0),\r\n                    scale: new Vector3(1, 1, 1),\r\n                }));\r\n                f.addComponent(new Transform({ position: new Vector3(0, u, 0), scale: E }));\r\n                p.addComponent(C);\r\n                m.addComponent(R);\r\n                f.addComponent(P);\r\n                if (!b || !w || !_)\r\n                    debugger;\r\n                C.uvs = s.getSpriteUv(b.index, i.PART_OFFSET_INDEX[b.type], i.PART_SIZE_WIDTH[b.type], i.PART_SIZE_HEIGHT[b.type]);\r\n                R.uvs = s.getSpriteUv(w.index, i.PART_OFFSET_INDEX[w.type], i.PART_SIZE_WIDTH[w.type], i.PART_SIZE_HEIGHT[w.type]);\r\n                P.uvs = s.getSpriteUv(_.index, i.PART_OFFSET_INDEX[_.type], i.PART_SIZE_WIDTH[_.type], i.PART_SIZE_HEIGHT[_.type]);\r\n                p.addComponent(o.spriteMaterial);\r\n                m.addComponent(o.spriteMaterial);\r\n                f.addComponent(o.spriteMaterial);\r\n                d.addComponent(new Transform({\r\n                    position: new Vector3(1 === n ? -2.5 : 2.5, 2, -0.001),\r\n                }));\r\n                h || d.setParent(e);\r\n                var O = r.createCross(d, {\r\n                    position: new Vector3(0, 0, -0.003),\r\n                    scale: E,\r\n                });\r\n                O.hide();\r\n                x(T);\r\n                return {\r\n                    entity: d,\r\n                    hide: function () {\r\n                        d.setParent(null);\r\n                        engine.removeEntity(d);\r\n                    },\r\n                    show: function () {\r\n                        d.setParent(e);\r\n                    },\r\n                    dispose: function () {\r\n                        d.setParent(null);\r\n                        engine.removeEntity(d);\r\n                        d.children;\r\n                    },\r\n                    getCurrent: function () { return t[T]; },\r\n                    next: function () {\r\n                        a.playOnce('swing');\r\n                        T = A(T);\r\n                        x(T);\r\n                    },\r\n                    previous: function () {\r\n                        a.playOnce('swing');\r\n                        T = I(T);\r\n                        x(T);\r\n                    },\r\n                    showError: function () {\r\n                        O.show();\r\n                    },\r\n                    hideError: function () {\r\n                        O.hide();\r\n                    },\r\n                };\r\n                function I(e) {\r\n                    return e - 1 < 0 ? t.length - 1 : e - 1;\r\n                }\r\n                function A(e) {\r\n                    return e + 1 > t.length - 1 ? 0 : e + 1;\r\n                }\r\n                function x(e) {\r\n                    var n = I(e), r = A(e), o = t[n], a = t[e], h = t[r], d = m.getComponent(Transform), g = d.position;\r\n                    if (!o || !a || !h)\r\n                        debugger;\r\n                    g.set(g.x, l - i.PART_TYPE_OFFSET_Y[a.type] * d.scale.y, g.z);\r\n                    var y = p.getComponent(Transform), v = y.position;\r\n                    v.set(v.x, c - i.PART_TYPE_OFFSET_Y[o.type] * y.scale.y, v.z);\r\n                    var S = f.getComponent(Transform), b = S.position;\r\n                    b.set(b.x, u - i.PART_TYPE_OFFSET_Y[h.type] * S.scale.y, b.z);\r\n                    C.uvs = s.getSpriteUv(o.index, i.PART_OFFSET_INDEX[o.type], i.PART_SIZE_WIDTH[o.type], i.PART_SIZE_HEIGHT[o.type]);\r\n                    R.uvs = s.getSpriteUv(a.index, i.PART_OFFSET_INDEX[a.type], i.PART_SIZE_WIDTH[a.type], i.PART_SIZE_HEIGHT[a.type]);\r\n                    P.uvs = s.getSpriteUv(h.index, i.PART_OFFSET_INDEX[h.type], i.PART_SIZE_WIDTH[h.type], i.PART_SIZE_HEIGHT[h.type]);\r\n                }\r\n            };\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            var i = n(16), r = n(25), o = n(26), s = n(27), a = n(28), c = n(7), l = n(12), u = n(64), h = n(29), d = n(31), p = n(30), f = n(65), m = n(66);\r\n            t.default = {\r\n                TransformSystem: c.TransformSystem,\r\n                MoveTransformComponent: i.MoveTransformComponent,\r\n                RotateTransformComponent: r.RotateTransformComponent,\r\n                ScaleTransformComponent: o.ScaleTransformComponent,\r\n                FollowPathComponent: s.FollowPathComponent,\r\n                KeepRotatingComponent: a.KeepRotatingComponent,\r\n                Interpolate: l.Interpolate,\r\n                InterpolationType: l.InterpolationType,\r\n                ToggleComponent: u.ToggleComponent,\r\n                ToggleState: u.ToggleState,\r\n                Delay: h.Delay,\r\n                ExpireIn: d.ExpireIn,\r\n                Interval: p.Interval,\r\n                TriggerComponent: f.TriggerComponent,\r\n                TriggerSystem: f.TriggerSystem,\r\n                TriggerSphereShape: f.TriggerSphereShape,\r\n                TriggerBoxShape: f.TriggerBoxShape,\r\n                ActionsSequenceSystem: m.ActionsSequenceSystem,\r\n            };\r\n        },\r\n        function (e, t, n) {\r\n            var i = (this && this.__decorate) ||\r\n                function (e, t, n, i) {\r\n                    var r = arguments.length, o = r < 3\r\n                        ? t\r\n                        : null === i\r\n                            ? (i = Object.getOwnPropertyDescriptor(t, n))\r\n                            : i, s;\r\n                    if ('object' == typeof Reflect &&\r\n                        'function' == typeof Reflect.decorate)\r\n                        o = Reflect.decorate(e, t, n, i);\r\n                    else\r\n                        for (var a = e.length - 1; a >= 0; a--)\r\n                            (s = e[a]) &&\r\n                                (o = (r < 3 ? s(o) : r > 3 ? s(t, n, o) : s(t, n)) || o);\r\n                    return r > 3 && o && Object.defineProperty(t, n, o), o;\r\n                }, r;\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.ToggleComponent = t.ToggleState = void 0;\r\n            (function (e) {\r\n                e[(e['Off'] = 0)] = 'Off';\r\n                e[(e['On'] = 1)] = 'On';\r\n            })((r = t.ToggleState || (t.ToggleState = {})));\r\n            var o = /** @class */ (function () {\r\n                function e(e, t) {\r\n                    if (e === void 0) { e = r.On; }\r\n                    this.enabled = 1;\r\n                    this.state = r.Off;\r\n                    this.set(e);\r\n                    t && this.setCallback(t);\r\n                }\r\n                e.prototype.set = function (e) {\r\n                    this.state = e;\r\n                    this.onValueChangedCallback && this.onValueChangedCallback(e);\r\n                };\r\n                e.prototype.toggle = function () {\r\n                    this.enabled && this.set(1 - this.state);\r\n                };\r\n                e.prototype.isOn = function () {\r\n                    return this.state == r.On;\r\n                };\r\n                e.prototype.setCallback = function (e) {\r\n                    this.onValueChangedCallback = e;\r\n                };\r\n                return e;\r\n            }());\r\n            o = i([Component('toggle')], o);\r\n            t.ToggleComponent = o;\r\n            t.default = { ToggleComponent: o, ToggleState: r };\r\n        },\r\n        function (e, t, n) {\r\n            var i = (this && this.__decorate) ||\r\n                function (e, t, n, i) {\r\n                    var r = arguments.length, o = r < 3\r\n                        ? t\r\n                        : null === i\r\n                            ? (i = Object.getOwnPropertyDescriptor(t, n))\r\n                            : i, s;\r\n                    if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)\r\n                        o = Reflect.decorate(e, t, n, i);\r\n                    else\r\n                        for (var a = e.length - 1; a >= 0; a--)\r\n                            (s = e[a]) &&\r\n                                (o = (r < 3 ? s(o) : r > 3 ? s(t, n, o) : s(t, n)) || o);\r\n                    return r > 3 && o && Object.defineProperty(t, n, o), o;\r\n                };\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.TriggerSphereShape = t.TriggerBoxShape = t.TriggerComponent = t.TriggerSystem = void 0;\r\n            var r = /** @class */ (function () {\r\n                function r() {\r\n                    this._triggers = {};\r\n                    r._instance = this;\r\n                    this._cameraTriggerWrapper = new s(new c(new Vector3(0.5, 1.8, 0.5), new Vector3(0, 0.91, 0)));\r\n                }\r\n                Object.defineProperty(r, \"instance\", {\r\n                    get: function () {\r\n                        return this.createAndAddToEngine();\r\n                    },\r\n                    enumerable: false,\r\n                    configurable: true\r\n                });\r\n                r.createAndAddToEngine = function () {\r\n                    if (null == this._instance) {\r\n                        this._instance = new r();\r\n                        engine.addSystem(this._instance);\r\n                    }\r\n                    return this._instance;\r\n                };\r\n                r.prototype.setCameraTriggerShape = function (e) {\r\n                    this._cameraTriggerWrapper.setShape(e);\r\n                };\r\n                r.prototype.update = function () {\r\n                    var _this = this;\r\n                    var e;\r\n                    engine.getComponentGroup(a).entities.forEach(function (e) {\r\n                        _this.shouldWrapTriggerEntity(e) && _this.wrapTriggerEntity(e);\r\n                    });\r\n                    for (var e_23 in this._triggers)\r\n                        if (this._triggers.hasOwnProperty(e_23)) {\r\n                            var t_7 = this._triggers[e_23];\r\n                            t_7.isDebugging() && t_7.updateDebugEntity();\r\n                            if (t_7.isInEngine()) {\r\n                                if (null != t_7.trigger && t_7.trigger.enabled) {\r\n                                    t_7.wasEnabled || (t_7.isDebugging() && t_7.addDebugEntity());\r\n                                    t_7.wasEnabled = 1;\r\n                                    (t_7.trigger.onCameraEnter || t_7.trigger.onCameraExit) &&\r\n                                        this.checkCollisionAgainstCamera(t_7);\r\n                                    (t_7.trigger.onTriggerEnter || t_7.trigger.onTriggerExit) &&\r\n                                        this.checkCollisionAgainstOtherTriggers(t_7);\r\n                                }\r\n                                else if (t_7.wasEnabled) {\r\n                                    t_7.wasEnabled = 0;\r\n                                    t_7.isDebugging() && t_7.removeDebugEntity();\r\n                                    r.removeTriggerFromSystem(t_7);\r\n                                }\r\n                            }\r\n                            else {\r\n                                t_7.isDebugging() && t_7.removeDebugEntity();\r\n                                r.removeTriggerFromSystem(t_7);\r\n                                delete this._triggers[e_23];\r\n                            }\r\n                        }\r\n                };\r\n                r.prototype.shouldWrapTriggerEntity = function (e) {\r\n                    return null == this._triggers[e.uuid] || null == this._triggers[e.uuid];\r\n                };\r\n                r.prototype.wrapTriggerEntity = function (e) {\r\n                    this._triggers[e.uuid] = new o(e);\r\n                };\r\n                r.removeTriggerFromSystem = function (e) {\r\n                    var t = e.getActiveCollisions();\r\n                    for (var n_7 = 0; n_7 < t.length; n_7++) {\r\n                        t[n_7].trigger.onTriggerExit &&\r\n                            e.entity &&\r\n                            t[n_7].trigger.onTriggerExit(e.entity);\r\n                        t[n_7].disengageActiveCollision(e);\r\n                        e.disengageActiveCollision(t[n_7]);\r\n                    }\r\n                };\r\n                r.disengageCollision = function (e, t) {\r\n                    e.disengageActiveCollision(t);\r\n                    t.disengageActiveCollision(e);\r\n                    e.trigger.onTriggerExit && t.entity && e.trigger.onTriggerExit(t.entity);\r\n                    t.trigger.onTriggerExit && e.entity && t.trigger.onTriggerExit(e.entity);\r\n                };\r\n                r.engageCollision = function (e, t) {\r\n                    e.engageCollision(t);\r\n                    t.engageCollision(e);\r\n                    e.trigger.onTriggerEnter &&\r\n                        t.entity &&\r\n                        e.trigger.onTriggerEnter(t.entity);\r\n                    t.trigger.onTriggerEnter &&\r\n                        e.entity &&\r\n                        t.trigger.onTriggerEnter(e.entity);\r\n                };\r\n                r.prototype.checkCollisionAgainstCamera = function (e) {\r\n                    var t = e.hasActiveCollision(this._cameraTriggerWrapper), n = r.areColliding(e, this._cameraTriggerWrapper);\r\n                    if (t && !n) {\r\n                        e.disengageActiveCollision(this._cameraTriggerWrapper);\r\n                        e.trigger.onCameraExit && e.trigger.onCameraExit();\r\n                    }\r\n                    else if (!t && n) {\r\n                        e.engageCollision(this._cameraTriggerWrapper);\r\n                        e.trigger.onCameraEnter && e.trigger.onCameraEnter();\r\n                    }\r\n                };\r\n                r.prototype.checkCollisionAgainstOtherTriggers = function (e) {\r\n                    for (var t_8 in this._triggers)\r\n                        if (this._triggers.hasOwnProperty(t_8) &&\r\n                            t_8 != e.uuid &&\r\n                            this._triggers[t_8].trigger.enabled &&\r\n                            r.canTriggersCollide(e, this._triggers[t_8])) {\r\n                            var n_8 = e.hasActiveCollision(this._triggers[t_8]), i_8 = r.areColliding(e, this._triggers[t_8]);\r\n                            n_8 && !i_8\r\n                                ? r.disengageCollision(e, this._triggers[t_8])\r\n                                : !n_8 && i_8 && r.engageCollision(e, this._triggers[t_8]);\r\n                        }\r\n                };\r\n                r.canTriggersCollide = function (e, t) {\r\n                    return 0 == e.trigger.triggeredByLayer\r\n                        ? 1\r\n                        : 0 != (t.trigger.layer & e.trigger.triggeredByLayer);\r\n                };\r\n                r.areColliding = function (e, t) {\r\n                    return e.getShape() instanceof c && t.getShape() instanceof c\r\n                        ? r.areCollidingAABB(e.getGlobalPosition(), e.getShape(), t.getGlobalPosition(), t.getShape())\r\n                        : e.getShape() instanceof l && t.getShape() instanceof l\r\n                            ? r.areCollidingSphere(e.getGlobalPosition(), e.getShape(), t.getGlobalPosition(), t.getShape())\r\n                            : e.getShape() instanceof c && t.getShape() instanceof l\r\n                                ? r.areCollidingAABBSphere(e.getGlobalPosition(), e.getShape(), t.getGlobalPosition(), t.getShape())\r\n                                : e.getShape() instanceof l && t.getShape() instanceof c\r\n                                    ? r.areCollidingAABBSphere(t.getGlobalPosition(), t.getShape(), e.getGlobalPosition(), e.getShape())\r\n                                    : 0;\r\n                };\r\n                r.areCollidingAABB = function (e, t, n, i) {\r\n                    var o = r.getBoxShapeValues(e, t), s = r.getBoxShapeValues(n, i);\r\n                    return (o.min.x <= s.max.x &&\r\n                        o.max.x >= s.min.x &&\r\n                        o.min.y <= s.max.y &&\r\n                        o.max.y >= s.min.y &&\r\n                        o.min.z <= s.max.z &&\r\n                        o.max.z >= s.min.z);\r\n                };\r\n                r.areCollidingSphere = function (e, t, n, i) {\r\n                    var r;\r\n                    return (Vector3.DistanceSquared(e.add(t.position), n.add(i.position)) <\r\n                        t.radius * t.radius + i.radius * i.radius);\r\n                };\r\n                r.areCollidingAABBSphere = function (e, t, n, i) {\r\n                    var o = r.getBoxShapeValues(e, t), s = { center: n.add(i.position), radius: i.radius }, a = 0;\r\n                    s.center.x < o.min.x &&\r\n                        (a += (o.min.x - s.center.x) * (o.min.x - s.center.x));\r\n                    s.center.x > o.max.x &&\r\n                        (a += (s.center.x - o.max.x) * (s.center.x - o.max.x));\r\n                    s.center.y < o.min.y &&\r\n                        (a += (o.min.y - s.center.y) * (o.min.y - s.center.y));\r\n                    s.center.y > o.max.y &&\r\n                        (a += (s.center.y - o.max.y) * (s.center.y - o.max.y));\r\n                    s.center.z < o.min.z &&\r\n                        (a += (o.min.z - s.center.z) * (o.min.z - s.center.z));\r\n                    s.center.z > o.max.z &&\r\n                        (a += (s.center.z - o.max.z) * (s.center.z - o.max.z));\r\n                    return a < s.radius * s.radius;\r\n                };\r\n                r.getBoxShapeValues = function (e, t) {\r\n                    var n = e.add(t.position);\r\n                    return {\r\n                        center: n,\r\n                        min: n.subtract(t.size.scale(0.5)),\r\n                        max: n.add(t.size.scale(0.5)),\r\n                    };\r\n                };\r\n                return r;\r\n            }());\r\n            t.TriggerSystem = r;\r\n            r._instance = null;\r\n            var o = /** @class */ (function () {\r\n                function o(e) {\r\n                    this.wasEnabled = 1;\r\n                    this._uuid = '';\r\n                    this._collidingWith = {};\r\n                    this._isDebug = 0;\r\n                    this._debugEntity = null;\r\n                    this._entity = e;\r\n                    if (e) {\r\n                        this._trigger = e.getComponent(a);\r\n                        this._uuid = e.uuid;\r\n                        this._isDebug = this._trigger.debugEnabled;\r\n                        this._isDebug && this.addDebugEntity();\r\n                    }\r\n                }\r\n                Object.defineProperty(o.prototype, \"entity\", {\r\n                    get: function () {\r\n                        return this._entity;\r\n                    },\r\n                    enumerable: false,\r\n                    configurable: true\r\n                });\r\n                Object.defineProperty(o.prototype, \"trigger\", {\r\n                    get: function () {\r\n                        return this._trigger;\r\n                    },\r\n                    enumerable: false,\r\n                    configurable: true\r\n                });\r\n                Object.defineProperty(o.prototype, \"uuid\", {\r\n                    get: function () {\r\n                        return this._uuid;\r\n                    },\r\n                    enumerable: false,\r\n                    configurable: true\r\n                });\r\n                o.prototype.getGlobalPosition = function () {\r\n                    return this._entity\r\n                        ? o.getEntityWorldPosition(this._entity)\r\n                        : Vector3.Zero();\r\n                };\r\n                o.prototype.getShape = function () {\r\n                    return this._trigger.shape;\r\n                };\r\n                o.prototype.isInEngine = function () {\r\n                    return null != this._entity && this._entity.isAddedToEngine();\r\n                };\r\n                o.prototype.getActiveCollisions = function () {\r\n                    var e = [];\r\n                    for (var t_9 in this._collidingWith)\r\n                        this._collidingWith.hasOwnProperty(t_9) &&\r\n                            e.push(this._collidingWith[t_9]);\r\n                    return e;\r\n                };\r\n                o.prototype.hasActiveCollision = function (e) {\r\n                    return (null != this._collidingWith[e.uuid] &&\r\n                        null != this._collidingWith[e.uuid]);\r\n                };\r\n                o.prototype.disengageActiveCollision = function (e) {\r\n                    delete this._collidingWith[e.uuid];\r\n                };\r\n                o.prototype.engageCollision = function (e) {\r\n                    this._collidingWith[e.uuid] = e;\r\n                };\r\n                o.prototype.isDebugging = function () {\r\n                    return this._isDebug;\r\n                };\r\n                o.prototype.addDebugEntity = function () {\r\n                    if (!o._debugMaterial) {\r\n                        o._debugMaterial = new Material();\r\n                        o._debugMaterial.alphaTest = 0.5;\r\n                    }\r\n                    if (null == this._debugEntity) {\r\n                        this._debugEntity = new Entity();\r\n                        var e_24 = new Transform();\r\n                        this._debugEntity.addComponent(e_24);\r\n                        this._debugEntity.addComponent(o._debugMaterial);\r\n                        if (this.getShape() instanceof c) {\r\n                            var t_10 = new BoxShape();\r\n                            t_10.withCollisions = 0;\r\n                            this._debugEntity.addComponent(t_10);\r\n                            e_24.scale = this.getShape().size;\r\n                        }\r\n                        if (this.getShape() instanceof l) {\r\n                            var t_11 = new SphereShape();\r\n                            t_11.withCollisions = 0;\r\n                            this._debugEntity.addComponent(t_11);\r\n                            var n_9 = this.getShape().radius;\r\n                            e_24.scale = new Vector3(n_9, n_9, n_9);\r\n                        }\r\n                    }\r\n                    engine.addEntity(this._debugEntity);\r\n                };\r\n                o.prototype.removeDebugEntity = function () {\r\n                    null != this._debugEntity && engine.removeEntity(this._debugEntity);\r\n                };\r\n                o.prototype.updateDebugEntity = function () {\r\n                    this._debugEntity &&\r\n                        (this._debugEntity.getComponent(Transform).position = this.getGlobalPosition().add(this.getShape().position));\r\n                };\r\n                o.getEntityWorldPosition = function (e) {\r\n                    var t = e.hasComponent(Transform)\r\n                        ? e.getComponent(Transform).position\r\n                        : Vector3.Zero(), n = e.getParent();\r\n                    if (null != n) {\r\n                        var e_25 = n.hasComponent(Transform)\r\n                            ? n.getComponent(Transform).rotation\r\n                            : Quaternion.Identity;\r\n                        return this.getEntityWorldPosition(n).add(t.rotate(e_25));\r\n                    }\r\n                    return t;\r\n                };\r\n                return o;\r\n            }());\r\n            o._debugMaterial = null;\r\n            var s = /** @class */ (function (_super) {\r\n                __extends(s, _super);\r\n                function s(e) {\r\n                    var _this = _super.call(this) || this;\r\n                    _this._shape = e;\r\n                    _this._uuid = 'cameraTrigger';\r\n                    return _this;\r\n                }\r\n                s.prototype.getGlobalPosition = function () {\r\n                    return Camera.instance.position;\r\n                };\r\n                s.prototype.getShape = function () {\r\n                    return this._shape;\r\n                };\r\n                s.prototype.setShape = function (e) {\r\n                    this._shape = e;\r\n                };\r\n                s.prototype.isInEngine = function () {\r\n                    return 0;\r\n                };\r\n                s.prototype.hasActiveCollision = function (e) {\r\n                    return 0;\r\n                };\r\n                s.prototype.disengageActiveCollision = function (e) { };\r\n                s.prototype.engageCollision = function (e) { };\r\n                s.prototype.isDebugging = function () {\r\n                    return 0;\r\n                };\r\n                return s;\r\n            }(o));\r\n            var a = /** @class */ (function () {\r\n                function e(e, t, n, i, o, s, a, c) {\r\n                    if (t === void 0) { t = 0; }\r\n                    if (n === void 0) { n = 0; }\r\n                    if (c === void 0) { c = 0; }\r\n                    this.enabled = 1;\r\n                    this.layer = 0;\r\n                    this.triggeredByLayer = 0;\r\n                    r.createAndAddToEngine();\r\n                    this.shape = e;\r\n                    this.layer = t;\r\n                    this.triggeredByLayer = n;\r\n                    this.onTriggerEnter = i;\r\n                    this.onTriggerExit = o;\r\n                    this.onCameraEnter = s;\r\n                    this.onCameraExit = a;\r\n                    this._debugEnabled = c;\r\n                }\r\n                Object.defineProperty(e.prototype, \"debugEnabled\", {\r\n                    get: function () {\r\n                        return this._debugEnabled;\r\n                    },\r\n                    enumerable: false,\r\n                    configurable: true\r\n                });\r\n                return e;\r\n            }());\r\n            a = i([Component('triggerComponent')], a);\r\n            t.TriggerComponent = a;\r\n            var c = /** @class */ (function () {\r\n                function c(e, t) {\r\n                    this.size = e;\r\n                    this.position = t;\r\n                }\r\n                return c;\r\n            }());\r\n            t.TriggerBoxShape = c;\r\n            var l = /** @class */ (function () {\r\n                function l(e, t) {\r\n                    this.radius = e;\r\n                    this.position = t;\r\n                }\r\n                return l;\r\n            }());\r\n            t.TriggerSphereShape = l;\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.ActionsSequenceSystem = void 0;\r\n            var i = /** @class */ (function () {\r\n                function i(e) {\r\n                    this.beginSequenceNode = null;\r\n                    this.currentSequenceNode = null;\r\n                    this.running = 0;\r\n                    this.started = 0;\r\n                    e && this.startSequence(e);\r\n                }\r\n                i.prototype.startSequence = function (e) {\r\n                    this.beginSequenceNode = e.beginSequenceNode;\r\n                    this.currentSequenceNode = this.beginSequenceNode;\r\n                    this.running = 1;\r\n                    this.started = 0;\r\n                };\r\n                i.prototype.setOnFinishCallback = function (e) {\r\n                    this.onFinishCallback = e;\r\n                };\r\n                i.prototype.isRunning = function () {\r\n                    return this.running;\r\n                };\r\n                i.prototype.stop = function () {\r\n                    this.running = 0;\r\n                };\r\n                i.prototype.resume = function () {\r\n                    null != this.beginSequenceNode && (this.running = 1);\r\n                };\r\n                i.prototype.reset = function () {\r\n                    this.currentSequenceNode = this.beginSequenceNode;\r\n                    this.running = 1;\r\n                    this.started = 0;\r\n                };\r\n                i.prototype.getRunningAction = function () {\r\n                    var e = this.currentSequenceNode;\r\n                    if (this.currentSequenceNode instanceof o)\r\n                        do {\r\n                            e = e.currentInnerSequence;\r\n                        } while (e instanceof o);\r\n                    return e.action;\r\n                };\r\n                i.prototype.update = function (e) {\r\n                    if (this.running)\r\n                        if (this.started)\r\n                            if (this.currentSequenceNode.hasFinish()) {\r\n                                this.currentSequenceNode.onFinish();\r\n                                this.currentSequenceNode = this.currentSequenceNode.next;\r\n                                if (this.currentSequenceNode)\r\n                                    this.currentSequenceNode.onStart();\r\n                                else {\r\n                                    this.running = 0;\r\n                                    this.onFinishCallback && this.onFinishCallback();\r\n                                }\r\n                            }\r\n                            else\r\n                                this.currentSequenceNode.update(e);\r\n                        else {\r\n                            this.currentSequenceNode.onStart();\r\n                            this.started = 1;\r\n                        }\r\n                };\r\n                return i;\r\n            }());\r\n            t.ActionsSequenceSystem = i;\r\n            (function (e) {\r\n                var t = /** @class */ (function () {\r\n                    function t() {\r\n                        this.currentSequenceNode = null;\r\n                        this.beginSequenceNode = null;\r\n                        this.whileNodeStack = [];\r\n                    }\r\n                    t.prototype.then = function (e) {\r\n                        if (null == this.currentSequenceNode) {\r\n                            this.currentSequenceNode = new r();\r\n                            this.currentSequenceNode.action = e;\r\n                            this.beginSequenceNode = this.currentSequenceNode;\r\n                        }\r\n                        else {\r\n                            var t_12 = new r();\r\n                            t_12.action = e;\r\n                            this.currentSequenceNode = this.currentSequenceNode.then(t_12);\r\n                        }\r\n                        return this;\r\n                    };\r\n                    t.prototype.if = function (e) {\r\n                        var t = new s(e);\r\n                        if (null == this.currentSequenceNode) {\r\n                            this.currentSequenceNode = t;\r\n                            this.beginSequenceNode = t;\r\n                        }\r\n                        else\r\n                            this.currentSequenceNode = this.currentSequenceNode.then(t);\r\n                        return this;\r\n                    };\r\n                    t.prototype.else = function () {\r\n                        var e = this.currentSequenceNode.getSequence();\r\n                        if (!(e instanceof s))\r\n                            throw new Error('IF statement is needed to be called before ELSE statement.');\r\n                        {\r\n                            e.closed = 1;\r\n                            var t_13 = new a(e);\r\n                            this.currentSequenceNode = this.currentSequenceNode.then(t_13);\r\n                        }\r\n                        return this;\r\n                    };\r\n                    t.prototype.endIf = function () {\r\n                        var e = this.currentSequenceNode.getSequence();\r\n                        if (!(e instanceof s || e instanceof a))\r\n                            throw new Error('IF statement is needed to be called before ENDIF statement.');\r\n                        e.closed = 1;\r\n                        return this;\r\n                    };\r\n                    t.prototype.while = function (e) {\r\n                        var t = new c(e);\r\n                        if (null == this.currentSequenceNode) {\r\n                            this.currentSequenceNode = t;\r\n                            this.beginSequenceNode = t;\r\n                        }\r\n                        else\r\n                            this.currentSequenceNode = this.currentSequenceNode.then(t);\r\n                        this.whileNodeStack.push(t);\r\n                        return this;\r\n                    };\r\n                    t.prototype.endWhile = function () {\r\n                        var e = this.currentSequenceNode.getSequence();\r\n                        if (!(e instanceof c))\r\n                            throw new Error('WHILE statement is needed to be called before ENDWHILE statement.');\r\n                        e.closed = 1;\r\n                        this.whileNodeStack.length > 0 &&\r\n                            this.whileNodeStack.splice(this.whileNodeStack.length - 1, 1);\r\n                        return this;\r\n                    };\r\n                    t.prototype.breakWhile = function () {\r\n                        if (!(this.whileNodeStack.length > 0))\r\n                            throw new Error('WHILE statement is needed to be called before BREAKWHILE statement.');\r\n                        this.currentSequenceNode = this.currentSequenceNode.then(new l(this.whileNodeStack[this.whileNodeStack.length - 1]));\r\n                        return this;\r\n                    };\r\n                    return t;\r\n                }());\r\n                e.SequenceBuilder = t;\r\n            })((i = t.ActionsSequenceSystem || (t.ActionsSequenceSystem = {})));\r\n            var r = /** @class */ (function () {\r\n                function r() {\r\n                    this.action = null;\r\n                    this.next = null;\r\n                }\r\n                r.prototype.then = function (e) {\r\n                    this.next = e;\r\n                    return e;\r\n                };\r\n                r.prototype.onStart = function () {\r\n                    this.action && this.action.onStart();\r\n                };\r\n                r.prototype.update = function (e) {\r\n                    this.action && this.action.update(e);\r\n                };\r\n                r.prototype.onFinish = function () {\r\n                    this.action && this.action.onFinish();\r\n                };\r\n                r.prototype.hasFinish = function () {\r\n                    return this.action ? this.action.hasFinished : 1;\r\n                };\r\n                r.prototype.getSequence = function () {\r\n                    return this;\r\n                };\r\n                return r;\r\n            }());\r\n            var o = /** @class */ (function (_super) {\r\n                __extends(o, _super);\r\n                function o() {\r\n                    var _this = _super.apply(this, __spread(arguments)) || this;\r\n                    _this.currentInnerSequence = null;\r\n                    _this.startingInnerSequence = null;\r\n                    _this.closed = 0;\r\n                    return _this;\r\n                }\r\n                o.prototype.then = function (e) {\r\n                    if (null == this.currentInnerSequence) {\r\n                        this.currentInnerSequence = e;\r\n                        this.startingInnerSequence = e;\r\n                    }\r\n                    else {\r\n                        if (this.closed) {\r\n                            this.next = e;\r\n                            return e;\r\n                        }\r\n                        this.currentInnerSequence = this.currentInnerSequence.then(e);\r\n                    }\r\n                    return this;\r\n                };\r\n                o.prototype.onStart = function () {\r\n                    this.currentInnerSequence = this.startingInnerSequence;\r\n                    this.currentInnerSequence && this.currentInnerSequence.onStart();\r\n                };\r\n                o.prototype.update = function (e) {\r\n                    if (this.currentInnerSequence)\r\n                        if (this.currentInnerSequence.hasFinish()) {\r\n                            this.currentInnerSequence.onFinish();\r\n                            this.currentInnerSequence = this.currentInnerSequence.next;\r\n                            this.currentInnerSequence && this.currentInnerSequence.onStart();\r\n                        }\r\n                        else\r\n                            this.currentInnerSequence.update(e);\r\n                };\r\n                o.prototype.onFinish = function () {\r\n                    this.currentInnerSequence && this.currentInnerSequence.onFinish();\r\n                };\r\n                o.prototype.hasFinish = function () {\r\n                    return null == this.currentInnerSequence;\r\n                };\r\n                o.prototype.getSequence = function () {\r\n                    if (this.currentInnerSequence) {\r\n                        var e_26 = this.currentInnerSequence.getSequence();\r\n                        if (e_26 instanceof o && !e_26.closed)\r\n                            return e_26;\r\n                    }\r\n                    return this;\r\n                };\r\n                return o;\r\n            }(r));\r\n            var s = /** @class */ (function (_super) {\r\n                __extends(s, _super);\r\n                function s(e) {\r\n                    var _this = _super.call(this) || this;\r\n                    _this.result = 0;\r\n                    _this.condition = e;\r\n                    return _this;\r\n                }\r\n                s.prototype.onStart = function () {\r\n                    this.result = this.condition();\r\n                    this.result ? _super.prototype.onStart.call(this) : (this.currentInnerSequence = null);\r\n                };\r\n                return s;\r\n            }(o));\r\n            var a = /** @class */ (function (_super) {\r\n                __extends(a, _super);\r\n                function a(e) {\r\n                    var _this = _super.call(this) || this;\r\n                    _this.ifSequence = null;\r\n                    _this.ifSequence = e;\r\n                    return _this;\r\n                }\r\n                a.prototype.onStart = function () {\r\n                    this.ifSequence && !this.ifSequence.result\r\n                        ? _super.prototype.onStart.call(this)\r\n                        : (this.currentInnerSequence = null);\r\n                };\r\n                return a;\r\n            }(o));\r\n            var c = /** @class */ (function (_super) {\r\n                __extends(c, _super);\r\n                function c(e) {\r\n                    var _this = _super.call(this) || this;\r\n                    _this.breakWhile = 0;\r\n                    _this.condition = e;\r\n                    return _this;\r\n                }\r\n                c.prototype.onStart = function () {\r\n                    this.breakWhile = 0;\r\n                    this.condition() ? _super.prototype.onStart.call(this) : (this.currentInnerSequence = null);\r\n                };\r\n                c.prototype.update = function (e) {\r\n                    if (this.currentInnerSequence)\r\n                        if (this.currentInnerSequence.hasFinish()) {\r\n                            this.currentInnerSequence.onFinish();\r\n                            this.currentInnerSequence = this.currentInnerSequence.next;\r\n                            null == this.currentInnerSequence &&\r\n                                (this.currentInnerSequence = this.startingInnerSequence);\r\n                            this.currentInnerSequence && this.currentInnerSequence.onStart();\r\n                        }\r\n                        else\r\n                            this.currentInnerSequence.update(e);\r\n                };\r\n                c.prototype.hasFinish = function () {\r\n                    return this.breakWhile || !this.condition();\r\n                };\r\n                return c;\r\n            }(o));\r\n            var l = /** @class */ (function (_super) {\r\n                __extends(l, _super);\r\n                function l(e) {\r\n                    var _this = _super.call(this) || this;\r\n                    _this.whileNode = e;\r\n                    return _this;\r\n                }\r\n                l.prototype.onStart = function () {\r\n                    this.whileNode.breakWhile = 1;\r\n                };\r\n                return l;\r\n            }(r));\r\n        },\r\n        function (e, t, n) {\r\n            var i = (this && this.__decorate) ||\r\n                function (e, t, n, i) {\r\n                    var r = arguments.length, o = r < 3\r\n                        ? t\r\n                        : null === i\r\n                            ? (i = Object.getOwnPropertyDescriptor(t, n))\r\n                            : i, s;\r\n                    if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)\r\n                        o = Reflect.decorate(e, t, n, i);\r\n                    else\r\n                        for (var a = e.length - 1; a >= 0; a--)\r\n                            (s = e[a]) &&\r\n                                (o = (r < 3 ? s(o) : r > 3 ? s(t, n, o) : s(t, n)) || o);\r\n                    return r > 3 && o && Object.defineProperty(t, n, o), o;\r\n                };\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.createScreen = void 0;\r\n            var r = n(1), o = n(0), s = n(22), a = 0.3;\r\n            var c = /** @class */ (function () {\r\n                function e(e, t) {\r\n                    this.index = e;\r\n                    this.isObstacle = t;\r\n                }\r\n                return e;\r\n            }());\r\n            c = i([Component('ObstacleGame-step')], c);\r\n            var l = /** @class */ (function () {\r\n                function e() {\r\n                }\r\n                return e;\r\n            }());\r\n            l = i([Component('ObstacleGame-player')], l);\r\n            t.createScreen = function (e, _a) {\r\n                var t = _a.player, n = _a.track;\r\n                var i = new TextShape('E');\r\n                i.withCollisions = 0;\r\n                i.fontSize = 4;\r\n                i.font = new Font(Fonts.SanFrancisco_Heavy);\r\n                i.shadowOffsetX = 1;\r\n                i.shadowOffsetY = 1;\r\n                i.shadowColor = Color3.FromHexString('#000000');\r\n                var l = { onMove: null, onFinish: null }, u = { moving: 0, jumping: 0, moveCount: 0, currentStep: 0, jumps: 0 };\r\n                var h;\r\n                h = new Entity();\r\n                h.setParent(e);\r\n                var d = s.createCross(h, {\r\n                    position: new Vector3(1.5, 3, -0.001),\r\n                    scale: new Vector3(1, 1, 1),\r\n                });\r\n                d.hide();\r\n                h.addComponent(new Transform({ position: new Vector3(2 === t ? 0 : -3, 0, 0) }));\r\n                var p = new Entity(), f = new PlaneShape();\r\n                f.withCollisions = 0;\r\n                f.uvs = o.getSpriteUv(2, 11, 96, 128);\r\n                p.addComponent(r.spriteMaterial);\r\n                p.addComponent(f);\r\n                p.addComponent(new Transform({\r\n                    position: new Vector3(1.5, 2, 0),\r\n                    scale: new Vector3(3, 4, 1),\r\n                }));\r\n                p.setParent(h);\r\n                var m = 2060, g = new o.SpriteAnimationSystem(h, {\r\n                    frames: [\r\n                        { uvs: o.getSpriteUv(8, m, 16, 16) },\r\n                        { uvs: o.getSpriteUv(1, m, 16, 16) },\r\n                        { uvs: o.getSpriteUv(2, m, 16, 16) },\r\n                        { uvs: o.getSpriteUv(3, m, 16, 16) },\r\n                        { uvs: o.getSpriteUv(4, m, 16, 16) },\r\n                        { uvs: o.getSpriteUv(4, m, 16, 16) },\r\n                        { uvs: o.getSpriteUv(5, m, 16, 16) },\r\n                        { uvs: o.getSpriteUv(6, m, 16, 16) },\r\n                        { uvs: o.getSpriteUv(7, m, 16, 16) },\r\n                        { uvs: o.getSpriteUv(8, m, 16, 16) },\r\n                        { uvs: o.getSpriteUv(8, m + 64, 16, 16) },\r\n                    ],\r\n                    scale: new Vector3(0.5, 0.5, 1),\r\n                    position: new Vector3(0.3 * 3 + 0.15, 1.9, -0.002),\r\n                    time: 0.1,\r\n                });\r\n                g.init();\r\n                var y = [];\r\n                n.forEach(function (e, i) {\r\n                    var r = new Entity();\r\n                    r.addComponent(new c(i, e));\r\n                    var o = new PlaneShape();\r\n                    o.withCollisions = 0;\r\n                    var s = new Material();\r\n                    s.transparencyMode = TransparencyMode.ALPHA_BLEND;\r\n                    s.albedoColor = e\r\n                        ? new Color4(1, 0, 0, 0)\r\n                        : 1 === t\r\n                            ? new Color4(0, 0, 1, 0)\r\n                            : new Color4(1, 1, 0, 0);\r\n                    s.emissiveColor = e\r\n                        ? new Color3(1, 0, 0)\r\n                        : 1 === t\r\n                            ? Color3.FromHexString('#0000ff')\r\n                            : Color3.FromHexString('#ffff00');\r\n                    s.emissiveIntensity = 3;\r\n                    if (i === n.length - 1) {\r\n                        s.albedoColor = new Color4(0, 1, 0, 0);\r\n                        s.emissiveColor = new Color3(0, 1, 0);\r\n                    }\r\n                    r.addComponent(o);\r\n                    r.addComponent(s);\r\n                    e\r\n                        ? r.addComponent(new Transform({\r\n                            position: new Vector3(0.3 * i + 0.15 - 0.1, 1.75, -0.001),\r\n                            scale: new Vector3(0.1, 0.1, 1),\r\n                        }))\r\n                        : r.addComponent(new Transform({\r\n                            position: new Vector3(0.3 * i + 0.15, 1.95, -0.001),\r\n                            scale: new Vector3(0.02, 0.02, 1),\r\n                        }));\r\n                    y.push(r);\r\n                    r.setParent(h);\r\n                });\r\n                var v = new Entity();\r\n                v.addComponent(i);\r\n                v.addComponent(new Transform({ position: new Vector3(1, 1.3, -0.002) }));\r\n                v.setParent(h);\r\n                var S = function (e) {\r\n                    return e > a\r\n                        ? Math.max(0, 0.4 - ((u.moveCount / a) * 0.4) / 2)\r\n                        : Math.min(0.4, (u.moveCount / a) * 0.4);\r\n                }, b = function () {\r\n                    Object.values(y).forEach(function (e, t) {\r\n                        e.visible = 0;\r\n                    });\r\n                }, w = undefined, _ = undefined, T = undefined, C = undefined, P = undefined, R = function () {\r\n                    y.forEach(function (e, i) {\r\n                        var r = e.getComponent(Transform), o = e.getComponent(PlaneShape), s = e.getComponent(Material), a = e.getComponent(c).isObstacle;\r\n                        if (r.position.x < 0.2 || r.position.x >= 2.999)\r\n                            s.albedoColor = a\r\n                                ? new Color4(1, 0, 0, 0)\r\n                                : 1 === t\r\n                                    ? new Color4(0, 0, 1, 0)\r\n                                    : new Color4(1, 1, 0, 0);\r\n                        else {\r\n                            s.albedoColor = a\r\n                                ? new Color4(1, 0, 0, 1)\r\n                                : 1 === t\r\n                                    ? new Color4(0, 0, 1, 1)\r\n                                    : new Color4(1, 1, 0, 1);\r\n                            if (i === n.length - 1) {\r\n                                s.albedoColor = new Color4(0, 1, 0, 1);\r\n                                s.emissiveColor = new Color3(0, 1, 0);\r\n                            }\r\n                        }\r\n                    });\r\n                    n[u.currentStep + 4]\r\n                        ? (i.value = 'CLICK')\r\n                        : u.currentStep % 2 == 0\r\n                            ? (i.value = 'E')\r\n                            : (i.value = 'F');\r\n                }, E = function (e) {\r\n                    if (u.moving) {\r\n                        u.moveCount += e;\r\n                        y.forEach(function (e, t) {\r\n                            var n = undefined, i = e.getComponent(Transform).position, r = 0.3 * t + 0.15, o = 0.3 * u.currentStep, s = (u.moveCount / a) * 0.3;\r\n                            i.set(r - o - s, i.y, i.z);\r\n                        });\r\n                        if (u.jumping) {\r\n                            var e_27 = g.globalOptions.position, t_14 = S(u.moveCount);\r\n                            e_27.set(e_27.x, t_14 + 1.9, e_27.z);\r\n                        }\r\n                    }\r\n                    if (u.moveCount >= (u.jumping ? 2 * a : a)) {\r\n                        u.jumping && u.jumps++;\r\n                        u.currentStep += u.jumping ? 2 : 1;\r\n                        u.moving = u.jumping = 0;\r\n                        u.moveCount = 0;\r\n                        l.onMove && l.onMove(u.currentStep);\r\n                        l.onFinish && u.currentStep + 3 === n.length - 1 && l.onFinish();\r\n                        R();\r\n                    }\r\n                }, O = undefined;\r\n                return {\r\n                    getNextStepValue: function () { return n[u.currentStep + 1 + 3]; },\r\n                    moveScreen: function (e) {\r\n                        u.moving = 1;\r\n                        u.jumping = !!e;\r\n                        g.state.playing ||\r\n                            (e\r\n                                ? g.play([9, 0, 1], { loop: 0, time: 0.2 })\r\n                                : u.currentStep % 2 == 0\r\n                                    ? g.play([1, 2, 3], { loop: 0, time: 0.1 })\r\n                                    : g.play([5, 6, 7], { loop: 0, time: 0.1 }));\r\n                    },\r\n                    getScreenState: function () { return u; },\r\n                    onMove: function (e) {\r\n                        l.onMove = e;\r\n                        return function () { return (l.onMove = null); };\r\n                    },\r\n                    onFinishScreen: function (e) {\r\n                        l.onFinish = e;\r\n                        return function () { return (l.onFinish = null); };\r\n                    },\r\n                    handleVisibility: R,\r\n                    updateScreen: E,\r\n                    destroy: function () {\r\n                        h.setParent(null);\r\n                        engine.removeEntity(h);\r\n                        l.onFinish = null;\r\n                        l.onMove = null;\r\n                    },\r\n                    getTotalSteps: function () { return n.length; },\r\n                    showCross: function () { return d.show(); },\r\n                    hideCross: function () { return d.hide(); },\r\n                };\r\n            };\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.SammichGame = void 0;\r\n            var i = n(69), r = n(2), o = n(5), s = 5;\r\n            var a = /** @class */ (function () {\r\n                function a(e, _a) {\r\n                    var _this = this;\r\n                    var t = _a.currentPlayer, n = _a.seed, r = _a.level, s = _a.gameIndex;\r\n                    this.gameSetup = { level: 1, currentPlayer: 0, seed: null };\r\n                    this.callbacks = {\r\n                        onFinish: null,\r\n                        onShareState: null,\r\n                        onFinishRound: null,\r\n                    };\r\n                    this.state = {\r\n                        started: 0,\r\n                        initialized: 0,\r\n                        blocked: 0,\r\n                        startTime: Number.MAX_VALUE,\r\n                        roundStartTime: Number.MAX_VALUE,\r\n                        lastRoundStartTime: Number.MAX_VALUE,\r\n                        waitingRound: 0,\r\n                        round: 0,\r\n                        score: 0,\r\n                        score1: 0,\r\n                        score2: 0,\r\n                    };\r\n                    this.scene = new Entity();\r\n                    this.scene.addComponent(new Transform({ position: new Vector3(0, 2, -0.001) }));\r\n                    this.ui = o.createUI(this.scene, { position: new Vector3(0, -2, 0) });\r\n                    this.root = e;\r\n                    this.gameSetup = { currentPlayer: t, seed: n, level: r, gameIndex: s };\r\n                    this.screen1 = i.createScreen(this.scene, {\r\n                        player: 1,\r\n                        seed: n,\r\n                        owner: 1 === t,\r\n                    });\r\n                    this.screen2 = i.createScreen(this.scene, {\r\n                        player: 2,\r\n                        seed: n,\r\n                        owner: 2 === t,\r\n                    });\r\n                    t &&\r\n                        this['screen' + t].onStateChange(function (e) {\r\n                            void 0;\r\n                            void 0;\r\n                            _this.ui.updateScore({\r\n                                player: _this.gameSetup.currentPlayer,\r\n                                score: e.score + _this.state.score,\r\n                            });\r\n                            _this.callbacks.onShareState({\r\n                                player: t,\r\n                                state: e,\r\n                                score: e.score + _this.state.score,\r\n                            });\r\n                        });\r\n                    engine.addSystem(this);\r\n                    this.roundResult1 = o.createRoundResult(this.scene, { player: 1 });\r\n                    this.roundResult2 = o.createRoundResult(this.scene, { player: 2 });\r\n                    var a = this.roundResult1.getTransform().position, c = this.roundResult2.getTransform().position;\r\n                    a.set(a.x, a.y - 2, a.z);\r\n                    c.set(c.x, c.y - 2, c.z);\r\n                    this.roundResult1.hide();\r\n                    this.roundResult2.hide();\r\n                }\r\n                a.prototype.startRound = function () {\r\n                    this.state.round++;\r\n                    this.state.lastRoundStartTime = this.state.roundStartTime;\r\n                    this.state.roundStartTime = Number.MAX_VALUE;\r\n                    this.state.waitingRound = 0;\r\n                    this.gameSetup.currentPlayer &&\r\n                        this['screen' + this.gameSetup.currentPlayer].start({\r\n                            level: this.state.round,\r\n                        });\r\n                };\r\n                a.prototype.setRoundStartTime = function (e) {\r\n                    this.state.roundStartTime = e;\r\n                };\r\n                a.prototype.setStartTime = function (e) {\r\n                    this.state.startTime = e;\r\n                };\r\n                a.prototype.block = function () {\r\n                    this.state.blocked = 1;\r\n                };\r\n                a.prototype.init = function () {\r\n                    this.scene.setParent(this.root);\r\n                    this.state.initialized = 1;\r\n                    r.playLoop('music2', { volume: 0.5 });\r\n                };\r\n                a.prototype.start = function () {\r\n                    var _this = this;\r\n                    void 0;\r\n                    this.state.started = 1;\r\n                    this.state.startTime = Number.MAX_VALUE;\r\n                    this.state.roundStartTime = Number.MAX_VALUE;\r\n                    this.screen1.start({ level: this.state.round + 1 });\r\n                    this.screen2.start({ level: this.state.round + 1 });\r\n                    this.gameSetup.currentPlayer &&\r\n                        this['screen' + this.gameSetup.currentPlayer].onComplete(function (e) {\r\n                            e >= 6 ? r.playOnce('wow') : e >= 4;\r\n                            _this.state.score += e;\r\n                            _this.state['score' + _this.gameSetup.currentPlayer] = _this.state.score;\r\n                            var t = _this.state['score' + _this.gameSetup.currentPlayer];\r\n                            _this.ui.updateScore({\r\n                                player: _this.gameSetup.currentPlayer,\r\n                                score: t,\r\n                            });\r\n                            void 0;\r\n                            setTimeout(function () {\r\n                                void 0;\r\n                                if (_this.state.round < s - 1 ||\r\n                                    _this.state.score1 === _this.state.score2)\r\n                                    _this.callbacks.onFinishRound({\r\n                                        player: _this.gameSetup.currentPlayer,\r\n                                        score: t,\r\n                                        gameIndex: _this.gameSetup.gameIndex,\r\n                                        roundIndex: _this.state.round,\r\n                                    });\r\n                                else {\r\n                                    void 0;\r\n                                    r.stopSound('music2');\r\n                                    _this.callbacks.onFinish({\r\n                                        isWinner: 1,\r\n                                        time: -1 * t,\r\n                                        score: t,\r\n                                        gameIndex: _this.gameSetup.gameIndex,\r\n                                        roundIndex: _this.state.round,\r\n                                    });\r\n                                }\r\n                            }, 1e3);\r\n                        });\r\n                };\r\n                a.prototype.finish = function (_a) {\r\n                    var e = _a.winner;\r\n                    var t = 1 === e ? 2 : 1;\r\n                    this.roundResult1.show();\r\n                    this.roundResult2.show();\r\n                    this['roundResult' + e].update(1);\r\n                    this['roundResult' + t].update(0);\r\n                };\r\n                a.prototype.finishRound = function (_a) {\r\n                    var e = _a.winner;\r\n                    this.state.waitingRound = 1;\r\n                    this.screen1.reset();\r\n                    this.screen2.reset();\r\n                };\r\n                a.prototype.destroy = function () {\r\n                    this.screen1.dispose();\r\n                    this.screen2.dispose();\r\n                    this.scene.setParent(null);\r\n                    engine.removeEntity(this.scene);\r\n                    engine.removeSystem(this);\r\n                };\r\n                a.prototype.shareState = function (e) {\r\n                    var t = e.state, n = e.player;\r\n                    void 0;\r\n                    this.ui.updateScore({ player: n, score: e.score });\r\n                    this['screen' + n].setState(t);\r\n                    this.state['score' + n] = e.score;\r\n                };\r\n                a.prototype.onShareState = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onShareState = e;\r\n                    return function () { return (_this.callbacks.onShareState = null); };\r\n                };\r\n                a.prototype.onFinish = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onFinish = e;\r\n                    return function () { return (_this.callbacks.onFinish = null); };\r\n                };\r\n                a.prototype.onFinishRound = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onFinishRound = e;\r\n                    return function () { return (_this.callbacks.onFinishRound = null); };\r\n                };\r\n                a.prototype.update = function (e) {\r\n                    if (this.state.initialized)\r\n                        if (!this.state.waitingRound &&\r\n                            !this.state.started &&\r\n                            Date.now() >= this.state.startTime)\r\n                            this.start();\r\n                        else {\r\n                            this.state.started &&\r\n                                this.state.waitingRound &&\r\n                                Date.now() >= this.state.roundStartTime &&\r\n                                this.startRound();\r\n                            if (!this.state.waitingRound && this.state.started) {\r\n                                this.getPlayerScreen(1).getScreenState().idle ||\r\n                                    this.getPlayerScreen(1).updateScreen(e);\r\n                                this.getPlayerScreen(2).getScreenState().idle ||\r\n                                    this.getPlayerScreen(2).updateScreen(e);\r\n                            }\r\n                        }\r\n                };\r\n                a.prototype.getPlayerScreen = function (e) {\r\n                    return this['screen' + e];\r\n                };\r\n                return a;\r\n            }());\r\n            t.SammichGame = a;\r\n            a.id = 'Sammich';\r\n            a.instructions = 'Move to sides with E and F\\nto build the perfect sammich';\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.createScreen = void 0;\r\n            var i = n(1), r = n(0), o = n(2), s = n(3), a = [1, 2, 3, 4, 6, 7, 8], c = function (e, _a) {\r\n                var t = _a.spriteIndex, n = _a.position;\r\n                var o = new Entity();\r\n                o.setParent(e);\r\n                var s = new PlaneShape();\r\n                s.withCollisions = 0;\r\n                o.addComponent(i.spriteMaterial);\r\n                o.addComponent(s);\r\n                var a = new Transform({\r\n                    scale: new Vector3(0.5, 0.5, 0.5),\r\n                    position: n,\r\n                });\r\n                o.addComponent(a);\r\n                s.uvs = r.getSpriteUv(t, 2048, 16, 16);\r\n                var c = { onBase: 0, baseX: 0, currentRound: 1 };\r\n                return {\r\n                    setX: function (e) {\r\n                        a.position.set(e, a.position.y, a.position.z);\r\n                    },\r\n                    setY: function (e) {\r\n                        a.position.set(a.position.x, e, a.position.z);\r\n                    },\r\n                    getX: function () { return a.position.x; },\r\n                    getY: function () { return a.position.y; },\r\n                    isOnBase: function () { return c.onBase; },\r\n                    getBaseX: function () { return c.baseX; },\r\n                    setOnBase: function (e, t) {\r\n                        c.onBase = e;\r\n                        c.baseX = t;\r\n                    },\r\n                    dispose: function () {\r\n                        o.setParent(null);\r\n                        o.removeComponent(Transform);\r\n                        o.removeComponent(i.spriteMaterial);\r\n                        o.removeComponent(PlaneShape);\r\n                        engine.removeEntity(o);\r\n                    },\r\n                };\r\n            };\r\n            t.createScreen = function (e, _a) {\r\n                var t = _a.seed, n = _a.player, l = _a.owner;\r\n                var u = new Entity(), h = {\r\n                    dtCount: 0,\r\n                    idle: 1,\r\n                    level: 1,\r\n                    basePosition: 0,\r\n                    layers: [],\r\n                    score: 0,\r\n                }, d = s.seedGen.create(t.toString()), p = new PlaneShape();\r\n                p.withCollisions = 0;\r\n                p.uvs = r.getSpriteUv(1, 11, 96, 128);\r\n                u.setParent(e);\r\n                u.addComponent(new Transform({ position: new Vector3(1 === n ? -1.5 : 1.5, 0, -0) }));\r\n                var f = new Entity(), m = new Transform({ scale: new Vector3(3, 4, 1) });\r\n                f.addComponent(p);\r\n                f.addComponent(i.spriteMaterial);\r\n                f.addComponent(m);\r\n                f.setParent(u);\r\n                var g = c(u, {\r\n                    spriteIndex: 9,\r\n                    position: new Vector3(0, -1.125, -0.002),\r\n                }), y = 0.25, v = function (e) {\r\n                    Object.assign(h, e);\r\n                    g.setX(h.basePosition);\r\n                    h.layers.forEach(function (e, t) {\r\n                        E[t].setX(g.getX() + e);\r\n                        var n = g.getY() + t * T + C;\r\n                        E[t].setY(n);\r\n                    });\r\n                }, S = function (e) {\r\n                    Object.assign(h, e);\r\n                    x.onStateChange && x.onStateChange(h);\r\n                }, b = function (e) {\r\n                    x.onStateChange = e;\r\n                    return function () { return (x.onStateChange = null); };\r\n                }, w = function () {\r\n                    if (h.idle && !l)\r\n                        return;\r\n                    var e = g.getX() === +y ? +y : g.getX() + y;\r\n                    g.setX(e);\r\n                    E.forEach(function (e) {\r\n                        e.isOnBase() && e.setX(g.getX() - e.getBaseX());\r\n                    });\r\n                    S({ basePosition: g.getX() });\r\n                }, _ = function () {\r\n                    if (h.idle && !l)\r\n                        return;\r\n                    var e = g.getX() === -y ? -y : g.getX() - y;\r\n                    g.setX(e);\r\n                    E.forEach(function (e, t) {\r\n                        e.isOnBase() && e.setX(g.getX() - e.getBaseX());\r\n                    });\r\n                    S({ basePosition: g.getX() });\r\n                };\r\n                if (l) {\r\n                    Input.instance.subscribe('BUTTON_DOWN', ActionButton.PRIMARY, 0, _);\r\n                    Input.instance.subscribe('BUTTON_DOWN', ActionButton.SECONDARY, 0, w);\r\n                }\r\n                var T = 0.05, C = 0.1, P = 7, R = function (e) {\r\n                    if (h.idle)\r\n                        return;\r\n                    var t = 0.7 * Math.min(h.level, P) + 0.2, n = 1.75;\r\n                    h.dtCount += e;\r\n                    E.forEach(function (e, i) {\r\n                        var r = i / t + 0.03 * i * t;\r\n                        if (h.dtCount >= r) {\r\n                            var s_2 = g.getY() + i * T + C;\r\n                            if (e.getY() <= s_2) {\r\n                                if (!l)\r\n                                    return;\r\n                                if (!e.isOnBase()) {\r\n                                    e.setOnBase(1, g.getX() - e.getX());\r\n                                    if (0 !== e.getBaseX())\r\n                                        o.playOnce('fail');\r\n                                    else {\r\n                                        o.playOnce('ok');\r\n                                        h.score++;\r\n                                    }\r\n                                    S({\r\n                                        score: h.score,\r\n                                        layers: __spread(h.layers, [e.getX() - g.getX()]),\r\n                                    });\r\n                                }\r\n                            }\r\n                            else\r\n                                e.setY(Math.max(s_2, n - (h.dtCount - r) * t));\r\n                        }\r\n                    });\r\n                    if (l && E.every(function (e, t) { return e.isOnBase(); })) {\r\n                        h.idle = 1;\r\n                        var e_28 = 0;\r\n                        E.forEach(function (t, n) {\r\n                            0 === t.getBaseX() && e_28++;\r\n                        });\r\n                        x.onComplete && x.onComplete(e_28);\r\n                        h.score = 0;\r\n                    }\r\n                };\r\n                var E = [];\r\n                var O = function () {\r\n                    E = Array(5)\r\n                        .fill(null)\r\n                        .map(function (e, t) {\r\n                        var n = d.random();\r\n                        var i = Math.floor(3 * n - 1) * y;\r\n                        var r = a[Math.floor(n * a.length)], o = new Vector3(i, 1.75, -0.001 * t - 0.004), s = undefined;\r\n                        return c(u, { spriteIndex: r, position: o });\r\n                    });\r\n                    var e = d.random();\r\n                    var t = Math.floor(3 * e - 1) * y;\r\n                    E.push(c(u, {\r\n                        spriteIndex: 5,\r\n                        position: new Vector3(t, 1.75, -0.005 - 0.004),\r\n                    }));\r\n                };\r\n                O();\r\n                var I = undefined, A = undefined, x = { onComplete: null, onStateChange: null }, k = undefined, M = undefined, N = undefined;\r\n                return {\r\n                    getScreenState: function () { return h; },\r\n                    start: function (_a) {\r\n                        var e = _a.level;\r\n                        h.idle = 0;\r\n                        h.level = e;\r\n                    },\r\n                    updateScreen: R,\r\n                    onComplete: function (e) {\r\n                        x.onComplete = e;\r\n                        return function () { return (x.onComplete = null); };\r\n                    },\r\n                    reset: function () {\r\n                        h.idle = 1;\r\n                        h.dtCount = 0;\r\n                        h.layers = [];\r\n                        h.basePosition = 0;\r\n                        h.score = 0;\r\n                        E.forEach(function (e, t) {\r\n                            e.dispose();\r\n                        });\r\n                        O();\r\n                    },\r\n                    setState: v,\r\n                    onStateChange: b,\r\n                    dispose: function () {\r\n                        Input.instance.unsubscribe('BUTTON_DOWN', ActionButton.PRIMARY, _);\r\n                        Input.instance.unsubscribe('BUTTON_DOWN', ActionButton.SECONDARY, w);\r\n                    },\r\n                };\r\n            };\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.createScreen = void 0;\r\n            var i = n(0), r = n(1), o = n(16), s = n(3), a = n(2), c = n(71), l = 4 / 128, u = 36 * -l, h = {\r\n                UP: ActionButton.POINTER,\r\n                LEFT: ActionButton.PRIMARY,\r\n                RIGHT: ActionButton.SECONDARY,\r\n            }, d = [\r\n                12 * l - 1.5 + (8 * l) / 2,\r\n                28 * l - 1.5 + (8 * l) / 2,\r\n                44 * l - 1.5 + (8 * l) / 2,\r\n                60 * l - 1.5 + (8 * l) / 2,\r\n                76 * l - 1.5 + (8 * l) / 2,\r\n            ], p = function (e, _a) {\r\n                var t = _a.x, n = _a.index;\r\n                var r = 0;\r\n                var o = { onTake: null }, s = i.createSpriteEntity(e, {\r\n                    position: new Vector3(t, 2 - 15 * l + (8 * l) / 2, -0.001),\r\n                    scale: new Vector3(8 * l, 8 * l, 1),\r\n                    uvs: i.getSpriteUv(2, 8448, 8, 8),\r\n                }), c = function () {\r\n                    r = 1;\r\n                    s.getShape().visible = 0;\r\n                }, u = function (e) {\r\n                    if (r)\r\n                        return 0;\r\n                    if (e.y < 2 - 15 * l)\r\n                        return 0;\r\n                    if (e.x === t) {\r\n                        c();\r\n                        a.playOnce('ok');\r\n                        return 1;\r\n                    }\r\n                }, h = undefined, d = undefined;\r\n                return {\r\n                    spriteEntity: s,\r\n                    take: c,\r\n                    checkFrog: u,\r\n                    onTake: function (e) {\r\n                        o.onTake = e;\r\n                        return function () { return (o.onTake = null); };\r\n                    },\r\n                    isTaken: function () { return r; },\r\n                    index: n,\r\n                };\r\n            }, f = 5;\r\n            t.createScreen = function (e, _a) {\r\n                var t = _a.player, n = _a.seed;\r\n                var m = {\r\n                    blocked: 0,\r\n                    lastKey: h.UP,\r\n                    movingFrog: 0,\r\n                    countDt: 0,\r\n                    frogPosition: new Vector3(0, 0 + u, -0.009),\r\n                    score: 0,\r\n                    takenSammiches: [0, 0, 0, 0, 0],\r\n                }, g = new Entity(), y = new Entity();\r\n                y.setParent(g);\r\n                g.setParent(e);\r\n                var v = s.seedGen.create(n), S = Array(9)\r\n                    .fill(null)\r\n                    .map(function (e, t) { return c.createCarPool(g, { track: t, randomizer: v }); }), b = [0, 1, 2, 3, 4], w = Array(f)\r\n                    .fill(null)\r\n                    .map(function (e, t) { return p(g, { x: d[b[t]], index: t }); });\r\n                g.addComponent(new Transform({ position: new Vector3(1 === t ? -1.5 : 1.5, 2, -0) }));\r\n                y.addComponent(new Transform({ scale: new Vector3(3, 4, 1) }));\r\n                var _ = new PlaneShape();\r\n                _.uvs = i.getSpriteUv(9, 11, 96, 128);\r\n                y.addComponent(_);\r\n                y.addComponent(r.spriteMaterial);\r\n                var T = new i.SpriteAnimationSystem(g, {\r\n                    frames: [\r\n                        { uvs: i.getSpriteUv(1, 8448, 8, 8) },\r\n                        { uvs: i.getSpriteUv(1, 8576, 8, 8) },\r\n                    ],\r\n                    scale: new Vector3(8 * l, 8 * l, 1),\r\n                    position: m.frogPosition,\r\n                    time: 0.1,\r\n                });\r\n                T.init();\r\n                var C = function (e, t) {\r\n                    m.countDt += e;\r\n                    S.forEach(function (t) { return t.update(e); });\r\n                    if (t) {\r\n                        var e_29 = T.getPosition(), t_15 = w.find(function (t, n) {\r\n                            if (t.checkFrog(e_29))\r\n                                return { index: n };\r\n                        });\r\n                        if (t_15) {\r\n                            m.takenSammiches[t_15.index] = 1;\r\n                            m.score++;\r\n                            void 0;\r\n                            x.onStateChange && x.onStateChange(m);\r\n                            return;\r\n                        }\r\n                        S.forEach(function (t) {\r\n                            if (t.isCollidingFrog(e_29)) {\r\n                                a.playOnce('fail');\r\n                                m.blocked = 1;\r\n                                setTimeout(function () {\r\n                                    m.blocked = 0;\r\n                                    e_29.set(0, u, e_29.z);\r\n                                    x.onStateChange && x.onStateChange(m);\r\n                                }, 200);\r\n                            }\r\n                        });\r\n                    }\r\n                }, P = undefined, R = function (e) {\r\n                    if (m.movingFrog || m.blocked)\r\n                        return;\r\n                    a.playOnce('swing');\r\n                    m.movingFrog = 1;\r\n                    T.setRotation(e === h.UP ? 0 : e === h.LEFT ? 90 : 270);\r\n                    T.play([0, 1, 0], { loop: 0, time: 0.1 });\r\n                    var t = T.getPosition();\r\n                    T.addComponentOrReplace(new o.MoveTransformComponent(t, new Vector3(e === h.LEFT ? t.x - 8 * l : e === h.RIGHT ? t.x + 8 * l : t.x, e === h.UP ? t.y + 8 * l : t.y, t.z), 0.1, function () {\r\n                        m.movingFrog = 0;\r\n                        var e = T.getPosition();\r\n                        if (e.y >= 1.625)\r\n                            if (((e.x + 1.5) / (8 * l)) % 2)\r\n                                e.y = u + 8 * l * 10;\r\n                            else {\r\n                                m.blocked = 1;\r\n                                setTimeout(function () {\r\n                                    m.blocked = 0;\r\n                                    e.set(e.x, u, e.z);\r\n                                    m.frogPosition = e;\r\n                                    x.onStateChange && x.onStateChange(m);\r\n                                }, 300);\r\n                            }\r\n                        e.x <= 8 * l - 1.5\r\n                            ? (e.x = 8 * l - 1.5)\r\n                            : e.x >= 1.5 - 8 * l && (e.x = 1.5 - 8 * l);\r\n                        m.frogPosition = e;\r\n                        x.onStateChange && x.onStateChange(m);\r\n                    }));\r\n                }, E = undefined, O = undefined, I = undefined, A = undefined, x = { onStateChange: null }, k = undefined, M = undefined;\r\n                return {\r\n                    updateScreen: C,\r\n                    getScreenState: function () { return m; },\r\n                    up: function () { return R(h.UP); },\r\n                    left: function () { return R(h.LEFT); },\r\n                    right: function () { return R(h.RIGHT); },\r\n                    onStateChange: function (e) {\r\n                        x.onStateChange = e;\r\n                        return function () { return (x.onStateChange = null); };\r\n                    },\r\n                    setFrogPosition: function (e, t, n) {\r\n                        T.getPosition().set(e, t, n);\r\n                    },\r\n                    setTakenSammiches: function (e) {\r\n                        void 0;\r\n                        e.forEach(function (e, t) { return (m.takenSammiches[t] = e); });\r\n                        w.forEach(function (t, n) {\r\n                            e[n] && t.spriteEntity.hide();\r\n                        });\r\n                    },\r\n                    block: function () { return (m.blocked = 1); },\r\n                };\r\n                function N(e, t, n, i) {\r\n                    var r = Math.floor(e.random() * (n - t + 1)) + t;\r\n                    return i && i.find(function (e) { return e === r; }) ? N(e, t, n, i) : r;\r\n                }\r\n            };\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.createCarPool = void 0;\r\n            var i = 4 / 128, r = 36 * -i, o = 8 * i, s = new Material();\r\n            s.albedoColor = Color3.Blue();\r\n            var a = new PlaneShape();\r\n            t.createCarPool = function (e, _a) {\r\n                var t = _a.track, n = _a.randomizer;\r\n                var r = 3, c = { countDt: 0, nextCarAt: Number.MAX_VALUE, currentPoolIndex: 0 }, l = function (e) { return e + 1.5; };\r\n                var u, h = 0;\r\n                var d = Array(r)\r\n                    .fill(null)\r\n                    .reduce(function (e, t) {\r\n                    var r = 3 * n.random() - 1.5;\r\n                    for (; !u && e.find(function (e) { return l(e) - l(r) < o + i; });) {\r\n                        r = 3 * n.random() - 1.5;\r\n                        h++;\r\n                        if (h > 1e4) {\r\n                            void 0;\r\n                            u = 1;\r\n                        }\r\n                    }\r\n                    e.push(r);\r\n                    return e;\r\n                }, []), p = new Array(r).fill(null).map(function (n, r) {\r\n                    var c = new Entity(), l = new Transform({\r\n                        position: new Vector3(d[r], 28 * -i + t * i * 8 + (t >= 4 ? 8 * i : 0), -0.001),\r\n                        scale: new Vector3(o, 4 * i, 0.1),\r\n                    });\r\n                    c.addComponent(s);\r\n                    c.addComponent(a);\r\n                    c.addComponent(l);\r\n                    c.setParent(e);\r\n                    return { entity: c, transform: l, spawned: 1 };\r\n                }), f = function (e) { return Math.floor(1e3 * e) / 1e3; }, m = function () {\r\n                    p.filter(function (e) { return e.spawned; }).forEach(function (e) {\r\n                        var t = e.transform.position.x;\r\n                        t > 1.5 - o / 2 || t < o / 2 - 1.5\r\n                            ? e.transform.scale.set(0.01, e.transform.scale.y, e.transform.scale.z)\r\n                            : e.transform.scale.set(o, e.transform.scale.y, e.transform.scale.z);\r\n                    });\r\n                }, g = function (e) {\r\n                    p.filter(function (e) { return e.spawned; }).forEach(function (n, i) {\r\n                        var r = n.transform.position.x;\r\n                        t % 2 == 0\r\n                            ? r <= -1.5\r\n                                ? n.transform.position.set(1.5, n.transform.position.y, n.transform.position.z)\r\n                                : n.transform.position.set(f(r - 0.5 * e), n.transform.position.y, n.transform.position.z)\r\n                            : r >= 1.5\r\n                                ? n.transform.position.set(-1.5, n.transform.position.y, n.transform.position.z)\r\n                                : n.transform.position.set(f(r + 0.5 * e), n.transform.position.y, n.transform.position.z);\r\n                    });\r\n                }, y = undefined, v = undefined;\r\n                return {\r\n                    update: function (e) {\r\n                        c.countDt += e;\r\n                        g(e);\r\n                    },\r\n                    isCollidingFrog: function (e) {\r\n                        var t = 6 * i, n = 4 * i, r = 8 * i;\r\n                        var o = p.length;\r\n                        for (; o--;) {\r\n                            var i_9 = p[o].transform.position, s_3 = i_9.x - r / 2, a_1 = i_9.x + r / 2, c_1 = i_9.y + n / 2, l_1 = i_9.y - n / 2, u_1 = e.x - t / 2, h_1 = e.x + t / 2, d_1 = e.y - t / 2, f_1 = e.y + t / 2;\r\n                            if (s_3 <= h_1 && a_1 >= u_1 && c_1 <= f_1 && l_1 >= d_1) {\r\n                                void 0;\r\n                                return 1;\r\n                            }\r\n                        }\r\n                    },\r\n                };\r\n            };\r\n        },\r\n        function (e, t, n) {\r\n            var i = (this && this.__awaiter) ||\r\n                function (e, t, n, i) {\r\n                    function r(e) {\r\n                        return e instanceof n\r\n                            ? e\r\n                            : new n(function (t) {\r\n                                t(e);\r\n                            });\r\n                    }\r\n                    return new (n || (n = Promise))(function (n, o) {\r\n                        function s(e) {\r\n                            try {\r\n                                c(i.next(e));\r\n                            }\r\n                            catch (e) {\r\n                                o(e);\r\n                            }\r\n                        }\r\n                        function a(e) {\r\n                            try {\r\n                                c(i['throw'](e));\r\n                            }\r\n                            catch (e) {\r\n                                o(e);\r\n                            }\r\n                        }\r\n                        function c(e) {\r\n                            e.done ? n(e.value) : r(e.value).then(s, a);\r\n                        }\r\n                        c((i = i.apply(e, t || [])).next());\r\n                    });\r\n                };\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.createSpectatorTrack = void 0;\r\n            var r = n(6), o = n(2), s = n(4), a = n(14), c = n(0), l = n(20);\r\n            var u = 0;\r\n            t.createSpectatorTrack = function (e, _a) {\r\n                var t = _a.lobbyRoom, n = _a.trackSeed, p = _a.minGames, f = _a.alreadyStarted;\r\n                return i(void 0, void 0, void 0, function () {\r\n                    function v(t) {\r\n                        var _this = this;\r\n                        var n = [];\r\n                        n.push(t.onMessage('NEXT_GAME', function (_a) {\r\n                            var e = _a.serverTime, t = _a.startTime, n = _a.gameIndex;\r\n                            void 0;\r\n                            u = e - Date.now();\r\n                            r.updateTextPanel({ value: '' });\r\n                            a.removeVideoPanel();\r\n                            o.stopAllSounds();\r\n                            y && y.init();\r\n                            y && y.block();\r\n                            y && y.setStartTime(h(t));\r\n                        }));\r\n                        n.push(t.onMessage('SHARE_STATE', function (e) {\r\n                            y && y.shareState(e || {});\r\n                        }));\r\n                        n.push(t.onMessage('NEXT_ROUND', function (_a) {\r\n                            var e = _a.winner, t = _a.startTime, n = _a.serverTime;\r\n                            u = n - Date.now();\r\n                            y && y.finishRound && y.finishRound({ winner: e });\r\n                            var i = h(t);\r\n                            y && y.setRoundStartTime && y.setRoundStartTime(i);\r\n                        }));\r\n                        n.push(t.onMessage('FINSIH_AGREE', function (_a) {\r\n                            var n = _a.winner, o = _a.nextSeed, c = _a.nextIndex;\r\n                            return i(_this, void 0, void 0, function () {\r\n                                var i, t_16;\r\n                                return __generator(this, function (_a) {\r\n                                    switch (_a.label) {\r\n                                        case 0:\r\n                                            void 0;\r\n                                            y && y.finish && y.finish({ winner: n });\r\n                                            i = t.state['player' + n].displayName;\r\n                                            r.updateTextPanel({ value: \"(\" + n + \") \" + i + \" wins\" });\r\n                                            return [4 /*yield*/, d(2e3)];\r\n                                        case 1:\r\n                                            _a.sent();\r\n                                            y && y.destroy();\r\n                                            y = null;\r\n                                            if (g.currentIndex + 1 >= m.length && g.score1 === g.score2) {\r\n                                                m.push(l.generateTrack(o, 1)[0]);\r\n                                                void 0;\r\n                                            }\r\n                                            if (!(g.currentIndex < m.length)) return [3 /*break*/, 3];\r\n                                            g.currentIndex = c;\r\n                                            t_16 = m[c].Game.instructions || 'ERROR: MISSING_INSTRUCTIONS';\r\n                                            s.hideSpritePanel();\r\n                                            a.reproduceVideo(e, m[c].Game.id);\r\n                                            r.updateTextPanel({ value: t_16 + '\\n' });\r\n                                            return [4 /*yield*/, d(1500)];\r\n                                        case 2:\r\n                                            _a.sent();\r\n                                            y && y.destroy();\r\n                                            y = null;\r\n                                            S({ nextSeed: o });\r\n                                            _a.label = 3;\r\n                                        case 3: return [2 /*return*/];\r\n                                    }\r\n                                });\r\n                            });\r\n                        }));\r\n                        n.push(t.onMessage('FINISH_TRACK', function (_a) {\r\n                            var e = _a.score;\r\n                            void 0;\r\n                            y && y.destroy();\r\n                            y = null;\r\n                            o.stopAllSounds();\r\n                            o.playOnce('pwned');\r\n                            var t = (e.player1 || 0) > (e.player2 || 0) ? 1 : 2;\r\n                            s.updateSpritePanel({\r\n                                uvs: c.getSpriteUv(8, 0, 192, 128),\r\n                                scale: new Vector3(1 === t ? 6 : -6, 4, 1),\r\n                            });\r\n                            s.showSpritePanel();\r\n                        }));\r\n                        n.push(t.onMessage('PLAYER_LEFT', function () {\r\n                            if (y) {\r\n                                y.destroy();\r\n                                y = null;\r\n                            }\r\n                        }));\r\n                        n.push(t.onMessage('GAME_DISPOSE', function () {\r\n                            void 0;\r\n                            n.forEach(function (e) {\r\n                                e();\r\n                            });\r\n                            n = [];\r\n                        }));\r\n                    }\r\n                    function S(_a) {\r\n                        var t = _a.nextSeed;\r\n                        void 0;\r\n                        var n = m[g.currentIndex].Game;\r\n                        if (y) {\r\n                            y.destroy();\r\n                            y = null;\r\n                        }\r\n                        y = new n(e, { seed: t, currentPlayer: 0, level: 1 });\r\n                    }\r\n                    var m, g, y;\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                void 0;\r\n                                void 0;\r\n                                m = l.generateTrack(n, p);\r\n                                g = { currentIndex: 0, currentPlayer: 0, score1: 0, score2: 0 };\r\n                                y = null;\r\n                                if (!!f) return [3 /*break*/, 3];\r\n                                void 0;\r\n                                o.stopSound('music2');\r\n                                return [4 /*yield*/, d(100)];\r\n                            case 1:\r\n                                _a.sent();\r\n                                o.playOnce('vs', { volume: 1 });\r\n                                r.updateTextPanel({\r\n                                    value: t.state.player1.displayName + \"\\nVS\\n\" + t.state.player2.displayName,\r\n                                    bottom: 1,\r\n                                    color: Color3.Black(),\r\n                                });\r\n                                return [4 /*yield*/, d(1e3)];\r\n                            case 2:\r\n                                _a.sent();\r\n                                a.reproduceVideo(e, m[0].Game.id);\r\n                                s.hideSpritePanel();\r\n                                r.updateTextPanel({ value: m[0].Game.instructions });\r\n                                if (y) {\r\n                                    y.destroy();\r\n                                    y = null;\r\n                                }\r\n                                y = new m[g.currentIndex].Game(e, {\r\n                                    seed: n,\r\n                                    currentPlayer: 0,\r\n                                    level: 1,\r\n                                });\r\n                                _a.label = 3;\r\n                            case 3:\r\n                                v(t);\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                });\r\n            };\r\n            function h(e) {\r\n                return e - u;\r\n            }\r\n            function d(e) {\r\n                return new Promise(function (t) { return setTimeout(t, e); });\r\n            }\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            n(74);\r\n            var i = n(75);\r\n            t.Client = i.Client;\r\n            var r = n(41);\r\n            t.Protocol = r.Protocol;\r\n            t.ErrorCode = r.ErrorCode;\r\n            var o = n(38);\r\n            t.Room = o.Room;\r\n            var s = n(45);\r\n            t.Auth = s.Auth;\r\n            t.Platform = s.Platform;\r\n            var a = n(87);\r\n            t.FossilDeltaSerializer = a.FossilDeltaSerializer;\r\n            var c = n(92);\r\n            t.SchemaSerializer = c.SchemaSerializer;\r\n            var l = n(40);\r\n            t.registerSerializer = l.registerSerializer;\r\n            l.registerSerializer('fossil-delta', a.FossilDeltaSerializer);\r\n            l.registerSerializer('schema', c.SchemaSerializer);\r\n        },\r\n        function (e, t) {\r\n            ArrayBuffer.isView ||\r\n                (ArrayBuffer.isView = function (e) {\r\n                    return (null !== e && 'object' == typeof e && e.buffer instanceof ArrayBuffer);\r\n                });\r\n        },\r\n        function (e, t, n) {\r\n            var i = (this && this.__extends) ||\r\n                (function () {\r\n                    var e = function (t, n) {\r\n                        return (e =\r\n                            Object.setPrototypeOf ||\r\n                                ({ __proto__: [] } instanceof Array &&\r\n                                    function (e, t) {\r\n                                        e.__proto__ = t;\r\n                                    }) ||\r\n                                function (e, t) {\r\n                                    for (var n in t)\r\n                                        t.hasOwnProperty(n) && (e[n] = t[n]);\r\n                                })(t, n);\r\n                    };\r\n                    return function (t, n) {\r\n                        e(t, n);\r\n                        function i() {\r\n                            this.constructor = t;\r\n                        }\r\n                        t.prototype =\r\n                            null === n\r\n                                ? Object.create(n)\r\n                                : ((i.prototype = n.prototype), new i());\r\n                    };\r\n                })(), r = (this && this.__awaiter) ||\r\n                function (e, t, n, i) {\r\n                    function r(e) {\r\n                        return e instanceof n\r\n                            ? e\r\n                            : new n(function (t) {\r\n                                t(e);\r\n                            });\r\n                    }\r\n                    return new (n || (n = Promise))(function (n, o) {\r\n                        function s(e) {\r\n                            try {\r\n                                c(i.next(e));\r\n                            }\r\n                            catch (e) {\r\n                                o(e);\r\n                            }\r\n                        }\r\n                        function a(e) {\r\n                            try {\r\n                                c(i['throw'](e));\r\n                            }\r\n                            catch (e) {\r\n                                o(e);\r\n                            }\r\n                        }\r\n                        function c(e) {\r\n                            e.done ? n(e.value) : r(e.value).then(s, a);\r\n                        }\r\n                        c((i = i.apply(e, t || [])).next());\r\n                    });\r\n                }, o = (this && this.__generator) ||\r\n                function (e, t) {\r\n                    var n = {\r\n                        label: 0,\r\n                        sent: function () {\r\n                            if (1 & o[0])\r\n                                throw o[1];\r\n                            return o[1];\r\n                        },\r\n                        trys: [],\r\n                        ops: [],\r\n                    }, i, r, o, s;\r\n                    return ((s = { next: a(0), throw: a(1), return: a(2) }),\r\n                        'function' == typeof Symbol &&\r\n                            (s[Symbol.iterator] = function () {\r\n                                return this;\r\n                            }),\r\n                        s);\r\n                    function a(e) {\r\n                        return function (t) {\r\n                            return c([e, t]);\r\n                        };\r\n                    }\r\n                    function c(s) {\r\n                        if (i)\r\n                            throw new TypeError('Generator is already executing.');\r\n                        for (; n;)\r\n                            try {\r\n                                if (((i = 1),\r\n                                    r &&\r\n                                        (o =\r\n                                            2 & s[0]\r\n                                                ? r['return']\r\n                                                : s[0]\r\n                                                    ? r['throw'] || ((o = r['return']) && o.call(r), 0)\r\n                                                    : r.next) &&\r\n                                        !(o = o.call(r, s[1])).done))\r\n                                    return o;\r\n                                ((r = 0), o) && (s = [2 & s[0], o.value]);\r\n                                switch (s[0]) {\r\n                                    case 0:\r\n                                    case 1:\r\n                                        o = s;\r\n                                        break;\r\n                                    case 4:\r\n                                        n.label++;\r\n                                        return { value: s[1], done: 0 };\r\n                                    case 5:\r\n                                        n.label++;\r\n                                        r = s[1];\r\n                                        s = [0];\r\n                                        continue;\r\n                                    case 7:\r\n                                        s = n.ops.pop();\r\n                                        n.trys.pop();\r\n                                        continue;\r\n                                    default:\r\n                                        if (!((o = n.trys), (o = o.length > 0 && o[o.length - 1])) &&\r\n                                            (6 === s[0] || 2 === s[0])) {\r\n                                            n = 0;\r\n                                            continue;\r\n                                        }\r\n                                        if (3 === s[0] && (!o || (s[1] > o[0] && s[1] < o[3]))) {\r\n                                            n.label = s[1];\r\n                                            break;\r\n                                        }\r\n                                        if (6 === s[0] && n.label < o[1]) {\r\n                                            n.label = o[1];\r\n                                            o = s;\r\n                                            break;\r\n                                        }\r\n                                        if (o && n.label < o[2]) {\r\n                                            n.label = o[2];\r\n                                            n.ops.push(s);\r\n                                            break;\r\n                                        }\r\n                                        o[2] && n.ops.pop();\r\n                                        n.trys.pop();\r\n                                        continue;\r\n                                }\r\n                                s = t.call(e, n);\r\n                            }\r\n                            catch (e) {\r\n                                s = [6, e];\r\n                                r = 0;\r\n                            }\r\n                            finally {\r\n                                i = o = 0;\r\n                            }\r\n                        if (5 & s[0])\r\n                            throw s[1];\r\n                        return { value: s[0] ? s[1] : void 0, done: 1 };\r\n                    }\r\n                };\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            var s = n(37), a = n(76), c = n(38), l = n(45), u = n(86), h = (function (e) {\r\n                i(t, e);\r\n                function t(n, i) {\r\n                    var r = e.call(this, n) || this;\r\n                    r.code = i;\r\n                    Object.setPrototypeOf(r, t.prototype);\r\n                    return r;\r\n                }\r\n                return t;\r\n            })(Error);\r\n            t.MatchMakeError = h;\r\n            var d = (function () {\r\n                function e(e) {\r\n                    void 0 === e &&\r\n                        (e =\r\n                            location.protocol.replace('http', 'ws') +\r\n                                '//' +\r\n                                location.hostname +\r\n                                (location.port && ':' + location.port));\r\n                    this.endpoint = e;\r\n                    this.auth = new l.Auth(this.endpoint);\r\n                    this.push = new u.Push(this.endpoint);\r\n                }\r\n                e.prototype.joinOrCreate = function (e, t, n) {\r\n                    void 0 === t && (t = {});\r\n                    return r(this, void 0, void 0, function () {\r\n                        return o(this, function (i) {\r\n                            switch (i.label) {\r\n                                case 0:\r\n                                    return [4, this.createMatchMakeRequest('joinOrCreate', e, t, n)];\r\n                                case 1:\r\n                                    return [2, i.sent()];\r\n                            }\r\n                        });\r\n                    });\r\n                };\r\n                e.prototype.create = function (e, t, n) {\r\n                    void 0 === t && (t = {});\r\n                    return r(this, void 0, void 0, function () {\r\n                        return o(this, function (i) {\r\n                            switch (i.label) {\r\n                                case 0:\r\n                                    return [4, this.createMatchMakeRequest('create', e, t, n)];\r\n                                case 1:\r\n                                    return [2, i.sent()];\r\n                            }\r\n                        });\r\n                    });\r\n                };\r\n                e.prototype.join = function (e, t, n) {\r\n                    void 0 === t && (t = {});\r\n                    return r(this, void 0, void 0, function () {\r\n                        return o(this, function (i) {\r\n                            switch (i.label) {\r\n                                case 0:\r\n                                    return [4, this.createMatchMakeRequest('join', e, t, n)];\r\n                                case 1:\r\n                                    return [2, i.sent()];\r\n                            }\r\n                        });\r\n                    });\r\n                };\r\n                e.prototype.joinById = function (e, t, n) {\r\n                    void 0 === t && (t = {});\r\n                    return r(this, void 0, void 0, function () {\r\n                        return o(this, function (i) {\r\n                            switch (i.label) {\r\n                                case 0:\r\n                                    return [4, this.createMatchMakeRequest('joinById', e, t, n)];\r\n                                case 1:\r\n                                    return [2, i.sent()];\r\n                            }\r\n                        });\r\n                    });\r\n                };\r\n                e.prototype.reconnect = function (e, t, n) {\r\n                    return r(this, void 0, void 0, function () {\r\n                        return o(this, function (i) {\r\n                            switch (i.label) {\r\n                                case 0:\r\n                                    return [\r\n                                        4,\r\n                                        this.createMatchMakeRequest('joinById', e, { sessionId: t }, n),\r\n                                    ];\r\n                                case 1:\r\n                                    return [2, i.sent()];\r\n                            }\r\n                        });\r\n                    });\r\n                };\r\n                e.prototype.getAvailableRooms = function (e) {\r\n                    void 0 === e && (e = '');\r\n                    return r(this, void 0, void 0, function () {\r\n                        var t;\r\n                        return o(this, function (n) {\r\n                            switch (n.label) {\r\n                                case 0:\r\n                                    t = this.endpoint.replace('ws', 'http') + '/matchmake/' + e;\r\n                                    return [\r\n                                        4,\r\n                                        s.get(t, { headers: { Accept: 'application/json' } }),\r\n                                    ];\r\n                                case 1:\r\n                                    return [2, n.sent().data];\r\n                            }\r\n                        });\r\n                    });\r\n                };\r\n                e.prototype.consumeSeatReservation = function (e, t) {\r\n                    return r(this, void 0, void 0, function () {\r\n                        var n;\r\n                        return o(this, function (i) {\r\n                            ;\r\n                            (n = this.createRoom(e.room.name, t)).id = e.room.roomId;\r\n                            n.sessionId = e.sessionId;\r\n                            n.connect(this.buildEndpoint(e.room, { sessionId: n.sessionId }));\r\n                            return [\r\n                                2,\r\n                                new Promise(function (e, t) {\r\n                                    var i = function (e, n) {\r\n                                        return t(new a.ServerError(e, n));\r\n                                    };\r\n                                    n.onError.once(i);\r\n                                    n.onJoin.once(function () {\r\n                                        n.onError.remove(i);\r\n                                        e(n);\r\n                                    });\r\n                                }),\r\n                            ];\r\n                        });\r\n                    });\r\n                };\r\n                e.prototype.createMatchMakeRequest = function (e, t, n, i) {\r\n                    void 0 === n && (n = {});\r\n                    return r(this, void 0, void 0, function () {\r\n                        var r, a;\r\n                        return o(this, function (o) {\r\n                            switch (o.label) {\r\n                                case 0:\r\n                                    r =\r\n                                        this.endpoint.replace('ws', 'http') +\r\n                                            '/matchmake/' +\r\n                                            e +\r\n                                            '/' +\r\n                                            t;\r\n                                    this.auth.hasToken && (n.token = this.auth.token);\r\n                                    return [\r\n                                        4,\r\n                                        s.post(r, {\r\n                                            headers: {\r\n                                                Accept: 'application/json',\r\n                                                'Content-Type': 'application/json',\r\n                                            },\r\n                                            body: JSON.stringify(n),\r\n                                        }),\r\n                                    ];\r\n                                case 1:\r\n                                    if ((a = o.sent().data).error)\r\n                                        throw new h(a.error, a.code);\r\n                                    return [2, this.consumeSeatReservation(a, i)];\r\n                            }\r\n                        });\r\n                    });\r\n                };\r\n                e.prototype.createRoom = function (e, t) {\r\n                    return new c.Room(e, t);\r\n                };\r\n                e.prototype.buildEndpoint = function (e, t) {\r\n                    void 0 === t && (t = {});\r\n                    var n = [];\r\n                    for (var i in t)\r\n                        t.hasOwnProperty(i) && n.push(i + '=' + t[i]);\r\n                    return (this.endpoint + '/' + e.processId + '/' + e.roomId + '?' + n.join('&'));\r\n                };\r\n                return e;\r\n            })();\r\n            t.Client = d;\r\n        },\r\n        function (e, t, n) {\r\n            var i = (this && this.__extends) ||\r\n                (function () {\r\n                    var e = function (t, n) {\r\n                        return (e =\r\n                            Object.setPrototypeOf ||\r\n                                ({ __proto__: [] } instanceof Array &&\r\n                                    function (e, t) {\r\n                                        e.__proto__ = t;\r\n                                    }) ||\r\n                                function (e, t) {\r\n                                    for (var n in t)\r\n                                        t.hasOwnProperty(n) && (e[n] = t[n]);\r\n                                })(t, n);\r\n                    };\r\n                    return function (t, n) {\r\n                        e(t, n);\r\n                        function i() {\r\n                            this.constructor = t;\r\n                        }\r\n                        t.prototype =\r\n                            null === n\r\n                                ? Object.create(n)\r\n                                : ((i.prototype = n.prototype), new i());\r\n                    };\r\n                })();\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            var r = (function (e) {\r\n                i(t, e);\r\n                function t(t, n) {\r\n                    var i = e.call(this, n) || this;\r\n                    i.name = 'ServerError';\r\n                    i.code = t;\r\n                    return i;\r\n                }\r\n                return t;\r\n            })(Error);\r\n            t.ServerError = r;\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            function i(e, t) {\r\n                this._offset = t;\r\n                if (e instanceof ArrayBuffer) {\r\n                    this._buffer = e;\r\n                    this._view = new DataView(this._buffer);\r\n                }\r\n                else {\r\n                    if (!ArrayBuffer.isView(e))\r\n                        throw new Error('Invalid argument');\r\n                    this._buffer = e.buffer;\r\n                    this._view = new DataView(this._buffer, e.byteOffset, e.byteLength);\r\n                }\r\n            }\r\n            function r(e, t, n) {\r\n                for (var i = '', r = 0, o = t, s = t + n; o < s; o++) {\r\n                    var a = e.getUint8(o);\r\n                    if (0 != (128 & a))\r\n                        if (192 != (224 & a))\r\n                            if (224 != (240 & a)) {\r\n                                if (240 != (248 & a))\r\n                                    throw new Error('Invalid byte ' + a.toString(16));\r\n                                if ((r =\r\n                                    ((7 & a) << 18) |\r\n                                        ((63 & e.getUint8(++o)) << 12) |\r\n                                        ((63 & e.getUint8(++o)) << 6) |\r\n                                        ((63 & e.getUint8(++o)) << 0)) >= 65536) {\r\n                                    r -= 65536;\r\n                                    i += String.fromCharCode(55296 + (r >>> 10), 56320 + (1023 & r));\r\n                                }\r\n                                else\r\n                                    i += String.fromCharCode(r);\r\n                            }\r\n                            else\r\n                                i += String.fromCharCode(((15 & a) << 12) |\r\n                                    ((63 & e.getUint8(++o)) << 6) |\r\n                                    ((63 & e.getUint8(++o)) << 0));\r\n                        else\r\n                            i += String.fromCharCode(((31 & a) << 6) | (63 & e.getUint8(++o)));\r\n                    else\r\n                        i += String.fromCharCode(a);\r\n                }\r\n                return i;\r\n            }\r\n            i.prototype._array = function (e) {\r\n                for (var t = new Array(e), n = 0; n < e; n++)\r\n                    t[n] = this._parse();\r\n                return t;\r\n            };\r\n            i.prototype._map = function (e) {\r\n                for (var t = '', n = {}, i = 0; i < e; i++)\r\n                    n[(t = this._parse())] = this._parse();\r\n                return n;\r\n            };\r\n            i.prototype._str = function (e) {\r\n                var t = r(this._view, this._offset, e);\r\n                this._offset += e;\r\n                return t;\r\n            };\r\n            i.prototype._bin = function (e) {\r\n                var t = this._buffer.slice(this._offset, this._offset + e);\r\n                this._offset += e;\r\n                return t;\r\n            };\r\n            i.prototype._parse = function () {\r\n                var e = this._view.getUint8(this._offset++), t, n = 0, i = 0, r = 0, o = 0;\r\n                if (e < 192)\r\n                    return e < 128\r\n                        ? e\r\n                        : e < 144\r\n                            ? this._map(15 & e)\r\n                            : e < 160\r\n                                ? this._array(15 & e)\r\n                                : this._str(31 & e);\r\n                if (e > 223)\r\n                    return -1 * (255 - e + 1);\r\n                switch (e) {\r\n                    case 192:\r\n                        return null;\r\n                    case 194:\r\n                        return 0;\r\n                    case 195:\r\n                        return 1;\r\n                    case 196:\r\n                        n = this._view.getUint8(this._offset);\r\n                        this._offset += 1;\r\n                        return this._bin(n);\r\n                    case 197:\r\n                        n = this._view.getUint16(this._offset);\r\n                        this._offset += 2;\r\n                        return this._bin(n);\r\n                    case 198:\r\n                        n = this._view.getUint32(this._offset);\r\n                        this._offset += 4;\r\n                        return this._bin(n);\r\n                    case 199:\r\n                        n = this._view.getUint8(this._offset);\r\n                        i = this._view.getInt8(this._offset + 1);\r\n                        this._offset += 2;\r\n                        return [i, this._bin(n)];\r\n                    case 200:\r\n                        n = this._view.getUint16(this._offset);\r\n                        i = this._view.getInt8(this._offset + 2);\r\n                        this._offset += 3;\r\n                        return [i, this._bin(n)];\r\n                    case 201:\r\n                        n = this._view.getUint32(this._offset);\r\n                        i = this._view.getInt8(this._offset + 4);\r\n                        this._offset += 5;\r\n                        return [i, this._bin(n)];\r\n                    case 202:\r\n                        t = this._view.getFloat32(this._offset);\r\n                        this._offset += 4;\r\n                        return t;\r\n                    case 203:\r\n                        t = this._view.getFloat64(this._offset);\r\n                        this._offset += 8;\r\n                        return t;\r\n                    case 204:\r\n                        t = this._view.getUint8(this._offset);\r\n                        this._offset += 1;\r\n                        return t;\r\n                    case 205:\r\n                        t = this._view.getUint16(this._offset);\r\n                        this._offset += 2;\r\n                        return t;\r\n                    case 206:\r\n                        t = this._view.getUint32(this._offset);\r\n                        this._offset += 4;\r\n                        return t;\r\n                    case 207:\r\n                        r = this._view.getUint32(this._offset) * Math.pow(2, 32);\r\n                        o = this._view.getUint32(this._offset + 4);\r\n                        this._offset += 8;\r\n                        return r + o;\r\n                    case 208:\r\n                        t = this._view.getInt8(this._offset);\r\n                        this._offset += 1;\r\n                        return t;\r\n                    case 209:\r\n                        t = this._view.getInt16(this._offset);\r\n                        this._offset += 2;\r\n                        return t;\r\n                    case 210:\r\n                        t = this._view.getInt32(this._offset);\r\n                        this._offset += 4;\r\n                        return t;\r\n                    case 211:\r\n                        r = this._view.getInt32(this._offset) * Math.pow(2, 32);\r\n                        o = this._view.getUint32(this._offset + 4);\r\n                        this._offset += 8;\r\n                        return r + o;\r\n                    case 212:\r\n                        i = this._view.getInt8(this._offset);\r\n                        this._offset += 1;\r\n                        if (0 === i) {\r\n                            this._offset += 1;\r\n                            return;\r\n                        }\r\n                        return [i, this._bin(1)];\r\n                    case 213:\r\n                        i = this._view.getInt8(this._offset);\r\n                        this._offset += 1;\r\n                        return [i, this._bin(2)];\r\n                    case 214:\r\n                        i = this._view.getInt8(this._offset);\r\n                        this._offset += 1;\r\n                        return [i, this._bin(4)];\r\n                    case 215:\r\n                        i = this._view.getInt8(this._offset);\r\n                        this._offset += 1;\r\n                        if (0 === i) {\r\n                            r = this._view.getInt32(this._offset) * Math.pow(2, 32);\r\n                            o = this._view.getUint32(this._offset + 4);\r\n                            this._offset += 8;\r\n                            return new Date(r + o);\r\n                        }\r\n                        return [i, this._bin(8)];\r\n                    case 216:\r\n                        i = this._view.getInt8(this._offset);\r\n                        this._offset += 1;\r\n                        return [i, this._bin(16)];\r\n                    case 217:\r\n                        n = this._view.getUint8(this._offset);\r\n                        this._offset += 1;\r\n                        return this._str(n);\r\n                    case 218:\r\n                        n = this._view.getUint16(this._offset);\r\n                        this._offset += 2;\r\n                        return this._str(n);\r\n                    case 219:\r\n                        n = this._view.getUint32(this._offset);\r\n                        this._offset += 4;\r\n                        return this._str(n);\r\n                    case 220:\r\n                        n = this._view.getUint16(this._offset);\r\n                        this._offset += 2;\r\n                        return this._array(n);\r\n                    case 221:\r\n                        n = this._view.getUint32(this._offset);\r\n                        this._offset += 4;\r\n                        return this._array(n);\r\n                    case 222:\r\n                        n = this._view.getUint16(this._offset);\r\n                        this._offset += 2;\r\n                        return this._map(n);\r\n                    case 223:\r\n                        n = this._view.getUint32(this._offset);\r\n                        this._offset += 4;\r\n                        return this._map(n);\r\n                }\r\n                throw new Error('Could not parse');\r\n            };\r\n            function o(e, t) {\r\n                void 0 === t && (t = 0);\r\n                var n = new i(e, t), r = n._parse();\r\n                if (n._offset !== e.byteLength)\r\n                    throw new Error(e.byteLength - n._offset + ' trailing bytes');\r\n                return r;\r\n            }\r\n            t.default = o;\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            function i(e, t, n) {\r\n                for (var i = 0, r = 0, o = n.length; r < o; r++)\r\n                    if ((i = n.charCodeAt(r)) < 128)\r\n                        e.setUint8(t++, i);\r\n                    else if (i < 2048) {\r\n                        e.setUint8(t++, 192 | (i >> 6));\r\n                        e.setUint8(t++, 128 | (63 & i));\r\n                    }\r\n                    else if (i < 55296 || i >= 57344) {\r\n                        e.setUint8(t++, 224 | (i >> 12));\r\n                        e.setUint8(t++, 128 | ((i >> 6) & 63));\r\n                        e.setUint8(t++, 128 | (63 & i));\r\n                    }\r\n                    else {\r\n                        r++;\r\n                        i = 65536 + (((1023 & i) << 10) | (1023 & n.charCodeAt(r)));\r\n                        e.setUint8(t++, 240 | (i >> 18));\r\n                        e.setUint8(t++, 128 | ((i >> 12) & 63));\r\n                        e.setUint8(t++, 128 | ((i >> 6) & 63));\r\n                        e.setUint8(t++, 128 | (63 & i));\r\n                    }\r\n            }\r\n            function r(e) {\r\n                for (var t = 0, n = 0, i = 0, r = e.length; i < r; i++)\r\n                    if ((t = e.charCodeAt(i)) < 128)\r\n                        n += 1;\r\n                    else if (t < 2048)\r\n                        n += 2;\r\n                    else if (t < 55296 || t >= 57344)\r\n                        n += 3;\r\n                    else {\r\n                        i++;\r\n                        n += 4;\r\n                    }\r\n                return n;\r\n            }\r\n            function o(e, t, n) {\r\n                var i = typeof n, s = 0, a = 0, c = 0, l = 0, u = 0, h = 0;\r\n                if ('string' === i) {\r\n                    if ((u = r(n)) < 32) {\r\n                        e.push(160 | u);\r\n                        h = 1;\r\n                    }\r\n                    else if (u < 256) {\r\n                        e.push(217, u);\r\n                        h = 2;\r\n                    }\r\n                    else if (u < 65536) {\r\n                        e.push(218, u >> 8, u);\r\n                        h = 3;\r\n                    }\r\n                    else {\r\n                        if (!(u < 4294967296))\r\n                            throw new Error('String too long');\r\n                        e.push(219, u >> 24, u >> 16, u >> 8, u);\r\n                        h = 5;\r\n                    }\r\n                    t.push({ _str: n, _length: u, _offset: e.length });\r\n                    return h + u;\r\n                }\r\n                if ('number' === i) {\r\n                    if (Math.floor(n) !== n || !isFinite(n)) {\r\n                        e.push(203);\r\n                        t.push({ _float: n, _length: 8, _offset: e.length });\r\n                        return 9;\r\n                    }\r\n                    if (n >= 0) {\r\n                        if (n < 128) {\r\n                            e.push(n);\r\n                            return 1;\r\n                        }\r\n                        if (n < 256) {\r\n                            e.push(204, n);\r\n                            return 2;\r\n                        }\r\n                        if (n < 65536) {\r\n                            e.push(205, n >> 8, n);\r\n                            return 3;\r\n                        }\r\n                        if (n < 4294967296) {\r\n                            e.push(206, n >> 24, n >> 16, n >> 8, n);\r\n                            return 5;\r\n                        }\r\n                        c = (n / Math.pow(2, 32)) >> 0;\r\n                        l = n >>> 0;\r\n                        e.push(207, c >> 24, c >> 16, c >> 8, c, l >> 24, l >> 16, l >> 8, l);\r\n                        return 9;\r\n                    }\r\n                    if (n >= -32) {\r\n                        e.push(n);\r\n                        return 1;\r\n                    }\r\n                    if (n >= -128) {\r\n                        e.push(208, n);\r\n                        return 2;\r\n                    }\r\n                    if (n >= -32768) {\r\n                        e.push(209, n >> 8, n);\r\n                        return 3;\r\n                    }\r\n                    if (n >= -2147483648) {\r\n                        e.push(210, n >> 24, n >> 16, n >> 8, n);\r\n                        return 5;\r\n                    }\r\n                    c = Math.floor(n / Math.pow(2, 32));\r\n                    l = n >>> 0;\r\n                    e.push(211, c >> 24, c >> 16, c >> 8, c, l >> 24, l >> 16, l >> 8, l);\r\n                    return 9;\r\n                }\r\n                if ('object' === i) {\r\n                    if (null === n) {\r\n                        e.push(192);\r\n                        return 1;\r\n                    }\r\n                    if (Array.isArray(n)) {\r\n                        if ((u = n.length) < 16) {\r\n                            e.push(144 | u);\r\n                            h = 1;\r\n                        }\r\n                        else if (u < 65536) {\r\n                            e.push(220, u >> 8, u);\r\n                            h = 3;\r\n                        }\r\n                        else {\r\n                            if (!(u < 4294967296))\r\n                                throw new Error('Array too large');\r\n                            e.push(221, u >> 24, u >> 16, u >> 8, u);\r\n                            h = 5;\r\n                        }\r\n                        for (s = 0; s < u; s++)\r\n                            h += o(e, t, n[s]);\r\n                        return h;\r\n                    }\r\n                    if (n instanceof Date) {\r\n                        var d = n.getTime();\r\n                        c = Math.floor(d / Math.pow(2, 32));\r\n                        l = d >>> 0;\r\n                        e.push(215, 0, c >> 24, c >> 16, c >> 8, c, l >> 24, l >> 16, l >> 8, l);\r\n                        return 10;\r\n                    }\r\n                    if (n instanceof ArrayBuffer) {\r\n                        if ((u = n.byteLength) < 256) {\r\n                            e.push(196, u);\r\n                            h = 2;\r\n                        }\r\n                        else if (u < 65536) {\r\n                            e.push(197, u >> 8, u);\r\n                            h = 3;\r\n                        }\r\n                        else {\r\n                            if (!(u < 4294967296))\r\n                                throw new Error('Buffer too large');\r\n                            e.push(198, u >> 24, u >> 16, u >> 8, u);\r\n                            h = 5;\r\n                        }\r\n                        t.push({ _bin: n, _length: u, _offset: e.length });\r\n                        return h + u;\r\n                    }\r\n                    if ('function' == typeof n.toJSON)\r\n                        return o(e, t, n.toJSON());\r\n                    var p = [], f = '', m = Object.keys(n);\r\n                    for (s = 0, a = m.length; s < a; s++)\r\n                        'function' != typeof n[(f = m[s])] && p.push(f);\r\n                    if ((u = p.length) < 16) {\r\n                        e.push(128 | u);\r\n                        h = 1;\r\n                    }\r\n                    else if (u < 65536) {\r\n                        e.push(222, u >> 8, u);\r\n                        h = 3;\r\n                    }\r\n                    else {\r\n                        if (!(u < 4294967296))\r\n                            throw new Error('Object too large');\r\n                        e.push(223, u >> 24, u >> 16, u >> 8, u);\r\n                        h = 5;\r\n                    }\r\n                    for (s = 0; s < u; s++) {\r\n                        h += o(e, t, (f = p[s]));\r\n                        h += o(e, t, n[f]);\r\n                    }\r\n                    return h;\r\n                }\r\n                if ('boolean' === i) {\r\n                    e.push(n ? 195 : 194);\r\n                    return 1;\r\n                }\r\n                if ('undefined' === i) {\r\n                    e.push(212, 0, 0);\r\n                    return 3;\r\n                }\r\n                throw new Error('Could not encode');\r\n            }\r\n            function s(e) {\r\n                var t = [], n = [], r = o(t, n, e), s = new ArrayBuffer(r), a = new DataView(s), c = 0, l = 0, u = -1;\r\n                n.length > 0 && (u = n[0]._offset);\r\n                for (var h, d = 0, p = 0, f = 0, m = t.length; f < m; f++) {\r\n                    a.setUint8(l + f, t[f]);\r\n                    if (f + 1 === u) {\r\n                        d = (h = n[c])._length;\r\n                        p = l + u;\r\n                        if (h._bin)\r\n                            for (var g = new Uint8Array(h._bin), y = 0; y < d; y++)\r\n                                a.setUint8(p + y, g[y]);\r\n                        else\r\n                            h._str\r\n                                ? i(a, p, h._str)\r\n                                : void 0 !== h._float && a.setFloat64(p, h._float);\r\n                        l += d;\r\n                        n[++c] && (u = n[c]._offset);\r\n                    }\r\n                }\r\n                return s;\r\n            }\r\n            t.default = s;\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            var i = (function () {\r\n                function e() {\r\n                    this.handlers = [];\r\n                }\r\n                e.prototype.register = function (e, t) {\r\n                    void 0 === t && (t = 0);\r\n                    this.handlers.push(e);\r\n                    return this;\r\n                };\r\n                e.prototype.invoke = function () {\r\n                    for (var e = [], t = 0; t < arguments.length; t++)\r\n                        e[t] = arguments[t];\r\n                    this.handlers.forEach(function (t) {\r\n                        return t.apply(void 0, e);\r\n                    });\r\n                };\r\n                e.prototype.invokeAsync = function () {\r\n                    for (var e = [], t = 0; t < arguments.length; t++)\r\n                        e[t] = arguments[t];\r\n                    return Promise.all(this.handlers.map(function (t) {\r\n                        return t.apply(void 0, e);\r\n                    }));\r\n                };\r\n                e.prototype.remove = function (e) {\r\n                    var t = this.handlers.indexOf(e);\r\n                    this.handlers[t] = this.handlers[this.handlers.length - 1];\r\n                    this.handlers.pop();\r\n                };\r\n                e.prototype.clear = function () {\r\n                    this.handlers = [];\r\n                };\r\n                return e;\r\n            })();\r\n            t.EventEmitter = i;\r\n            function r() {\r\n                var e = new i();\r\n                function t(t) {\r\n                    return e.register(t, null === this);\r\n                }\r\n                t.once = function (t) {\r\n                    var n = function () {\r\n                        for (var i = [], r = 0; r < arguments.length; r++)\r\n                            i[r] = arguments[r];\r\n                        t.apply(void 0, i);\r\n                        e.remove(n);\r\n                    };\r\n                    e.register(n);\r\n                };\r\n                t.remove = function (t) {\r\n                    return e.remove(t);\r\n                };\r\n                t.invoke = function () {\r\n                    for (var t = [], n = 0; n < arguments.length; n++)\r\n                        t[n] = arguments[n];\r\n                    return e.invoke.apply(e, t);\r\n                };\r\n                t.invokeAsync = function () {\r\n                    for (var t = [], n = 0; n < arguments.length; n++)\r\n                        t[n] = arguments[n];\r\n                    return e.invokeAsync.apply(e, t);\r\n                };\r\n                t.clear = function () {\r\n                    return e.clear();\r\n                };\r\n                return t;\r\n            }\r\n            t.createSignal = r;\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.createNanoEvents = void 0;\r\n            var i = function () { return ({\r\n                events: {},\r\n                emit: function (e) {\r\n                    var e_30, _a;\r\n                    var t = [];\r\n                    for (var _i = 1; _i < arguments.length; _i++) {\r\n                        t[_i - 1] = arguments[_i];\r\n                    }\r\n                    try {\r\n                        for (var _b = __values(this.events[e] || []), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                            var n_10 = _c.value;\r\n                            n_10.apply(void 0, __spread(t));\r\n                        }\r\n                    }\r\n                    catch (e_30_1) { e_30 = { error: e_30_1 }; }\r\n                    finally {\r\n                        try {\r\n                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                        }\r\n                        finally { if (e_30) throw e_30.error; }\r\n                    }\r\n                },\r\n                on: function (e, t) {\r\n                    var _this = this;\r\n                    ;\r\n                    (this.events[e] = this.events[e] || []).push(t);\r\n                    return function () { return (_this.events[e] = _this.events[e].filter(function (e) { return e !== t; })); };\r\n                },\r\n            }); };\r\n            t.createNanoEvents = i;\r\n        },\r\n        function (e, t, n) {\r\n            var i = (this && this.__extends) ||\r\n                (function () {\r\n                    var e = function (t, n) {\r\n                        return (e =\r\n                            Object.setPrototypeOf ||\r\n                                ({ __proto__: [] } instanceof Array &&\r\n                                    function (e, t) {\r\n                                        e.__proto__ = t;\r\n                                    }) ||\r\n                                function (e, t) {\r\n                                    for (var n in t)\r\n                                        t.hasOwnProperty(n) && (e[n] = t[n]);\r\n                                })(t, n);\r\n                    };\r\n                    return function (t, n) {\r\n                        e(t, n);\r\n                        function i() {\r\n                            this.constructor = t;\r\n                        }\r\n                        t.prototype =\r\n                            null === n\r\n                                ? Object.create(n)\r\n                                : ((i.prototype = n.prototype), new i());\r\n                    };\r\n                })(), r = (this && this.__importDefault) ||\r\n                function (e) {\r\n                    return e && e.__esModule ? e : { default: e };\r\n                };\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            var o = r(n(82)), s = (function (e) {\r\n                i(t, e);\r\n                function t(t, n) {\r\n                    void 0 === n && (n = 1);\r\n                    var i = e.call(this, t, void 0, { connect: n }) || this;\r\n                    i._enqueuedCalls = [];\r\n                    return i;\r\n                }\r\n                t.prototype.onOpenCallback = function (t) {\r\n                    e.prototype.onOpenCallback.call(this);\r\n                    this.binaryType = 'arraybuffer';\r\n                    if (this._enqueuedCalls.length > 0) {\r\n                        for (var n = 0, i = this._enqueuedCalls; n < i.length; n++) {\r\n                            var r = i[n], o = r[0], s = r[1];\r\n                            this[o].apply(this, s);\r\n                        }\r\n                        this._enqueuedCalls = [];\r\n                    }\r\n                };\r\n                t.prototype.send = function (t) {\r\n                    if (this.ws.readyState === o.default.OPEN) {\r\n                        if (t instanceof ArrayBuffer)\r\n                            return e.prototype.send.call(this, t);\r\n                        if (Array.isArray(t))\r\n                            return e.prototype.send.call(this, new Uint8Array(t).buffer);\r\n                    }\r\n                    else\r\n                        this._enqueuedCalls.push(['send', [t]]);\r\n                };\r\n                return t;\r\n            })(o.default);\r\n            t.Connection = s;\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            var i = (function () {\r\n                function e(e, t) {\r\n                    for (var n = 0; n < t.length; n++) {\r\n                        var i = t[n];\r\n                        i.enumerable = i.enumerable || 0;\r\n                        i.configurable = 1;\r\n                        'value' in i && (i.writable = 1);\r\n                        Object.defineProperty(e, i.key, i);\r\n                    }\r\n                }\r\n                return function (t, n, i) {\r\n                    n && e(t.prototype, n);\r\n                    i && e(t, i);\r\n                    return t;\r\n                };\r\n            })();\r\n            function r(e, t) {\r\n                if (!(e instanceof t))\r\n                    throw new TypeError('Cannot call a class as a function');\r\n            }\r\n            var o = n(83).createBackoff, s = 'undefined' != typeof WebSocket ? WebSocket : n(84), a = (function () {\r\n                function e(t, n, i) {\r\n                    var s = arguments.length > 2 && void 0 !== i ? arguments[2] : {};\r\n                    r(this, e);\r\n                    this.url = t;\r\n                    this.protocols = n;\r\n                    this.reconnectEnabled = 1;\r\n                    this.listeners = {};\r\n                    this.backoff = o(s.backoff || 'exponential', s);\r\n                    this.backoff.onReady = this.onBackoffReady.bind(this);\r\n                    ('undefined' == typeof s.connect || s.connect) && this.open();\r\n                }\r\n                i(e, [\r\n                    {\r\n                        key: 'open',\r\n                        value: function e(t) {\r\n                            var n = arguments.length > 0 && void 0 !== t ? arguments[0] : 0;\r\n                            this.isReconnect = n;\r\n                            var i = this.ws && this.ws.binaryType;\r\n                            this.ws = new s(this.url, this.protocols);\r\n                            this.ws.onclose = this.onCloseCallback.bind(this);\r\n                            this.ws.onerror = this.onErrorCallback.bind(this);\r\n                            this.ws.onmessage = this.onMessageCallback.bind(this);\r\n                            this.ws.onopen = this.onOpenCallback.bind(this);\r\n                            i && (this.ws.binaryType = i);\r\n                        },\r\n                    },\r\n                    {\r\n                        key: 'onBackoffReady',\r\n                        value: function e(t, n) {\r\n                            this.open(1);\r\n                        },\r\n                    },\r\n                    {\r\n                        key: 'onCloseCallback',\r\n                        value: function e(t) {\r\n                            !this.isReconnect &&\r\n                                this.listeners['onclose'] &&\r\n                                this.listeners['onclose'].apply(null, arguments);\r\n                            this.reconnectEnabled && t.code < 3e3 && this.backoff.backoff();\r\n                        },\r\n                    },\r\n                    {\r\n                        key: 'onErrorCallback',\r\n                        value: function e() {\r\n                            this.listeners['onerror'] &&\r\n                                this.listeners['onerror'].apply(null, arguments);\r\n                        },\r\n                    },\r\n                    {\r\n                        key: 'onMessageCallback',\r\n                        value: function e() {\r\n                            this.listeners['onmessage'] &&\r\n                                this.listeners['onmessage'].apply(null, arguments);\r\n                        },\r\n                    },\r\n                    {\r\n                        key: 'onOpenCallback',\r\n                        value: function e() {\r\n                            this.listeners['onopen'] &&\r\n                                this.listeners['onopen'].apply(null, arguments);\r\n                            this.isReconnect &&\r\n                                this.listeners['onreconnect'] &&\r\n                                this.listeners['onreconnect'].apply(null, arguments);\r\n                            this.isReconnect = 0;\r\n                        },\r\n                    },\r\n                    {\r\n                        key: 'close',\r\n                        value: function e(t, n) {\r\n                            'undefined' == typeof t && (t = 1e3);\r\n                            this.reconnectEnabled = 0;\r\n                            this.ws.close(t, n);\r\n                        },\r\n                    },\r\n                    {\r\n                        key: 'send',\r\n                        value: function e(t) {\r\n                            this.ws.send(t);\r\n                        },\r\n                    },\r\n                    {\r\n                        key: 'bufferedAmount',\r\n                        get: function e() {\r\n                            return this.ws.bufferedAmount;\r\n                        },\r\n                    },\r\n                    {\r\n                        key: 'readyState',\r\n                        get: function e() {\r\n                            return this.ws.readyState;\r\n                        },\r\n                    },\r\n                    {\r\n                        key: 'binaryType',\r\n                        get: function e() {\r\n                            return this.ws.binaryType;\r\n                        },\r\n                        set: function e(t) {\r\n                            this.ws.binaryType = t;\r\n                        },\r\n                    },\r\n                    {\r\n                        key: 'extensions',\r\n                        get: function e() {\r\n                            return this.ws.extensions;\r\n                        },\r\n                        set: function e(t) {\r\n                            this.ws.extensions = t;\r\n                        },\r\n                    },\r\n                    {\r\n                        key: 'protocol',\r\n                        get: function e() {\r\n                            return this.ws.protocol;\r\n                        },\r\n                        set: function e(t) {\r\n                            this.ws.protocol = t;\r\n                        },\r\n                    },\r\n                    {\r\n                        key: 'onclose',\r\n                        set: function e(t) {\r\n                            this.listeners['onclose'] = t;\r\n                        },\r\n                        get: function e() {\r\n                            return this.listeners['onclose'];\r\n                        },\r\n                    },\r\n                    {\r\n                        key: 'onerror',\r\n                        set: function e(t) {\r\n                            this.listeners['onerror'] = t;\r\n                        },\r\n                        get: function e() {\r\n                            return this.listeners['onerror'];\r\n                        },\r\n                    },\r\n                    {\r\n                        key: 'onmessage',\r\n                        set: function e(t) {\r\n                            this.listeners['onmessage'] = t;\r\n                        },\r\n                        get: function e() {\r\n                            return this.listeners['onmessage'];\r\n                        },\r\n                    },\r\n                    {\r\n                        key: 'onopen',\r\n                        set: function e(t) {\r\n                            this.listeners['onopen'] = t;\r\n                        },\r\n                        get: function e() {\r\n                            return this.listeners['onopen'];\r\n                        },\r\n                    },\r\n                    {\r\n                        key: 'onreconnect',\r\n                        set: function e(t) {\r\n                            this.listeners['onreconnect'] = t;\r\n                        },\r\n                        get: function e() {\r\n                            return this.listeners['onreconnect'];\r\n                        },\r\n                    },\r\n                ]);\r\n                return e;\r\n            })();\r\n            a.CONNECTING = s.CONNECTING;\r\n            a.OPEN = s.OPEN;\r\n            a.CLOSING = s.CLOSING;\r\n            a.CLOSED = s.CLOSED;\r\n            t.default = a;\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.createBackoff = r;\r\n            var i = {\r\n                exponential: function e(t, n) {\r\n                    return Math.floor(Math.random() * Math.pow(2, t) * n);\r\n                },\r\n                fibonacci: function e(t, n) {\r\n                    var i;\r\n                    if (t > (i = 1))\r\n                        for (var r = 1, i = 2, o = 2; o < t; o++) {\r\n                            var s = r + i;\r\n                            r = i;\r\n                            i = s;\r\n                        }\r\n                    return Math.floor(Math.random() * i * n);\r\n                },\r\n            };\r\n            function r(e, t) {\r\n                return new o(i[e], t);\r\n            }\r\n            function o(e, t) {\r\n                this.func = e;\r\n                this.attempts = 0;\r\n                this.delay = 'undefined' != typeof t.initialDelay ? t.initialDelay : 100;\r\n            }\r\n            o.prototype.backoff = function () {\r\n                setTimeout(this.onReady, this.func(++this.attempts, this.delay));\r\n            };\r\n        },\r\n        function (e, t) { },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            var i;\r\n            function r() {\r\n                i ||\r\n                    (i =\r\n                        'undefined' != typeof cc && cc.sys && cc.sys.localStorage\r\n                            ? cc.sys.localStorage\r\n                            : 'undefined' != typeof window && window.localStorage\r\n                                ? window.localStorage\r\n                                : {\r\n                                    cache: {},\r\n                                    setItem: function (e, t) {\r\n                                        this.cache[e] = t;\r\n                                    },\r\n                                    getItem: function (e) {\r\n                                        this.cache[e];\r\n                                    },\r\n                                    removeItem: function (e) {\r\n                                        delete this.cache[e];\r\n                                    },\r\n                                });\r\n                return i;\r\n            }\r\n            function o(e, t) {\r\n                r().setItem(e, t);\r\n            }\r\n            t.setItem = o;\r\n            function s(e) {\r\n                r().removeItem(e);\r\n            }\r\n            t.removeItem = s;\r\n            function a(e, t) {\r\n                var n = r().getItem(e);\r\n                'undefined' != typeof Promise && n instanceof Promise\r\n                    ? n.then(function (e) {\r\n                        return t(e);\r\n                    })\r\n                    : t(n);\r\n            }\r\n            t.getItem = a;\r\n        },\r\n        function (e, t, n) {\r\n            var i = (this && this.__awaiter) ||\r\n                function (e, t, n, i) {\r\n                    function r(e) {\r\n                        return e instanceof n\r\n                            ? e\r\n                            : new n(function (t) {\r\n                                t(e);\r\n                            });\r\n                    }\r\n                    return new (n || (n = Promise))(function (n, o) {\r\n                        function s(e) {\r\n                            try {\r\n                                c(i.next(e));\r\n                            }\r\n                            catch (e) {\r\n                                o(e);\r\n                            }\r\n                        }\r\n                        function a(e) {\r\n                            try {\r\n                                c(i['throw'](e));\r\n                            }\r\n                            catch (e) {\r\n                                o(e);\r\n                            }\r\n                        }\r\n                        function c(e) {\r\n                            e.done ? n(e.value) : r(e.value).then(s, a);\r\n                        }\r\n                        c((i = i.apply(e, t || [])).next());\r\n                    });\r\n                }, r = (this && this.__generator) ||\r\n                function (e, t) {\r\n                    var n = {\r\n                        label: 0,\r\n                        sent: function () {\r\n                            if (1 & o[0])\r\n                                throw o[1];\r\n                            return o[1];\r\n                        },\r\n                        trys: [],\r\n                        ops: [],\r\n                    }, i, r, o, s;\r\n                    return ((s = { next: a(0), throw: a(1), return: a(2) }),\r\n                        'function' == typeof Symbol &&\r\n                            (s[Symbol.iterator] = function () {\r\n                                return this;\r\n                            }),\r\n                        s);\r\n                    function a(e) {\r\n                        return function (t) {\r\n                            return c([e, t]);\r\n                        };\r\n                    }\r\n                    function c(s) {\r\n                        if (i)\r\n                            throw new TypeError('Generator is already executing.');\r\n                        for (; n;)\r\n                            try {\r\n                                if (((i = 1),\r\n                                    r &&\r\n                                        (o =\r\n                                            2 & s[0]\r\n                                                ? r['return']\r\n                                                : s[0]\r\n                                                    ? r['throw'] || ((o = r['return']) && o.call(r), 0)\r\n                                                    : r.next) &&\r\n                                        !(o = o.call(r, s[1])).done))\r\n                                    return o;\r\n                                ((r = 0), o) && (s = [2 & s[0], o.value]);\r\n                                switch (s[0]) {\r\n                                    case 0:\r\n                                    case 1:\r\n                                        o = s;\r\n                                        break;\r\n                                    case 4:\r\n                                        n.label++;\r\n                                        return { value: s[1], done: 0 };\r\n                                    case 5:\r\n                                        n.label++;\r\n                                        r = s[1];\r\n                                        s = [0];\r\n                                        continue;\r\n                                    case 7:\r\n                                        s = n.ops.pop();\r\n                                        n.trys.pop();\r\n                                        continue;\r\n                                    default:\r\n                                        if (!((o = n.trys), (o = o.length > 0 && o[o.length - 1])) &&\r\n                                            (6 === s[0] || 2 === s[0])) {\r\n                                            n = 0;\r\n                                            continue;\r\n                                        }\r\n                                        if (3 === s[0] && (!o || (s[1] > o[0] && s[1] < o[3]))) {\r\n                                            n.label = s[1];\r\n                                            break;\r\n                                        }\r\n                                        if (6 === s[0] && n.label < o[1]) {\r\n                                            n.label = o[1];\r\n                                            o = s;\r\n                                            break;\r\n                                        }\r\n                                        if (o && n.label < o[2]) {\r\n                                            n.label = o[2];\r\n                                            n.ops.push(s);\r\n                                            break;\r\n                                        }\r\n                                        o[2] && n.ops.pop();\r\n                                        n.trys.pop();\r\n                                        continue;\r\n                                }\r\n                                s = t.call(e, n);\r\n                            }\r\n                            catch (e) {\r\n                                s = [6, e];\r\n                                r = 0;\r\n                            }\r\n                            finally {\r\n                                i = o = 0;\r\n                            }\r\n                        if (5 & s[0])\r\n                            throw s[1];\r\n                        return { value: s[0] ? s[1] : void 0, done: 1 };\r\n                    }\r\n                };\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            var o = (function () {\r\n                function e(e) {\r\n                    this.endpoint = e.replace('ws', 'http');\r\n                }\r\n                e.prototype.register = function () {\r\n                    return i(this, void 0, void 0, function () {\r\n                        return r(this, function (e) {\r\n                            switch (e.label) {\r\n                                case 0:\r\n                                    this.check();\r\n                                    return [4, this.registerServiceWorker()];\r\n                                case 1:\r\n                                    e.sent();\r\n                                    return [4, this.requestNotificationPermission()];\r\n                                case 2:\r\n                                    e.sent();\r\n                                    return [2];\r\n                            }\r\n                        });\r\n                    });\r\n                };\r\n                e.prototype.registerServiceWorker = function () {\r\n                    return i(this, void 0, void 0, function () {\r\n                        return r(this, function (e) {\r\n                            switch (e.label) {\r\n                                case 0:\r\n                                    return [\r\n                                        4,\r\n                                        navigator.serviceWorker.register(this.endpoint + '/push'),\r\n                                    ];\r\n                                case 1:\r\n                                    return [2, e.sent()];\r\n                            }\r\n                        });\r\n                    });\r\n                };\r\n                e.prototype.requestNotificationPermission = function () {\r\n                    return i(this, void 0, void 0, function () {\r\n                        var e;\r\n                        return r(this, function (t) {\r\n                            switch (t.label) {\r\n                                case 0:\r\n                                    return [4, window['Notification'].requestPermission()];\r\n                                case 1:\r\n                                    if ('granted' !== (e = t.sent()))\r\n                                        throw new Error('Permission not granted for Notification');\r\n                                    return [2];\r\n                            }\r\n                        });\r\n                    });\r\n                };\r\n                e.prototype.check = function () {\r\n                    if (!('serviceWorker' in navigator))\r\n                        throw new Error('No Service Worker support!');\r\n                    if (!('PushManager' in window))\r\n                        throw new Error('No Push API Support!');\r\n                };\r\n                return e;\r\n            })();\r\n            t.Push = o;\r\n        },\r\n        function (e, t, n) {\r\n            var i = (this && this.__importStar) ||\r\n                function (e) {\r\n                    if (e && e.__esModule)\r\n                        return e;\r\n                    var t = {};\r\n                    if (null != e)\r\n                        for (var n in e)\r\n                            Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);\r\n                    t['default'] = e;\r\n                    return t;\r\n                };\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            var r = n(88), o = i(n(91)), s = i(n(39)), a = (function () {\r\n                function e() {\r\n                    this.api = new r.StateContainer({});\r\n                }\r\n                e.prototype.getState = function () {\r\n                    return this.api.state;\r\n                };\r\n                e.prototype.setState = function (e) {\r\n                    this.previousState = new Uint8Array(e);\r\n                    this.api.set(s.decode(this.previousState));\r\n                };\r\n                e.prototype.patch = function (e) {\r\n                    this.previousState = new Uint8Array(o.apply(this.previousState, e));\r\n                    this.api.set(s.decode(this.previousState));\r\n                };\r\n                e.prototype.teardown = function () {\r\n                    this.api.removeAllListeners();\r\n                };\r\n                return e;\r\n            })();\r\n            t.FossilDeltaSerializer = a;\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            var i = n(89);\r\n            t.StateContainer = i.StateContainer;\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            var i = n(90), r = (function () {\r\n                function e(e) {\r\n                    this.listeners = [];\r\n                    this.matcherPlaceholders = {\r\n                        ':id': /^([a-zA-Z0-9\\-_]+)$/,\r\n                        ':number': /^([0-9]+)$/,\r\n                        ':string': /^(\\w+)$/,\r\n                        ':axis': /^([xyz])$/,\r\n                        ':*': /(.*)/,\r\n                    };\r\n                    this.state = e;\r\n                    this.reset();\r\n                }\r\n                e.prototype.set = function (e) {\r\n                    var t = i.compare(this.state, e);\r\n                    this.state = e;\r\n                    this.checkPatches(t, this.listeners, this.defaultListener);\r\n                    return t;\r\n                };\r\n                e.prototype.registerPlaceholder = function (e, t) {\r\n                    this.matcherPlaceholders[e] = t;\r\n                };\r\n                e.prototype.listen = function (e, t, n) {\r\n                    var r = this, o;\r\n                    if ('function' == typeof e) {\r\n                        o = [];\r\n                        t = e;\r\n                    }\r\n                    else\r\n                        o = e.split('/');\r\n                    t.length > 1, 0;\r\n                    var s = {\r\n                        callback: t,\r\n                        rawRules: o,\r\n                        rules: o.map(function (e) {\r\n                            return 'string' == typeof e\r\n                                ? 0 === e.indexOf(':')\r\n                                    ? r.matcherPlaceholders[e] || r.matcherPlaceholders[':*']\r\n                                    : new RegExp('^' + e + '$')\r\n                                : e;\r\n                        }),\r\n                    };\r\n                    0 === o.length ? (this.defaultListener = s) : this.listeners.push(s);\r\n                    n && this.checkPatches(i.compare({}, this.state), [s]);\r\n                    return s;\r\n                };\r\n                e.prototype.removeListener = function (e) {\r\n                    for (var t = this.listeners.length - 1; t >= 0; t--)\r\n                        this.listeners[t] === e && this.listeners.splice(t, 1);\r\n                };\r\n                e.prototype.removeAllListeners = function () {\r\n                    this.reset();\r\n                };\r\n                e.prototype.checkPatches = function (e, t, n) {\r\n                    for (var i = 0, r = t.length; i < r; i++)\r\n                        for (var o = t[i], s = e.length - 1; s >= 0; s--) {\r\n                            var a = o && this.getPathVariables(e[s], o);\r\n                            if (a) {\r\n                                o.callback({\r\n                                    path: a,\r\n                                    rawPath: e[s].path,\r\n                                    operation: e[s].operation,\r\n                                    value: e[s].value,\r\n                                });\r\n                                e[s].matched = 1;\r\n                            }\r\n                        }\r\n                    if (n)\r\n                        for (var s = e.length - 1; s >= 0; s--)\r\n                            e[s].matched || n.callback(e[s]);\r\n                };\r\n                e.prototype.getPathVariables = function (e, t) {\r\n                    if (e.path.length !== t.rules.length)\r\n                        return 0;\r\n                    for (var n = {}, i = 0, r = t.rules.length; i < r; i++) {\r\n                        var o = e.path[i].match(t.rules[i]);\r\n                        if (!o || 0 === o.length || o.length > 2)\r\n                            return 0;\r\n                        ':' === t.rawRules[i].substr(0, 1) &&\r\n                            (n[t.rawRules[i].substr(1)] = o[1]);\r\n                    }\r\n                    return n;\r\n                };\r\n                e.prototype.reset = function () {\r\n                    this.listeners = [];\r\n                };\r\n                return e;\r\n            })();\r\n            t.StateContainer = r;\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            function i(e, t) {\r\n                var n = [];\r\n                s(e, t, n, []);\r\n                return n;\r\n            }\r\n            t.compare = i;\r\n            function r(e, t) {\r\n                var n = e.slice();\r\n                n.push(t);\r\n                return n;\r\n            }\r\n            function o(e) {\r\n                if (Array.isArray(e)) {\r\n                    for (var t = new Array(e.length), n = 0; n < t.length; n++)\r\n                        t[n] = '' + n;\r\n                    return t;\r\n                }\r\n                if (Object.keys)\r\n                    return Object.keys(e);\r\n                var i = [];\r\n                for (var r in e)\r\n                    e.hasOwnProperty(r) && i.push(r);\r\n                return i;\r\n            }\r\n            function s(e, t, n, i) {\r\n                for (var a = o(t), c = o(e), l = 0, u = c.length - 1; u >= 0; u--) {\r\n                    var h, d = e[(h = c[u])];\r\n                    if (!t.hasOwnProperty(h) ||\r\n                        (void 0 === t[h] && void 0 !== d && 0 == Array.isArray(t))) {\r\n                        n.push({ operation: 'remove', path: r(i, h) });\r\n                        l = 1;\r\n                    }\r\n                    else {\r\n                        var p = t[h];\r\n                        'object' == typeof d && null != d && 'object' == typeof p && null != p\r\n                            ? s(d, p, n, r(i, h))\r\n                            : d !== p &&\r\n                                n.push({\r\n                                    operation: 'replace',\r\n                                    path: r(i, h),\r\n                                    value: p,\r\n                                    previousValue: d,\r\n                                });\r\n                    }\r\n                }\r\n                if (l || a.length != c.length)\r\n                    for (var u = a.length - 1; u >= 0; u--) {\r\n                        var h = a[u];\r\n                        if (!e.hasOwnProperty(h) && void 0 !== t[h]) {\r\n                            var p = t[h], f = r(i, h);\r\n                            'object' == typeof p && null != p && s({}, p, n, f);\r\n                            n.push({ operation: 'add', path: f, value: p });\r\n                        }\r\n                    }\r\n            }\r\n        },\r\n        function (e, t, n) {\r\n            ;\r\n            (function (t, n) {\r\n                1, e.exports ? (e.exports = n()) : (t.fossilDelta = n());\r\n            })(this, function () {\r\n                var e = {}, t = 16;\r\n                function n() {\r\n                    this.a = 0;\r\n                    this.b = 0;\r\n                    this.i = 0;\r\n                    this.z = new Array(t);\r\n                }\r\n                n.prototype.init = function (e, n) {\r\n                    var i = 0, r = 0, o, s;\r\n                    for (o = 0; o < t; o++) {\r\n                        i = (i + (s = e[n + o])) & 65535;\r\n                        r = (r + (t - o) * s) & 65535;\r\n                        this.z[o] = s;\r\n                    }\r\n                    this.a = 65535 & i;\r\n                    this.b = 65535 & r;\r\n                    this.i = 0;\r\n                };\r\n                n.prototype.next = function (e) {\r\n                    var n = this.z[this.i];\r\n                    this.z[this.i] = e;\r\n                    this.i = (this.i + 1) & (t - 1);\r\n                    this.a = (this.a - n + e) & 65535;\r\n                    this.b = (this.b - t * n + this.a) & 65535;\r\n                };\r\n                n.prototype.value = function () {\r\n                    return ((65535 & this.a) | ((65535 & this.b) << 16)) >>> 0;\r\n                };\r\n                var i = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz~'\r\n                    .split('')\r\n                    .map(function (e) {\r\n                    return e.charCodeAt(0);\r\n                }), r = [\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    0,\r\n                    1,\r\n                    2,\r\n                    3,\r\n                    4,\r\n                    5,\r\n                    6,\r\n                    7,\r\n                    8,\r\n                    9,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    10,\r\n                    11,\r\n                    12,\r\n                    13,\r\n                    14,\r\n                    15,\r\n                    16,\r\n                    17,\r\n                    18,\r\n                    19,\r\n                    20,\r\n                    21,\r\n                    22,\r\n                    23,\r\n                    24,\r\n                    25,\r\n                    26,\r\n                    27,\r\n                    28,\r\n                    29,\r\n                    30,\r\n                    31,\r\n                    32,\r\n                    33,\r\n                    34,\r\n                    35,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    36,\r\n                    -1,\r\n                    37,\r\n                    38,\r\n                    39,\r\n                    40,\r\n                    41,\r\n                    42,\r\n                    43,\r\n                    44,\r\n                    45,\r\n                    46,\r\n                    47,\r\n                    48,\r\n                    49,\r\n                    50,\r\n                    51,\r\n                    52,\r\n                    53,\r\n                    54,\r\n                    55,\r\n                    56,\r\n                    57,\r\n                    58,\r\n                    59,\r\n                    60,\r\n                    61,\r\n                    62,\r\n                    -1,\r\n                    -1,\r\n                    -1,\r\n                    63,\r\n                    -1,\r\n                ];\r\n                function o(e) {\r\n                    this.a = e;\r\n                    this.pos = 0;\r\n                }\r\n                o.prototype.haveBytes = function () {\r\n                    return this.pos < this.a.length;\r\n                };\r\n                o.prototype.getByte = function () {\r\n                    var e = this.a[this.pos];\r\n                    this.pos++;\r\n                    if (this.pos > this.a.length)\r\n                        throw new RangeError('out of bounds');\r\n                    return e;\r\n                };\r\n                o.prototype.getChar = function () {\r\n                    return String.fromCharCode(this.getByte());\r\n                };\r\n                o.prototype.getInt = function () {\r\n                    for (var e = 0, t; this.haveBytes() && (t = r[127 & this.getByte()]) >= 0;)\r\n                        e = (e << 6) + t;\r\n                    this.pos--;\r\n                    return e >>> 0;\r\n                };\r\n                function s() {\r\n                    this.a = [];\r\n                }\r\n                s.prototype.toArray = function () {\r\n                    return this.a;\r\n                };\r\n                s.prototype.putByte = function (e) {\r\n                    this.a.push(255 & e);\r\n                };\r\n                s.prototype.putChar = function (e) {\r\n                    this.putByte(e.charCodeAt(0));\r\n                };\r\n                s.prototype.putInt = function (e) {\r\n                    var t, n, r = [];\r\n                    if (0 !== e) {\r\n                        for (t = 0; e > 0; t++, e >>>= 6)\r\n                            r.push(i[63 & e]);\r\n                        for (n = t - 1; n >= 0; n--)\r\n                            this.putByte(r[n]);\r\n                    }\r\n                    else\r\n                        this.putChar('0');\r\n                };\r\n                s.prototype.putArray = function (e, t, n) {\r\n                    for (var i = t; i < n; i++)\r\n                        this.a.push(e[i]);\r\n                };\r\n                function a(e) {\r\n                    var t, n;\r\n                    for (t = 1, n = 64; e >= n; t++, n <<= 6)\r\n                        ;\r\n                    return t;\r\n                }\r\n                function c(e) {\r\n                    for (var t = 0, n = 0, i = 0, r = 0, o = 0, s = e.length; s >= 16;) {\r\n                        t = (t + e[o + 0]) | 0;\r\n                        n = (n + e[o + 1]) | 0;\r\n                        i = (i + e[o + 2]) | 0;\r\n                        r = (r + e[o + 3]) | 0;\r\n                        t = (t + e[o + 4]) | 0;\r\n                        n = (n + e[o + 5]) | 0;\r\n                        i = (i + e[o + 6]) | 0;\r\n                        r = (r + e[o + 7]) | 0;\r\n                        t = (t + e[o + 8]) | 0;\r\n                        n = (n + e[o + 9]) | 0;\r\n                        i = (i + e[o + 10]) | 0;\r\n                        r = (r + e[o + 11]) | 0;\r\n                        t = (t + e[o + 12]) | 0;\r\n                        n = (n + e[o + 13]) | 0;\r\n                        i = (i + e[o + 14]) | 0;\r\n                        r = (r + e[o + 15]) | 0;\r\n                        o += 16;\r\n                        s -= 16;\r\n                    }\r\n                    for (; s >= 4;) {\r\n                        t = (t + e[o + 0]) | 0;\r\n                        n = (n + e[o + 1]) | 0;\r\n                        i = (i + e[o + 2]) | 0;\r\n                        r = (r + e[o + 3]) | 0;\r\n                        o += 4;\r\n                        s -= 4;\r\n                    }\r\n                    r = (((((r + (i << 8)) | 0) + (n << 16)) | 0) + (t << 24)) | 0;\r\n                    switch (s) {\r\n                        case 3:\r\n                            r = (r + (e[o + 2] << 8)) | 0;\r\n                        case 2:\r\n                            r = (r + (e[o + 1] << 16)) | 0;\r\n                        case 1:\r\n                            r = (r + (e[o + 0] << 24)) | 0;\r\n                    }\r\n                    return r >>> 0;\r\n                }\r\n                e.create = function (e, i) {\r\n                    var r = new s(), o = i.length, l = e.length, u, h = -1;\r\n                    r.putInt(o);\r\n                    r.putChar('\\n');\r\n                    if (l <= t) {\r\n                        r.putInt(o);\r\n                        r.putChar(':');\r\n                        r.putArray(i, 0, o);\r\n                        r.putInt(c(i));\r\n                        r.putChar(';');\r\n                        return r.toArray();\r\n                    }\r\n                    var d = Math.ceil(l / t), p = new Array(d), f = new Array(d);\r\n                    for (u = 0; u < p.length; u++)\r\n                        p[u] = -1;\r\n                    for (u = 0; u < f.length; u++)\r\n                        f[u] = -1;\r\n                    var m, g = new n();\r\n                    for (u = 0; u < l - t; u += t) {\r\n                        g.init(e, u);\r\n                        m = g.value() % d;\r\n                        p[u / t] = f[m];\r\n                        f[m] = u / t;\r\n                    }\r\n                    for (var y = 0, v, S, b, w, _; y + t < o;) {\r\n                        w = 0;\r\n                        _ = 0;\r\n                        g.init(i, y);\r\n                        u = 0;\r\n                        b = 0;\r\n                        for (;;) {\r\n                            var T = 250;\r\n                            S = f[(m = g.value() % d)];\r\n                            for (; S >= 0 && T-- > 0;) {\r\n                                var C, P, R, E, O, I, A, x;\r\n                                for (E = 0, I = v = S * t, A = y + u; I < l && A < o && e[I] === i[A]; E++, I++, A++)\r\n                                    ;\r\n                                E--;\r\n                                for (O = 1; O < v && O <= u && e[v - O] === i[y + u - O]; O++)\r\n                                    ;\r\n                                P = v - --O;\r\n                                R = u - O;\r\n                                if ((C = E + O + 1) >= (x = a(u - O) + a(C) + a(P) + 3) &&\r\n                                    C > b) {\r\n                                    b = C;\r\n                                    w = v - O;\r\n                                    _ = R;\r\n                                }\r\n                                S = p[S];\r\n                            }\r\n                            if (b > 0) {\r\n                                if (_ > 0) {\r\n                                    r.putInt(_);\r\n                                    r.putChar(':');\r\n                                    r.putArray(i, y, y + _);\r\n                                    y += _;\r\n                                }\r\n                                y += b;\r\n                                r.putInt(b);\r\n                                r.putChar('@');\r\n                                r.putInt(w);\r\n                                r.putChar(',');\r\n                                w + b - 1 > h && (h = w + b - 1);\r\n                                b = 0;\r\n                                break;\r\n                            }\r\n                            if (y + u + t >= o) {\r\n                                r.putInt(o - y);\r\n                                r.putChar(':');\r\n                                r.putArray(i, y, y + o - y);\r\n                                y = o;\r\n                                break;\r\n                            }\r\n                            g.next(i[y + u + t]);\r\n                            u++;\r\n                        }\r\n                    }\r\n                    if (y < o) {\r\n                        r.putInt(o - y);\r\n                        r.putChar(':');\r\n                        r.putArray(i, y, y + o - y);\r\n                    }\r\n                    r.putInt(c(i));\r\n                    r.putChar(';');\r\n                    return r.toArray();\r\n                };\r\n                e.outputSize = function (e) {\r\n                    var t = new o(e), n = t.getInt();\r\n                    if ('\\n' !== t.getChar())\r\n                        throw new Error(\"size integer not terminated by '\\\\n'\");\r\n                    return n;\r\n                };\r\n                e.apply = function (e, t, n) {\r\n                    var i, r = 0, a = new o(t), l = e.length, u = t.length;\r\n                    i = a.getInt();\r\n                    if ('\\n' !== a.getChar())\r\n                        throw new Error(\"size integer not terminated by '\\\\n'\");\r\n                    for (var h = new s(); a.haveBytes();) {\r\n                        var d, p;\r\n                        d = a.getInt();\r\n                        switch (a.getChar()) {\r\n                            case '@':\r\n                                p = a.getInt();\r\n                                if (a.haveBytes() && ',' !== a.getChar())\r\n                                    throw new Error(\"copy command not terminated by ','\");\r\n                                if ((r += d) > i)\r\n                                    throw new Error('copy exceeds output file size');\r\n                                if (p + d > l)\r\n                                    throw new Error('copy extends past end of input');\r\n                                h.putArray(e, p, p + d);\r\n                                break;\r\n                            case ':':\r\n                                if ((r += d) > i)\r\n                                    throw new Error('insert command gives an output larger than predicted');\r\n                                if (d > u)\r\n                                    throw new Error('insert count exceeds size of delta');\r\n                                h.putArray(a.a, a.pos, a.pos + d);\r\n                                a.pos += d;\r\n                                break;\r\n                            case ';':\r\n                                var f = h.toArray();\r\n                                if ((!n || 0 != n.verifyChecksum) && d !== c(f))\r\n                                    throw new Error('bad checksum');\r\n                                if (r !== i)\r\n                                    throw new Error('generated size does not match predicted size');\r\n                                return f;\r\n                            default:\r\n                                throw new Error('unknown delta operator');\r\n                        }\r\n                    }\r\n                    throw new Error('unterminated delta');\r\n                };\r\n                return e;\r\n            });\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            var i = n(46), r = (function () {\r\n                function e() { }\r\n                e.prototype.setState = function (e) {\r\n                    this.state.decode(e);\r\n                };\r\n                e.prototype.getState = function () {\r\n                    return this.state;\r\n                };\r\n                e.prototype.patch = function (e) {\r\n                    this.state.decode(e);\r\n                };\r\n                e.prototype.teardown = function () { };\r\n                e.prototype.handshake = function (e, t) {\r\n                    if (this.state) {\r\n                        var n;\r\n                        new i.Reflection().decode(e, t);\r\n                    }\r\n                    else\r\n                        this.state = i.Reflection.decode(e);\r\n                };\r\n                return e;\r\n            })();\r\n            t.SchemaSerializer = r;\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.EventEmitter = void 0;\r\n            var i = (function () {\r\n                function e() {\r\n                    this.handlers = [];\r\n                }\r\n                e.prototype.register = function (e, t) {\r\n                    void 0 === t && (t = 0);\r\n                    this.handlers.push(e);\r\n                    return this;\r\n                };\r\n                e.prototype.invoke = function () {\r\n                    for (var e = [], t = 0; t < arguments.length; t++)\r\n                        e[t] = arguments[t];\r\n                    this.handlers.forEach(function (t) {\r\n                        return t.apply(void 0, e);\r\n                    });\r\n                };\r\n                e.prototype.invokeAsync = function () {\r\n                    for (var e = [], t = 0; t < arguments.length; t++)\r\n                        e[t] = arguments[t];\r\n                    return Promise.all(this.handlers.map(function (t) {\r\n                        return t.apply(void 0, e);\r\n                    }));\r\n                };\r\n                e.prototype.remove = function (e) {\r\n                    var t = this.handlers.indexOf(e);\r\n                    this.handlers[t] = this.handlers[this.handlers.length - 1];\r\n                    this.handlers.pop();\r\n                };\r\n                e.prototype.clear = function () {\r\n                    this.handlers = [];\r\n                };\r\n                return e;\r\n            })();\r\n            t.EventEmitter = i;\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.dumpChanges = void 0;\r\n            var i = n(46), r = n(11), o = n(10);\r\n            function s(e) {\r\n                for (var t = {}, n = e.$changes, a = e['_fieldsByIndex'] || {}, c = 0, l = Array.from(n.changes); c < l.length; c++) {\r\n                    var u = l[c], h = a[u] || u;\r\n                    e[h] instanceof r.MapSchema ||\r\n                        e[h] instanceof o.ArraySchema ||\r\n                        e[h] instanceof i.Schema\r\n                        ? (t[h] = s(e[h]))\r\n                        : (t[h] = e[h]);\r\n                }\r\n                return t;\r\n            }\r\n            t.dumpChanges = s;\r\n        },\r\n        function (e, t, n) {\r\n            var i = (this && this.__extends) ||\r\n                (function () {\r\n                    var e = function (t, n) {\r\n                        return (e =\r\n                            Object.setPrototypeOf ||\r\n                                ({ __proto__: [] } instanceof Array &&\r\n                                    function (e, t) {\r\n                                        e.__proto__ = t;\r\n                                    }) ||\r\n                                function (e, t) {\r\n                                    for (var n in t)\r\n                                        t.hasOwnProperty(n) && (e[n] = t[n]);\r\n                                })(t, n);\r\n                    };\r\n                    return function (t, n) {\r\n                        e(t, n);\r\n                        function i() {\r\n                            this.constructor = t;\r\n                        }\r\n                        t.prototype =\r\n                            null === n\r\n                                ? Object.create(n)\r\n                                : ((i.prototype = n.prototype), new i());\r\n                    };\r\n                })(), r = (this && this.__decorate) ||\r\n                function (e, t, n, i) {\r\n                    var r = arguments.length, o = r < 3\r\n                        ? t\r\n                        : null === i\r\n                            ? (i = Object.getOwnPropertyDescriptor(t, n))\r\n                            : i, s;\r\n                    if ('object' == typeof Reflect &&\r\n                        'function' == typeof Reflect.decorate)\r\n                        o = Reflect.decorate(e, t, n, i);\r\n                    else\r\n                        for (var a = e.length - 1; a >= 0; a--)\r\n                            (s = e[a]) &&\r\n                                (o = (r < 3 ? s(o) : r > 3 ? s(t, n, o) : s(t, n)) || o);\r\n                    return r > 3 && o && Object.defineProperty(t, n, o), o;\r\n                };\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.Reflection = t.ReflectionType = t.ReflectionField = void 0;\r\n            var o = n(48), s = n(13), a = n(10), c = n(11), l = new o.Context(), u = (function (e) {\r\n                i(t, e);\r\n                function t() {\r\n                    return (null !== e && e.apply(this, arguments)) || this;\r\n                }\r\n                r([o.type('string', l)], t.prototype, 'name', void 0);\r\n                r([o.type('string', l)], t.prototype, 'type', void 0);\r\n                r([o.type('uint8', l)], t.prototype, 'referencedType', void 0);\r\n                return t;\r\n            })(s.Schema);\r\n            t.ReflectionField = u;\r\n            var h = (function (e) {\r\n                i(t, e);\r\n                function t() {\r\n                    var t = (null !== e && e.apply(this, arguments)) || this;\r\n                    t.fields = new a.ArraySchema();\r\n                    return t;\r\n                }\r\n                r([o.type('uint8', l)], t.prototype, 'id', void 0);\r\n                r([o.type([u], l)], t.prototype, 'fields', void 0);\r\n                return t;\r\n            })(s.Schema);\r\n            t.ReflectionType = h;\r\n            var d = (function (e) {\r\n                i(t, e);\r\n                function t() {\r\n                    var t = (null !== e && e.apply(this, arguments)) || this;\r\n                    t.types = new a.ArraySchema();\r\n                    return t;\r\n                }\r\n                t.encode = function (e) {\r\n                    var n = e.constructor, i = new t();\r\n                    i.rootType = n._typeid;\r\n                    var r = function (e, t) {\r\n                        for (var n in t) {\r\n                            var r = new u();\r\n                            r.name = n;\r\n                            var o = void 0;\r\n                            if ('string' == typeof t[n])\r\n                                o = t[n];\r\n                            else {\r\n                                var s = 'function' == typeof t[n], a = Array.isArray(t[n]), c = !a && t[n].map, l = void 0;\r\n                                if (s) {\r\n                                    o = 'ref';\r\n                                    l = t[n];\r\n                                }\r\n                                else if (a) {\r\n                                    o = 'array';\r\n                                    'string' == typeof t[n][0]\r\n                                        ? (o += ':' + t[n][0])\r\n                                        : (l = t[n][0]);\r\n                                }\r\n                                else if (c) {\r\n                                    o = 'map';\r\n                                    'string' == typeof t[n].map\r\n                                        ? (o += ':' + t[n].map)\r\n                                        : (l = t[n].map);\r\n                                }\r\n                                r.referencedType = l ? l._typeid : 255;\r\n                            }\r\n                            r.type = o;\r\n                            e.fields.push(r);\r\n                        }\r\n                        i.types.push(e);\r\n                    }, o = n._context.types;\r\n                    for (var s in o) {\r\n                        var a = new h();\r\n                        a.id = Number(s);\r\n                        r(a, o[s]._schema);\r\n                    }\r\n                    return i.encodeAll();\r\n                };\r\n                t.decode = function (e) {\r\n                    var n = new o.Context(), r = new t();\r\n                    r.decode(e);\r\n                    var l = r.types.reduce(function (e, t) {\r\n                        e[t.id] = (function (e) {\r\n                            i(t, e);\r\n                            function t() {\r\n                                return (null !== e && e.apply(this, arguments)) || this;\r\n                            }\r\n                            return t;\r\n                        })(s.Schema);\r\n                        return e;\r\n                    }, {});\r\n                    r.types.forEach(function (e, t) {\r\n                        e.fields.forEach(function (t) {\r\n                            var i = l[e.id];\r\n                            if (void 0 !== t.referencedType) {\r\n                                var r = l[t.referencedType];\r\n                                r || (r = t.type.split(':')[1]);\r\n                                0 === t.type.indexOf('array')\r\n                                    ? o.type([r], n)(i.prototype, t.name)\r\n                                    : 0 === t.type.indexOf('map')\r\n                                        ? o.type({ map: r }, n)(i.prototype, t.name)\r\n                                        : 'ref' === t.type && o.type(r, n)(i.prototype, t.name);\r\n                            }\r\n                            else\r\n                                o.type(t.type, n)(i.prototype, t.name);\r\n                        });\r\n                    });\r\n                    var u = l[r.rootType], h = new u();\r\n                    for (var d in u._schema) {\r\n                        var p = u._schema[d];\r\n                        if ('string' != typeof p) {\r\n                            var f = 'function' == typeof p, m = Array.isArray(p), g = !m && p.map;\r\n                            h[d] = m\r\n                                ? new a.ArraySchema()\r\n                                : g\r\n                                    ? new c.MapSchema()\r\n                                    : f\r\n                                        ? new p()\r\n                                        : void 0;\r\n                        }\r\n                    }\r\n                    return h;\r\n                };\r\n                r([o.type([h], l)], t.prototype, 'types', void 0);\r\n                r([o.type('uint8', l)], t.prototype, 'rootType', void 0);\r\n                return t;\r\n            })(s.Schema);\r\n            t.Reflection = d;\r\n        },\r\n        function (e, t, n) {\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.showNotification = void 0;\r\n            var i = new UICanvas(), r = new UIText(i);\r\n            r.fontSize = 30;\r\n            r.color = Color4.White();\r\n            r.hAlign = 'center';\r\n            r.vAlign = 'center';\r\n            r.width = '100%';\r\n            r.height = '100%';\r\n            r.value = '';\r\n            r.visible = 0;\r\n            t.showNotification = function (e, _a) {\r\n                var _b = _a === void 0 ? {} : _a, _c = _b.error, t = _c === void 0 ? 0 : _c, _d = _b.info, n = _d === void 0 ? 0 : _d, _e = _b.warning, o = _e === void 0 ? 0 : _e;\r\n                i.visible = 1;\r\n                r.visible = 1;\r\n                void 0;\r\n                r.value = e;\r\n                r.width = 120;\r\n                r.height = 30;\r\n                setTimeout(function () {\r\n                    r.visible = 0;\r\n                    r.value = '';\r\n                }, 4e3);\r\n            };\r\n        },\r\n        function (e, t, n) {\r\n            var i = (this && this.__awaiter) ||\r\n                function (e, t, n, i) {\r\n                    function r(e) {\r\n                        return e instanceof n\r\n                            ? e\r\n                            : new n(function (t) {\r\n                                t(e);\r\n                            });\r\n                    }\r\n                    return new (n || (n = Promise))(function (n, o) {\r\n                        function s(e) {\r\n                            try {\r\n                                c(i.next(e));\r\n                            }\r\n                            catch (e) {\r\n                                o(e);\r\n                            }\r\n                        }\r\n                        function a(e) {\r\n                            try {\r\n                                c(i['throw'](e));\r\n                            }\r\n                            catch (e) {\r\n                                o(e);\r\n                            }\r\n                        }\r\n                        function c(e) {\r\n                            e.done ? n(e.value) : r(e.value).then(s, a);\r\n                        }\r\n                        c((i = i.apply(e, t || [])).next());\r\n                    });\r\n                };\r\n            Object.defineProperty(t, '__esModule', { value: 1 });\r\n            t.getLand = void 0;\r\n            t.getLand = function () {\r\n                return i(void 0, void 0, void 0, function () {\r\n                    var e, t, n, i;\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0: return [4 /*yield*/, dcl.loadModule('ParcelIdentity')];\r\n                            case 1:\r\n                                _a.sent();\r\n                                return [4 /*yield*/, dcl.callRpc('ParcelIdentity', 'getParcel', [])];\r\n                            case 2:\r\n                                i = _a.sent();\r\n                                void 0;\r\n                                return [2 /*return*/, null ===\r\n                                        (n =\r\n                                            null ===\r\n                                                (t =\r\n                                                    null === (e = null == i ? void 0 : i.land) || void 0 === e\r\n                                                        ? void 0\r\n                                                        : e.sceneJsonData) || void 0 === t\r\n                                                ? void 0\r\n                                                : t.scene) || void 0 === n\r\n                                        ? void 0\r\n                                        : n.base];\r\n                        }\r\n                    });\r\n                });\r\n            };\r\n        },\r\n    ]);\r\n});\r\ndefine(\"metas/sammich/sammich\", [\"require\", \"exports\", \"metas/sammich/meta\"], function (require, exports, meta_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    engine[\"RESOURCE_BASE\"] = \"metas/sammich/\";\r\n    globalThis[\"RESOURCE_BASE\"] = \"metas/sammich/\";\r\n    exports.default = meta_1.default.default;\r\n});\r\ndefine(\"metas/pawnssquare/modules/genFunc/genFunc\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.genFunc = void 0;\r\n    exports.genFunc = (function () {\r\n        var cam = Camera.instance;\r\n        /*\r\n         *\r\n         * _DEFAULT_RES is equal with 3D model size\r\n         *\r\n        */\r\n        var _DEFAULT_RES = 0.4;\r\n        function toWorldSnapPos(inputPos, centerPos, scale) {\r\n            var resolution = _DEFAULT_RES * scale;\r\n            var snapPos = Vector3.Zero();\r\n            var relPos = inputPos.subtract(centerPos);\r\n            snapPos.x =\r\n                Math.round((relPos.x + resolution / 2) / (resolution)) * (resolution) - resolution / 2;\r\n            snapPos.z =\r\n                Math.round((relPos.z + resolution / 2) / (resolution)) * (resolution) - resolution / 2;\r\n            snapPos.y = relPos.y;\r\n            snapPos = snapPos.add(centerPos);\r\n            return snapPos;\r\n        }\r\n        function snapPosToBoardPos(inputPos, centerPos, scale) {\r\n            var relPos = Vector3.Zero();\r\n            var resolution = _DEFAULT_RES * scale;\r\n            relPos.x = inputPos.x - centerPos.x; //+ _DEFAULT_RES * scale / 2\r\n            relPos.z = inputPos.z - centerPos.z; //+ _DEFAULT_RES * scale / 2\r\n            relPos.y = 0;\r\n            //BOARD N = 8 --> CENTER IS SET IN THE CENTER OF THE BOARD\r\n            var maxCornerBoard = (resolution * 8 / 2) - (resolution / 2);\r\n            var arrPos = Vector3.Zero();\r\n            arrPos.x = Math.round((relPos.x + maxCornerBoard) / resolution) | 0;\r\n            arrPos.z = Math.round((relPos.z + maxCornerBoard) / resolution) | 0;\r\n            arrPos.y = 0;\r\n            //log(\"relative position: \", relPos, \"\\narr position: \", arrPos)\r\n            if (arrPos.x > 7 || arrPos.x < 0 || arrPos.z > 7 || arrPos.z < 0) {\r\n                return undefined;\r\n            }\r\n            return arrPos;\r\n        }\r\n        function boardPosToSnapPos(arrPos, centerPos, scale) {\r\n            var relPos = Vector3.Zero();\r\n            var resolution = _DEFAULT_RES * scale;\r\n            var maxCornerBoard = (resolution * 8 / 2) - (resolution / 2);\r\n            relPos.x = arrPos.x * resolution - maxCornerBoard;\r\n            relPos.z = arrPos.z * resolution - maxCornerBoard;\r\n            relPos.y = 0;\r\n            var snapPos = Vector3.Zero();\r\n            snapPos = relPos.add(centerPos);\r\n            return snapPos;\r\n        }\r\n        /*\r\n        * return SNAP GLOBAL COORDINATE intersection with given XZ Plane\r\n        */\r\n        function findIntersectXZPlane(camera, centerPos, scale) {\r\n            var refVect = new Vector3(0, 0, 1);\r\n            var cam = Vector3.Zero();\r\n            var camRot = Quaternion.Zero();\r\n            var intersectPoint = Vector3.Zero();\r\n            var yOffset = centerPos.y;\r\n            cam.copyFrom(camera.position);\r\n            camRot.copyFrom(camera.rotation);\r\n            refVect.rotate(camRot);\r\n            refVect.y += cam.y;\r\n            var t = (yOffset - 1 * (cam.y)) / ((refVect.y) - (cam.y));\r\n            intersectPoint.x = (refVect.x) * t + cam.x;\r\n            intersectPoint.z = (refVect.z) * t + cam.z;\r\n            intersectPoint.y = yOffset;\r\n            var intersectPointSnap = toWorldSnapPos(intersectPoint, centerPos, scale);\r\n            //log(\"intersectRaw: \", intersectPoint, \"\\nintersectSnap: \", intersectPointSnap)\r\n            return intersectPointSnap;\r\n        }\r\n        function snapPointToChessPos(intersectPointSnap, centerPos, scale) {\r\n            var boardPos = snapPosToBoardPos(intersectPointSnap, centerPos, scale);\r\n            //log(\"arrPos: \", boardPos)\r\n            var xNot = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\r\n            var zNot = ['1', '2', '3', '4', '5', '6', '7', '8'];\r\n            if (boardPos === undefined)\r\n                return undefined;\r\n            if (boardPos.x > 7 || boardPos.x < 0)\r\n                return undefined;\r\n            if (boardPos.z > 7 || boardPos.z < 0)\r\n                return undefined;\r\n            var chessPos = \"\" + xNot[boardPos.x] + zNot[boardPos.z];\r\n            //log(chessPos)\r\n            return chessPos;\r\n        }\r\n        function _chessPosToArrPos(chessPos) {\r\n            var arrPos = Vector3.Zero();\r\n            var firstDigit = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\r\n            var secondDigit = ['1', '2', '3', '4', '5', '6', '7', '8'];\r\n            var arrPosX, arrPosZ;\r\n            for (var i = 0; i < firstDigit.length; i++) {\r\n                if (firstDigit[i] === chessPos[0]) {\r\n                    arrPosX = i;\r\n                    break;\r\n                }\r\n            }\r\n            for (var i = 0; i < secondDigit.length; i++) {\r\n                if (secondDigit[i] === chessPos[1]) {\r\n                    arrPosZ = i;\r\n                    break;\r\n                }\r\n            }\r\n            arrPos.x = arrPosX;\r\n            arrPos.z = arrPosZ;\r\n            return arrPos;\r\n        }\r\n        return {\r\n            getIntersectXZData: function (camera, centerPos, scale) {\r\n                var intersectPoint = findIntersectXZPlane(camera, centerPos, scale);\r\n                var chessPos = snapPointToChessPos(intersectPoint, centerPos, scale);\r\n                var valid = true;\r\n                if (chessPos === undefined)\r\n                    valid = false;\r\n                //log(\"intersectPoint: \", intersectPoint)\r\n                //log(\"chessPos: \", chessPos)\r\n                return {\r\n                    intersectPoint: intersectPoint,\r\n                    chessPos: chessPos,\r\n                    valid: valid\r\n                };\r\n            },\r\n            chessPosToArrPos: function (chessPos) {\r\n                return _chessPosToArrPos(chessPos);\r\n            },\r\n            chessPosToWorldPos: function (chessPos, centerPos, scale) {\r\n                var arrPos = _chessPosToArrPos(chessPos);\r\n                var worldPos = boardPosToSnapPos(arrPos, centerPos, scale);\r\n                return worldPos;\r\n            },\r\n            isNumber: function (n) {\r\n                return !isNaN(parseFloat(n)) && !isNaN(n - 0);\r\n            },\r\n            secToMinSec: function (timeSourceSec) {\r\n                var minStr = '';\r\n                var minNum = 0;\r\n                var secStr = '';\r\n                var secNum = 0;\r\n                minNum = Math.floor(timeSourceSec / 60);\r\n                secNum = Math.floor(timeSourceSec % 60);\r\n                if (Math.floor(minNum / 10) === 0)\r\n                    minStr = '0' + minNum.toString();\r\n                else\r\n                    minStr = minNum.toString();\r\n                if (Math.floor(secNum / 10) === 0)\r\n                    secStr = '0' + secNum.toString();\r\n                else\r\n                    secStr = secNum.toString();\r\n                return minStr + ':' + secStr;\r\n            },\r\n            isInBorder: function (centerPos) {\r\n                var camPos = cam.position;\r\n                var relPosToCenter = camPos.subtract(centerPos);\r\n                if (relPosToCenter.x < -7 || relPosToCenter.x > 7\r\n                    || relPosToCenter.z < -7 || relPosToCenter.z > 7\r\n                    || relPosToCenter.y < -1 || relPosToCenter.y > 4) {\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            }\r\n        };\r\n    })();\r\n});\r\ndefine(\"metas/pawnssquare/modules/dat/gameTimer\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.gameTimerSys = void 0;\r\n    var gameTimerSys = /** @class */ (function () {\r\n        function gameTimerSys(_timeControl) {\r\n            this.isCount = false;\r\n            this.timeControl = _timeControl;\r\n            this.timeW = this.timeControl;\r\n            this.timeB = this.timeControl;\r\n            engine.addSystem(this);\r\n        }\r\n        gameTimerSys.prototype.changeTimeControl = function (_timeControl) {\r\n            this.timeControl = _timeControl;\r\n            this.timeW = _timeControl;\r\n            this.timeB = _timeControl;\r\n        };\r\n        gameTimerSys.prototype.reset = function () {\r\n            this.isCount = false;\r\n            this.turn = undefined;\r\n            this.timeW = this.timeControl;\r\n            this.timeB = this.timeControl;\r\n        };\r\n        gameTimerSys.prototype.setTime = function (_timeW, _timeB) {\r\n            //this.isCount = true\r\n            this.timeW = _timeW;\r\n            this.timeB = _timeB;\r\n            //this.turn = _turn\r\n        };\r\n        gameTimerSys.prototype.startTimerCount = function (_turn) {\r\n            this.turn = _turn;\r\n            this.isCount = true;\r\n            log('timer start', this.turn);\r\n        };\r\n        gameTimerSys.prototype.pauseTimer = function () {\r\n            this.isCount = false;\r\n        };\r\n        gameTimerSys.prototype.continueTimer = function () {\r\n            this.isCount = true;\r\n        };\r\n        gameTimerSys.prototype.update = function (dt) {\r\n            if (this.isCount) {\r\n                //log(this.timeW, this.timeB)\r\n                if (this.turn === 'w') {\r\n                    if (this.timeW - dt < 0)\r\n                        this.timeW = 0;\r\n                    else\r\n                        this.timeW -= dt;\r\n                }\r\n                else if (this.turn === 'b') {\r\n                    if (this.timeB - dt < 0)\r\n                        this.timeB = 0;\r\n                    else\r\n                        this.timeB -= dt;\r\n                }\r\n            }\r\n            //log('w: ', genFunc.secToMinSec(this.timeW), '| b: ', genFunc.secToMinSec(this.timeB))\r\n        };\r\n        return gameTimerSys;\r\n    }());\r\n    exports.gameTimerSys = gameTimerSys;\r\n});\r\ndefine(\"metas/pawnssquare/modules/dat/enumTypes\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.ReadyState = exports.CONN_MODE = exports.PlayerStatus = void 0;\r\n    var PlayerStatus;\r\n    (function (PlayerStatus) {\r\n        PlayerStatus[PlayerStatus[\"Spectator\"] = 0] = \"Spectator\";\r\n        PlayerStatus[PlayerStatus[\"White\"] = 1] = \"White\";\r\n        PlayerStatus[PlayerStatus[\"Black\"] = 2] = \"Black\";\r\n        PlayerStatus[PlayerStatus[\"WhiteAndBlack\"] = 3] = \"WhiteAndBlack\";\r\n    })(PlayerStatus = exports.PlayerStatus || (exports.PlayerStatus = {}));\r\n    var CONN_MODE;\r\n    (function (CONN_MODE) {\r\n        CONN_MODE[CONN_MODE[\"WSS\"] = 0] = \"WSS\";\r\n        CONN_MODE[CONN_MODE[\"P2P\"] = 1] = \"P2P\";\r\n    })(CONN_MODE = exports.CONN_MODE || (exports.CONN_MODE = {}));\r\n    var ReadyState;\r\n    (function (ReadyState) {\r\n        ReadyState[ReadyState[\"CONNECTING\"] = 0] = \"CONNECTING\";\r\n        ReadyState[ReadyState[\"OPEN\"] = 1] = \"OPEN\";\r\n        ReadyState[ReadyState[\"CLOSING\"] = 2] = \"CLOSING\";\r\n        ReadyState[ReadyState[\"CLOSED\"] = 3] = \"CLOSED\";\r\n    })(ReadyState = exports.ReadyState || (exports.ReadyState = {}));\r\n});\r\ndefine(\"metas/pawnssquare/modules/dat/gameData\", [\"require\", \"exports\", \"metas/pawnssquare/modules/dat/gameTimer\", \"metas/pawnssquare/modules/dat/enumTypes\"], function (require, exports, gameTimer_1, enumTypes_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.gameDat = exports.userDat = void 0;\r\n    exports.userDat = (function () {\r\n        var userName = undefined;\r\n        var userETH = undefined;\r\n        var userRealm = undefined;\r\n        var inGameStatus = enumTypes_1.PlayerStatus.Spectator;\r\n        return {\r\n            reset: function () {\r\n                inGameStatus = enumTypes_1.PlayerStatus.Spectator;\r\n            },\r\n            setUID: function (_UID) {\r\n                userName = _UID;\r\n            },\r\n            getUID: function () {\r\n                return userName;\r\n            },\r\n            setETHAdd: function (_userETH) {\r\n                userETH = _userETH;\r\n            },\r\n            getETHAdd: function () {\r\n                return userETH;\r\n            },\r\n            setRealm: function (_userRealm) {\r\n                userRealm = _userRealm;\r\n            },\r\n            getURealm: function () {\r\n                return userRealm;\r\n            },\r\n            getInGameStatus: function () {\r\n                return inGameStatus;\r\n            },\r\n            setInGameStatus: function (_inGameStatus) {\r\n                inGameStatus = _inGameStatus;\r\n            }\r\n        };\r\n    })();\r\n    exports.gameDat = (function () {\r\n        var timeControl = 600;\r\n        var timerData = new gameTimer_1.gameTimerSys(600);\r\n        //let host = undefined\r\n        var MODE;\r\n        var gameData = {\r\n            host: undefined,\r\n            isReady: false,\r\n            isStart: false,\r\n            players: {\r\n                w: undefined,\r\n                b: undefined\r\n            },\r\n            times: {\r\n                w: timeControl,\r\n                b: timeControl\r\n            },\r\n            gameplay: {\r\n                fen: 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1',\r\n                lastMove: undefined,\r\n                turn: undefined\r\n            }\r\n        };\r\n        var resultData = {\r\n            result: undefined,\r\n            note: undefined\r\n        };\r\n        function _setTimeData(_timeW, _timeB) {\r\n            gameData.times.w = _timeW;\r\n            gameData.times.b = _timeB;\r\n            timerData.setTime(_timeW, _timeB);\r\n        }\r\n        function _startTimerCount() {\r\n            timerData.startTimerCount(gameData.gameplay.turn);\r\n        }\r\n        return {\r\n            setHost: function (_host) {\r\n                gameData.host = _host;\r\n                log('set HOST: ', _host);\r\n            },\r\n            getHost: function () {\r\n                return gameData.host;\r\n            },\r\n            getResult: function () {\r\n                return resultData;\r\n            },\r\n            setResult: function (_result, _note) {\r\n                resultData.result = _result;\r\n                resultData.note = _note;\r\n            },\r\n            getTImeControl: function () {\r\n                return timeControl;\r\n            },\r\n            changeTimeControl: function (_timeControl) {\r\n                if (_timeControl === void 0) { _timeControl = 600; }\r\n                if (!gameData.isReady) {\r\n                    timeControl = _timeControl;\r\n                    timerData.changeTimeControl(_timeControl);\r\n                    gameData.times = {\r\n                        w: _timeControl,\r\n                        b: _timeControl\r\n                    };\r\n                }\r\n            },\r\n            reset: function () {\r\n                log(\"RESET GAME DATA\");\r\n                gameData = {\r\n                    host: undefined,\r\n                    isReady: false,\r\n                    isStart: false,\r\n                    players: {\r\n                        w: undefined,\r\n                        b: undefined\r\n                    },\r\n                    times: {\r\n                        w: timeControl,\r\n                        b: timeControl\r\n                    },\r\n                    gameplay: {\r\n                        fen: 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1',\r\n                        lastMove: undefined,\r\n                        turn: undefined\r\n                    }\r\n                };\r\n                timerData.reset();\r\n                resultData = {\r\n                    result: undefined,\r\n                    note: undefined\r\n                };\r\n            },\r\n            getGameData: function () {\r\n                return gameData;\r\n            },\r\n            getIsReady: function () {\r\n                return gameData.isReady;\r\n            },\r\n            getIsStart: function () {\r\n                return gameData.isStart;\r\n            },\r\n            getPlayer: function () {\r\n                return gameData.players;\r\n            },\r\n            getGamePlay: function () {\r\n                return gameData.gameplay;\r\n            },\r\n            getTimeData: function () {\r\n                gameData.times.w = timerData.timeW;\r\n                gameData.times.b = timerData.timeB;\r\n                return gameData.times;\r\n            },\r\n            setIsReady: function (_isReady) {\r\n                gameData.isReady = _isReady;\r\n            },\r\n            setIsStart: function (_isStart) {\r\n                gameData.isStart = _isStart;\r\n            },\r\n            setPlayerWhite: function (pWuser) {\r\n                gameData.players.w = pWuser;\r\n            },\r\n            setPlayerBlack: function (pBuser) {\r\n                gameData.players.b = pBuser;\r\n            },\r\n            setGamePlay: function (_gamePlayData) {\r\n                gameData.gameplay.fen = _gamePlayData.fen;\r\n                gameData.gameplay.lastMove = _gamePlayData.move;\r\n                gameData.gameplay.turn = _gamePlayData.turn;\r\n            },\r\n            setTimeData: function (_timeW, _timeB) {\r\n                _setTimeData(_timeW, _timeB);\r\n            },\r\n            startTimerCount: function () {\r\n                _startTimerCount();\r\n            },\r\n            pauseTime: function () {\r\n                timerData.pauseTimer();\r\n            }\r\n        };\r\n    })();\r\n});\r\ndefine(\"metas/pawnssquare/modules/resources/modelResources\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.default = {\r\n        defaultChessModel: {\r\n            P: new GLTFShape('metas/pawnssquare/models/default/pieces_model/white_pawn.gltf'),\r\n            R: new GLTFShape('metas/pawnssquare/models/default/pieces_model/white_rook.gltf'),\r\n            N: new GLTFShape('metas/pawnssquare/models/default/pieces_model/white_knight.gltf'),\r\n            B: new GLTFShape('metas/pawnssquare/models/default/pieces_model/white_bishop.gltf'),\r\n            Q: new GLTFShape('metas/pawnssquare/models/default/pieces_model/white_queen.gltf'),\r\n            K: new GLTFShape('metas/pawnssquare/models/default/pieces_model/white_king.gltf'),\r\n            p: new GLTFShape('metas/pawnssquare/models/default/pieces_model/black_pawn.gltf'),\r\n            r: new GLTFShape('metas/pawnssquare/models/default/pieces_model/black_rook.gltf'),\r\n            n: new GLTFShape('metas/pawnssquare/models/default/pieces_model/black_knight.gltf'),\r\n            b: new GLTFShape('metas/pawnssquare/models/default/pieces_model/black_bishop.gltf'),\r\n            q: new GLTFShape('metas/pawnssquare/models/default/pieces_model/black_queen.gltf'),\r\n            k: new GLTFShape('metas/pawnssquare/models/default/pieces_model/black_king.gltf'),\r\n        },\r\n        defaultMovementModel: {\r\n            move_mark_red: new GLTFShape('metas/pawnssquare/models/default/movement_model/move_mark_red.gltf'),\r\n            move_mark_green: new GLTFShape('metas/pawnssquare/models/default/movement_model/move_mark_green.gltf'),\r\n            last_move_mark: new GLTFShape('metas/pawnssquare/models/default/movement_model/lastmove_mark.gltf')\r\n        },\r\n        defaultSceneModel: {\r\n            static_bottom_tourney: new GLTFShape('metas/pawnssquare/models/default/scene_model/bottomSceneTourney.gltf'),\r\n            static_bottom: new GLTFShape('metas/pawnssquare/models/default/scene_model/static_bottom.gltf'),\r\n            static_top1: new GLTFShape('metas/pawnssquare/models/default/scene_model/static_top_1.gltf'),\r\n            static_top2: new GLTFShape('metas/pawnssquare/models/default/scene_model/static_top_2.gltf'),\r\n            static_top3: new GLTFShape('metas/pawnssquare/models/default/scene_model/static_top_3.gltf'),\r\n            static_top4: new GLTFShape('metas/pawnssquare/models/default/scene_model/static_top_4.gltf'),\r\n            static_board: new GLTFShape('metas/pawnssquare/models/default/scene_model/chess_board.gltf'),\r\n            pW_btn: new GLTFShape('metas/pawnssquare/models/default/scene_model/pW_btn.gltf'),\r\n            pB_btn: new GLTFShape('metas/pawnssquare/models/default/scene_model/pB_btn.gltf')\r\n        }\r\n    };\r\n});\r\ndefine(\"metas/pawnssquare/modules/resources/uiresources\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.default = {\r\n        ui_texture: {\r\n            UITexture1: new Texture(\"metas/pawnssquare/materials/UITexture/UITexture1.png\"),\r\n            UITexture2: new Texture(\"metas/pawnssquare/materials/UITexture/UITexture2.png\"),\r\n            UITexture3: new Texture(\"metas/pawnssquare/materials/UITexture/UITexture3.png\"),\r\n            UITexture4: new Texture(\"metas/pawnssquare/materials/UITexture/UITexture4.png\"),\r\n            UITexture5: new Texture(\"metas/pawnssquare/materials/UITexture/UITexture5.png\")\r\n        }\r\n    };\r\n});\r\ndefine(\"metas/pawnssquare/modules/UI/BasicUI/rectUI\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.Rect2 = exports.Rect = void 0;\r\n    var Rect = /** @class */ (function () {\r\n        function Rect(canvas, opac, color, posX, posY, width, height, vAlign, hAlign) {\r\n            this.canvas = canvas;\r\n            this.rect = new UIContainerRect(this.canvas);\r\n            this.rect.positionX = posX;\r\n            this.rect.positionY = posY;\r\n            this.rect.height = height;\r\n            this.rect.width = width;\r\n            this.rect.color = color;\r\n            this.rect.positionX = posX;\r\n            this.rect.positionY = posY;\r\n            this.rect.hAlign = hAlign;\r\n            this.rect.vAlign = vAlign;\r\n            this.rect.opacity = opac;\r\n            this.rect.visible = false;\r\n        }\r\n        Rect.prototype.show = function () {\r\n            if (!this.rect.visible)\r\n                this.rect.visible = true;\r\n        };\r\n        Rect.prototype.hide = function () {\r\n            if (this.rect.visible)\r\n                this.rect.visible = false;\r\n        };\r\n        return Rect;\r\n    }());\r\n    exports.Rect = Rect;\r\n    var Rect2 = /** @class */ (function () {\r\n        function Rect2(canvas, opac, color, posX, posY, width, height, vAlign, hAlign) {\r\n            this.canvas = canvas;\r\n            this.rect = new UIScrollRect(canvas);\r\n            this.rect.backgroundColor = color;\r\n            this.rect.opacity = opac;\r\n            this.rect.width = width;\r\n            this.rect.height = height;\r\n            this.rect.positionY = posY;\r\n            this.rect.positionX = posX;\r\n            this.rect.opacity = opac;\r\n            this.rect.hAlign = hAlign;\r\n            this.rect.vAlign = vAlign;\r\n            this.rect.isVertical = true;\r\n            this.rect.borderColor = Color4.Blue();\r\n            this.rect.valueY = 0;\r\n        }\r\n        Rect2.prototype.show = function () {\r\n            if (!this.rect.visible)\r\n                this.rect.visible = true;\r\n        };\r\n        Rect2.prototype.hide = function () {\r\n            if (this.rect.visible)\r\n                this.rect.visible = false;\r\n        };\r\n        return Rect2;\r\n    }());\r\n    exports.Rect2 = Rect2;\r\n});\r\ndefine(\"metas/pawnssquare/modules/UI/BasicUI/imageUI\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.ImageUI = void 0;\r\n    var ImageUI = /** @class */ (function () {\r\n        function ImageUI(rect, textureImg, sourceLeft, sourceTop, sourceWidth, sourceHeight, width, height, positionX, positionY) {\r\n            this.rect = rect;\r\n            this.uiImage = new UIImage(this.rect.rect, textureImg);\r\n            this.uiImage.name = '';\r\n            this.uiImage.hAlign = 'left';\r\n            this.uiImage.vAlign = 'top';\r\n            this.uiImage.sourceLeft = sourceLeft;\r\n            this.uiImage.sourceTop = sourceTop;\r\n            this.uiImage.sourceWidth = sourceWidth;\r\n            this.uiImage.sourceHeight = sourceHeight;\r\n            this.uiImage.width = width;\r\n            this.uiImage.height = height;\r\n            this.uiImage.positionX = positionX;\r\n            this.uiImage.positionY = positionY;\r\n            this.uiImage.isPointerBlocker = true;\r\n        }\r\n        ImageUI.prototype.show = function () {\r\n            if (!this.uiImage.visible)\r\n                this.uiImage.visible = true;\r\n        };\r\n        ImageUI.prototype.hide = function () {\r\n            if (this.uiImage.visible)\r\n                this.uiImage.visible = false;\r\n        };\r\n        ImageUI.prototype.changePos = function (_x, _y) {\r\n            this.uiImage.positionX = _x;\r\n            this.uiImage.positionY = _y;\r\n        };\r\n        return ImageUI;\r\n    }());\r\n    exports.ImageUI = ImageUI;\r\n});\r\ndefine(\"metas/pawnssquare/modules/UI/BasicUI/textUI\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.TextUI = void 0;\r\n    var TextUI = /** @class */ (function () {\r\n        function TextUI(rect, textValue, color, fontsize, positionX, positionY) {\r\n            this.counterTurn = 0;\r\n            this.numberStep = 0;\r\n            this.rect = rect;\r\n            this.uiText = new UIText(this.rect.rect);\r\n            this.uiText.value = textValue;\r\n            this.uiText.color = color;\r\n            this.uiText.fontSize = fontsize;\r\n            this.uiText.positionX = positionX;\r\n            this.uiText.positionY = positionY;\r\n            this.uiText.width = 200;\r\n            this.uiText.adaptHeight = true;\r\n            this.uiText.hAlign = 'left';\r\n            this.uiText.vAlign = 'top';\r\n            this.uiText.textWrapping = false;\r\n            this.textVal = textValue;\r\n        }\r\n        TextUI.prototype.show = function () {\r\n            if (!this.uiText.visible)\r\n                this.uiText.visible = true;\r\n        };\r\n        TextUI.prototype.hide = function () {\r\n            if (this.uiText.visible)\r\n                this.uiText.visible = false;\r\n        };\r\n        TextUI.prototype.changeText = function (textNewValue) {\r\n            this.uiText.value = textNewValue;\r\n        };\r\n        TextUI.prototype.addText = function (txtAdd) {\r\n            this.counterTurn = this.counterTurn % 2;\r\n            if (txtAdd === '1 - 0' || txtAdd === '0 - 1' || txtAdd === '1/2 - 1/2') {\r\n                this.textVal = txtAdd + '\\n' + this.textVal;\r\n            }\r\n            else if (this.counterTurn === 0) {\r\n                this.numberStep += 1;\r\n                this.textVal = this.numberStep.toString() + '. ' + txtAdd + '\\n' + this.textVal;\r\n            }\r\n            else {\r\n                var splitVal = this.textVal.split('\\n');\r\n                var currFinalStep = splitVal[0] + ' ' + txtAdd;\r\n                var stepBefore = '';\r\n                for (var i = 1; i < splitVal.length; i++) {\r\n                    stepBefore += '\\n' + splitVal[i];\r\n                }\r\n                this.textVal = currFinalStep + stepBefore;\r\n            }\r\n            this.counterTurn += 1;\r\n            this.uiText.value = this.textVal;\r\n            log(\"Notation:\\n\", this.textVal);\r\n        };\r\n        TextUI.prototype.resetText = function () {\r\n            this.numberStep = 0;\r\n            this.counterTurn = 0;\r\n            this.textVal = '';\r\n            this.uiText.value = '';\r\n        };\r\n        TextUI.prototype.changeColor = function (color) {\r\n            this.uiText.color = color;\r\n        };\r\n        return TextUI;\r\n    }());\r\n    exports.TextUI = TextUI;\r\n});\r\ndefine(\"metas/pawnssquare/modules/UI/GameModuleUI/menuUI\", [\"require\", \"exports\", \"metas/pawnssquare/modules/resources/uiresources\", \"metas/pawnssquare/modules/UI/BasicUI/rectUI\", \"metas/pawnssquare/modules/UI/BasicUI/imageUI\", \"metas/pawnssquare/modules/UI/BasicUI/textUI\", \"metas/pawnssquare/modules/UI/controllerUIEvent\"], function (require, exports, uiresources_1, rectUI_1, imageUI_1, textUI_1, controllerUIEvent_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.MenuUI = void 0;\r\n    //import utils from \"../../../../../node_modules/decentraland-ecs-utils/index\"\r\n    var MenuUI = /** @class */ (function () {\r\n        function MenuUI(canvas1, canvas2, UIEvents) {\r\n            var _this = this;\r\n            this.UIEvents = UIEvents;\r\n            this.rectMenuBtn = new rectUI_1.Rect(canvas1, 0.9, Color4.Clear(), 18, -150, 100, 100, 'top', 'left');\r\n            this.rectMenuBtn.rect.isPointerBlocker = true;\r\n            this.rectMenuBtn.show();\r\n            this.aboutBtn = new imageUI_1.ImageUI(this.rectMenuBtn, uiresources_1.default.ui_texture.UITexture4, 2, 317, 73, 73, 60, 60, 10, -10);\r\n            this.aboutBtn.show();\r\n            var _INFO_0 = \"Powered by chess.js\";\r\n            var _INFO_1 = \"Enjoy true experience of chess by not \\nusing chess programs or engines when \\nplaying with others.\";\r\n            //let _INFO_2 = \"Cheating is a terrible act. \\nDon't be one of those Fair Play abusers, \\nit won't make you better at playing chess\"\r\n            var _INFO_3 = \"Please don't leave the arena during the game!\";\r\n            this.rectInfo = new rectUI_1.Rect(canvas2, 1, Color4.Clear(), -250, 0, 500, 270, 'top', 'center');\r\n            this.rectInfo.hide();\r\n            var logoBg = new imageUI_1.ImageUI(this.rectInfo, uiresources_1.default.ui_texture.UITexture1, 0, 0, 512, 185, 512, 185, 0, 0);\r\n            var infoBg = new imageUI_1.ImageUI(this.rectInfo, uiresources_1.default.ui_texture.UITexture5, 0, 0, 512, 280, 512, 280, 0, -183);\r\n            var info_1 = new textUI_1.TextUI(this.rectInfo, _INFO_1, Color4.Yellow(), 20, 60, -300);\r\n            info_1.uiText.width = 480;\r\n            info_1.uiText.textWrapping = true;\r\n            info_1.uiText.hAlign = 'center';\r\n            info_1.uiText.hTextAlign = 'left';\r\n            /*\r\n            const info_2 = new TextUI(this.rectInfo, _INFO_2, Color4.Yellow(), 18, 60, -340)\r\n            info_2.uiText.width = 480\r\n            info_2.uiText.textWrapping = true\r\n            info_2.uiText.hAlign = 'center'\r\n            info_2.uiText.hTextAlign = 'left'\r\n            */\r\n            var info_3 = new textUI_1.TextUI(this.rectInfo, _INFO_3, Color4.White(), 20, 25, -260);\r\n            info_3.uiText.width = 480;\r\n            info_3.uiText.textWrapping = true;\r\n            info_3.uiText.hAlign = 'center';\r\n            info_3.uiText.hTextAlign = 'left';\r\n            var info_0 = new textUI_1.TextUI(this.rectInfo, _INFO_0, Color4.Gray(), 16, 0, -438);\r\n            info_0.uiText.width = 480;\r\n            info_0.uiText.textWrapping = true;\r\n            info_0.uiText.hAlign = 'center';\r\n            info_0.uiText.hTextAlign = 'left';\r\n            this.closeBtn = new imageUI_1.ImageUI(this.rectInfo, uiresources_1.default.ui_texture.UITexture5, 0, 285, 42, 42, 42, 42, 464, -185);\r\n            this.closeBtn.show();\r\n            this.aboutBtn.uiImage.onClick = new OnClick(function () {\r\n                _this.rectInfo.show();\r\n            });\r\n            this.aboutBtn.show();\r\n            this.closeBtn.uiImage.onClick = new OnClick(function () {\r\n                _this.rectInfo.hide();\r\n            });\r\n            this.syncBtn = new imageUI_1.ImageUI(this.rectMenuBtn, uiresources_1.default.ui_texture.UITexture5, 0, 335, 73, 73, 60, 60, 10, -78);\r\n            this.syncBtn.hide();\r\n            this.syncBtn.uiImage.onClick = new OnClick(function () {\r\n                log('SYNC SCENE');\r\n                _this.UIEvents.fireEvent(new controllerUIEvent_1.UISyncEvent());\r\n                _this.syncBtn.hide();\r\n            });\r\n        }\r\n        return MenuUI;\r\n    }());\r\n    exports.MenuUI = MenuUI;\r\n});\r\ndefine(\"metas/pawnssquare/modules/UI/GameModuleUI/gamePlayUI\", [\"require\", \"exports\", \"metas/pawnssquare/modules/resources/uiresources\", \"metas/pawnssquare/modules/UI/BasicUI/rectUI\", \"metas/pawnssquare/modules/UI/BasicUI/imageUI\", \"metas/pawnssquare/modules/UI/controllerUIEvent\"], function (require, exports, uiresources_2, rectUI_2, imageUI_2, controllerUIEvent_2) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.GamePlayUI = void 0;\r\n    var GamePlayUI = /** @class */ (function () {\r\n        //UIEvents: EventManager\r\n        function GamePlayUI(canvas, userData, UIEvents) {\r\n            var _this = this;\r\n            this.userData = userData;\r\n            this.UIEvents = UIEvents;\r\n            //this.UIEvents = new EventManager()\r\n            this.rectGameBtn = new rectUI_2.Rect(canvas, 0.95, Color4.Clear(), 1000, 13, 120, 150, 'bottom', 'left');\r\n            this.rectGameBtn.hide();\r\n            var gameBtnBg = new imageUI_2.ImageUI(this.rectGameBtn, uiresources_2.default.ui_texture.UITexture4, 5, 161, 121, 151, 121, 151, 0, 0);\r\n            this.resignBtn = new imageUI_2.ImageUI(this.rectGameBtn, uiresources_2.default.ui_texture.UITexture4, 398, 28, 108, 59, 108, 59, 10, -10);\r\n            this.offerDrawBtn = new imageUI_2.ImageUI(this.rectGameBtn, uiresources_2.default.ui_texture.UITexture4, 398, 98, 108, 58, 108, 59, 10, -80);\r\n            this.rectResignConf = new rectUI_2.Rect(canvas, 0.95, Color4.Clear(), 1125, 63, 150, 100, 'bottom', 'left');\r\n            this.rectResignConf.hide();\r\n            var rectResignConfBg = new imageUI_2.ImageUI(this.rectResignConf, uiresources_2.default.ui_texture.UITexture4, 135, 161, 151, 128, 151, 128, 0, 0);\r\n            var resignConfStatic = new imageUI_2.ImageUI(this.rectResignConf, uiresources_2.default.ui_texture.UITexture4, 296, 166, 134, 53, 134, 53, 5, -5);\r\n            this.resignConfYes = new imageUI_2.ImageUI(this.rectResignConf, uiresources_2.default.ui_texture.UITexture4, 443, 163, 64, 36, 64, 36, 7, -84);\r\n            this.resignConfNo = new imageUI_2.ImageUI(this.rectResignConf, uiresources_2.default.ui_texture.UITexture4, 443, 207, 64, 36, 64, 36, 80, -84);\r\n            this.rectDrawConf = new rectUI_2.Rect(canvas, 0.95, Color4.Clear(), 1125, 63, 150, 100, 'bottom', 'left');\r\n            this.rectDrawConf.hide();\r\n            var rectDrawConfBg = new imageUI_2.ImageUI(this.rectDrawConf, uiresources_2.default.ui_texture.UITexture4, 135, 161, 151, 128, 151, 128, 0, 0);\r\n            var drawConfStatic = new imageUI_2.ImageUI(this.rectDrawConf, uiresources_2.default.ui_texture.UITexture4, 296, 226, 141, 60, 142, 60, 6, -6);\r\n            this.drawConfYes = new imageUI_2.ImageUI(this.rectDrawConf, uiresources_2.default.ui_texture.UITexture4, 443, 163, 64, 36, 64, 36, 7, -84);\r\n            this.drawConfNo = new imageUI_2.ImageUI(this.rectDrawConf, uiresources_2.default.ui_texture.UITexture4, 443, 207, 64, 36, 64, 36, 80, -84);\r\n            this.rectDrawAcc = new rectUI_2.Rect(canvas, 0.95, Color4.Clear(), 1125, 63, 150, 100, 'bottom', 'left');\r\n            this.rectDrawAcc.hide();\r\n            var drawAccBg = new imageUI_2.ImageUI(this.rectDrawAcc, uiresources_2.default.ui_texture.UITexture4, 135, 161, 151, 128, 151, 128, 0, 0);\r\n            var drawAccStatic = new imageUI_2.ImageUI(this.rectDrawAcc, uiresources_2.default.ui_texture.UITexture4, 296, 284, 140, 63, 141, 63, 6, -4);\r\n            this.drawAccYes = new imageUI_2.ImageUI(this.rectDrawAcc, uiresources_2.default.ui_texture.UITexture4, 443, 163, 64, 36, 64, 36, 7, -84);\r\n            this.drawAccNo = new imageUI_2.ImageUI(this.rectDrawAcc, uiresources_2.default.ui_texture.UITexture4, 443, 207, 64, 36, 64, 36, 80, -84);\r\n            this.resignBtn.uiImage.onClick = new OnClick(function () {\r\n                log('<UI>_resignClicked');\r\n                _this.rectResignConf.show();\r\n                _this.rectDrawConf.hide();\r\n                _this.rectDrawAcc.hide();\r\n            });\r\n            this.resignConfYes.uiImage.onClick = new OnClick(function () {\r\n                log('<UI>_resignConfirmed!');\r\n                _this.UIEvents.fireEvent(new controllerUIEvent_2.UIGamePlayEvent('resign', ''));\r\n                _this.rectResignConf.hide();\r\n            });\r\n            this.resignConfNo.uiImage.onClick = new OnClick(function () {\r\n                log('<UI>_resignCancelled!');\r\n                _this.rectResignConf.hide();\r\n            });\r\n            this.offerDrawBtn.uiImage.onClick = new OnClick(function () {\r\n                log('<UI>_offerDrawClicked');\r\n                _this.rectDrawConf.show();\r\n                _this.rectResignConf.hide();\r\n                _this.rectDrawAcc.hide();\r\n            });\r\n            this.drawConfYes.uiImage.onClick = new OnClick(function () {\r\n                log('<UI>_offer draw!');\r\n                _this.UIEvents.fireEvent(new controllerUIEvent_2.UIGamePlayEvent('offer_draw', ''));\r\n                _this.rectDrawConf.hide();\r\n            });\r\n            this.drawConfNo.uiImage.onClick = new OnClick(function () {\r\n                _this.rectDrawConf.hide();\r\n            });\r\n            this.drawAccYes.uiImage.onClick = new OnClick(function () {\r\n                log('<UI>_offer accept!');\r\n                _this.UIEvents.fireEvent(new controllerUIEvent_2.UIGamePlayEvent('draw_accepted', ''));\r\n                _this.rectDrawAcc.hide();\r\n            });\r\n            this.drawAccNo.uiImage.onClick = new OnClick(function () {\r\n                log('<UI>_offer reject!');\r\n                _this.UIEvents.fireEvent(new controllerUIEvent_2.UIGamePlayEvent('offer_reject', ''));\r\n                _this.rectDrawAcc.hide();\r\n            });\r\n        }\r\n        return GamePlayUI;\r\n    }());\r\n    exports.GamePlayUI = GamePlayUI;\r\n});\r\ndefine(\"metas/pawnssquare/modules/UI/GameModuleUI/notationUI\", [\"require\", \"exports\", \"metas/pawnssquare/modules/UI/BasicUI/rectUI\", \"metas/pawnssquare/modules/UI/BasicUI/textUI\", \"metas/pawnssquare/modules/UI/BasicUI/imageUI\", \"metas/pawnssquare/modules/resources/uiresources\"], function (require, exports, rectUI_3, textUI_2, imageUI_3, uiresources_3) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.NotationUI = void 0;\r\n    var NotationUI = /** @class */ (function () {\r\n        function NotationUI(canvas) {\r\n            this.rectNotationBackground = new rectUI_3.Rect(canvas, 0.95, Color4.Clear(), 420, 13, 150, 150, 'bottom', 'left');\r\n            var notationBg = new imageUI_3.ImageUI(this.rectNotationBackground, uiresources_3.default.ui_texture.UITexture4, 136, 319, 151, 151, 151, 151, 0, 0);\r\n            this.rectNotation = new rectUI_3.Rect2(this.rectNotationBackground.rect, 0.95, Color4.Clear(), 10, 5, 140, 140, 'bottom', 'left');\r\n            this.rectNotationBackground.show();\r\n            this.rectNotation.show();\r\n            this.notationText = new textUI_2.TextUI(this.rectNotation, '---', new Color4(0.9, 0.9, 0.2, 1), 15, 0, 0);\r\n        }\r\n        return NotationUI;\r\n    }());\r\n    exports.NotationUI = NotationUI;\r\n});\r\ndefine(\"metas/pawnssquare/modules/UI/GameModuleUI/timerUI\", [\"require\", \"exports\", \"metas/pawnssquare/modules/resources/uiresources\", \"metas/pawnssquare/modules/UI/BasicUI/rectUI\", \"metas/pawnssquare/modules/UI/BasicUI/imageUI\", \"metas/pawnssquare/modules/UI/BasicUI/textUI\"], function (require, exports, uiresources_4, rectUI_4, imageUI_4, textUI_3) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.TimerUI = void 0;\r\n    var TimerUI = /** @class */ (function () {\r\n        //timerUserBgWhite: Rect\r\n        //timerUserBgBlack: Rect\r\n        function TimerUI(canvas, userData, UIEvents) {\r\n            this.userData = userData;\r\n            this.UIEvents = UIEvents;\r\n            this.rectTimer = new rectUI_4.Rect(canvas, 0.95, Color4.Clear(), 580, 13, 380, 150, 'bottom', 'left');\r\n            this.rectTimer.show();\r\n            this.timerBg = new imageUI_4.ImageUI(this.rectTimer, uiresources_4.default.ui_texture.UITexture4, 5, 5, 381, 151, 381, 151, 0, 0);\r\n            this.timerBg.show();\r\n            var timerTextStatic1 = new textUI_3.TextUI(this.rectTimer, 'white', Color4.White(), 14, 60, 0);\r\n            timerTextStatic1.hide();\r\n            var timerTextStatic2 = new textUI_3.TextUI(this.rectTimer, 'black', Color4.White(), 14, 250, 0);\r\n            timerTextStatic2.hide();\r\n            //this.timerUserBgWhite = new Rect(this.rectTimer.rect, 1, new Color4(0.4, 0.4, 0.1, 0.4), 10, -20, 170, 110, 'top', 'left')\r\n            //timerUserBgWhite.show()\r\n            //this.timerUserBgBlack = new Rect(this.rectTimer.rect, 1, new Color4(0.4, 0.4, 0.1, 0.4), 200, -20, 170, 110, 'top', 'left')\r\n            //timerUserBgBlack.show()\r\n            this.whiteNameUI = new textUI_3.TextUI(this.rectTimer, '        ---', new Color4(245 / 255, 255 / 255, 247 / 255, 1), 20, 25, -35);\r\n            this.whiteTimerUI = new textUI_3.TextUI(this.rectTimer, '--:--', Color4.Gray(), 50, 25, -75\r\n            //this.rectTimer, '10:00', new Color4(235/255, 255/255, 240/255, 1), 50, 25, -75\r\n            );\r\n            this.blackNameUI = new textUI_3.TextUI(this.rectTimer, '        ---', new Color4(245 / 255, 255 / 255, 247 / 255, 1), 20, 210, -35);\r\n            this.blackTimerUI = new textUI_3.TextUI(this.rectTimer, '--:--', Color4.Gray(), 50, 210, -75);\r\n            this.whiteTurnMark = new imageUI_4.ImageUI(this.rectTimer, uiresources_4.default.ui_texture.UITexture4, 444, 256, 59, 45, 60 / 2.75, 49 / 2.75, 86, -5);\r\n            this.whiteTurnMark.hide();\r\n            this.blackTurnMark = new imageUI_4.ImageUI(this.rectTimer, uiresources_4.default.ui_texture.UITexture4, 444, 256, 59, 45, 60 / 2.75, 49 / 2.75, 273, -5);\r\n            this.blackTurnMark.hide();\r\n        }\r\n        return TimerUI;\r\n    }());\r\n    exports.TimerUI = TimerUI;\r\n});\r\ndefine(\"metas/pawnssquare/modules/UI/GameModuleUI/promotionUI\", [\"require\", \"exports\", \"metas/pawnssquare/modules/resources/uiresources\", \"metas/pawnssquare/modules/UI/BasicUI/rectUI\", \"metas/pawnssquare/modules/UI/BasicUI/imageUI\", \"metas/pawnssquare/modules/UI/controllerUIEvent\"], function (require, exports, uiresources_5, rectUI_5, imageUI_5, controllerUIEvent_3) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.PromotionUI = void 0;\r\n    var PromotionUI = /** @class */ (function () {\r\n        function PromotionUI(canvas, userData, UIEvents) {\r\n            var _this = this;\r\n            this.userData;\r\n            this.UIEvents = UIEvents;\r\n            this.rectPromotion = new rectUI_5.Rect(canvas, 1, Color4.Clear(), -120, -150, 358, 97, 'top', 'center');\r\n            this.rectPromotion.hide();\r\n            var promotionBg = new imageUI_5.ImageUI(this.rectPromotion, uiresources_5.default.ui_texture.UITexture2, 0, 380, 358, 97, 358, 97, 0, 0);\r\n            this.promoteQueenOpt = new imageUI_5.ImageUI(this.rectPromotion, uiresources_5.default.ui_texture.UITexture2, 254, 0, 73, 73, 73, 73, 18, -12);\r\n            this.promoteKnightOpt = new imageUI_5.ImageUI(this.rectPromotion, uiresources_5.default.ui_texture.UITexture2, 255, 231, 73, 73, 73, 73, 101, -12);\r\n            this.promoteRookOpt = new imageUI_5.ImageUI(this.rectPromotion, uiresources_5.default.ui_texture.UITexture2, 255, 154, 73, 73, 73, 73, 184, -12);\r\n            this.promoteBishopOpt = new imageUI_5.ImageUI(this.rectPromotion, uiresources_5.default.ui_texture.UITexture2, 255, 77, 73, 73, 73, 73, 267, -12);\r\n            this.promoteQueenOpt.uiImage.onClick = new OnClick(function () {\r\n                log('PROMOTED TO QUEEN');\r\n                _this.UIEvents.fireEvent(new controllerUIEvent_3.UIPromotionEvent('returnPromotionPiece', 'q'));\r\n                _this.rectPromotion.hide();\r\n            });\r\n            this.promoteKnightOpt.uiImage.onClick = new OnClick(function () {\r\n                log('PROMOTED TO KNIGHT');\r\n                _this.UIEvents.fireEvent(new controllerUIEvent_3.UIPromotionEvent('returnPromotionPiece', 'n'));\r\n                _this.rectPromotion.hide();\r\n            });\r\n            this.promoteRookOpt.uiImage.onClick = new OnClick(function () {\r\n                log('PROMOTED TO ROOK');\r\n                _this.UIEvents.fireEvent(new controllerUIEvent_3.UIPromotionEvent('returnPromotionPiece', 'r'));\r\n                _this.rectPromotion.hide();\r\n            });\r\n            this.promoteBishopOpt.uiImage.onClick = new OnClick(function () {\r\n                log('PROMOTED TO BISHOP');\r\n                _this.UIEvents.fireEvent(new controllerUIEvent_3.UIPromotionEvent('returnPromotionPiece', 'b'));\r\n                _this.rectPromotion.hide();\r\n            });\r\n        }\r\n        return PromotionUI;\r\n    }());\r\n    exports.PromotionUI = PromotionUI;\r\n});\r\ndefine(\"metas/pawnssquare/modules/UI/GameModuleUI/statusUI\", [\"require\", \"exports\", \"metas/pawnssquare/modules/resources/uiresources\", \"metas/pawnssquare/modules/UI/BasicUI/rectUI\", \"metas/pawnssquare/modules/UI/BasicUI/textUI\", \"metas/pawnssquare/modules/UI/BasicUI/imageUI\"], function (require, exports, uiresources_6, rectUI_6, textUI_4, imageUI_6) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.StatusUI = void 0;\r\n    var StatusUI = /** @class */ (function () {\r\n        function StatusUI(canvas) {\r\n            this.rectUserStatus = new rectUI_6.Rect(canvas, 0.9, Color4.Clear(), -150, -260, 250, 30, 'top', 'right');\r\n            this.userStatusBg = new imageUI_6.ImageUI(this.rectUserStatus, uiresources_6.default.ui_texture.UITexture2, 0, 263, 245, 39, 245, 39, 0, 0);\r\n            this.rectUserStatus.show();\r\n            this.userStatusTxt = new textUI_4.TextUI(this.rectUserStatus, \"----------\", new Color4(0.9, 0.9, 0.2, 1), 15, 10, -10);\r\n            this.userStatusTxt.show();\r\n            this.ackStatusWait = new imageUI_6.ImageUI(this.rectUserStatus, uiresources_6.default.ui_texture.UITexture2, 231, 328, 13, 13, 13, 13, 227, -5);\r\n            this.ackStatusWait.hide();\r\n            this.ackStatusSolve = new imageUI_6.ImageUI(this.rectUserStatus, uiresources_6.default.ui_texture.UITexture2, 231, 314, 13, 13, 13, 13, 227, -5);\r\n            this.ackStatusSolve.hide();\r\n        }\r\n        return StatusUI;\r\n    }());\r\n    exports.StatusUI = StatusUI;\r\n});\r\ndefine(\"metas/pawnssquare/modules/UI/GameModuleUI/chessBoardUI\", [\"require\", \"exports\", \"metas/pawnssquare/modules/resources/uiresources\", \"metas/pawnssquare/modules/UI/BasicUI/rectUI\", \"metas/pawnssquare/modules/UI/BasicUI/imageUI\", \"metas/pawnssquare/modules/dat/gameData\", \"metas/pawnssquare/modules/genFunc/genFunc\", \"metas/pawnssquare/modules/dat/enumTypes\"], function (require, exports, uiresources_7, rectUI_7, imageUI_7, gameData_1, genFunc_1, enumTypes_2) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.PiecesImageUI = void 0;\r\n    function isNumber(n) { return !isNaN(parseFloat(n)) && !isNaN(n - 0); }\r\n    var PieceImageUI = /** @class */ (function () {\r\n        function PieceImageUI(rect, userView, ID, type, chessPos) {\r\n            this.rect = rect;\r\n            this.userView = userView;\r\n            this.id = ID;\r\n            this.type = type;\r\n            this.chessPos = chessPos;\r\n            //BLACK PIECES\r\n            if (type === 'p') {\r\n                this.uiImage = new imageUI_7.ImageUI(this.rect, uiresources_7.default.ui_texture.UITexture2, 158, 344, 28, 28, 28, 28, 0, 0);\r\n            }\r\n            else if (type === 'r') {\r\n                this.uiImage = new imageUI_7.ImageUI(this.rect, uiresources_7.default.ui_texture.UITexture2, 128, 344, 28, 28, 28, 28, 0, 0);\r\n            }\r\n            else if (type === 'n') {\r\n                this.uiImage = new imageUI_7.ImageUI(this.rect, uiresources_7.default.ui_texture.UITexture2, 97, 344, 28, 28, 28, 28, 0, 0);\r\n            }\r\n            else if (type === 'b') {\r\n                this.uiImage = new imageUI_7.ImageUI(this.rect, uiresources_7.default.ui_texture.UITexture2, 67, 344, 28, 28, 28, 28, 0, 0);\r\n            }\r\n            else if (type === 'q') {\r\n                this.uiImage = new imageUI_7.ImageUI(this.rect, uiresources_7.default.ui_texture.UITexture2, 37, 344, 28, 28, 28, 28, 0, 0);\r\n            }\r\n            else if (type === 'k') {\r\n                this.uiImage = new imageUI_7.ImageUI(this.rect, uiresources_7.default.ui_texture.UITexture2, 7, 344, 28, 28, 28, 28, 0, 0);\r\n            }\r\n            //WHITE PIECES\r\n            else if (type === 'P') {\r\n                this.uiImage = new imageUI_7.ImageUI(this.rect, uiresources_7.default.ui_texture.UITexture2, 158, 314, 28, 28, 28, 28, 0, 0);\r\n            }\r\n            else if (type === 'R') {\r\n                this.uiImage = new imageUI_7.ImageUI(this.rect, uiresources_7.default.ui_texture.UITexture2, 128, 314, 28, 28, 28, 28, 0, 0);\r\n            }\r\n            else if (type === 'N') {\r\n                this.uiImage = new imageUI_7.ImageUI(this.rect, uiresources_7.default.ui_texture.UITexture2, 97, 314, 28, 28, 28, 28, 0, 0);\r\n            }\r\n            else if (type === 'B') {\r\n                this.uiImage = new imageUI_7.ImageUI(this.rect, uiresources_7.default.ui_texture.UITexture2, 67, 314, 28, 28, 28, 28, 0, 0);\r\n            }\r\n            else if (type === 'Q') {\r\n                this.uiImage = new imageUI_7.ImageUI(this.rect, uiresources_7.default.ui_texture.UITexture2, 37, 314, 28, 28, 28, 28, 0, 0);\r\n            }\r\n            else if (type === 'K') {\r\n                this.uiImage = new imageUI_7.ImageUI(this.rect, uiresources_7.default.ui_texture.UITexture2, 7, 314, 28, 28, 28, 28, 0, 0);\r\n            }\r\n            this.setPos(this.chessPos);\r\n        }\r\n        PieceImageUI.prototype.setPos = function (chessPos) {\r\n            var _XSIZE = 232;\r\n            var _YSIZE = 232;\r\n            var mul = 29;\r\n            var posVect = genFunc_1.genFunc.chessPosToArrPos(chessPos);\r\n            //log('2D PLACEMENT TEST: ', posVect)\r\n            //log('SETPOS_CHECK_USERsTATUS', this.userStatus)\r\n            //if (sceneData.getPlayerData('1') !== undefined) log('SETPOS_CHECKPLAYERDATA', sceneData.getPlayerData('1').p1)\r\n            if (this.userView === 'b') {\r\n                this.uiImage.uiImage.positionX = 1 * (_XSIZE - (posVect.x + 1) * mul);\r\n                this.uiImage.uiImage.positionY = -1 * posVect.z * mul;\r\n            }\r\n            else {\r\n                //this.uiImage.uiImage.positionX = 1 * (_XSIZE - (posVect.x + 1) * mul)\r\n                //this.uiImage.uiImage.positionY = -1 * posVect.z * mul\r\n                //log(this.uiImage.uiImage.positionX, this.uiImage.uiImage.positionY)\r\n                this.uiImage.uiImage.positionX = posVect.x * mul;\r\n                this.uiImage.uiImage.positionY = -1 * (_YSIZE - (posVect.z + 1) * mul);\r\n            }\r\n        };\r\n        return PieceImageUI;\r\n    }());\r\n    //const imageTest1 = new PieceImageUI('1', 'p', 'a1')\r\n    //const imageTest2 = new PieceImageUI('1', 'K', 'e1')\r\n    var PiecesImageUI = /** @class */ (function () {\r\n        function PiecesImageUI(canvas, id) {\r\n            this.piecesSet = new Array(24);\r\n            this.id = id;\r\n            this.rectChessBoard = new rectUI_7.Rect(canvas, 1, Color4.Clear(), -145, -10, 250, 250, 'top', 'right');\r\n            this.rectChessBoard.show();\r\n            this.board2D = new imageUI_7.ImageUI(this.rectChessBoard, uiresources_7.default.ui_texture.UITexture2, 0, 0, 253, 253, 253, 253, -7, 7);\r\n            this.movementMark_1 = new imageUI_7.ImageUI(this.rectChessBoard, uiresources_7.default.ui_texture.UITexture2, 194, 313, 29, 29, 29, 29, -10, 10);\r\n            this.movementMark_1.hide();\r\n            this.movementMark_2 = new imageUI_7.ImageUI(this.rectChessBoard, uiresources_7.default.ui_texture.UITexture2, 194, 313, 29, 29, 29, 29, -50, 10);\r\n            this.movementMark_2.hide();\r\n            //log('2D BOARD FEN: ', this.currentFen)\r\n        }\r\n        PiecesImageUI.prototype.getPos = function (chessPos) {\r\n            var _XSIZE = 232;\r\n            var _YSIZE = 232;\r\n            var mul = 29;\r\n            var posVect = genFunc_1.genFunc.chessPosToArrPos(chessPos);\r\n            var pos = {\r\n                x: undefined,\r\n                y: undefined\r\n            };\r\n            if (this.userView === 'b') {\r\n                pos.x = 1 * (_XSIZE - (posVect.x + 1) * mul);\r\n                pos.y = -1 * posVect.z * mul;\r\n            }\r\n            else {\r\n                pos.x = posVect.x * mul;\r\n                pos.y = -1 * (_YSIZE - (posVect.z + 1) * mul);\r\n            }\r\n            return pos;\r\n        };\r\n        PiecesImageUI.prototype.setupPieces = function (_userView) {\r\n            this.clear2DBoard();\r\n            if (_userView === enumTypes_2.PlayerStatus.Black)\r\n                this.userView = 'b';\r\n            else\r\n                this.userView = 'w';\r\n            this.currentFen = gameData_1.gameDat.getGameData().gameplay.fen;\r\n            //reading FEN notation\r\n            var idx = 0;\r\n            var col = 'a'.charCodeAt(0);\r\n            var row = 1;\r\n            var loadRow = this.currentFen.split(\" \")[0].split(\"/\");\r\n            for (var i = 0; i < 8; i++) {\r\n                var offset = 0;\r\n                var jx = 0;\r\n                //log(loadRow[7 - i])\r\n                for (var j = 0; j < loadRow[7 - i].length; j++) {\r\n                    var pcType = loadRow[7 - i][j];\r\n                    if (isNumber(pcType)) {\r\n                        for (var k = 0; k < Number(pcType); k++) {\r\n                            //log('number loop: ', k)\r\n                        }\r\n                        offset = Number(pcType);\r\n                        jx += offset;\r\n                    }\r\n                    else {\r\n                        var chessPos = String.fromCharCode(jx + col) + (row + i).toString();\r\n                        //log('2D BOARD DATA: ', idx, pcType, chessPos)\r\n                        jx += 1;\r\n                        this.piecesSet[idx] = new PieceImageUI(this.rectChessBoard, this.userView, idx, pcType, chessPos);\r\n                        this.piecesSet[idx].uiImage.show();\r\n                        idx += 1;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        PiecesImageUI.prototype.clear2DBoard = function () {\r\n            for (var i = 0; i < this.piecesSet.length; i++) {\r\n                if (this.piecesSet[i] !== undefined)\r\n                    this.piecesSet[i].uiImage.hide();\r\n            }\r\n            this.piecesSet = new Array(24);\r\n            this.movementMark_1.hide();\r\n            this.movementMark_2.hide();\r\n        };\r\n        PiecesImageUI.prototype.searchPieceIdx = function (chessPos) {\r\n            for (var i = 0; i < this.piecesSet.length; i++) {\r\n                if (this.piecesSet[i].chessPos === chessPos) {\r\n                    return i;\r\n                }\r\n            }\r\n            return undefined;\r\n        };\r\n        PiecesImageUI.prototype.updateLocPieces = function (originType, originChessPos, targetType, targetChessPos, removeChessPos) {\r\n            var timeMoveStart = 0;\r\n            var timeMoveEnd = 0;\r\n            timeMoveStart = Date.now();\r\n            this.currentFen = gameData_1.gameDat.getGameData().gameplay.fen;\r\n            try {\r\n                this.movementMark_1.show();\r\n                this.movementMark_2.show();\r\n                var originIdx = this.searchPieceIdx(originChessPos);\r\n                var pos1 = this.getPos(originChessPos);\r\n                this.movementMark_1.changePos(pos1.x, pos1.y);\r\n                var pos2 = this.getPos(targetChessPos);\r\n                this.movementMark_2.changePos(pos2.x, pos2.y);\r\n                /*\r\n                let posX2 = this.piecesSet[targetIdx].uiImage.uiImage.positionX\r\n                let posY2 = this.piecesSet[targetIdx].uiImage.uiImage.positionY\r\n                */\r\n                if (originIdx !== undefined) {\r\n                    if (removeChessPos !== undefined) {\r\n                        var idxRemove = this.searchPieceIdx(removeChessPos);\r\n                        //log('remove 2D piece: ', this.piecesSet[idxRemove].type, this.piecesSet[idxRemove].chessPos)\r\n                        this.piecesSet[idxRemove].chessPos = undefined;\r\n                        this.piecesSet[idxRemove].uiImage.hide();\r\n                    }\r\n                    if (originType === targetType) {\r\n                        this.piecesSet[originIdx].setPos(targetChessPos);\r\n                        this.piecesSet[originIdx].chessPos = targetChessPos;\r\n                    }\r\n                    else if (originType !== targetType) {\r\n                        this.piecesSet[originIdx].uiImage.hide();\r\n                        this.piecesSet[originIdx] = new PieceImageUI(this.rectChessBoard, this.userView, originIdx, targetType, targetChessPos);\r\n                    }\r\n                }\r\n                timeMoveEnd = Date.now();\r\n                log('TIME TO MOVE UI: ', timeMoveEnd - timeMoveStart, 'ms');\r\n            }\r\n            catch (_a) {\r\n                this.setupPieces(gameData_1.userDat.getInGameStatus());\r\n            }\r\n        };\r\n        return PiecesImageUI;\r\n    }());\r\n    exports.PiecesImageUI = PiecesImageUI;\r\n});\r\ndefine(\"metas/pawnssquare/modules/UI/GameModuleUI/notificationUI\", [\"require\", \"exports\", \"metas/pawnssquare/modules/resources/uiresources\", \"metas/pawnssquare/modules/UI/BasicUI/rectUI\", \"metas/pawnssquare/modules/UI/BasicUI/imageUI\", \"metas/pawnssquare/modules/UI/BasicUI/textUI\", \"metas/pawnssquare/modules/UI/controllerUIEvent\"], function (require, exports, uiresources_8, rectUI_8, imageUI_8, textUI_5, controllerUIEvent_4) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.NotificationUI = void 0;\r\n    var NotificationUI = /** @class */ (function () {\r\n        function NotificationUI(canvas, UIEvents) {\r\n            var _this = this;\r\n            this.UIEvents = UIEvents;\r\n            this.rectNotif = new rectUI_8.Rect(canvas, 1, Color4.Clear(), 0, 0, 0, 0, 'top', 'center');\r\n            this.rectNotif.show();\r\n            this.loadingScene = new imageUI_8.ImageUI(this.rectNotif, uiresources_8.default.ui_texture.UITexture1, 0, 0, 512, 185, 512, 185, -300, -30);\r\n            this.loadingScene.hide();\r\n            this.loadingScene_1 = new imageUI_8.ImageUI(this.rectNotif, uiresources_8.default.ui_texture.UITexture1, 4, 478, 212, 27, 212, 27, -150, 0);\r\n            this.loadingScene_1.hide();\r\n            this.notificationBg = new imageUI_8.ImageUI(this.rectNotif, uiresources_8.default.ui_texture.UITexture1, 0, 186, 512, 127, 512, 127, -300, -20);\r\n            this.notificationBg.hide();\r\n            this.lookingOpponent = new textUI_5.TextUI(this.rectNotif, '', new Color4(56 / 150, 40 / 150, 28 / 150, 1), 35, -250, -40);\r\n            this.lookingOpponent.uiText.outlineColor = new Color4(56 / 150, 40 / 150, 28 / 150, 1);\r\n            this.lookingOpponent.uiText.outlineWidth = 0.5;\r\n            this.lookingOpponent.uiText.lineSpacing = 4;\r\n            this.lookingOpponent.hide();\r\n            this.waitingOpponent = new imageUI_8.ImageUI(this.rectNotif, uiresources_8.default.ui_texture.UITexture1, 5, 354, 500, 72, 500, 72, -290, -45);\r\n            this.waitingOpponent.hide();\r\n            this.waitingCloseBtn = new imageUI_8.ImageUI(this.rectNotif, uiresources_8.default.ui_texture.UITexture5, 0, 285, 42, 42, 42, 42, -50, -150);\r\n            this.waitingCloseBtn.hide();\r\n            this.gameReady = new imageUI_8.ImageUI(this.rectNotif, uiresources_8.default.ui_texture.UITexture1, 6, 314, 355, 35, 355, 35, -242, -45);\r\n            this.gameReady.hide();\r\n            this.gameReady_1 = new imageUI_8.ImageUI(this.rectNotif, uiresources_8.default.ui_texture.UITexture1, 248, 475, 199, 32, 199, 32, -144, -95);\r\n            this.gameReady_1.hide();\r\n            this.youWin = new imageUI_8.ImageUI(this.rectNotif, uiresources_8.default.ui_texture.UITexture3, 1, 7, 343, 60, 343, 60, -240, -55);\r\n            this.youWin.hide();\r\n            this.youLose = new imageUI_8.ImageUI(this.rectNotif, uiresources_8.default.ui_texture.UITexture3, 1, 67, 375, 60, 375, 60, -250, -55);\r\n            this.youLose.hide();\r\n            this.whiteWin = new imageUI_8.ImageUI(this.rectNotif, uiresources_8.default.ui_texture.UITexture3, 1, 130, 423, 60, 423, 60, -275, -55);\r\n            this.whiteWin.hide();\r\n            this.blackWin = new imageUI_8.ImageUI(this.rectNotif, uiresources_8.default.ui_texture.UITexture3, 1, 190, 423, 60, 423, 60, -275, -55);\r\n            this.blackWin.hide();\r\n            this.draw = new imageUI_8.ImageUI(this.rectNotif, uiresources_8.default.ui_texture.UITexture3, 1, 248, 218, 60, 218, 60, -170, -55);\r\n            this.draw.hide();\r\n            //result note\r\n            this.noteWhiteResign = new imageUI_8.ImageUI(this.rectNotif, uiresources_8.default.ui_texture.UITexture3, 4, 311, 227, 30, 227, 30, -150, -150);\r\n            this.noteWhiteResign.hide();\r\n            this.noteBlackResign = new imageUI_8.ImageUI(this.rectNotif, uiresources_8.default.ui_texture.UITexture3, 4, 345, 223, 30, 223, 30, -150, -150);\r\n            this.noteBlackResign.hide();\r\n            this.noteDrawAgreement = new imageUI_8.ImageUI(this.rectNotif, uiresources_8.default.ui_texture.UITexture3, 238, 311, 238, 30, 238, 30, -150, -150);\r\n            this.noteDrawAgreement.hide();\r\n            this.noteDrawRepetition = new imageUI_8.ImageUI(this.rectNotif, uiresources_8.default.ui_texture.UITexture3, 238, 345, 228, 30, 228, 30, -150, -150);\r\n            this.noteDrawRepetition.hide();\r\n            this.noteDrawStalemate = new imageUI_8.ImageUI(this.rectNotif, uiresources_8.default.ui_texture.UITexture3, 4, 380, 228, 30, 228, 30, -150, -150);\r\n            this.noteDrawStalemate.hide();\r\n            this.noteDrawInsufMaterial = new imageUI_8.ImageUI(this.rectNotif, uiresources_8.default.ui_texture.UITexture3, 4, 411, 423, 30, 423, 30, -250, -150);\r\n            this.noteDrawInsufMaterial.hide();\r\n            //on click event\r\n            this.waitingCloseBtn.uiImage.onClick = new OnClick(function () {\r\n                _this.UIEvents.fireEvent(new controllerUIEvent_4.WaitingClose());\r\n            });\r\n        }\r\n        return NotificationUI;\r\n    }());\r\n    exports.NotificationUI = NotificationUI;\r\n});\r\ndefine(\"metas/pawnssquare/modules/UI/UIData\", [\"require\", \"exports\", \"metas/pawnssquare/modules/UI/GameModuleUI/menuUI\", \"metas/pawnssquare/modules/UI/GameModuleUI/gamePlayUI\", \"metas/pawnssquare/modules/UI/GameModuleUI/notationUI\", \"metas/pawnssquare/modules/UI/GameModuleUI/timerUI\", \"metas/pawnssquare/modules/UI/GameModuleUI/promotionUI\", \"metas/pawnssquare/modules/UI/GameModuleUI/statusUI\", \"metas/pawnssquare/modules/UI/GameModuleUI/chessBoardUI\", \"metas/pawnssquare/modules/UI/GameModuleUI/notificationUI\", \"metas/pawnssquare/modules/genFunc/genFunc\"], function (require, exports, menuUI_1, gamePlayUI_1, notationUI_1, timerUI_1, promotionUI_1, statusUI_1, chessBoardUI_1, notificationUI_1, genFunc_2) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.UIData = void 0;\r\n    var UIData = /** @class */ (function () {\r\n        function UIData(ID, userData, UIEvents) {\r\n            this.rectUiBL = new UIContainerRect(UIData.canvas);\r\n            this.rectUiBL.positionX = 0;\r\n            this.rectUiBL.positionY = 0;\r\n            this.rectUiBL.vAlign = 'bottom';\r\n            this.rectUiBL.hAlign = 'left';\r\n            this.rectUiBL.adaptHeight = true;\r\n            this.rectUiBL.adaptWidth = true;\r\n            this.rectUiTL = new UIContainerRect(UIData.canvas);\r\n            this.rectUiTL.positionX = 0;\r\n            this.rectUiTL.positionY = 0;\r\n            this.rectUiTL.vAlign = 'top';\r\n            this.rectUiTL.hAlign = 'left';\r\n            this.rectUiTL.adaptHeight = true;\r\n            this.rectUiTL.adaptWidth = true;\r\n            this.rectUiTR = new UIContainerRect(UIData.canvas);\r\n            this.rectUiTR.positionX = 0;\r\n            this.rectUiTR.positionY = 0;\r\n            this.rectUiTR.vAlign = 'top';\r\n            this.rectUiTR.hAlign = 'right';\r\n            this.rectUiTR.adaptHeight = true;\r\n            this.rectUiTR.adaptWidth = true;\r\n            this.rectUiTC = new UIContainerRect(UIData.canvas);\r\n            this.rectUiTC.positionX = 0;\r\n            this.rectUiTC.positionY = 0;\r\n            this.rectUiTC.vAlign = 'top';\r\n            this.rectUiTC.hAlign = 'center';\r\n            this.rectUiTC.adaptHeight = true;\r\n            this.rectUiTC.adaptWidth = true;\r\n            this.rectUiBC = new UIContainerRect(UIData.canvas);\r\n            this.rectUiBC.positionX = 0;\r\n            this.rectUiBC.positionY = 0;\r\n            this.rectUiBC.vAlign = 'bottom';\r\n            this.rectUiBC.hAlign = 'left';\r\n            this.rectUiBC.adaptHeight = true;\r\n            this.rectUiBC.adaptWidth = true;\r\n            this.cam = Camera.instance;\r\n            this.ID = ID;\r\n            this.UIPivot = new Vector3(8, 0, 8);\r\n            this.userData = userData;\r\n            this.UIEvents = UIEvents;\r\n            this.UIObjects = {\r\n                notificationUI: new notificationUI_1.NotificationUI(this.rectUiTC, this.UIEvents),\r\n                timerUI: new timerUI_1.TimerUI(this.rectUiBL, this.userData, this.UIEvents),\r\n                chessBoard2D: new chessBoardUI_1.PiecesImageUI(this.rectUiTR, this.ID),\r\n                statusUI: new statusUI_1.StatusUI(this.rectUiTR),\r\n                notationUI: new notationUI_1.NotationUI(this.rectUiBL),\r\n                gamePlayUI: new gamePlayUI_1.GamePlayUI(this.rectUiBL, this.userData, this.UIEvents),\r\n                menuUI: new menuUI_1.MenuUI(this.rectUiTL, this.rectUiTC, this.UIEvents),\r\n                promotionUI: new promotionUI_1.PromotionUI(this.rectUiTC, this.userData, this.UIEvents)\r\n            };\r\n            engine.addSystem(this);\r\n        }\r\n        UIData.prototype.update = function (dt) {\r\n            if (genFunc_2.genFunc.isInBorder(this.UIPivot)) {\r\n                this.rectUiBL.visible = true;\r\n                this.rectUiTL.visible = true;\r\n                this.rectUiTC.visible = true;\r\n                this.rectUiTR.visible = true;\r\n                this.rectUiBC.visible = true;\r\n            }\r\n            else {\r\n                this.rectUiBL.visible = false;\r\n                this.rectUiTL.visible = false;\r\n                this.rectUiTC.visible = false;\r\n                this.rectUiTR.visible = false;\r\n                this.rectUiBC.visible = false;\r\n            }\r\n            /*\r\n            let relPosToCenter = this.cam.position.subtract(this.UIPivot)\r\n    \n            if (relPosToCenter.x < -7 || relPosToCenter.x > 7\r\n                || relPosToCenter.z < -7 || relPosToCenter.z > 7\r\n                || relPosToCenter.y < -1 || relPosToCenter.y > 4\r\n            ) {\r\n                //log('UI visible false')\r\n                this.rectUiBL.visible = false\r\n                this.rectUiTL.visible = false\r\n                this.rectUiTC.visible = false\r\n                this.rectUiTR.visible = false\r\n                this.rectUiBC.visible = false\r\n            }\r\n            else {\r\n                //log('UI visible true')\r\n                this.rectUiBL.visible = true\r\n                this.rectUiTL.visible = true\r\n                this.rectUiTC.visible = true\r\n                this.rectUiTR.visible = true\r\n                this.rectUiBC.visible = true\r\n            }\r\n            */\r\n        };\r\n        UIData.canvas = new UICanvas();\r\n        return UIData;\r\n    }());\r\n    exports.UIData = UIData;\r\n});\r\ndefine(\"metas/pawnssquare/modules/UI/controllerUIEvent\", [\"require\", \"exports\", \"metas/pawnssquare/modules/dat/gameData\", \"metas/pawnssquare/modules/genFunc/genFunc\", \"metas/pawnssquare/modules/dat/enumTypes\"], function (require, exports, gameData_2, genFunc_3, enumTypes_3) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.UIEventReceiver = exports.UIGamePlayEvent = exports.NotationMovementEvent = exports.Init2DBoardEvent = exports.UI2DBoardEvent = exports.UIPromotionEvent = exports.UINotificationEvent = exports.WaitingClose = exports.UISyncEvent = void 0;\r\n    var UISyncEvent = /** @class */ (function () {\r\n        function UISyncEvent() {\r\n        }\r\n        UISyncEvent = __decorate([\r\n            EventConstructor(),\r\n            __metadata(\"design:paramtypes\", [])\r\n        ], UISyncEvent);\r\n        return UISyncEvent;\r\n    }());\r\n    exports.UISyncEvent = UISyncEvent;\r\n    var WaitingClose = /** @class */ (function () {\r\n        function WaitingClose() {\r\n        }\r\n        WaitingClose = __decorate([\r\n            EventConstructor(),\r\n            __metadata(\"design:paramtypes\", [])\r\n        ], WaitingClose);\r\n        return WaitingClose;\r\n    }());\r\n    exports.WaitingClose = WaitingClose;\r\n    var UINotificationEvent = /** @class */ (function () {\r\n        function UINotificationEvent(uiType, swHd, data) {\r\n            this.uiType = uiType;\r\n            this.swHd = swHd;\r\n            this.data = data;\r\n        }\r\n        UINotificationEvent = __decorate([\r\n            EventConstructor(),\r\n            __metadata(\"design:paramtypes\", [String, Boolean, String])\r\n        ], UINotificationEvent);\r\n        return UINotificationEvent;\r\n    }());\r\n    exports.UINotificationEvent = UINotificationEvent;\r\n    var UIPromotionEvent = /** @class */ (function () {\r\n        function UIPromotionEvent(uiType, pieceType) {\r\n            this.uiType = uiType;\r\n            this.pieceType = pieceType;\r\n        }\r\n        UIPromotionEvent = __decorate([\r\n            EventConstructor(),\r\n            __metadata(\"design:paramtypes\", [String, String])\r\n        ], UIPromotionEvent);\r\n        return UIPromotionEvent;\r\n    }());\r\n    exports.UIPromotionEvent = UIPromotionEvent;\r\n    var UI2DBoardEvent = /** @class */ (function () {\r\n        function UI2DBoardEvent(uiType, originType, originChessPos, targetType, targetChessPos, removeChessPos) {\r\n            this.uiType = uiType;\r\n            this.originType = originType;\r\n            this.originChessPos = originChessPos;\r\n            this.targetType = targetType;\r\n            this.targetChessPos = targetChessPos;\r\n            this.removeChessPos = removeChessPos;\r\n        }\r\n        UI2DBoardEvent = __decorate([\r\n            EventConstructor(),\r\n            __metadata(\"design:paramtypes\", [String, String, String, String, String, String])\r\n        ], UI2DBoardEvent);\r\n        return UI2DBoardEvent;\r\n    }());\r\n    exports.UI2DBoardEvent = UI2DBoardEvent;\r\n    var Init2DBoardEvent = /** @class */ (function () {\r\n        function Init2DBoardEvent(uiType, userStatus) {\r\n            this.uiType = uiType;\r\n            this.userStatus = userStatus;\r\n        }\r\n        Init2DBoardEvent = __decorate([\r\n            EventConstructor(),\r\n            __metadata(\"design:paramtypes\", [String, Number])\r\n        ], Init2DBoardEvent);\r\n        return Init2DBoardEvent;\r\n    }());\r\n    exports.Init2DBoardEvent = Init2DBoardEvent;\r\n    var NotationMovementEvent = /** @class */ (function () {\r\n        function NotationMovementEvent(uiType, sanMovement) {\r\n            this.uiType = uiType;\r\n            this.sanMovement = sanMovement;\r\n        }\r\n        NotationMovementEvent = __decorate([\r\n            EventConstructor(),\r\n            __metadata(\"design:paramtypes\", [String, String])\r\n        ], NotationMovementEvent);\r\n        return NotationMovementEvent;\r\n    }());\r\n    exports.NotationMovementEvent = NotationMovementEvent;\r\n    var UIGamePlayEvent = /** @class */ (function () {\r\n        function UIGamePlayEvent(uiType, eventType) {\r\n            this.uiType = uiType;\r\n            this.eventType = eventType;\r\n        }\r\n        UIGamePlayEvent = __decorate([\r\n            EventConstructor(),\r\n            __metadata(\"design:paramtypes\", [String, String])\r\n        ], UIGamePlayEvent);\r\n        return UIGamePlayEvent;\r\n    }());\r\n    exports.UIGamePlayEvent = UIGamePlayEvent;\r\n    var UIEventReceiver = /** @class */ (function () {\r\n        function UIEventReceiver(UID, UIEvents, uiData) {\r\n            var _this = this;\r\n            this.UID = UID;\r\n            this.UIEvents = UIEvents;\r\n            this.uiData = uiData;\r\n            this.UIEvents.addListener(UINotificationEvent, null, function (_a) {\r\n                var uiType = _a.uiType, swHd = _a.swHd, data = _a.data;\r\n                //log(\"UIlistener RECEIVE SOMETHING\", uiType, swHd, ID)\r\n                if (uiType === 'showSync') {\r\n                    if (swHd) {\r\n                        _this.uiData.UIObjects.menuUI.syncBtn.show();\r\n                    }\r\n                    else {\r\n                        _this.uiData.UIObjects.menuUI.syncBtn.hide();\r\n                    }\r\n                }\r\n                if (uiType === 'loadingScene') {\r\n                    if (swHd) {\r\n                        //log(\"show loading scene UI\")\r\n                        _this.uiData.UIObjects.notificationUI.loadingScene.show();\r\n                        _this.uiData.UIObjects.notificationUI.loadingScene_1.show();\r\n                        _this.uiData.UIObjects.notificationUI.loadingScene.rect.show();\r\n                    }\r\n                    else {\r\n                        //log(\"hide loading scene UI\")\r\n                        _this.uiData.UIObjects.notificationUI.loadingScene.hide();\r\n                        _this.uiData.UIObjects.notificationUI.loadingScene_1.hide();\r\n                        _this.uiData.UIObjects.notificationUI.loadingScene.rect.hide();\r\n                    }\r\n                }\r\n                if (uiType === 'waitingOpponent') {\r\n                    //if (uiType === '----------') {\r\n                    if (swHd) {\r\n                        //log(\"show waiting player UI\")\r\n                        _this.uiData.UIObjects.notificationUI.notificationBg.show();\r\n                        _this.uiData.UIObjects.notificationUI.waitingOpponent.show();\r\n                        _this.uiData.UIObjects.notificationUI.waitingCloseBtn.show();\r\n                        _this.uiData.UIObjects.notificationUI.waitingOpponent.rect.show();\r\n                    }\r\n                    else {\r\n                        //log(\"hide waiting player UI\")\r\n                        _this.uiData.UIObjects.notificationUI.notificationBg.hide();\r\n                        _this.uiData.UIObjects.notificationUI.waitingOpponent.hide();\r\n                        _this.uiData.UIObjects.notificationUI.waitingCloseBtn.hide();\r\n                        _this.uiData.UIObjects.notificationUI.waitingOpponent.rect.hide();\r\n                    }\r\n                }\r\n                if (uiType === 'lookingOpponent') {\r\n                    if (swHd) {\r\n                        var opponent = (function () {\r\n                            var players = gameData_2.gameDat.getPlayer();\r\n                            if (players.b !== undefined)\r\n                                return players.b;\r\n                            else if (players.w !== undefined)\r\n                                return players.w;\r\n                        })();\r\n                        _this.uiData.UIObjects.notificationUI.notificationBg.show();\r\n                        _this.uiData.UIObjects.notificationUI.lookingOpponent.changeText(opponent + \"\\nlooking for opponent!\");\r\n                        _this.uiData.UIObjects.notificationUI.lookingOpponent.show();\r\n                        _this.uiData.UIObjects.notificationUI.waitingOpponent.rect.show();\r\n                    }\r\n                    else {\r\n                        _this.uiData.UIObjects.notificationUI.notificationBg.hide();\r\n                        _this.uiData.UIObjects.notificationUI.lookingOpponent.changeText('');\r\n                        _this.uiData.UIObjects.notificationUI.lookingOpponent.hide();\r\n                        _this.uiData.UIObjects.notificationUI.waitingOpponent.rect.hide();\r\n                    }\r\n                }\r\n                if (uiType === 'gameReady') {\r\n                    //if (uiType === '----------') {\r\n                    if (swHd) {\r\n                        //log(\"show loading game ready UI\")\r\n                        _this.uiData.UIObjects.notificationUI.notificationBg.show();\r\n                        _this.uiData.UIObjects.notificationUI.gameReady.show();\r\n                        _this.uiData.UIObjects.notificationUI.gameReady_1.show();\r\n                        _this.uiData.UIObjects.notificationUI.gameReady.rect.show();\r\n                    }\r\n                    else {\r\n                        //log(\"hide loading game ready UI\")\r\n                        _this.uiData.UIObjects.notificationUI.gameReady.rect.hide();\r\n                        _this.uiData.UIObjects.notificationUI.notificationBg.hide();\r\n                        _this.uiData.UIObjects.notificationUI.gameReady.hide();\r\n                        _this.uiData.UIObjects.notificationUI.gameReady_1.hide();\r\n                    }\r\n                }\r\n                if (uiType === 'updateName') {\r\n                    var players = gameData_2.gameDat.getPlayer();\r\n                    if (swHd) {\r\n                        if (players.b !== undefined) {\r\n                            _this.uiData.UIObjects.timerUI.blackNameUI.changeText(players.b);\r\n                            _this.uiData.UIObjects.timerUI.blackTimerUI.changeColor(new Color4(235 / 255, 255 / 255, 240 / 255, 1));\r\n                        }\r\n                        else {\r\n                            _this.uiData.UIObjects.timerUI.blackNameUI.changeText('        ---');\r\n                            _this.uiData.UIObjects.timerUI.blackTimerUI.changeColor(Color4.Gray());\r\n                        }\r\n                        if (players.w !== undefined) {\r\n                            _this.uiData.UIObjects.timerUI.whiteNameUI.changeText(players.w);\r\n                            _this.uiData.UIObjects.timerUI.whiteTimerUI.changeColor(new Color4(235 / 255, 255 / 255, 240 / 255, 1));\r\n                        }\r\n                        else {\r\n                            _this.uiData.UIObjects.timerUI.whiteNameUI.changeText('        ---');\r\n                            _this.uiData.UIObjects.timerUI.whiteTimerUI.changeColor(Color4.Gray());\r\n                        }\r\n                    }\r\n                }\r\n                if (uiType === 'userTimerBg') {\r\n                    var players = gameData_2.gameDat.getPlayer();\r\n                    if (swHd) {\r\n                        if (UID === players.b) {\r\n                            _this.uiData.UIObjects.timerUI.blackNameUI.changeColor(Color4.Yellow());\r\n                            _this.uiData.UIObjects.timerUI.whiteNameUI.changeColor(Color4.Gray());\r\n                        }\r\n                        else if (UID === players.w) {\r\n                            _this.uiData.UIObjects.timerUI.whiteNameUI.changeColor(Color4.Yellow());\r\n                            _this.uiData.UIObjects.timerUI.blackNameUI.changeColor(Color4.Gray());\r\n                        }\r\n                        else {\r\n                            _this.uiData.UIObjects.timerUI.blackNameUI.changeColor(Color4.Gray());\r\n                            _this.uiData.UIObjects.timerUI.whiteNameUI.changeColor(Color4.Gray());\r\n                        }\r\n                    }\r\n                    else {\r\n                        _this.uiData.UIObjects.timerUI.blackNameUI.changeColor(Color4.Gray());\r\n                        _this.uiData.UIObjects.timerUI.whiteNameUI.changeColor(Color4.Gray());\r\n                    }\r\n                }\r\n                if (uiType === 'gameBtnUI') {\r\n                    if (swHd) {\r\n                        //log(\"<UI>_show game Button UI\")\r\n                        _this.uiData.UIObjects.gamePlayUI.rectGameBtn.show();\r\n                    }\r\n                    else {\r\n                        //log(\"<UI>_hide loading scene UI\")\r\n                        _this.uiData.UIObjects.gamePlayUI.rectGameBtn.hide();\r\n                        _this.uiData.UIObjects.gamePlayUI.rectDrawAcc.hide();\r\n                        _this.uiData.UIObjects.gamePlayUI.rectDrawConf.hide();\r\n                        _this.uiData.UIObjects.gamePlayUI.rectResignConf.hide();\r\n                    }\r\n                }\r\n                if (uiType === 'updateTimer') {\r\n                    if (swHd) {\r\n                        _this.uiData.UIObjects.timerUI.whiteTimerUI.changeText(genFunc_3.genFunc.secToMinSec(gameData_2.gameDat.getTimeData().w));\r\n                        _this.uiData.UIObjects.timerUI.blackTimerUI.changeText(genFunc_3.genFunc.secToMinSec(gameData_2.gameDat.getTimeData().b));\r\n                        var turnStatus = void 0;\r\n                        if (gameData_2.gameDat.getGamePlay().turn === 'w')\r\n                            turnStatus = enumTypes_3.PlayerStatus.White;\r\n                        if (gameData_2.gameDat.getGamePlay().turn === 'b')\r\n                            turnStatus = enumTypes_3.PlayerStatus.Black;\r\n                        var userStatus = gameData_2.userDat.getInGameStatus();\r\n                        if (userStatus === enumTypes_3.PlayerStatus.Spectator || userStatus === enumTypes_3.PlayerStatus.WhiteAndBlack) {\r\n                            if (turnStatus === enumTypes_3.PlayerStatus.White) {\r\n                                _this.uiData.UIObjects.timerUI.whiteTimerUI.changeColor(new Color4(255 / 255, 102 / 255, 37 / 255, 1));\r\n                                _this.uiData.UIObjects.timerUI.blackTimerUI.changeColor(new Color4(235 / 255, 255 / 255, 240 / 255, 1));\r\n                            }\r\n                            else if (turnStatus === enumTypes_3.PlayerStatus.Black) {\r\n                                _this.uiData.UIObjects.timerUI.whiteTimerUI.changeColor(new Color4(235 / 255, 255 / 255, 240 / 255, 1));\r\n                                _this.uiData.UIObjects.timerUI.blackTimerUI.changeColor(new Color4(255 / 255, 102 / 255, 37 / 255, 1));\r\n                            }\r\n                        }\r\n                        else if (userStatus === enumTypes_3.PlayerStatus.White) {\r\n                            if (turnStatus === enumTypes_3.PlayerStatus.White) {\r\n                                _this.uiData.UIObjects.timerUI.whiteTimerUI.changeColor(new Color4(255 / 255, 102 / 255, 37 / 255, 1));\r\n                                _this.uiData.UIObjects.timerUI.blackTimerUI.changeColor(new Color4(235 / 255, 255 / 255, 240 / 255, 1));\r\n                            }\r\n                            else if (turnStatus === enumTypes_3.PlayerStatus.Black) {\r\n                                _this.uiData.UIObjects.timerUI.whiteTimerUI.changeColor(new Color4(235 / 255, 255 / 255, 240 / 255, 1));\r\n                                _this.uiData.UIObjects.timerUI.blackTimerUI.changeColor(new Color4(255 / 255, 190 / 255, 140 / 255, 1));\r\n                            }\r\n                        }\r\n                        else if (userStatus === enumTypes_3.PlayerStatus.Black) {\r\n                            if (turnStatus === enumTypes_3.PlayerStatus.White) {\r\n                                _this.uiData.UIObjects.timerUI.whiteTimerUI.changeColor(new Color4(255 / 255, 190 / 255, 140 / 255, 1));\r\n                                _this.uiData.UIObjects.timerUI.blackTimerUI.changeColor(new Color4(235 / 255, 255 / 255, 240 / 255, 1));\r\n                            }\r\n                            else if (turnStatus === enumTypes_3.PlayerStatus.Black) {\r\n                                _this.uiData.UIObjects.timerUI.whiteTimerUI.changeColor(new Color4(235 / 255, 255 / 255, 240 / 255, 1));\r\n                                _this.uiData.UIObjects.timerUI.blackTimerUI.changeColor(new Color4(255 / 255, 102 / 255, 37 / 255, 1));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (uiType === 'resultUI') {\r\n                    var result = gameData_2.gameDat.getResult().result;\r\n                    var note = gameData_2.gameDat.getResult().note;\r\n                    //log('RESULT EVENT FIRED', swHd, result, note)\r\n                    var UITarget = undefined;\r\n                    var noteUITarget = undefined;\r\n                    if (gameData_2.userDat.getInGameStatus() === enumTypes_3.PlayerStatus.Black) {\r\n                        if (result === 'b') {\r\n                            UITarget = _this.uiData.UIObjects.notificationUI.youWin;\r\n                        }\r\n                        else if (result === 'w') {\r\n                            UITarget = _this.uiData.UIObjects.notificationUI.youLose;\r\n                        }\r\n                        else if (result === 'd') {\r\n                            UITarget = _this.uiData.UIObjects.notificationUI.draw;\r\n                        }\r\n                    }\r\n                    else if (gameData_2.userDat.getInGameStatus() === enumTypes_3.PlayerStatus.White) {\r\n                        if (result === 'b') {\r\n                            UITarget = _this.uiData.UIObjects.notificationUI.youLose;\r\n                        }\r\n                        else if (result === 'w') {\r\n                            UITarget = _this.uiData.UIObjects.notificationUI.youWin;\r\n                        }\r\n                        else if (result === 'd') {\r\n                            UITarget = _this.uiData.UIObjects.notificationUI.draw;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (result === 'w') {\r\n                            UITarget = _this.uiData.UIObjects.notificationUI.whiteWin;\r\n                        }\r\n                        else if (result === 'b') {\r\n                            UITarget = _this.uiData.UIObjects.notificationUI.blackWin;\r\n                        }\r\n                        else if (result === 'd') {\r\n                            UITarget = _this.uiData.UIObjects.notificationUI.draw;\r\n                        }\r\n                    }\r\n                    if (note === 'STALEMATE') {\r\n                        noteUITarget = _this.uiData.UIObjects.notificationUI.noteDrawStalemate;\r\n                    }\r\n                    else if (note === 'AGREEMENT') {\r\n                        noteUITarget = _this.uiData.UIObjects.notificationUI.noteDrawAgreement;\r\n                    }\r\n                    else if (note === 'REPETITION') {\r\n                        noteUITarget = _this.uiData.UIObjects.notificationUI.noteDrawRepetition;\r\n                    }\r\n                    else if (note === 'MATERIAL') {\r\n                        noteUITarget = _this.uiData.UIObjects.notificationUI.noteDrawInsufMaterial;\r\n                    }\r\n                    else if (note === 'WHITE RESIGN') {\r\n                        noteUITarget = _this.uiData.UIObjects.notificationUI.noteWhiteResign;\r\n                    }\r\n                    else if (note === 'BLACK RESIGN') {\r\n                        noteUITarget = _this.uiData.UIObjects.notificationUI.noteBlackResign;\r\n                    }\r\n                    if (swHd) {\r\n                        _this.uiData.UIObjects.notificationUI.notificationBg.show();\r\n                        _this.uiData.UIObjects.notificationUI.rectNotif.show();\r\n                        if (noteUITarget !== undefined)\r\n                            noteUITarget.show();\r\n                        if (UITarget !== undefined)\r\n                            UITarget.show();\r\n                    }\r\n                    else {\r\n                        if (UITarget !== undefined)\r\n                            UITarget.hide();\r\n                        if (noteUITarget !== undefined)\r\n                            noteUITarget.hide();\r\n                        _this.uiData.UIObjects.notificationUI.notificationBg.hide();\r\n                        _this.uiData.UIObjects.notificationUI.rectNotif.hide();\r\n                        _this.uiData.UIObjects.promotionUI.rectPromotion.hide();\r\n                    }\r\n                }\r\n                if (uiType === 'drawAccUI') {\r\n                    if (swHd) {\r\n                        //log(\"<UI>_draw offer from opponent\")\r\n                        _this.uiData.UIObjects.gamePlayUI.rectDrawAcc.show();\r\n                        _this.uiData.UIObjects.gamePlayUI.rectDrawConf.hide();\r\n                        _this.uiData.UIObjects.gamePlayUI.rectResignConf.hide();\r\n                    }\r\n                    else {\r\n                        //log(\"<UI>_remove draw offer from opponent\")\r\n                        _this.uiData.UIObjects.gamePlayUI.rectDrawAcc.hide();\r\n                    }\r\n                }\r\n                if (uiType === 'drawRejectUI') {\r\n                    //log(\"<UI>_reject draw offer\")\r\n                    _this.uiData.UIObjects.gamePlayUI.rectDrawAcc.hide();\r\n                }\r\n                if (uiType === 'promotionUI') {\r\n                    //log('PROMOTION EVENT FIRED', swHd)\r\n                    if (swHd) {\r\n                        _this.uiData.UIObjects.promotionUI.rectPromotion.show();\r\n                    }\r\n                    else {\r\n                        _this.uiData.UIObjects.promotionUI.rectPromotion.hide();\r\n                    }\r\n                }\r\n            });\r\n            this.UIEvents.addListener(Init2DBoardEvent, null, function (_a) {\r\n                var uiType = _a.uiType, userStatus = _a.userStatus;\r\n                if (uiType === 'setup2DBoard') {\r\n                    _this.uiData.UIObjects.chessBoard2D.setupPieces(userStatus);\r\n                    if (userStatus === enumTypes_3.PlayerStatus.White) {\r\n                        _this.uiData.UIObjects.statusUI.userStatusTxt.changeText('YOU PLAY AS WHITE');\r\n                    }\r\n                    if (userStatus === enumTypes_3.PlayerStatus.Black) {\r\n                        _this.uiData.UIObjects.statusUI.userStatusTxt.changeText('YOU PLAY AS BLACK');\r\n                    }\r\n                    if (userStatus === enumTypes_3.PlayerStatus.Spectator) {\r\n                        _this.uiData.UIObjects.statusUI.userStatusTxt.changeText('YOU ARE SPECTATING');\r\n                    }\r\n                }\r\n                else if (uiType === 'setUserStatus') {\r\n                    var inGameStatus = gameData_2.userDat.getInGameStatus();\r\n                    var turn = gameData_2.gameDat.getGamePlay().turn;\r\n                    var turnStatus = void 0;\r\n                    if (turn === 'w') {\r\n                        turnStatus = enumTypes_3.PlayerStatus.White;\r\n                    }\r\n                    if (turn === 'b') {\r\n                        turnStatus = enumTypes_3.PlayerStatus.Black;\r\n                    }\r\n                    if (inGameStatus !== enumTypes_3.PlayerStatus.Spectator) {\r\n                        if (inGameStatus === turnStatus)\r\n                            _this.uiData.UIObjects.statusUI.userStatusTxt.changeText('YOUR TURN !!');\r\n                        else {\r\n                            _this.uiData.UIObjects.statusUI.userStatusTxt.changeText('OPPONENT TURN');\r\n                        }\r\n                    }\r\n                }\r\n                else if (uiType = 'receiveAck') {\r\n                    var opponentStatus = undefined;\r\n                    if (gameData_2.userDat.getInGameStatus() === enumTypes_3.PlayerStatus.White)\r\n                        opponentStatus = enumTypes_3.PlayerStatus.Black;\r\n                    if (gameData_2.userDat.getInGameStatus() === enumTypes_3.PlayerStatus.Black)\r\n                        opponentStatus = enumTypes_3.PlayerStatus.White;\r\n                    //log('receive ack: ', PlayerStatus[userStatus], PlayerStatus[opponentStatus])\r\n                    if (userStatus !== undefined) {\r\n                        _this.uiData.UIObjects.statusUI.ackStatusWait.hide();\r\n                        _this.uiData.UIObjects.statusUI.ackStatusSolve.show();\r\n                    }\r\n                    if (userStatus === undefined) {\r\n                        _this.uiData.UIObjects.statusUI.ackStatusWait.show();\r\n                        _this.uiData.UIObjects.statusUI.ackStatusSolve.hide();\r\n                    }\r\n                }\r\n                else if (uiType === 'resetUserStatus') {\r\n                    _this.uiData.UIObjects.statusUI.userStatusTxt.changeText('----------');\r\n                }\r\n            });\r\n            this.UIEvents.addListener(NotationMovementEvent, null, function (_a) {\r\n                var uiType = _a.uiType, sanMovement = _a.sanMovement;\r\n                if (uiType === 'piece_movementSan') {\r\n                    _this.uiData.UIObjects.notationUI.notationText.addText(sanMovement);\r\n                }\r\n                if (uiType === 'change_turn_mark') {\r\n                    if (sanMovement === 'w') {\r\n                        _this.uiData.UIObjects.timerUI.whiteTurnMark.show();\r\n                        _this.uiData.UIObjects.timerUI.blackTurnMark.hide();\r\n                    }\r\n                    if (sanMovement === 'b') {\r\n                        _this.uiData.UIObjects.timerUI.whiteTurnMark.hide();\r\n                        _this.uiData.UIObjects.timerUI.blackTurnMark.show();\r\n                    }\r\n                }\r\n                if (uiType === 'finalResult') {\r\n                    if (sanMovement === 'w') {\r\n                        _this.uiData.UIObjects.notationUI.notationText.addText('1 - 0');\r\n                        //UIObject.notationUI.notationText.addText('1 - 0')\r\n                    }\r\n                    if (sanMovement === 'b') {\r\n                        _this.uiData.UIObjects.notationUI.notationText.addText('0 - 1');\r\n                        //UIObject.notationUI.notationText.addText('0 - 1')\r\n                    }\r\n                    if (sanMovement === 'd') {\r\n                        _this.uiData.UIObjects.notationUI.notationText.addText('1/2 - 1/2');\r\n                        //UIObject.notationUI.notationText.addText('1/2 - 1/2')\r\n                    }\r\n                }\r\n                if (uiType === 'resetNotation') {\r\n                    //log('RESET NOTATION')\r\n                    _this.uiData.UIObjects.notationUI.notationText.resetText();\r\n                    //UIObject.notationUI.notationText.resetText()\r\n                }\r\n            });\r\n            UIEvents.addListener(UI2DBoardEvent, null, function (_a) {\r\n                var uiType = _a.uiType, originType = _a.originType, originChessPos = _a.originChessPos, targetType = _a.targetType, targetChessPos = _a.targetChessPos, removeChessPos = _a.removeChessPos;\r\n                //log(\">>>\", originType, originChessPos, targetType, targetChessPos, removeChessPos)\r\n                _this.uiData.UIObjects.chessBoard2D.updateLocPieces(originType, originChessPos, targetType, targetChessPos, removeChessPos);\r\n            });\r\n        }\r\n        return UIEventReceiver;\r\n    }());\r\n    exports.UIEventReceiver = UIEventReceiver;\r\n});\r\ndefine(\"metas/pawnssquare/modules/resources/soundResources\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.default = {\r\n        defaultAudioSource: {\r\n            piece_move: new AudioSource(new AudioClip('metas/pawnssquare/sounds/default/piece_move.mp3')),\r\n            board_prepare: new AudioSource(new AudioClip('metas/pawnssquare/sounds/default/board_prepare.mp3')),\r\n            piece_select: new AudioSource(new AudioClip('metas/pawnssquare/sounds/default/piece_select.mp3')),\r\n            player_in: new AudioSource(new AudioClip('metas/pawnssquare/sounds/default/player_in.mp3')),\r\n            player_out: new AudioSource(new AudioClip('metas/pawnssquare/sounds/default/player_out.mp3')),\r\n            game_ready: new AudioSource(new AudioClip('metas/pawnssquare/sounds/default/game_ready.mp3')),\r\n            game_end: new AudioSource(new AudioClip('metas/pawnssquare/sounds/default/game_end.mp3'))\r\n        }\r\n    };\r\n});\r\ndefine(\"metas/pawnssquare/modules/dat/serverCon\", [\"require\", \"exports\", \"metas/pawnssquare/modules/dat/enumTypes\"], function (require, exports, enumTypes_4) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.WssConnection = exports.ServerStartEvent = exports.ServerMovementEvent = void 0;\r\n    var ServerMovementEvent = /** @class */ (function () {\r\n        function ServerMovementEvent(data) {\r\n            this.data = data;\r\n        }\r\n        ServerMovementEvent = __decorate([\r\n            EventConstructor(),\r\n            __metadata(\"design:paramtypes\", [Object])\r\n        ], ServerMovementEvent);\r\n        return ServerMovementEvent;\r\n    }());\r\n    exports.ServerMovementEvent = ServerMovementEvent;\r\n    var ServerStartEvent = /** @class */ (function () {\r\n        function ServerStartEvent() {\r\n        }\r\n        ServerStartEvent = __decorate([\r\n            EventConstructor(),\r\n            __metadata(\"design:paramtypes\", [])\r\n        ], ServerStartEvent);\r\n        return ServerStartEvent;\r\n    }());\r\n    exports.ServerStartEvent = ServerStartEvent;\r\n    var WssConnection = /** @class */ (function () {\r\n        function WssConnection(_uid, _ethAdd, _realm, _hostID, _server, _ServerEvents) {\r\n            if (_server === void 0) { _server = 'wss://localhost'; }\r\n            this.UID = null;\r\n            this.ethAdd = null;\r\n            this.realm = null;\r\n            this.hostID = null;\r\n            this.readyState = enumTypes_4.ReadyState.CONNECTING;\r\n            this.UID = _uid;\r\n            this.ethAdd = _ethAdd;\r\n            this.realm = _realm;\r\n            this.hostID = _hostID;\r\n            this.server = _server;\r\n            this.ServerEvents = _ServerEvents;\r\n        }\r\n        WssConnection.prototype.connectToServer = function () {\r\n            var _this = this;\r\n            log('CONNECTING TO SERVER', this.server);\r\n            return new Promise(function (resolve, reject) {\r\n                _this.wss = new WebSocket(_this.server);\r\n                _this.wss.onopen = function (res) {\r\n                    log('wss OK');\r\n                    _this.readyState = _this.wss.readyState;\r\n                    resolve(_this.wss.readyState);\r\n                };\r\n                _this.wss.onerror = function (res) {\r\n                    log('wss ERR ');\r\n                    _this.readyState = _this.wss.readyState;\r\n                    reject(_this.wss.readyState);\r\n                };\r\n                _this.wss.onclose = function (res) {\r\n                    log('wss CLOSED');\r\n                    _this.readyState = _this.wss.readyState;\r\n                };\r\n                _this.wsListener();\r\n            });\r\n        };\r\n        WssConnection.prototype.wsListener = function () {\r\n            var _this = this;\r\n            this.wss.onclose = function (e) {\r\n                log('DISCONNECTED FROM SERVER', _this.wss.readyState);\r\n            };\r\n            this.wss.onmessage = function (event) {\r\n                //let data = JSON.parse(event.data)\r\n                _this._dataHandling(event.data);\r\n            };\r\n        };\r\n        WssConnection.prototype._dataHandling = function (_msg) {\r\n            var msg = null;\r\n            var id = null;\r\n            var method = null;\r\n            var data = null;\r\n            try {\r\n                msg = JSON.parse(_msg);\r\n                id = msg.id;\r\n                method = msg.method;\r\n                data = msg.data;\r\n                log('WSS DATA: ', msg);\r\n            }\r\n            catch (err) {\r\n                log(err);\r\n                return;\r\n            }\r\n            if (id !== undefined) {\r\n                log('initial connection: ', id);\r\n                var regMsg = {\r\n                    method: 'reg',\r\n                    data: {\r\n                        dclID: this.UID,\r\n                        ethAdd: this.ethAdd,\r\n                        realm: this.realm,\r\n                        sceneID: this.hostID,\r\n                        cTm: Date.now()\r\n                    }\r\n                };\r\n                this.sendMsg(regMsg);\r\n            }\r\n            /*\r\n            else {\r\n                switch (method) {\r\n                    case 'init':\r\n                        try {\r\n                            log('init: \\n', data)\r\n                            //SET PLAYER\r\n                            let players = data.player\r\n                            if (players.w !== undefined) gameDat.setPlayerWhite(players.w)\r\n                            if (players.b !== undefined) gameDat.setPlayerBlack(players.b)\r\n                            log('current player: ', gameDat.getPlayer())\r\n    \n                            //SET GAME DATA\r\n                            let fen = data.game.FEN\r\n    \n                            let move = ''\r\n                            if (data.game.move.length > 1) {\r\n                                move = data.game.move[data.game.move.length - 1]\r\n                            }\r\n    \n                            let turn = fen.split(' ')[1]\r\n    \n                            gameDat.setGamePlay({\r\n                                fen,\r\n                                move,\r\n                                turn\r\n                            })\r\n                            log('current game data: ', gameDat.getGamePlay())\r\n    \n                            //SET TIME\r\n                            let timeData = data.time\r\n                            gameDat.setTimeData(timeData.w, timeData.b)\r\n    \n                            if (data.game.isStart) {\r\n                                log('timer should start now')\r\n                                gameDat.startTimerCount()\r\n                            }\r\n                            else {\r\n                                log('timer can not start')\r\n                            }\r\n    \n                            log('set game Start: ', data.game.isStart)\r\n                            gameDat.setIsStart(data.game.isStart)\r\n    \n                            if(data.game.isStart) this.ServerEvents.fireEvent(new ServerStartEvent())\r\n                        }\r\n                        catch(err) {\r\n                            log(err)\r\n                        }\r\n                        break\r\n    \n                    case 'updPlayer':\r\n                        try {\r\n                            log('update player: \\n', data)\r\n                            //SET PLAYER\r\n                            let players = data.players\r\n                            if (players.w === undefined && players.b === undefined) {\r\n                                gameDat.setPlayerBlack(undefined)\r\n                                gameDat.setPlayerWhite(undefined)\r\n                            }\r\n                            else {\r\n                                if (players.w !== undefined) gameDat.setPlayerWhite(players.w)\r\n                                if (players.b !== undefined) gameDat.setPlayerBlack(players.b)\r\n                            }\r\n                            log('current player: ', gameDat.getPlayer())\r\n                        }\r\n                        catch (err) {\r\n                            log(err)\r\n                        }\r\n                        break\r\n    \n                    case 'updGame':\r\n                        try {\r\n                            log('game start: \\n', data)\r\n                            //SET PLAYER\r\n                            let players = data.player\r\n                            if (players.w !== undefined) gameDat.setPlayerWhite(players.w)\r\n                            if (players.b !== undefined) gameDat.setPlayerBlack(players.b)\r\n                            log('current player: ', gameDat.getPlayer())\r\n    \n                            //SET GAME DATA\r\n                            let fen = data.game.FEN\r\n    \n                            let move = ''\r\n                            if (data.game.move.length > 1) {\r\n                                move = data.game.move[data.game.move.length - 1]\r\n                            }\r\n    \n                            let turn = fen.split(' ')[1]\r\n    \n                            gameDat.setGamePlay({\r\n                                fen,\r\n                                move,\r\n                                turn\r\n                            })\r\n                            log('current game data: ', gameDat.getGamePlay())\r\n    \n                            //SET TIME\r\n                            let timeData = data.time\r\n                            gameDat.setTimeData(timeData.w, timeData.b)\r\n    \n                            if (data.game.isStart) {\r\n                                log('timer should start now')\r\n                                gameDat.startTimerCount()\r\n                            }\r\n                            else {\r\n                                log('timer can not start')\r\n                            }\r\n    \n                            log('set game Start: ', data.game.isStart)\r\n                            gameDat.setIsStart(data.game.isStart)\r\n                            if (data.game.isStart) this.ServerEvents.fireEvent(new ServerStartEvent())\r\n                        }\r\n                        catch (err) {\r\n                            log(err)\r\n                        }\r\n                        break\r\n    \n                    case 'move':\r\n                        try {\r\n                            log('update move from server: \\n', data)\r\n                            let timeData = data.time\r\n                            let moveData = data.game\r\n    \n                            gameDat.setTimeData(timeData.w, timeData.b)\r\n    \n                            //this.UIEvents.fireEvent(new UINotificationEvent('showSync', false, '1'))\r\n                            this.ServerEvents.fireEvent(new ServerMovementEvent(data))\r\n                        }\r\n                        catch (err) {\r\n                            log(err)\r\n                        }\r\n                        break\r\n    \n                    case 'gameEnd':\r\n    \n                        break\r\n                }\r\n            }\r\n            */\r\n        };\r\n        WssConnection.prototype.sendMsg = function (_msg) {\r\n            this.wss.send(JSON.stringify(_msg));\r\n        };\r\n        return WssConnection;\r\n    }());\r\n    exports.WssConnection = WssConnection;\r\n});\r\ndefine(\"metas/pawnssquare/modules/logic/playerMatching\", [\"require\", \"exports\", \"metas/pawnssquare/modules/resources/modelResources\", \"metas/pawnssquare/modules/dat/gameData\", \"metas/pawnssquare/modules/UI/controllerUIEvent\", \"metas/pawnssquare/modules/resources/soundResources\", \"metas/pawnssquare/modules/dat/enumTypes\", \"metas/pawnssquare/modules/genFunc/genFunc\"], function (require, exports, modelResources_1, gameData_3, controllerUIEvent_5, soundResources_1, enumTypes_5, genFunc_4) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.PlayerMatching = void 0;\r\n    var PlayerMatching = /** @class */ (function () {\r\n        function PlayerMatching(_msgBus, _UIEvents, _HOST_ID) {\r\n            this.MODE = null;\r\n            this.UID = undefined;\r\n            this.SID = undefined;\r\n            this.msgBus = undefined;\r\n            this.UIEvents = undefined;\r\n            this.tryToSinc = true;\r\n            this._syncTimeout = 10.1;\r\n            this._syncDelay = 0;\r\n            this.syncCount = 0;\r\n            this._waitingTimeout = 15;\r\n            this.waitingCount = 0;\r\n            this.isPwPb = false;\r\n            this.cam = Camera.instance;\r\n            this.HOST_ID = _HOST_ID;\r\n            this.UID = gameData_3.userDat.getUID();\r\n            this.SID = gameData_3.userDat.getURealm() + this.HOST_ID.toString();\r\n            this.msgBus = _msgBus;\r\n            this.UIEvents = _UIEvents;\r\n            this.MODE = enumTypes_5.CONN_MODE.P2P;\r\n            log('MODE PM: ', enumTypes_5.CONN_MODE[this.MODE]);\r\n            this._onMessageHandler();\r\n            this._loadingModel();\r\n            this._loadingAudio();\r\n            this._UIEventHandler();\r\n            engine.addSystem(this);\r\n        }\r\n        PlayerMatching.prototype.updatePivot = function (_pivotx, _pivoty, _pivotz, _scale) {\r\n            this.scenePivot.getComponent(Transform).position.x = _pivotx;\r\n            this.scenePivot.getComponent(Transform).position.y = _pivoty;\r\n            this.scenePivot.getComponent(Transform).position.z = _pivotz;\r\n            this.pBbtn.getComponent(Transform).position.z *= _scale;\r\n            this.pWbtn.getComponent(Transform).position.z *= _scale;\r\n            this.inAudioEnt.getComponent(Transform).position.set(_pivotx, 1, _pivotz);\r\n            this.outAudioEnt.getComponent(Transform).position.set(_pivotx, 1, _pivotz);\r\n            this.readyAudioEnt.getComponent(Transform).position.set(_pivotx, 1, _pivotz);\r\n            log('PM UPDATE POS: ', _pivotx, _pivoty, _pivotz);\r\n        };\r\n        PlayerMatching.prototype._loadingModel = function () {\r\n            var _this = this;\r\n            this.restartPwPbEnt = new Entity();\r\n            this.scenePivot = new Entity();\r\n            this.scenePivot.addComponent(new Transform({\r\n                position: new Vector3(8, 0.5, 8)\r\n            }));\r\n            this.pBbtn = new Entity();\r\n            this.pBbtn.setParent(this.scenePivot);\r\n            this.pBbtn.addComponent(modelResources_1.default.defaultSceneModel.pB_btn);\r\n            this.pBbtn.addComponent(new Transform({\r\n                position: new Vector3(0, 1.25, 1.5),\r\n                scale: new Vector3(0, 0, 0)\r\n            }));\r\n            this.pBbtn.addComponent(new OnPointerDown(function (e) {\r\n                if (_this.UID !== undefined) {\r\n                    _this.inAudio.playOnce();\r\n                    var players = gameData_3.gameDat.getPlayer();\r\n                    if (_this.MODE === enumTypes_5.CONN_MODE.P2P) {\r\n                        if (players.w === undefined && players.b === undefined) {\r\n                            gameData_3.gameDat.setHost(_this.UID);\r\n                            _this.UIEvents.fireEvent(new controllerUIEvent_5.UINotificationEvent('showSync', false, '1'));\r\n                        }\r\n                        _this.msgBus.emit('play' + _this.HOST_ID.toString(), {\r\n                            sender: _this.UID,\r\n                            dataMsg: {\r\n                                status: enumTypes_5.PlayerStatus.Black\r\n                            }\r\n                        });\r\n                    }\r\n                    _this.UIEvents.fireEvent(new controllerUIEvent_5.UINotificationEvent('waitingOpponent', true, '1'));\r\n                }\r\n            }, {\r\n                button: ActionButton.POINTER,\r\n                showFeedback: true,\r\n                hoverText: \"click here to play\",\r\n                distance: 3\r\n            }));\r\n            this.pWbtn = new Entity();\r\n            this.pWbtn.setParent(this.scenePivot);\r\n            this.pWbtn.addComponent(modelResources_1.default.defaultSceneModel.pW_btn);\r\n            this.pWbtn.addComponent(new Transform({\r\n                position: new Vector3(0, 1.25, -1.5),\r\n                scale: new Vector3(0, 0, 0)\r\n            }));\r\n            this.pWbtn.addComponent(new OnPointerDown(function (e) {\r\n                if (_this.UID !== undefined) {\r\n                    _this.inAudio.playOnce();\r\n                    var players = gameData_3.gameDat.getPlayer();\r\n                    if (_this.MODE === enumTypes_5.CONN_MODE.P2P) {\r\n                        if (players.w === undefined && players.b === undefined) {\r\n                            gameData_3.gameDat.setHost(_this.UID);\r\n                            _this.UIEvents.fireEvent(new controllerUIEvent_5.UINotificationEvent('showSync', false, '1'));\r\n                        }\r\n                        _this.msgBus.emit('play' + _this.HOST_ID.toString(), {\r\n                            sender: _this.UID,\r\n                            dataMsg: {\r\n                                status: enumTypes_5.PlayerStatus.White\r\n                            }\r\n                        });\r\n                    }\r\n                    _this.UIEvents.fireEvent(new controllerUIEvent_5.UINotificationEvent('waitingOpponent', true, '1'));\r\n                }\r\n            }, {\r\n                button: ActionButton.POINTER,\r\n                showFeedback: true,\r\n                hoverText: \"click here to play\",\r\n                distance: 3\r\n            }));\r\n            engine.addEntity(this.scenePivot);\r\n        };\r\n        PlayerMatching.prototype._loadingAudio = function () {\r\n            /*\r\n             * setup audio\r\n             */\r\n            this.inAudioEnt = new Entity();\r\n            this.outAudioEnt = new Entity();\r\n            this.readyAudioEnt = new Entity();\r\n            this.inAudioEnt.addComponent(new Transform({ position: new Vector3(8, 1, 8) }));\r\n            this.outAudioEnt.addComponent(new Transform({ position: new Vector3(8, 1, 8) }));\r\n            this.readyAudioEnt.addComponent(new Transform({ position: new Vector3(8, 1, 8) }));\r\n            engine.addEntity(this.inAudioEnt);\r\n            engine.addEntity(this.outAudioEnt);\r\n            engine.addEntity(this.readyAudioEnt);\r\n            this.inAudio = soundResources_1.default.defaultAudioSource.player_in;\r\n            this.outAudio = soundResources_1.default.defaultAudioSource.player_out;\r\n            this.readyAudio = soundResources_1.default.defaultAudioSource.game_ready;\r\n            this.inAudioEnt.addComponent(this.inAudio);\r\n            this.outAudioEnt.addComponent(this.outAudio);\r\n            this.readyAudioEnt.addComponent(this.readyAudio);\r\n            this.inAudio.loop = false;\r\n            this.inAudio.volume = 1;\r\n            this.inAudio.playing = false;\r\n            this.outAudio.loop = false;\r\n            this.outAudio.volume = 1;\r\n            this.outAudio.playing = false;\r\n            this.readyAudio.loop = false;\r\n            this.readyAudio.volume = 1;\r\n            this.readyAudio.playing = false;\r\n        };\r\n        PlayerMatching.prototype._UIEventHandler = function () {\r\n            var _this = this;\r\n            this.UIEvents.addListener(controllerUIEvent_5.WaitingClose, null, function (_a) {\r\n                _this.cancelJoin();\r\n            });\r\n        };\r\n        PlayerMatching.prototype._onMessageHandler = function () {\r\n            var _this = this;\r\n            this.msgBus.on('req_pl' + this.HOST_ID.toString(), function (data) {\r\n                if (genFunc_4.genFunc.isInBorder(_this.scenePivot.getComponent(Transform).position)) {\r\n                    //ONLY HOST RESPONDING TO THIS MESSAGE\r\n                    if (data.sender !== _this.UID && gameData_3.gameDat.getHost() === _this.UID && _this.UID !== undefined) {\r\n                        if (gameData_3.gameDat.getIsStart()) {\r\n                            var players = gameData_3.gameDat.getPlayer();\r\n                            var gameFEN = gameData_3.gameDat.getGameData().gameplay.fen;\r\n                            var timeData = gameData_3.gameDat.getTimeData();\r\n                            var msgToSend = {\r\n                                sender: _this.UID,\r\n                                recipient: data.sender,\r\n                                dataMsg: {\r\n                                    players: players,\r\n                                    gameFEN: gameFEN,\r\n                                    timeData: timeData\r\n                                }\r\n                            };\r\n                            _this.msgBus.emit('upd_player' + _this.HOST_ID.toString(), msgToSend);\r\n                            log(\"send fen: \", gameFEN, \" to: \", msgToSend.recipient);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this.msgBus.on('upd_player' + this.HOST_ID.toString(), function (data) {\r\n                if (genFunc_4.genFunc.isInBorder(_this.scenePivot.getComponent(Transform).position)) {\r\n                    //UPDATE CLIENT DATA WHEN TRY TO SYNC\r\n                    if (data.recipient === _this.UID && _this.tryToSinc) {\r\n                        if (gameData_3.gameDat.getHost() === undefined) {\r\n                            gameData_3.gameDat.setHost(data.sender);\r\n                        }\r\n                        else if (data.sender === gameData_3.gameDat.getHost()) {\r\n                            gameData_3.gameDat.setPlayerBlack(data.dataMsg.players.b);\r\n                            gameData_3.gameDat.setPlayerWhite(data.dataMsg.players.w);\r\n                            gameData_3.gameDat.setGamePlay({\r\n                                fen: data.dataMsg.gameFEN,\r\n                                move: undefined,\r\n                                turn: data.dataMsg.gameFEN.split(' ')[1]\r\n                            });\r\n                            var sceneTimeControl = gameData_3.gameDat.getTImeControl();\r\n                            var timeDataUpd = data.dataMsg.timeData;\r\n                            //log(sceneTimeControl, timeDataUpd)\r\n                            if (timeDataUpd.w === sceneTimeControl && timeDataUpd.b === sceneTimeControl) {\r\n                                //do nothing, game freshly start\r\n                            }\r\n                            else {\r\n                                //GAME ALREADY STARTED, IMMEDIATELY COUNT THE TIMER\r\n                                gameData_3.gameDat.setTimeData(data.dataMsg.timeData.w, data.dataMsg.timeData.b);\r\n                                gameData_3.gameDat.startTimerCount();\r\n                                log('game data update: ', gameData_3.gameDat.getGamePlay().fen, gameData_3.gameDat.getTimeData());\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this.msgBus.on('resetPlay' + this.HOST_ID.toString(), function (data) {\r\n                if (genFunc_4.genFunc.isInBorder(_this.scenePivot.getComponent(Transform).position)) {\r\n                    if (gameData_3.gameDat.getHost() === data.sender && gameData_3.gameDat.getHost() !== undefined) {\r\n                        var status = data.dataMsg.status;\r\n                        if (status === enumTypes_5.PlayerStatus.White) {\r\n                            gameData_3.gameDat.setPlayerWhite(undefined);\r\n                            gameData_3.gameDat.setHost(undefined);\r\n                        }\r\n                        else if (status === enumTypes_5.PlayerStatus.Black) {\r\n                            gameData_3.gameDat.setPlayerBlack(undefined);\r\n                            gameData_3.gameDat.setHost(undefined);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this.msgBus.on('play' + this.HOST_ID.toString(), function (data) {\r\n                if (genFunc_4.genFunc.isInBorder(_this.scenePivot.getComponent(Transform).position)) {\r\n                    var status = data.dataMsg.status;\r\n                    if (status === enumTypes_5.PlayerStatus.Black) {\r\n                        if (gameData_3.gameDat.getPlayer().b === undefined) {\r\n                            gameData_3.gameDat.setPlayerBlack(data.sender);\r\n                        }\r\n                        if (gameData_3.gameDat.getPlayer().w === undefined) {\r\n                            gameData_3.gameDat.setHost(data.sender);\r\n                        }\r\n                    }\r\n                    else if (status === enumTypes_5.PlayerStatus.White) {\r\n                        if (gameData_3.gameDat.getPlayer().w === undefined) {\r\n                            gameData_3.gameDat.setPlayerWhite(data.sender);\r\n                        }\r\n                        if (gameData_3.gameDat.getPlayer().b === undefined) {\r\n                            gameData_3.gameDat.setHost(data.sender);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        PlayerMatching.prototype.cancelJoin = function () {\r\n            var msgToSend = {\r\n                sender: this.UID,\r\n                recipient: '',\r\n                dataMsg: {\r\n                    status: ''\r\n                }\r\n            };\r\n            if (gameData_3.gameDat.getPlayer().w === this.UID) {\r\n                msgToSend.dataMsg.status = enumTypes_5.PlayerStatus.White;\r\n            }\r\n            else if (gameData_3.gameDat.getPlayer().b === this.UID) {\r\n                msgToSend.dataMsg.status = enumTypes_5.PlayerStatus.Black;\r\n            }\r\n            this.msgBus.emit('resetPlay' + this.HOST_ID.toString(), msgToSend);\r\n            this.outAudio.playOnce();\r\n            this.UIEvents.fireEvent(new controllerUIEvent_5.UINotificationEvent('waitingOpponent', false, '1'));\r\n            this.UIEvents.fireEvent(new controllerUIEvent_5.UINotificationEvent('showSync', true, '1'));\r\n        };\r\n        PlayerMatching.prototype.reSync = function () {\r\n            log(\"PM SYNC\");\r\n            gameData_3.gameDat.reset();\r\n            gameData_3.userDat.reset();\r\n            this._syncDelay = 0;\r\n            this.syncCount = 0;\r\n            this.tryToSinc = true;\r\n        };\r\n        PlayerMatching.prototype.update = function (dt) {\r\n            if (genFunc_4.genFunc.isInBorder(this.scenePivot.getComponent(Transform).position)) {\r\n                var players = gameData_3.gameDat.getPlayer();\r\n                if (this.tryToSinc) {\r\n                    this.UIEvents.fireEvent(new controllerUIEvent_5.UINotificationEvent('lookingOpponent', false, '1'));\r\n                    this.UIEvents.fireEvent(new controllerUIEvent_5.UINotificationEvent('waitingOpponent', false, '1'));\r\n                    this.UIEvents.fireEvent(new controllerUIEvent_5.UINotificationEvent('loadingScene', true, '1'));\r\n                    this.pWbtn.getComponent(Transform).scale.setAll(0);\r\n                    this.pBbtn.getComponent(Transform).scale.setAll(0);\r\n                    //if (this.pWbtn.alive) engine.removeEntity(this.pWbtn)\r\n                    //if (this.pBbtn.alive) engine.removeEntity(this.pBbtn)\r\n                    if (this._syncDelay <= this._syncTimeout) {\r\n                        this.syncCount += dt;\r\n                        if (this.syncCount > this._syncDelay) {\r\n                            //emit request player every 3 sec\r\n                            if (this.MODE === enumTypes_5.CONN_MODE.P2P) {\r\n                                var msgToSend = {\r\n                                    sender: this.UID,\r\n                                    recipient: 'anyone',\r\n                                    dataMsg: ''\r\n                                };\r\n                                this.msgBus.emit(\"req_pl\" + this.HOST_ID.toString(), msgToSend);\r\n                                log(\"-REQUEST SCENE DATA-\");\r\n                            }\r\n                            this._syncDelay += 2;\r\n                        }\r\n                    }\r\n                    if (this._syncDelay > this._syncTimeout) {\r\n                        this.tryToSinc = false;\r\n                        this.UIEvents.fireEvent(new controllerUIEvent_5.UINotificationEvent('loadingScene', false, '1'));\r\n                        this.UIEvents.fireEvent(new controllerUIEvent_5.UINotificationEvent('showSync', true, '1'));\r\n                        log(\"--sync end--\");\r\n                    }\r\n                }\r\n                else if (!this.tryToSinc) {\r\n                    /*\r\n                     * check if white and black already occupied or not\r\n                     */\r\n                    if (players.w !== undefined && players.b !== undefined)\r\n                        this.isPwPb = true;\r\n                    else\r\n                        this.isPwPb = false;\r\n                    if (!this.isPwPb) {\r\n                        this.UIEvents.fireEvent(new controllerUIEvent_5.UINotificationEvent('updateName', true, '1'));\r\n                        if (players.w === undefined) {\r\n                            this.pWbtn.getComponent(Transform).scale.setAll(1);\r\n                            //if (!this.pWbtn.alive && this.UID !== undefined) engine.addEntity(this.pWbtn)\r\n                        }\r\n                        if (players.b === undefined) {\r\n                            this.pBbtn.getComponent(Transform).scale.setAll(1);\r\n                            //if (!this.pBbtn.alive && this.UID !== undefined) engine.addEntity(this.pBbtn)\r\n                        }\r\n                        if (players.w !== undefined) {\r\n                            this.pWbtn.getComponent(Transform).scale.setAll(0);\r\n                            //if (this.pWbtn.alive) engine.removeEntity(this.pWbtn)\r\n                            if (players.w === this.UID) {\r\n                                //this.UIEvents.fireEvent(new UINotificationEvent('lookingOpponent', false, '1'))\r\n                                this.UIEvents.fireEvent(new controllerUIEvent_5.UINotificationEvent('waitingOpponent', true, '1'));\r\n                                this.UIEvents.fireEvent(new controllerUIEvent_5.UINotificationEvent('showSync', false, '1'));\r\n                            }\r\n                            else {\r\n                                //this.UIEvents.fireEvent(new UINotificationEvent('waitingOpponent', false, '1'))\r\n                                this.UIEvents.fireEvent(new controllerUIEvent_5.UINotificationEvent('lookingOpponent', true, '1'));\r\n                                this.UIEvents.fireEvent(new controllerUIEvent_5.UINotificationEvent('showSync', true, '1'));\r\n                            }\r\n                        }\r\n                        if (players.b !== undefined) {\r\n                            this.pBbtn.getComponent(Transform).scale.setAll(0);\r\n                            //if (this.pBbtn.alive) engine.removeEntity(this.pBbtn)\r\n                            if (players.b === this.UID) {\r\n                                //this.UIEvents.fireEvent(new UINotificationEvent('lookingOpponent', false, '1'))\r\n                                this.UIEvents.fireEvent(new controllerUIEvent_5.UINotificationEvent('waitingOpponent', true, '1'));\r\n                                this.UIEvents.fireEvent(new controllerUIEvent_5.UINotificationEvent('showSync', false, '1'));\r\n                            }\r\n                            else {\r\n                                //this.UIEvents.fireEvent(new UINotificationEvent('waitingOpponent', false, '1'))\r\n                                this.UIEvents.fireEvent(new controllerUIEvent_5.UINotificationEvent('lookingOpponent', true, '1'));\r\n                                this.UIEvents.fireEvent(new controllerUIEvent_5.UINotificationEvent('showSync', true, '1'));\r\n                            }\r\n                        }\r\n                        if (players.w === undefined && players.b === undefined) {\r\n                            this.UIEvents.fireEvent(new controllerUIEvent_5.UINotificationEvent('lookingOpponent', false, '1'));\r\n                            this.UIEvents.fireEvent(new controllerUIEvent_5.UINotificationEvent('waitingOpponent', false, '1'));\r\n                            this.UIEvents.fireEvent(new controllerUIEvent_5.UINotificationEvent('showSync', true, '1'));\r\n                        }\r\n                    }\r\n                    if (this.isPwPb) {\r\n                        if (!gameData_3.gameDat.getIsReady()) {\r\n                            this.pWbtn.getComponent(Transform).scale.setAll(0);\r\n                            this.pBbtn.getComponent(Transform).scale.setAll(0);\r\n                            //if (this.pWbtn.alive) engine.removeEntity(this.pWbtn)\r\n                            //if (this.pBbtn.alive) engine.removeEntity(this.pBbtn)\r\n                            this.UIEvents.fireEvent(new controllerUIEvent_5.UINotificationEvent('lookingOpponent', false, '1'));\r\n                            this.UIEvents.fireEvent(new controllerUIEvent_5.UINotificationEvent('waitingOpponent', false, '1'));\r\n                            this.UIEvents.fireEvent(new controllerUIEvent_5.UINotificationEvent('updateName', true, '1'));\r\n                            /*\r\n                             * only call once before game start\r\n                             * set user in game status:\r\n                             * 'w'(white), 'b'(black), 's'(spectate), 'wb'(playing vs self)\r\n                             */\r\n                            this.readyAudio.playOnce();\r\n                            if (players.b === this.UID && players.w === this.UID) {\r\n                                gameData_3.userDat.setInGameStatus(enumTypes_5.PlayerStatus.WhiteAndBlack);\r\n                            }\r\n                            else if (players.b === this.UID) {\r\n                                gameData_3.userDat.setInGameStatus(enumTypes_5.PlayerStatus.Black);\r\n                            }\r\n                            else if (players.w === this.UID) {\r\n                                gameData_3.userDat.setInGameStatus(enumTypes_5.PlayerStatus.White);\r\n                            }\r\n                            else\r\n                                gameData_3.userDat.setInGameStatus(enumTypes_5.PlayerStatus.Spectator);\r\n                            gameData_3.gameDat.setIsReady(true);\r\n                            gameData_3.gameDat.setIsStart(true);\r\n                            this.waitingCount = 0;\r\n                            log(\"GAME READY\" +\r\n                                \"\\nwhite: \" + players.w +\r\n                                \"\\nblack: \" + players.b);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (!this.tryToSinc) {\r\n                    if (!gameData_3.gameDat.getIsReady()) {\r\n                        this.cancelJoin();\r\n                        this.reSync();\r\n                        this.pWbtn.getComponent(Transform).scale.setAll(0);\r\n                        this.pBbtn.getComponent(Transform).scale.setAll(0);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        return PlayerMatching;\r\n    }());\r\n    exports.PlayerMatching = PlayerMatching;\r\n});\r\n/*\r\n * Copyright (c) 2020, Jeff Hlywa (jhlywa@gmail.com)\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n *----------------------------------------------------------------------------*/\r\ndefine(\"metas/pawnssquare/modules/logic/chess\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.Chess = void 0;\r\n    var Chess = function (fen) {\r\n        var BLACK = 'b';\r\n        var WHITE = 'w';\r\n        var EMPTY = -1;\r\n        var PAWN = 'p';\r\n        var KNIGHT = 'n';\r\n        var BISHOP = 'b';\r\n        var ROOK = 'r';\r\n        var QUEEN = 'q';\r\n        var KING = 'k';\r\n        var SYMBOLS = 'pnbrqkPNBRQK';\r\n        var DEFAULT_POSITION = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1';\r\n        var POSSIBLE_RESULTS = ['1-0', '0-1', '1/2-1/2', '*'];\r\n        var PAWN_OFFSETS = {\r\n            b: [16, 32, 17, 15],\r\n            w: [-16, -32, -17, -15]\r\n        };\r\n        var PIECE_OFFSETS = {\r\n            n: [-18, -33, -31, -14, 18, 33, 31, 14],\r\n            b: [-17, -15, 17, 15],\r\n            r: [-16, 1, 16, -1],\r\n            q: [-17, -16, -15, 1, 17, 16, 15, -1],\r\n            k: [-17, -16, -15, 1, 17, 16, 15, -1]\r\n        };\r\n        // prettier-ignore\r\n        var ATTACKS = [\r\n            20, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 20, 0,\r\n            0, 20, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 20, 0, 0,\r\n            0, 0, 20, 0, 0, 0, 0, 24, 0, 0, 0, 0, 20, 0, 0, 0,\r\n            0, 0, 0, 20, 0, 0, 0, 24, 0, 0, 0, 20, 0, 0, 0, 0,\r\n            0, 0, 0, 0, 20, 0, 0, 24, 0, 0, 20, 0, 0, 0, 0, 0,\r\n            0, 0, 0, 0, 0, 20, 2, 24, 2, 20, 0, 0, 0, 0, 0, 0,\r\n            0, 0, 0, 0, 0, 2, 53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\r\n            24, 24, 24, 24, 24, 24, 56, 0, 56, 24, 24, 24, 24, 24, 24, 0,\r\n            0, 0, 0, 0, 0, 2, 53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\r\n            0, 0, 0, 0, 0, 20, 2, 24, 2, 20, 0, 0, 0, 0, 0, 0,\r\n            0, 0, 0, 0, 20, 0, 0, 24, 0, 0, 20, 0, 0, 0, 0, 0,\r\n            0, 0, 0, 20, 0, 0, 0, 24, 0, 0, 0, 20, 0, 0, 0, 0,\r\n            0, 0, 20, 0, 0, 0, 0, 24, 0, 0, 0, 0, 20, 0, 0, 0,\r\n            0, 20, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 20, 0, 0,\r\n            20, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 20\r\n        ];\r\n        // prettier-ignore\r\n        var RAYS = [\r\n            17, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 15, 0,\r\n            0, 17, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 15, 0, 0,\r\n            0, 0, 17, 0, 0, 0, 0, 16, 0, 0, 0, 0, 15, 0, 0, 0,\r\n            0, 0, 0, 17, 0, 0, 0, 16, 0, 0, 0, 15, 0, 0, 0, 0,\r\n            0, 0, 0, 0, 17, 0, 0, 16, 0, 0, 15, 0, 0, 0, 0, 0,\r\n            0, 0, 0, 0, 0, 17, 0, 16, 0, 15, 0, 0, 0, 0, 0, 0,\r\n            0, 0, 0, 0, 0, 0, 17, 16, 15, 0, 0, 0, 0, 0, 0, 0,\r\n            1, 1, 1, 1, 1, 1, 1, 0, -1, -1, -1, -1, -1, -1, -1, 0,\r\n            0, 0, 0, 0, 0, 0, -15, -16, -17, 0, 0, 0, 0, 0, 0, 0,\r\n            0, 0, 0, 0, 0, -15, 0, -16, 0, -17, 0, 0, 0, 0, 0, 0,\r\n            0, 0, 0, 0, -15, 0, 0, -16, 0, 0, -17, 0, 0, 0, 0, 0,\r\n            0, 0, 0, -15, 0, 0, 0, -16, 0, 0, 0, -17, 0, 0, 0, 0,\r\n            0, 0, -15, 0, 0, 0, 0, -16, 0, 0, 0, 0, -17, 0, 0, 0,\r\n            0, -15, 0, 0, 0, 0, 0, -16, 0, 0, 0, 0, 0, -17, 0, 0,\r\n            -15, 0, 0, 0, 0, 0, 0, -16, 0, 0, 0, 0, 0, 0, -17\r\n        ];\r\n        var SHIFTS = { p: 0, n: 1, b: 2, r: 3, q: 4, k: 5 };\r\n        var FLAGS = {\r\n            NORMAL: 'n',\r\n            CAPTURE: 'c',\r\n            BIG_PAWN: 'b',\r\n            EP_CAPTURE: 'e',\r\n            PROMOTION: 'p',\r\n            KSIDE_CASTLE: 'k',\r\n            QSIDE_CASTLE: 'q'\r\n        };\r\n        var BITS = {\r\n            NORMAL: 1,\r\n            CAPTURE: 2,\r\n            BIG_PAWN: 4,\r\n            EP_CAPTURE: 8,\r\n            PROMOTION: 16,\r\n            KSIDE_CASTLE: 32,\r\n            QSIDE_CASTLE: 64\r\n        };\r\n        var RANK_1 = 7;\r\n        var RANK_2 = 6;\r\n        var RANK_3 = 5;\r\n        var RANK_4 = 4;\r\n        var RANK_5 = 3;\r\n        var RANK_6 = 2;\r\n        var RANK_7 = 1;\r\n        var RANK_8 = 0;\r\n        // prettier-ignore\r\n        var SQUARES = {\r\n            a8: 0, b8: 1, c8: 2, d8: 3, e8: 4, f8: 5, g8: 6, h8: 7,\r\n            a7: 16, b7: 17, c7: 18, d7: 19, e7: 20, f7: 21, g7: 22, h7: 23,\r\n            a6: 32, b6: 33, c6: 34, d6: 35, e6: 36, f6: 37, g6: 38, h6: 39,\r\n            a5: 48, b5: 49, c5: 50, d5: 51, e5: 52, f5: 53, g5: 54, h5: 55,\r\n            a4: 64, b4: 65, c4: 66, d4: 67, e4: 68, f4: 69, g4: 70, h4: 71,\r\n            a3: 80, b3: 81, c3: 82, d3: 83, e3: 84, f3: 85, g3: 86, h3: 87,\r\n            a2: 96, b2: 97, c2: 98, d2: 99, e2: 100, f2: 101, g2: 102, h2: 103,\r\n            a1: 112, b1: 113, c1: 114, d1: 115, e1: 116, f1: 117, g1: 118, h1: 119\r\n        };\r\n        var ROOKS = {\r\n            w: [\r\n                { square: SQUARES.a1, flag: BITS.QSIDE_CASTLE },\r\n                { square: SQUARES.h1, flag: BITS.KSIDE_CASTLE }\r\n            ],\r\n            b: [\r\n                { square: SQUARES.a8, flag: BITS.QSIDE_CASTLE },\r\n                { square: SQUARES.h8, flag: BITS.KSIDE_CASTLE }\r\n            ]\r\n        };\r\n        var board = new Array(128);\r\n        var kings = { w: EMPTY, b: EMPTY };\r\n        var turn = WHITE;\r\n        var castling = { w: 0, b: 0 };\r\n        var ep_square = EMPTY;\r\n        var half_moves = 0;\r\n        var move_number = 1;\r\n        var history = [];\r\n        var header = {};\r\n        /* if the user passes in a fen string, load it, else default to\r\n         * starting position\r\n         */\r\n        if (typeof fen === 'undefined') {\r\n            load(DEFAULT_POSITION);\r\n        }\r\n        else {\r\n            load(fen);\r\n        }\r\n        function clear(keep_headers) {\r\n            if (typeof keep_headers === 'undefined') {\r\n                keep_headers = false;\r\n            }\r\n            board = new Array(128);\r\n            kings = { w: EMPTY, b: EMPTY };\r\n            turn = WHITE;\r\n            castling = { w: 0, b: 0 };\r\n            ep_square = EMPTY;\r\n            half_moves = 0;\r\n            move_number = 1;\r\n            history = [];\r\n            if (!keep_headers)\r\n                header = {};\r\n            update_setup(generate_fen());\r\n        }\r\n        function reset() {\r\n            load(DEFAULT_POSITION);\r\n        }\r\n        function load(fen, keep_headers) {\r\n            if (typeof keep_headers === 'undefined') {\r\n                keep_headers = false;\r\n            }\r\n            var tokens = fen.split(/\\s+/);\r\n            var position = tokens[0];\r\n            var square = 0;\r\n            if (!validate_fen(fen).valid) {\r\n                return false;\r\n            }\r\n            clear(keep_headers);\r\n            for (var i = 0; i < position.length; i++) {\r\n                var piece = position.charAt(i);\r\n                if (piece === '/') {\r\n                    square += 8;\r\n                }\r\n                else if (is_digit(piece)) {\r\n                    square += parseInt(piece, 10);\r\n                }\r\n                else {\r\n                    var color = piece < 'a' ? WHITE : BLACK;\r\n                    put({ type: piece.toLowerCase(), color: color }, algebraic(square));\r\n                    square++;\r\n                }\r\n            }\r\n            turn = tokens[1];\r\n            if (tokens[2].indexOf('K') > -1) {\r\n                castling.w |= BITS.KSIDE_CASTLE;\r\n            }\r\n            if (tokens[2].indexOf('Q') > -1) {\r\n                castling.w |= BITS.QSIDE_CASTLE;\r\n            }\r\n            if (tokens[2].indexOf('k') > -1) {\r\n                castling.b |= BITS.KSIDE_CASTLE;\r\n            }\r\n            if (tokens[2].indexOf('q') > -1) {\r\n                castling.b |= BITS.QSIDE_CASTLE;\r\n            }\r\n            ep_square = tokens[3] === '-' ? EMPTY : SQUARES[tokens[3]];\r\n            half_moves = parseInt(tokens[4], 10);\r\n            move_number = parseInt(tokens[5], 10);\r\n            update_setup(generate_fen());\r\n            return true;\r\n        }\r\n        /* TODO: this function is pretty much crap - it validates structure but\r\n         * completely ignores content (e.g. doesn't verify that each side has a king)\r\n         * ... we should rewrite this, and ditch the silly error_number field while\r\n         * we're at it\r\n         */\r\n        function validate_fen(fen) {\r\n            var errors = {\r\n                0: 'No errors.',\r\n                1: 'FEN string must contain six space-delimited fields.',\r\n                2: '6th field (move number) must be a positive integer.',\r\n                3: '5th field (half move counter) must be a non-negative integer.',\r\n                4: '4th field (en-passant square) is invalid.',\r\n                5: '3rd field (castling availability) is invalid.',\r\n                6: '2nd field (side to move) is invalid.',\r\n                7: \"1st field (piece positions) does not contain 8 '/'-delimited rows.\",\r\n                8: '1st field (piece positions) is invalid [consecutive numbers].',\r\n                9: '1st field (piece positions) is invalid [invalid piece].',\r\n                10: '1st field (piece positions) is invalid [row too large].',\r\n                11: 'Illegal en-passant square'\r\n            };\r\n            /* 1st criterion: 6 space-seperated fields? */\r\n            var tokens = fen.split(/\\s+/);\r\n            if (tokens.length !== 6) {\r\n                return { valid: false, error_number: 1, error: errors[1] };\r\n            }\r\n            /* 2nd criterion: move number field is a integer value > 0? */\r\n            if (isNaN(tokens[5]) || parseInt(tokens[5], 10) <= 0) {\r\n                return { valid: false, error_number: 2, error: errors[2] };\r\n            }\r\n            /* 3rd criterion: half move counter is an integer >= 0? */\r\n            if (isNaN(tokens[4]) || parseInt(tokens[4], 10) < 0) {\r\n                return { valid: false, error_number: 3, error: errors[3] };\r\n            }\r\n            /* 4th criterion: 4th field is a valid e.p.-string? */\r\n            if (!/^(-|[abcdefgh][36])$/.test(tokens[3])) {\r\n                return { valid: false, error_number: 4, error: errors[4] };\r\n            }\r\n            /* 5th criterion: 3th field is a valid castle-string? */\r\n            if (!/^(KQ?k?q?|Qk?q?|kq?|q|-)$/.test(tokens[2])) {\r\n                return { valid: false, error_number: 5, error: errors[5] };\r\n            }\r\n            /* 6th criterion: 2nd field is \"w\" (white) or \"b\" (black)? */\r\n            if (!/^(w|b)$/.test(tokens[1])) {\r\n                return { valid: false, error_number: 6, error: errors[6] };\r\n            }\r\n            /* 7th criterion: 1st field contains 8 rows? */\r\n            var rows = tokens[0].split('/');\r\n            if (rows.length !== 8) {\r\n                return { valid: false, error_number: 7, error: errors[7] };\r\n            }\r\n            /* 8th criterion: every row is valid? */\r\n            for (var i = 0; i < rows.length; i++) {\r\n                /* check for right sum of fields AND not two numbers in succession */\r\n                var sum_fields = 0;\r\n                var previous_was_number = false;\r\n                for (var k = 0; k < rows[i].length; k++) {\r\n                    if (!isNaN(rows[i][k])) {\r\n                        if (previous_was_number) {\r\n                            return { valid: false, error_number: 8, error: errors[8] };\r\n                        }\r\n                        sum_fields += parseInt(rows[i][k], 10);\r\n                        previous_was_number = true;\r\n                    }\r\n                    else {\r\n                        if (!/^[prnbqkPRNBQK]$/.test(rows[i][k])) {\r\n                            return { valid: false, error_number: 9, error: errors[9] };\r\n                        }\r\n                        sum_fields += 1;\r\n                        previous_was_number = false;\r\n                    }\r\n                }\r\n                if (sum_fields !== 8) {\r\n                    return { valid: false, error_number: 10, error: errors[10] };\r\n                }\r\n            }\r\n            if ((tokens[3][1] == '3' && tokens[1] == 'w') ||\r\n                (tokens[3][1] == '6' && tokens[1] == 'b')) {\r\n                return { valid: false, error_number: 11, error: errors[11] };\r\n            }\r\n            /* everything's okay! */\r\n            return { valid: true, error_number: 0, error: errors[0] };\r\n        }\r\n        function generate_fen() {\r\n            var empty = 0;\r\n            var fen = '';\r\n            for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\r\n                if (board[i] == null) {\r\n                    empty++;\r\n                }\r\n                else {\r\n                    if (empty > 0) {\r\n                        fen += empty;\r\n                        empty = 0;\r\n                    }\r\n                    var color = board[i].color;\r\n                    var piece = board[i].type;\r\n                    fen += color === WHITE ? piece.toUpperCase() : piece.toLowerCase();\r\n                }\r\n                if ((i + 1) & 0x88) {\r\n                    if (empty > 0) {\r\n                        fen += empty;\r\n                    }\r\n                    if (i !== SQUARES.h1) {\r\n                        fen += '/';\r\n                    }\r\n                    empty = 0;\r\n                    i += 8;\r\n                }\r\n            }\r\n            var cflags = '';\r\n            if (castling[WHITE] & BITS.KSIDE_CASTLE) {\r\n                cflags += 'K';\r\n            }\r\n            if (castling[WHITE] & BITS.QSIDE_CASTLE) {\r\n                cflags += 'Q';\r\n            }\r\n            if (castling[BLACK] & BITS.KSIDE_CASTLE) {\r\n                cflags += 'k';\r\n            }\r\n            if (castling[BLACK] & BITS.QSIDE_CASTLE) {\r\n                cflags += 'q';\r\n            }\r\n            /* do we have an empty castling flag? */\r\n            cflags = cflags || '-';\r\n            var epflags = ep_square === EMPTY ? '-' : algebraic(ep_square);\r\n            return [fen, turn, cflags, epflags, half_moves, move_number].join(' ');\r\n        }\r\n        function set_header(args) {\r\n            for (var i = 0; i < args.length; i += 2) {\r\n                if (typeof args[i] === 'string' && typeof args[i + 1] === 'string') {\r\n                    header[args[i]] = args[i + 1];\r\n                }\r\n            }\r\n            return header;\r\n        }\r\n        /* called when the initial board setup is changed with put() or remove().\r\n         * modifies the SetUp and FEN properties of the header object.  if the FEN is\r\n         * equal to the default position, the SetUp and FEN are deleted\r\n         * the setup is only updated if history.length is zero, ie moves haven't been\r\n         * made.\r\n         */\r\n        function update_setup(fen) {\r\n            if (history.length > 0)\r\n                return;\r\n            if (fen !== DEFAULT_POSITION) {\r\n                header['SetUp'] = '1';\r\n                header['FEN'] = fen;\r\n            }\r\n            else {\r\n                delete header['SetUp'];\r\n                delete header['FEN'];\r\n            }\r\n        }\r\n        function get(square) {\r\n            var piece = board[SQUARES[square]];\r\n            return piece ? { type: piece.type, color: piece.color } : null;\r\n        }\r\n        function put(piece, square) {\r\n            /* check for valid piece object */\r\n            if (!('type' in piece && 'color' in piece)) {\r\n                return false;\r\n            }\r\n            /* check for piece */\r\n            if (SYMBOLS.indexOf(piece.type.toLowerCase()) === -1) {\r\n                return false;\r\n            }\r\n            /* check for valid square */\r\n            if (!(square in SQUARES)) {\r\n                return false;\r\n            }\r\n            var sq = SQUARES[square];\r\n            /* don't let the user place more than one king */\r\n            if (piece.type == KING &&\r\n                !(kings[piece.color] == EMPTY || kings[piece.color] == sq)) {\r\n                return false;\r\n            }\r\n            board[sq] = { type: piece.type, color: piece.color };\r\n            if (piece.type === KING) {\r\n                kings[piece.color] = sq;\r\n            }\r\n            update_setup(generate_fen());\r\n            return true;\r\n        }\r\n        function remove(square) {\r\n            var piece = get(square);\r\n            board[SQUARES[square]] = null;\r\n            if (piece && piece.type === KING) {\r\n                kings[piece.color] = EMPTY;\r\n            }\r\n            update_setup(generate_fen());\r\n            return piece;\r\n        }\r\n        function build_move(board, from, to, flags, promotion) {\r\n            var move = {\r\n                color: turn,\r\n                from: from,\r\n                to: to,\r\n                flags: flags,\r\n                piece: board[from].type\r\n            };\r\n            if (promotion) {\r\n                move.flags |= BITS.PROMOTION;\r\n                move.promotion = promotion;\r\n            }\r\n            if (board[to]) {\r\n                move.captured = board[to].type;\r\n            }\r\n            else if (flags & BITS.EP_CAPTURE) {\r\n                move.captured = PAWN;\r\n            }\r\n            return move;\r\n        }\r\n        function generate_moves(options) {\r\n            function add_move(board, moves, from, to, flags) {\r\n                /* if pawn promotion */\r\n                if (board[from].type === PAWN &&\r\n                    (rank(to) === RANK_8 || rank(to) === RANK_1)) {\r\n                    var pieces = [QUEEN, ROOK, BISHOP, KNIGHT];\r\n                    for (var i = 0, len = pieces.length; i < len; i++) {\r\n                        moves.push(build_move(board, from, to, flags, pieces[i]));\r\n                    }\r\n                }\r\n                else {\r\n                    moves.push(build_move(board, from, to, flags));\r\n                }\r\n            }\r\n            var moves = [];\r\n            var us = turn;\r\n            var them = swap_color(us);\r\n            var second_rank = { b: RANK_7, w: RANK_2 };\r\n            var first_sq = SQUARES.a8;\r\n            var last_sq = SQUARES.h1;\r\n            var single_square = false;\r\n            /* do we want legal moves? */\r\n            var legal = typeof options !== 'undefined' && 'legal' in options\r\n                ? options.legal\r\n                : true;\r\n            /* are we generating moves for a single square? */\r\n            if (typeof options !== 'undefined' && 'square' in options) {\r\n                if (options.square in SQUARES) {\r\n                    first_sq = last_sq = SQUARES[options.square];\r\n                    single_square = true;\r\n                }\r\n                else {\r\n                    /* invalid square */\r\n                    return [];\r\n                }\r\n            }\r\n            for (var i = first_sq; i <= last_sq; i++) {\r\n                /* did we run off the end of the board */\r\n                if (i & 0x88) {\r\n                    i += 7;\r\n                    continue;\r\n                }\r\n                var piece = board[i];\r\n                if (piece == null || piece.color !== us) {\r\n                    continue;\r\n                }\r\n                if (piece.type === PAWN) {\r\n                    /* single square, non-capturing */\r\n                    var square = i + PAWN_OFFSETS[us][0];\r\n                    if (board[square] == null) {\r\n                        add_move(board, moves, i, square, BITS.NORMAL);\r\n                        /* double square */\r\n                        var square = i + PAWN_OFFSETS[us][1];\r\n                        if (second_rank[us] === rank(i) && board[square] == null) {\r\n                            add_move(board, moves, i, square, BITS.BIG_PAWN);\r\n                        }\r\n                    }\r\n                    /* pawn captures */\r\n                    for (j = 2; j < 4; j++) {\r\n                        var square = i + PAWN_OFFSETS[us][j];\r\n                        if (square & 0x88)\r\n                            continue;\r\n                        if (board[square] != null && board[square].color === them) {\r\n                            add_move(board, moves, i, square, BITS.CAPTURE);\r\n                        }\r\n                        else if (square === ep_square) {\r\n                            add_move(board, moves, i, ep_square, BITS.EP_CAPTURE);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    for (var j = 0, len = PIECE_OFFSETS[piece.type].length; j < len; j++) {\r\n                        var offset = PIECE_OFFSETS[piece.type][j];\r\n                        var square = i;\r\n                        while (true) {\r\n                            square += offset;\r\n                            if (square & 0x88)\r\n                                break;\r\n                            if (board[square] == null) {\r\n                                add_move(board, moves, i, square, BITS.NORMAL);\r\n                            }\r\n                            else {\r\n                                if (board[square].color === us)\r\n                                    break;\r\n                                add_move(board, moves, i, square, BITS.CAPTURE);\r\n                                break;\r\n                            }\r\n                            /* break, if knight or king */\r\n                            if (piece.type === 'n' || piece.type === 'k')\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            /* check for castling if: a) we're generating all moves, or b) we're doing\r\n             * single square move generation on the king's square\r\n             */\r\n            if (!single_square || last_sq === kings[us]) {\r\n                /* king-side castling */\r\n                if (castling[us] & BITS.KSIDE_CASTLE) {\r\n                    var castling_from = kings[us];\r\n                    var castling_to = castling_from + 2;\r\n                    if (board[castling_from + 1] == null &&\r\n                        board[castling_to] == null &&\r\n                        !attacked(them, kings[us]) &&\r\n                        !attacked(them, castling_from + 1) &&\r\n                        !attacked(them, castling_to)) {\r\n                        add_move(board, moves, kings[us], castling_to, BITS.KSIDE_CASTLE);\r\n                    }\r\n                }\r\n                /* queen-side castling */\r\n                if (castling[us] & BITS.QSIDE_CASTLE) {\r\n                    var castling_from = kings[us];\r\n                    var castling_to = castling_from - 2;\r\n                    if (board[castling_from - 1] == null &&\r\n                        board[castling_from - 2] == null &&\r\n                        board[castling_from - 3] == null &&\r\n                        !attacked(them, kings[us]) &&\r\n                        !attacked(them, castling_from - 1) &&\r\n                        !attacked(them, castling_to)) {\r\n                        add_move(board, moves, kings[us], castling_to, BITS.QSIDE_CASTLE);\r\n                    }\r\n                }\r\n            }\r\n            /* return all pseudo-legal moves (this includes moves that allow the king\r\n             * to be captured)\r\n             */\r\n            if (!legal) {\r\n                return moves;\r\n            }\r\n            /* filter out illegal moves */\r\n            var legal_moves = [];\r\n            for (var i = 0, len = moves.length; i < len; i++) {\r\n                make_move(moves[i]);\r\n                if (!king_attacked(us)) {\r\n                    legal_moves.push(moves[i]);\r\n                }\r\n                undo_move();\r\n            }\r\n            return legal_moves;\r\n        }\r\n        /* convert a move from 0x88 coordinates to Standard Algebraic Notation\r\n         * (SAN)\r\n         *\r\n         * @param {boolean} sloppy Use the sloppy SAN generator to work around over\r\n         * disambiguation bugs in Fritz and Chessbase.  See below:\r\n         *\r\n         * r1bqkbnr/ppp2ppp/2n5/1B1pP3/4P3/8/PPPP2PP/RNBQK1NR b KQkq - 2 4\r\n         * 4. ... Nge7 is overly disambiguated because the knight on c6 is pinned\r\n         * 4. ... Ne7 is technically the valid SAN\r\n         */\r\n        function move_to_san(move, sloppy) {\r\n            var output = '';\r\n            if (move.flags & BITS.KSIDE_CASTLE) {\r\n                output = 'O-O';\r\n            }\r\n            else if (move.flags & BITS.QSIDE_CASTLE) {\r\n                output = 'O-O-O';\r\n            }\r\n            else {\r\n                var disambiguator = get_disambiguator(move, sloppy);\r\n                if (move.piece !== PAWN) {\r\n                    output += move.piece.toUpperCase() + disambiguator;\r\n                }\r\n                if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\r\n                    if (move.piece === PAWN) {\r\n                        output += algebraic(move.from)[0];\r\n                    }\r\n                    output += 'x';\r\n                }\r\n                output += algebraic(move.to);\r\n                if (move.flags & BITS.PROMOTION) {\r\n                    output += '=' + move.promotion.toUpperCase();\r\n                }\r\n            }\r\n            make_move(move);\r\n            if (in_check()) {\r\n                if (in_checkmate()) {\r\n                    output += '#';\r\n                }\r\n                else {\r\n                    output += '+';\r\n                }\r\n            }\r\n            undo_move();\r\n            return output;\r\n        }\r\n        // parses all of the decorators out of a SAN string\r\n        function stripped_san(move) {\r\n            return move.replace(/=/, '').replace(/[+#]?[?!]*$/, '');\r\n        }\r\n        function attacked(color, square) {\r\n            for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\r\n                /* did we run off the end of the board */\r\n                if (i & 0x88) {\r\n                    i += 7;\r\n                    continue;\r\n                }\r\n                /* if empty square or wrong color */\r\n                if (board[i] == null || board[i].color !== color)\r\n                    continue;\r\n                var piece = board[i];\r\n                var difference = i - square;\r\n                var index = difference + 119;\r\n                if (ATTACKS[index] & (1 << SHIFTS[piece.type])) {\r\n                    if (piece.type === PAWN) {\r\n                        if (difference > 0) {\r\n                            if (piece.color === WHITE)\r\n                                return true;\r\n                        }\r\n                        else {\r\n                            if (piece.color === BLACK)\r\n                                return true;\r\n                        }\r\n                        continue;\r\n                    }\r\n                    /* if the piece is a knight or a king */\r\n                    if (piece.type === 'n' || piece.type === 'k')\r\n                        return true;\r\n                    var offset = RAYS[index];\r\n                    var j = i + offset;\r\n                    var blocked = false;\r\n                    while (j !== square) {\r\n                        if (board[j] != null) {\r\n                            blocked = true;\r\n                            break;\r\n                        }\r\n                        j += offset;\r\n                    }\r\n                    if (!blocked)\r\n                        return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        function king_attacked(color) {\r\n            return attacked(swap_color(color), kings[color]);\r\n        }\r\n        function in_check() {\r\n            return king_attacked(turn);\r\n        }\r\n        function in_checkmate() {\r\n            return in_check() && generate_moves().length === 0;\r\n        }\r\n        function in_stalemate() {\r\n            return !in_check() && generate_moves().length === 0;\r\n        }\r\n        function insufficient_material() {\r\n            var pieces = {};\r\n            var bishops = [];\r\n            var num_pieces = 0;\r\n            var sq_color = 0;\r\n            for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\r\n                sq_color = (sq_color + 1) % 2;\r\n                if (i & 0x88) {\r\n                    i += 7;\r\n                    continue;\r\n                }\r\n                var piece = board[i];\r\n                if (piece) {\r\n                    pieces[piece.type] = piece.type in pieces ? pieces[piece.type] + 1 : 1;\r\n                    if (piece.type === BISHOP) {\r\n                        bishops.push(sq_color);\r\n                    }\r\n                    num_pieces++;\r\n                }\r\n            }\r\n            /* k vs. k */\r\n            if (num_pieces === 2) {\r\n                return true;\r\n            }\r\n            else if (\r\n            /* k vs. kn .... or .... k vs. kb */\r\n            num_pieces === 3 &&\r\n                (pieces[BISHOP] === 1 || pieces[KNIGHT] === 1)) {\r\n                return true;\r\n            }\r\n            else if (num_pieces === pieces[BISHOP] + 2) {\r\n                /* kb vs. kb where any number of bishops are all on the same color */\r\n                var sum = 0;\r\n                var len = bishops.length;\r\n                for (var i = 0; i < len; i++) {\r\n                    sum += bishops[i];\r\n                }\r\n                if (sum === 0 || sum === len) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        function in_threefold_repetition() {\r\n            /* TODO: while this function is fine for casual use, a better\r\n             * implementation would use a Zobrist key (instead of FEN). the\r\n             * Zobrist key would be maintained in the make_move/undo_move functions,\r\n             * avoiding the costly that we do below.\r\n             */\r\n            var moves = [];\r\n            var positions = {};\r\n            var repetition = false;\r\n            while (true) {\r\n                var move = undo_move();\r\n                if (!move)\r\n                    break;\r\n                moves.push(move);\r\n            }\r\n            while (true) {\r\n                /* remove the last two fields in the FEN string, they're not needed\r\n                 * when checking for draw by rep */\r\n                var fen = generate_fen()\r\n                    .split(' ')\r\n                    .slice(0, 4)\r\n                    .join(' ');\r\n                /* has the position occurred three or move times */\r\n                positions[fen] = fen in positions ? positions[fen] + 1 : 1;\r\n                if (positions[fen] >= 3) {\r\n                    repetition = true;\r\n                }\r\n                if (!moves.length) {\r\n                    break;\r\n                }\r\n                make_move(moves.pop());\r\n            }\r\n            return repetition;\r\n        }\r\n        function push(move) {\r\n            history.push({\r\n                move: move,\r\n                kings: { b: kings.b, w: kings.w },\r\n                turn: turn,\r\n                castling: { b: castling.b, w: castling.w },\r\n                ep_square: ep_square,\r\n                half_moves: half_moves,\r\n                move_number: move_number\r\n            });\r\n        }\r\n        function make_move(move) {\r\n            var us = turn;\r\n            var them = swap_color(us);\r\n            push(move);\r\n            board[move.to] = board[move.from];\r\n            board[move.from] = null;\r\n            /* if ep capture, remove the captured pawn */\r\n            if (move.flags & BITS.EP_CAPTURE) {\r\n                if (turn === BLACK) {\r\n                    board[move.to - 16] = null;\r\n                }\r\n                else {\r\n                    board[move.to + 16] = null;\r\n                }\r\n            }\r\n            /* if pawn promotion, replace with new piece */\r\n            if (move.flags & BITS.PROMOTION) {\r\n                board[move.to] = { type: move.promotion, color: us };\r\n            }\r\n            /* if we moved the king */\r\n            if (board[move.to].type === KING) {\r\n                kings[board[move.to].color] = move.to;\r\n                /* if we castled, move the rook next to the king */\r\n                if (move.flags & BITS.KSIDE_CASTLE) {\r\n                    var castling_to = move.to - 1;\r\n                    var castling_from = move.to + 1;\r\n                    board[castling_to] = board[castling_from];\r\n                    board[castling_from] = null;\r\n                }\r\n                else if (move.flags & BITS.QSIDE_CASTLE) {\r\n                    var castling_to = move.to + 1;\r\n                    var castling_from = move.to - 2;\r\n                    board[castling_to] = board[castling_from];\r\n                    board[castling_from] = null;\r\n                }\r\n                /* turn off castling */\r\n                castling[us] = '';\r\n            }\r\n            /* turn off castling if we move a rook */\r\n            if (castling[us]) {\r\n                for (var i = 0, len = ROOKS[us].length; i < len; i++) {\r\n                    if (move.from === ROOKS[us][i].square &&\r\n                        castling[us] & ROOKS[us][i].flag) {\r\n                        castling[us] ^= ROOKS[us][i].flag;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            /* turn off castling if we capture a rook */\r\n            if (castling[them]) {\r\n                for (var i = 0, len = ROOKS[them].length; i < len; i++) {\r\n                    if (move.to === ROOKS[them][i].square &&\r\n                        castling[them] & ROOKS[them][i].flag) {\r\n                        castling[them] ^= ROOKS[them][i].flag;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            /* if big pawn move, update the en passant square */\r\n            if (move.flags & BITS.BIG_PAWN) {\r\n                if (turn === 'b') {\r\n                    ep_square = move.to - 16;\r\n                }\r\n                else {\r\n                    ep_square = move.to + 16;\r\n                }\r\n            }\r\n            else {\r\n                ep_square = EMPTY;\r\n            }\r\n            /* reset the 50 move counter if a pawn is moved or a piece is captured */\r\n            if (move.piece === PAWN) {\r\n                half_moves = 0;\r\n            }\r\n            else if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\r\n                half_moves = 0;\r\n            }\r\n            else {\r\n                half_moves++;\r\n            }\r\n            if (turn === BLACK) {\r\n                move_number++;\r\n            }\r\n            turn = swap_color(turn);\r\n        }\r\n        function undo_move() {\r\n            var old = history.pop();\r\n            if (old == null) {\r\n                return null;\r\n            }\r\n            var move = old.move;\r\n            kings = old.kings;\r\n            turn = old.turn;\r\n            castling = old.castling;\r\n            ep_square = old.ep_square;\r\n            half_moves = old.half_moves;\r\n            move_number = old.move_number;\r\n            var us = turn;\r\n            var them = swap_color(turn);\r\n            board[move.from] = board[move.to];\r\n            board[move.from].type = move.piece; // to undo any promotions\r\n            board[move.to] = null;\r\n            if (move.flags & BITS.CAPTURE) {\r\n                board[move.to] = { type: move.captured, color: them };\r\n            }\r\n            else if (move.flags & BITS.EP_CAPTURE) {\r\n                var index;\r\n                if (us === BLACK) {\r\n                    index = move.to - 16;\r\n                }\r\n                else {\r\n                    index = move.to + 16;\r\n                }\r\n                board[index] = { type: PAWN, color: them };\r\n            }\r\n            if (move.flags & (BITS.KSIDE_CASTLE | BITS.QSIDE_CASTLE)) {\r\n                var castling_to, castling_from;\r\n                if (move.flags & BITS.KSIDE_CASTLE) {\r\n                    castling_to = move.to + 1;\r\n                    castling_from = move.to - 1;\r\n                }\r\n                else if (move.flags & BITS.QSIDE_CASTLE) {\r\n                    castling_to = move.to - 2;\r\n                    castling_from = move.to + 1;\r\n                }\r\n                board[castling_to] = board[castling_from];\r\n                board[castling_from] = null;\r\n            }\r\n            return move;\r\n        }\r\n        /* this function is used to uniquely identify ambiguous moves */\r\n        function get_disambiguator(move, sloppy) {\r\n            var moves = generate_moves({ legal: !sloppy });\r\n            var from = move.from;\r\n            var to = move.to;\r\n            var piece = move.piece;\r\n            var ambiguities = 0;\r\n            var same_rank = 0;\r\n            var same_file = 0;\r\n            for (var i = 0, len = moves.length; i < len; i++) {\r\n                var ambig_from = moves[i].from;\r\n                var ambig_to = moves[i].to;\r\n                var ambig_piece = moves[i].piece;\r\n                /* if a move of the same piece type ends on the same to square, we'll\r\n                 * need to add a disambiguator to the algebraic notation\r\n                 */\r\n                if (piece === ambig_piece && from !== ambig_from && to === ambig_to) {\r\n                    ambiguities++;\r\n                    if (rank(from) === rank(ambig_from)) {\r\n                        same_rank++;\r\n                    }\r\n                    if (file(from) === file(ambig_from)) {\r\n                        same_file++;\r\n                    }\r\n                }\r\n            }\r\n            if (ambiguities > 0) {\r\n                /* if there exists a similar moving piece on the same rank and file as\r\n                 * the move in question, use the square as the disambiguator\r\n                 */\r\n                if (same_rank > 0 && same_file > 0) {\r\n                    return algebraic(from);\r\n                }\r\n                else if (same_file > 0) {\r\n                    /* if the moving piece rests on the same file, use the rank symbol as the\r\n                     * disambiguator\r\n                     */\r\n                    return algebraic(from).charAt(1);\r\n                }\r\n                else {\r\n                    /* else use the file symbol */\r\n                    return algebraic(from).charAt(0);\r\n                }\r\n            }\r\n            return '';\r\n        }\r\n        function ascii() {\r\n            var s = '   +------------------------+\\n';\r\n            for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\r\n                /* display the rank */\r\n                if (file(i) === 0) {\r\n                    s += ' ' + '87654321'[rank(i)] + ' |';\r\n                }\r\n                /* empty piece */\r\n                if (board[i] == null) {\r\n                    s += ' . ';\r\n                }\r\n                else {\r\n                    var piece = board[i].type;\r\n                    var color = board[i].color;\r\n                    var symbol = color === WHITE ? piece.toUpperCase() : piece.toLowerCase();\r\n                    s += ' ' + symbol + ' ';\r\n                }\r\n                if ((i + 1) & 0x88) {\r\n                    s += '|\\n';\r\n                    i += 8;\r\n                }\r\n            }\r\n            s += '   +------------------------+\\n';\r\n            s += '     a  b  c  d  e  f  g  h\\n';\r\n            return s;\r\n        }\r\n        // convert a move from Standard Algebraic Notation (SAN) to 0x88 coordinates\r\n        function move_from_san(move, sloppy) {\r\n            // strip off any move decorations: e.g Nf3+?!\r\n            var clean_move = stripped_san(move);\r\n            // if we're using the sloppy parser run a regex to grab piece, to, and from\r\n            // this should parse invalid SAN like: Pe2-e4, Rc1c4, Qf3xf7\r\n            if (sloppy) {\r\n                var matches = clean_move.match(/([pnbrqkPNBRQK])?([a-h][1-8])x?-?([a-h][1-8])([qrbnQRBN])?/);\r\n                if (matches) {\r\n                    var piece = matches[1];\r\n                    var from = matches[2];\r\n                    var to = matches[3];\r\n                    var promotion = matches[4];\r\n                }\r\n            }\r\n            var moves = generate_moves();\r\n            for (var i = 0, len = moves.length; i < len; i++) {\r\n                // try the strict parser first, then the sloppy parser if requested\r\n                // by the user\r\n                if (clean_move === stripped_san(move_to_san(moves[i])) ||\r\n                    (sloppy && clean_move === stripped_san(move_to_san(moves[i], true)))) {\r\n                    return moves[i];\r\n                }\r\n                else {\r\n                    if (matches &&\r\n                        (!piece || piece.toLowerCase() == moves[i].piece) &&\r\n                        SQUARES[from] == moves[i].from &&\r\n                        SQUARES[to] == moves[i].to &&\r\n                        (!promotion || promotion.toLowerCase() == moves[i].promotion)) {\r\n                        return moves[i];\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        /*****************************************************************************\r\n         * UTILITY FUNCTIONS\r\n         ****************************************************************************/\r\n        function rank(i) {\r\n            return i >> 4;\r\n        }\r\n        function file(i) {\r\n            return i & 15;\r\n        }\r\n        function algebraic(i) {\r\n            var f = file(i), r = rank(i);\r\n            return 'abcdefgh'.substring(f, f + 1) + '87654321'.substring(r, r + 1);\r\n        }\r\n        function swap_color(c) {\r\n            return c === WHITE ? BLACK : WHITE;\r\n        }\r\n        function is_digit(c) {\r\n            return '0123456789'.indexOf(c) !== -1;\r\n        }\r\n        /* pretty = external move object */\r\n        function make_pretty(ugly_move) {\r\n            var move = clone(ugly_move);\r\n            move.san = move_to_san(move, false);\r\n            move.to = algebraic(move.to);\r\n            move.from = algebraic(move.from);\r\n            var flags = '';\r\n            for (var flag in BITS) {\r\n                if (BITS[flag] & move.flags) {\r\n                    flags += FLAGS[flag];\r\n                }\r\n            }\r\n            move.flags = flags;\r\n            return move;\r\n        }\r\n        function clone(obj) {\r\n            var dupe = obj instanceof Array ? [] : {};\r\n            for (var property in obj) {\r\n                if (typeof property === 'object') {\r\n                    dupe[property] = clone(obj[property]);\r\n                }\r\n                else {\r\n                    dupe[property] = obj[property];\r\n                }\r\n            }\r\n            return dupe;\r\n        }\r\n        function trim(str) {\r\n            return str.replace(/^\\s+|\\s+$/g, '');\r\n        }\r\n        /*****************************************************************************\r\n         * DEBUGGING UTILITIES\r\n         ****************************************************************************/\r\n        function perft(depth) {\r\n            var moves = generate_moves({ legal: false });\r\n            var nodes = 0;\r\n            var color = turn;\r\n            for (var i = 0, len = moves.length; i < len; i++) {\r\n                make_move(moves[i]);\r\n                if (!king_attacked(color)) {\r\n                    if (depth - 1 > 0) {\r\n                        var child_nodes = perft(depth - 1);\r\n                        nodes += child_nodes;\r\n                    }\r\n                    else {\r\n                        nodes++;\r\n                    }\r\n                }\r\n                undo_move();\r\n            }\r\n            return nodes;\r\n        }\r\n        return {\r\n            /***************************************************************************\r\n             * PUBLIC CONSTANTS (is there a better way to do this?)\r\n             **************************************************************************/\r\n            WHITE: WHITE,\r\n            BLACK: BLACK,\r\n            PAWN: PAWN,\r\n            KNIGHT: KNIGHT,\r\n            BISHOP: BISHOP,\r\n            ROOK: ROOK,\r\n            QUEEN: QUEEN,\r\n            KING: KING,\r\n            SQUARES: (function () {\r\n                /* from the ECMA-262 spec (section 12.6.4):\r\n                 * \"The mechanics of enumerating the properties ... is\r\n                 * implementation dependent\"\r\n                 * so: for (var sq in SQUARES) { keys.push(sq); } might not be\r\n                 * ordered correctly\r\n                 */\r\n                var keys = [];\r\n                for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\r\n                    if (i & 0x88) {\r\n                        i += 7;\r\n                        continue;\r\n                    }\r\n                    keys.push(algebraic(i));\r\n                }\r\n                return keys;\r\n            })(),\r\n            FLAGS: FLAGS,\r\n            /***************************************************************************\r\n             * PUBLIC API\r\n             **************************************************************************/\r\n            load: function (fen) {\r\n                return load(fen);\r\n            },\r\n            reset: function () {\r\n                return reset();\r\n            },\r\n            moves: function (options) {\r\n                /* The internal representation of a chess move is in 0x88 format, and\r\n                 * not meant to be human-readable.  The code below converts the 0x88\r\n                 * square coordinates to algebraic coordinates.  It also prunes an\r\n                 * unnecessary move keys resulting from a verbose call.\r\n                 */\r\n                var ugly_moves = generate_moves(options);\r\n                var moves = [];\r\n                for (var i = 0, len = ugly_moves.length; i < len; i++) {\r\n                    /* does the user want a full move object (most likely not), or just\r\n                     * SAN\r\n                     */\r\n                    if (typeof options !== 'undefined' &&\r\n                        'verbose' in options &&\r\n                        options.verbose) {\r\n                        moves.push(make_pretty(ugly_moves[i]));\r\n                    }\r\n                    else {\r\n                        moves.push(move_to_san(ugly_moves[i], false));\r\n                    }\r\n                }\r\n                return moves;\r\n            },\r\n            in_check: function () {\r\n                return in_check();\r\n            },\r\n            in_checkmate: function () {\r\n                return in_checkmate();\r\n            },\r\n            in_stalemate: function () {\r\n                return in_stalemate();\r\n            },\r\n            in_draw: function () {\r\n                return (half_moves >= 100 ||\r\n                    in_stalemate() ||\r\n                    insufficient_material() ||\r\n                    in_threefold_repetition());\r\n            },\r\n            insufficient_material: function () {\r\n                return insufficient_material();\r\n            },\r\n            in_threefold_repetition: function () {\r\n                return in_threefold_repetition();\r\n            },\r\n            game_over: function () {\r\n                return (half_moves >= 100 ||\r\n                    in_checkmate() ||\r\n                    in_stalemate() ||\r\n                    insufficient_material() ||\r\n                    in_threefold_repetition());\r\n            },\r\n            validate_fen: function (fen) {\r\n                return validate_fen(fen);\r\n            },\r\n            fen: function () {\r\n                return generate_fen();\r\n            },\r\n            board: function () {\r\n                var output = [], row = [];\r\n                for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\r\n                    if (board[i] == null) {\r\n                        row.push(null);\r\n                    }\r\n                    else {\r\n                        row.push({ type: board[i].type, color: board[i].color });\r\n                    }\r\n                    if ((i + 1) & 0x88) {\r\n                        output.push(row);\r\n                        row = [];\r\n                        i += 8;\r\n                    }\r\n                }\r\n                return output;\r\n            },\r\n            pgn: function (options) {\r\n                /* using the specification from http://www.chessclub.com/help/PGN-spec\r\n                 * example for html usage: .pgn({ max_width: 72, newline_char: \"<br />\" })\r\n                 */\r\n                var newline = typeof options === 'object' && typeof options.newline_char === 'string'\r\n                    ? options.newline_char\r\n                    : '\\n';\r\n                var max_width = typeof options === 'object' && typeof options.max_width === 'number'\r\n                    ? options.max_width\r\n                    : 0;\r\n                var result = [];\r\n                var header_exists = false;\r\n                /* add the PGN header headerrmation */\r\n                for (var i in header) {\r\n                    /* TODO: order of enumerated properties in header object is not\r\n                     * guaranteed, see ECMA-262 spec (section 12.6.4)\r\n                     */\r\n                    result.push('[' + i + ' \"' + header[i] + '\"]' + newline);\r\n                    header_exists = true;\r\n                }\r\n                if (header_exists && history.length) {\r\n                    result.push(newline);\r\n                }\r\n                /* pop all of history onto reversed_history */\r\n                var reversed_history = [];\r\n                while (history.length > 0) {\r\n                    reversed_history.push(undo_move());\r\n                }\r\n                var moves = [];\r\n                var move_string = '';\r\n                /* build the list of moves.  a move_string looks like: \"3. e3 e6\" */\r\n                while (reversed_history.length > 0) {\r\n                    var move = reversed_history.pop();\r\n                    /* if the position started with black to move, start PGN with 1. ... */\r\n                    if (!history.length && move.color === 'b') {\r\n                        move_string = move_number + '. ...';\r\n                    }\r\n                    else if (move.color === 'w') {\r\n                        /* store the previous generated move_string if we have one */\r\n                        if (move_string.length) {\r\n                            moves.push(move_string);\r\n                        }\r\n                        move_string = move_number + '.';\r\n                    }\r\n                    move_string = move_string + ' ' + move_to_san(move, false);\r\n                    make_move(move);\r\n                }\r\n                /* are there any other leftover moves? */\r\n                if (move_string.length) {\r\n                    moves.push(move_string);\r\n                }\r\n                /* is there a result? */\r\n                if (typeof header.Result !== 'undefined') {\r\n                    moves.push(header.Result);\r\n                }\r\n                /* history should be back to what is was before we started generating PGN,\r\n                 * so join together moves\r\n                 */\r\n                if (max_width === 0) {\r\n                    return result.join('') + moves.join(' ');\r\n                }\r\n                /* wrap the PGN output at max_width */\r\n                var current_width = 0;\r\n                for (var i = 0; i < moves.length; i++) {\r\n                    /* if the current move will push past max_width */\r\n                    if (current_width + moves[i].length > max_width && i !== 0) {\r\n                        /* don't end the line with whitespace */\r\n                        if (result[result.length - 1] === ' ') {\r\n                            result.pop();\r\n                        }\r\n                        result.push(newline);\r\n                        current_width = 0;\r\n                    }\r\n                    else if (i !== 0) {\r\n                        result.push(' ');\r\n                        current_width++;\r\n                    }\r\n                    result.push(moves[i]);\r\n                    current_width += moves[i].length;\r\n                }\r\n                return result.join('');\r\n            },\r\n            load_pgn: function (pgn, options) {\r\n                // allow the user to specify the sloppy move parser to work around over\r\n                // disambiguation bugs in Fritz and Chessbase\r\n                var sloppy = typeof options !== 'undefined' && 'sloppy' in options\r\n                    ? options.sloppy\r\n                    : false;\r\n                function mask(str) {\r\n                    return str.replace(/\\\\/g, '\\\\');\r\n                }\r\n                function has_keys(object) {\r\n                    for (var key in object) {\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                }\r\n                function parse_pgn_header(header, options) {\r\n                    var newline_char = typeof options === 'object' &&\r\n                        typeof options.newline_char === 'string'\r\n                        ? options.newline_char\r\n                        : '\\r?\\n';\r\n                    var header_obj = {};\r\n                    var headers = header.split(new RegExp(mask(newline_char)));\r\n                    var key = '';\r\n                    var value = '';\r\n                    for (var i = 0; i < headers.length; i++) {\r\n                        key = headers[i].replace(/^\\[([A-Z][A-Za-z]*)\\s.*\\]$/, '$1');\r\n                        value = headers[i].replace(/^\\[[A-Za-z]+\\s\"(.*)\"\\ *\\]$/, '$1');\r\n                        if (trim(key).length > 0) {\r\n                            header_obj[key] = value;\r\n                        }\r\n                    }\r\n                    return header_obj;\r\n                }\r\n                var newline_char = typeof options === 'object' && typeof options.newline_char === 'string'\r\n                    ? options.newline_char\r\n                    : '\\r?\\n';\r\n                // RegExp to split header. Takes advantage of the fact that header and movetext\r\n                // will always have a blank line between them (ie, two newline_char's).\r\n                // With default newline_char, will equal: /^(\\[((?:\\r?\\n)|.)*\\])(?:\\r?\\n){2}/\r\n                var header_regex = new RegExp('^(\\\\[((?:' +\r\n                    mask(newline_char) +\r\n                    ')|.)*\\\\])' +\r\n                    '(?:' +\r\n                    mask(newline_char) +\r\n                    '){2}');\r\n                // If no header given, begin with moves.\r\n                var header_string = header_regex.test(pgn)\r\n                    ? header_regex.exec(pgn)[1]\r\n                    : '';\r\n                // Put the board in the starting position\r\n                reset();\r\n                /* parse PGN header */\r\n                var headers = parse_pgn_header(header_string, options);\r\n                for (var key in headers) {\r\n                    set_header([key, headers[key]]);\r\n                }\r\n                /* load the starting position indicated by [Setup '1'] and\r\n                 * [FEN position] */\r\n                if (headers['SetUp'] === '1') {\r\n                    if (!('FEN' in headers && load(headers['FEN'], true))) {\r\n                        // second argument to load: don't clear the headers\r\n                        return false;\r\n                    }\r\n                }\r\n                /* delete header to get the moves */\r\n                var ms = pgn\r\n                    .replace(header_string, '')\r\n                    .replace(new RegExp(mask(newline_char), 'g'), ' ');\r\n                /* delete comments */\r\n                ms = ms.replace(/(\\{[^}]+\\})+?/g, '');\r\n                /* delete recursive annotation variations */\r\n                var rav_regex = /(\\([^\\(\\)]+\\))+?/g;\r\n                while (rav_regex.test(ms)) {\r\n                    ms = ms.replace(rav_regex, '');\r\n                }\r\n                /* delete move numbers */\r\n                ms = ms.replace(/\\d+\\.(\\.\\.)?/g, '');\r\n                /* delete ... indicating black to move */\r\n                ms = ms.replace(/\\.\\.\\./g, '');\r\n                /* delete numeric annotation glyphs */\r\n                ms = ms.replace(/\\$\\d+/g, '');\r\n                /* trim and get array of moves */\r\n                var moves = trim(ms).split(new RegExp(/\\s+/));\r\n                /* delete empty entries */\r\n                moves = moves\r\n                    .join(',')\r\n                    .replace(/,,+/g, ',')\r\n                    .split(',');\r\n                var move = '';\r\n                for (var half_move = 0; half_move < moves.length - 1; half_move++) {\r\n                    move = move_from_san(moves[half_move], sloppy);\r\n                    /* move not possible! (don't clear the board to examine to show the\r\n                     * latest valid position)\r\n                     */\r\n                    if (move == null) {\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        make_move(move);\r\n                    }\r\n                }\r\n                /* examine last move */\r\n                move = moves[moves.length - 1];\r\n                if (POSSIBLE_RESULTS.indexOf(move) > -1) {\r\n                    if (has_keys(header) && typeof header.Result === 'undefined') {\r\n                        set_header(['Result', move]);\r\n                    }\r\n                }\r\n                else {\r\n                    move = move_from_san(move, sloppy);\r\n                    if (move == null) {\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        make_move(move);\r\n                    }\r\n                }\r\n                return true;\r\n            },\r\n            header: function () {\r\n                return set_header(arguments);\r\n            },\r\n            ascii: function () {\r\n                return ascii();\r\n            },\r\n            turn: function () {\r\n                return turn;\r\n            },\r\n            move: function (move, options) {\r\n                /* The move function can be called with in the following parameters:\r\n                 *\r\n                 * .move('Nxb7')      <- where 'move' is a case-sensitive SAN string\r\n                 *\r\n                 * .move({ from: 'h7', <- where the 'move' is a move object (additional\r\n                 *         to :'h8',      fields are ignored)\r\n                 *         promotion: 'q',\r\n                 *      })\r\n                 */\r\n                // allow the user to specify the sloppy move parser to work around over\r\n                // disambiguation bugs in Fritz and Chessbase\r\n                var sloppy = typeof options !== 'undefined' && 'sloppy' in options\r\n                    ? options.sloppy\r\n                    : false;\r\n                var move_obj = null;\r\n                if (typeof move === 'string') {\r\n                    move_obj = move_from_san(move, sloppy);\r\n                }\r\n                else if (typeof move === 'object') {\r\n                    var moves = generate_moves();\r\n                    /* convert the pretty move object to an ugly move object */\r\n                    for (var i = 0, len = moves.length; i < len; i++) {\r\n                        if (move.from === algebraic(moves[i].from) &&\r\n                            move.to === algebraic(moves[i].to) &&\r\n                            (!('promotion' in moves[i]) ||\r\n                                move.promotion === moves[i].promotion)) {\r\n                            move_obj = moves[i];\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                /* failed to find move */\r\n                if (!move_obj) {\r\n                    return null;\r\n                }\r\n                /* need to make a copy of move because we can't generate SAN after the\r\n                 * move is made\r\n                 */\r\n                var pretty_move = make_pretty(move_obj);\r\n                make_move(move_obj);\r\n                return pretty_move;\r\n            },\r\n            undo: function () {\r\n                var move = undo_move();\r\n                return move ? make_pretty(move) : null;\r\n            },\r\n            clear: function () {\r\n                return clear();\r\n            },\r\n            put: function (piece, square) {\r\n                return put(piece, square);\r\n            },\r\n            get: function (square) {\r\n                return get(square);\r\n            },\r\n            remove: function (square) {\r\n                return remove(square);\r\n            },\r\n            perft: function (depth) {\r\n                return perft(depth);\r\n            },\r\n            square_color: function (square) {\r\n                if (square in SQUARES) {\r\n                    var sq_0x88 = SQUARES[square];\r\n                    return (rank(sq_0x88) + file(sq_0x88)) % 2 === 0 ? 'light' : 'dark';\r\n                }\r\n                return null;\r\n            },\r\n            history: function (options) {\r\n                var reversed_history = [];\r\n                var move_history = [];\r\n                var verbose = typeof options !== 'undefined' &&\r\n                    'verbose' in options &&\r\n                    options.verbose;\r\n                while (history.length > 0) {\r\n                    reversed_history.push(undo_move());\r\n                }\r\n                while (reversed_history.length > 0) {\r\n                    var move = reversed_history.pop();\r\n                    if (verbose) {\r\n                        move_history.push(make_pretty(move));\r\n                    }\r\n                    else {\r\n                        move_history.push(move_to_san(move));\r\n                    }\r\n                    make_move(move);\r\n                }\r\n                return move_history;\r\n            }\r\n        };\r\n    };\r\n    exports.Chess = Chess;\r\n});\r\ndefine(\"metas/pawnssquare/modules/logic/movement\", [\"require\", \"exports\", \"metas/pawnssquare/modules/resources/modelResources\", \"metas/pawnssquare/modules/genFunc/genFunc\", \"metas/pawnssquare/modules/logic/chess\", \"metas/pawnssquare/modules/dat/gameData\", \"metas/pawnssquare/modules/UI/controllerUIEvent\", \"metas/pawnssquare/modules/resources/soundResources\", \"metas/pawnssquare/modules/dat/enumTypes\"], function (require, exports, modelResources_2, genFunc_5, chess_js_1, gameData_4, controllerUIEvent_6, soundResources_2, enumTypes_6) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.MovementSys = void 0;\r\n    var MovementSys = /** @class */ (function () {\r\n        function MovementSys(parent) {\r\n            var _this = this;\r\n            this.input = Input.instance;\r\n            this.inGameStatus = undefined;\r\n            this.isTurn = false;\r\n            this.intersectData = {\r\n                intersectPoint: undefined,\r\n                chessPos: undefined,\r\n                valid: false\r\n            };\r\n            this.movementNotation = undefined;\r\n            this.isFirstTile = false;\r\n            this.firstTileData = {\r\n                type: undefined,\r\n                chessPos: undefined\r\n            };\r\n            this.isPromotion = false;\r\n            this.promotionPc = undefined;\r\n            this.gameLogicParent = parent;\r\n            this.cam = Camera.instance;\r\n            this.centerPoint = new Vector3(8, 0.5, 8);\r\n            this.scale = 1;\r\n            this.chessplay = chess_js_1.Chess();\r\n            this.markEntity = new Entity();\r\n            this.markEntity.addComponent(modelResources_2.default.defaultMovementModel.move_mark_red);\r\n            this.markEntity.addComponent(new Transform({\r\n                position: new Vector3(this.centerPoint.x, 0, this.centerPoint.z)\r\n            }));\r\n            this.tileLock = new Entity();\r\n            this.tileLock.addComponent(modelResources_2.default.defaultMovementModel.move_mark_green);\r\n            this.tileLock.addComponent(new Transform({\r\n                position: new Vector3(this.centerPoint.x, 0, this.centerPoint.z)\r\n            }));\r\n            engine.addEntity(this.markEntity);\r\n            engine.addEntity(this.tileLock);\r\n            engine.addSystem(this);\r\n            this.input.subscribe(\"BUTTON_DOWN\", ActionButton.POINTER, false, function (e) {\r\n                if (_this.isTurn) {\r\n                    _this.clickMoveLogic();\r\n                }\r\n            });\r\n            this.gameLogicParent.UIEvents.addListener(controllerUIEvent_6.UIPromotionEvent, null, function (_a) {\r\n                var uiType = _a.uiType, pieceType = _a.pieceType;\r\n                if (uiType === 'returnPromotionPiece') {\r\n                    _this.isPromotion = false;\r\n                    _this.promotionPc = pieceType;\r\n                    if (_this.chessplay.turn() === 'w')\r\n                        _this.promotionPc = pieceType.toUpperCase();\r\n                    log('promotion event listener return value', _this.promotionPc);\r\n                    _this.movementNotation = _this.movementNotation + '=' + _this.promotionPc;\r\n                    _this.chessplay.move(_this.movementNotation, { sloppy: true });\r\n                    _this.sendMovement(_this.movementNotation);\r\n                }\r\n            });\r\n            this.selectAudioEnt = new Entity();\r\n            this.selectAudioEnt.addComponent(new Transform({\r\n                position: new Vector3(24, 1, 24)\r\n            }));\r\n            engine.addEntity(this.selectAudioEnt);\r\n            this.selectAudio = soundResources_2.default.defaultAudioSource.piece_select;\r\n            this.selectAudioEnt.addComponent(this.selectAudio);\r\n            this.selectAudio.volume = 2;\r\n            this.selectAudio.playing = false;\r\n            this.selectAudio.loop = false;\r\n        }\r\n        MovementSys.prototype.updatePivot = function (pivot, scale) {\r\n            this.centerPoint = pivot;\r\n            this.scale = scale;\r\n            this.markEntity.getComponent(Transform).position.set(this.centerPoint.x, 0, this.centerPoint.z);\r\n            this.markEntity.getComponent(Transform).scale.setAll(scale);\r\n            this.tileLock.getComponent(Transform).position.set(this.centerPoint.x, 0, this.centerPoint.z);\r\n            this.tileLock.getComponent(Transform).scale.setAll(scale);\r\n            this.selectAudioEnt.getComponent(Transform).position.set(pivot.x, 1, pivot.z);\r\n        };\r\n        MovementSys.prototype.init = function (fen) {\r\n            this.syncChessPlay(fen);\r\n            this.isPromotion = false;\r\n        };\r\n        MovementSys.prototype.syncChessPlay = function (fen) {\r\n            this.chessplay.load(fen);\r\n        };\r\n        MovementSys.prototype.turn = function (_turn) {\r\n            this.isTurn = _turn;\r\n        };\r\n        MovementSys.prototype.validateClickColor = function (chessPlayDataColor) {\r\n            var userStatus = gameData_4.userDat.getInGameStatus();\r\n            if (chessPlayDataColor === 'w') {\r\n                if (userStatus === enumTypes_6.PlayerStatus.White || userStatus === enumTypes_6.PlayerStatus.WhiteAndBlack)\r\n                    return true;\r\n            }\r\n            else if (chessPlayDataColor === 'b') {\r\n                if (userStatus === enumTypes_6.PlayerStatus.Black || userStatus === enumTypes_6.PlayerStatus.WhiteAndBlack)\r\n                    return true;\r\n            }\r\n            else\r\n                return false;\r\n        };\r\n        MovementSys.prototype.clickMoveLogic = function () {\r\n            var chessPosSelect = this.intersectData.chessPos;\r\n            var chessPlayData = this.chessplay.get(chessPosSelect);\r\n            if (!this.isFirstTile) { //1ST PIECE SELECT\r\n                if (chessPlayData !== null) {\r\n                    this.selectAudio.playOnce();\r\n                    //if (chessPlayData.color === userDat.getInGameStatus()) {\r\n                    if (this.validateClickColor(chessPlayData.color)) {\r\n                        if (chessPlayData.type !== undefined) {\r\n                            //log(\"<movement>_LOCK_AT: \", chessPosSelect)\r\n                            this.firstTileData.type = chessPlayData.type;\r\n                            if (chessPlayData.color === 'w') {\r\n                                this.firstTileData.type = this.firstTileData.type.toUpperCase();\r\n                            }\r\n                            this.firstTileData.chessPos = chessPosSelect;\r\n                            this.tileLock.getComponent(Transform).position = this.intersectData.intersectPoint;\r\n                            this.tileLock.getComponent(Transform).position.addInPlace(new Vector3(0, 0.008, 0));\r\n                            this.isFirstTile = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else { //2ND LOCATION SELECT WHICH MEANS MOVEMENT PLACE\r\n                //log(\"<movement>_MOVE_TO: \", chessPosSelect)\r\n                //movement notation (sloppy): type#origin#target -> ex: Pe2e4 (white pawn e2 to e4)\r\n                this.movementNotation = this.firstTileData.type + this.firstTileData.chessPos + chessPosSelect;\r\n                //log(\"MOVEMENT: \", this.movementNotation)\r\n                var checkMove = this.chessplay.move(this.movementNotation, { sloppy: true });\r\n                //log('check move return :', checkMove)\r\n                if (checkMove === null) {\r\n                    this.selectAudio.playOnce();\r\n                    if (chessPlayData !== null && this.validateClickColor(chessPlayData.color)) {\r\n                        this.firstTileData.type = chessPlayData.type;\r\n                        if (chessPlayData.color === 'w') {\r\n                            this.firstTileData.type = this.firstTileData.type.toUpperCase();\r\n                        }\r\n                        this.firstTileData.chessPos = chessPosSelect;\r\n                        this.tileLock.getComponent(Transform).position = this.intersectData.intersectPoint;\r\n                        this.tileLock.getComponent(Transform).position.addInPlace(new Vector3(0, 0.008, 0));\r\n                    }\r\n                }\r\n                else {\r\n                    if (checkMove.flags === 'cp' || checkMove.flags === 'np') {\r\n                        this.isPromotion = true;\r\n                        this.chessplay.undo();\r\n                        //setup UI Promotion\r\n                        this.gameLogicParent.UIEvents.fireEvent(new controllerUIEvent_6.UINotificationEvent('promotionUI', true, ''));\r\n                    }\r\n                    //if not promotion movement send the movement notation\r\n                    if (!this.isPromotion) {\r\n                        this.sendMovement(this.movementNotation);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        MovementSys.prototype.sendMovement = function (_movementNotation) {\r\n            this.isFirstTile = false;\r\n            log('------------------' +\r\n                '\\nmovement detect: ', _movementNotation);\r\n            this.gameLogicParent.makeMovement(_movementNotation);\r\n        };\r\n        MovementSys.prototype.update = function (dt) {\r\n            if (this.isTurn && !this.isPromotion) {\r\n                this.intersectData = genFunc_5.genFunc.getIntersectXZData(this.cam, this.centerPoint, this.scale);\r\n                //intersect data validation, avoid chesspos outside of 8x8 board\r\n                if (this.intersectData.valid)\r\n                    this.markEntity.getComponent(Transform).position = this.intersectData.intersectPoint;\r\n            }\r\n            else {\r\n                this.markEntity.getComponent(Transform).position.y = -1;\r\n                this.tileLock.getComponent(Transform).position.y = -1;\r\n            }\r\n        };\r\n        return MovementSys;\r\n    }());\r\n    exports.MovementSys = MovementSys;\r\n});\r\ndefine(\"metas/pawnssquare/modules/board/pieces\", [\"require\", \"exports\", \"metas/pawnssquare/modules/resources/modelResources\", \"metas/pawnssquare/modules/genFunc/genFunc\"], function (require, exports, modelResources_3, genFunc_6) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.ChessPieces = void 0;\r\n    var ChessPieces = /** @class */ (function () {\r\n        function ChessPieces(ID, sceneLocation, type, chessPos, scale) {\r\n            this.entity = new Entity();\r\n            this.sceneLocation = sceneLocation;\r\n            this.scale = scale;\r\n            this.type = type;\r\n            this.chessPos = chessPos;\r\n            if (chessPos !== undefined)\r\n                this.localPos = genFunc_6.genFunc.chessPosToWorldPos(chessPos, sceneLocation, scale);\r\n            if (this.type === 'P') {\r\n                this.weigh = 1;\r\n                this.entity.addComponent(modelResources_3.default.defaultChessModel.P);\r\n            }\r\n            else if (this.type === 'R') {\r\n                this.weigh = 4;\r\n                this.entity.addComponent(modelResources_3.default.defaultChessModel.R);\r\n            }\r\n            else if (this.type === 'N') {\r\n                this.weigh = 2;\r\n                this.entity.addComponent(modelResources_3.default.defaultChessModel.N);\r\n            }\r\n            else if (this.type === 'B') {\r\n                this.weigh = 3;\r\n                this.entity.addComponent(modelResources_3.default.defaultChessModel.B);\r\n            }\r\n            else if (this.type === 'Q') {\r\n                this.weigh = 5;\r\n                this.entity.addComponent(modelResources_3.default.defaultChessModel.Q);\r\n            }\r\n            else if (this.type === 'K') {\r\n                this.weigh = 0;\r\n                this.entity.addComponent(modelResources_3.default.defaultChessModel.K);\r\n            }\r\n            else if (this.type === 'p') {\r\n                this.weigh = 1;\r\n                this.entity.addComponent(modelResources_3.default.defaultChessModel.p);\r\n            }\r\n            else if (this.type === 'r') {\r\n                this.weigh = 4;\r\n                this.entity.addComponent(modelResources_3.default.defaultChessModel.r);\r\n            }\r\n            else if (this.type === 'n') {\r\n                this.weigh = 2;\r\n                this.entity.addComponent(modelResources_3.default.defaultChessModel.n);\r\n            }\r\n            else if (this.type === 'b') {\r\n                this.weigh = 3;\r\n                this.entity.addComponent(modelResources_3.default.defaultChessModel.b);\r\n            }\r\n            else if (this.type === 'q') {\r\n                this.weigh = 5;\r\n                this.entity.addComponent(modelResources_3.default.defaultChessModel.q);\r\n            }\r\n            else if (this.type === 'k') {\r\n                this.weigh = 0;\r\n                this.entity.addComponent(modelResources_3.default.defaultChessModel.k);\r\n            }\r\n            this.entity.addComponent(new Transform({\r\n                position: this.localPos,\r\n                scale: new Vector3(scale, scale, scale)\r\n            }));\r\n        }\r\n        ChessPieces.prototype.setScale = function (pivot, scale) {\r\n            this.sceneLocation.set(pivot.x, pivot.y, pivot.z);\r\n            this.scale = scale;\r\n            //log(\"pivot: \", pivot, \"scale: \", scale)\r\n            if (this.chessPos !== undefined) {\r\n                this.entity.getComponent(Transform).position = genFunc_6.genFunc.chessPosToWorldPos(this.chessPos, pivot, scale);\r\n                this.entity.getComponent(Transform).scale.setAll(scale);\r\n            }\r\n        };\r\n        ChessPieces.prototype.movePiecePos = function (chessPos) {\r\n            this.chessPos = chessPos;\r\n            var targetWorldPos;\r\n            targetWorldPos = genFunc_6.genFunc.chessPosToWorldPos(chessPos, this.sceneLocation, this.scale);\r\n            if (targetWorldPos !== undefined) {\r\n                this.entity.getComponent(Transform).position = targetWorldPos;\r\n                return true;\r\n            }\r\n            else\r\n                return false;\r\n        };\r\n        ChessPieces.prototype.removePieceFromBoard = function () {\r\n            this.localPos = undefined;\r\n            this.chessPos = undefined;\r\n            engine.removeEntity(this.entity);\r\n        };\r\n        ChessPieces.prototype.changePiece = function (newType) {\r\n            this.entity.addComponentOrReplace(modelResources_3.default.defaultChessModel[newType]);\r\n        };\r\n        return ChessPieces;\r\n    }());\r\n    exports.ChessPieces = ChessPieces;\r\n});\r\ndefine(\"metas/pawnssquare/modules/board/board\", [\"require\", \"exports\", \"metas/pawnssquare/modules/genFunc/genFunc\", \"metas/pawnssquare/modules/board/pieces\", \"node_modules/decentraland-ecs-utils/index\", \"metas/pawnssquare/modules/UI/controllerUIEvent\", \"metas/pawnssquare/modules/dat/gameData\", \"metas/pawnssquare/modules/resources/soundResources\"], function (require, exports, genFunc_7, pieces_1, index_16, controllerUIEvent_7, gameData_5, soundResources_3) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.BoardPieces = void 0;\r\n    var BoardPieces = /** @class */ (function () {\r\n        function BoardPieces(_gameLogicParent) {\r\n            this.pivotPos = new Vector3(8, 0.5, 8);\r\n            this.scale = 1;\r\n            this.piecesSet = new Array(48);\r\n            this.piecesCaptureWhite = [];\r\n            this.piecesCaptureBlack = [];\r\n            this.gameLogicParent = _gameLogicParent;\r\n            this.boardPivot = new Entity();\r\n            this.boardPivot.addComponent(new Transform({\r\n                position: new Vector3(8, 0.5, 8)\r\n            }));\r\n            engine.addEntity(this.boardPivot);\r\n            this.prepareAudioEnt = new Entity();\r\n            this.prepareAudioEnt.addComponent(new Transform({\r\n                position: new Vector3(8, 0.5, 8)\r\n            }));\r\n            engine.addEntity(this.prepareAudioEnt);\r\n            this.moveAudioEnt = new Entity();\r\n            this.moveAudioEnt.addComponent(new Transform({\r\n                position: new Vector3(8, 0.5, 8)\r\n            }));\r\n            engine.addEntity(this.moveAudioEnt);\r\n            this.prepareAudio = soundResources_3.default.defaultAudioSource.board_prepare;\r\n            this.prepareAudioEnt.addComponent(this.prepareAudio);\r\n            this.moveAudio = soundResources_3.default.defaultAudioSource.piece_move;\r\n            this.moveAudioEnt.addComponent(this.moveAudio);\r\n            this.prepareAudio.volume = 1;\r\n            this.prepareAudio.playing = false;\r\n            this.prepareAudio.loop = false;\r\n            this.moveAudio.volume = 1;\r\n            this.moveAudio.playing = false;\r\n            this.moveAudio.loop = false;\r\n        }\r\n        BoardPieces.prototype.clearBoard = function () {\r\n            //log(\"<boardInitGame>_CLEAR_BOARD\")\r\n            for (var i = 0; i < this.piecesSet.length; i++) {\r\n                if (this.piecesSet[i] !== undefined)\r\n                    if (this.piecesSet[i].entity.isAddedToEngine())\r\n                        engine.removeEntity(this.piecesSet[i].entity);\r\n            }\r\n            this.piecesSet = new Array(48);\r\n            for (var i = 0; i < this.piecesCaptureWhite.length; i++) {\r\n                if (this.piecesCaptureWhite[i] !== undefined)\r\n                    if (this.piecesCaptureWhite[i].entity.isAddedToEngine())\r\n                        engine.removeEntity(this.piecesCaptureWhite[i].entity);\r\n            }\r\n            this.piecesCaptureWhite = [];\r\n            for (var i = 0; i < this.piecesCaptureBlack.length; i++) {\r\n                if (this.piecesCaptureBlack[i] !== undefined)\r\n                    if (this.piecesCaptureBlack[i].entity.isAddedToEngine())\r\n                        engine.removeEntity(this.piecesCaptureBlack[i].entity);\r\n            }\r\n            this.piecesCaptureBlack = [];\r\n        };\r\n        BoardPieces.prototype.updatePivot = function (pivot, scale) {\r\n            this.pivotPos.set(pivot.x, pivot.y, pivot.z);\r\n            this.boardPivot.getComponent(Transform).position.set(pivot.x, pivot.y, pivot.z);\r\n            this.scale = scale;\r\n            for (var i = 0; i < this.piecesSet.length; i++) {\r\n                if (this.piecesSet[i] !== undefined)\r\n                    this.piecesSet[i].setScale(pivot, scale);\r\n            }\r\n            this.prepareAudioEnt.getComponent(Transform).position.set(pivot.x, pivot.y, pivot.z);\r\n            this.moveAudioEnt.getComponent(Transform).position.set(pivot.x, pivot.y, pivot.z);\r\n        };\r\n        BoardPieces.prototype.loadPieces = function (fen) {\r\n            var _this = this;\r\n            log(\"LOAD 3D CHESS PAWN: \", fen);\r\n            if (fen === this.boardFen)\r\n                return;\r\n            this.boardFen = fen;\r\n            this.clearBoard();\r\n            //wait ~ 4 sec before load pieces\r\n            var delayEnt = new Entity();\r\n            delayEnt.addComponent(new index_16.default.Delay(4000, function () {\r\n                _this.prepareAudio.playOnce();\r\n                //reading FEN notation\r\n                var idx = 0;\r\n                var col = 'a'.charCodeAt(0);\r\n                var row = 1;\r\n                var loadRow = fen.split(\" \")[0].split(\"/\");\r\n                for (var i = 0; i < 8; i++) {\r\n                    var offset = 0;\r\n                    var jx = 0;\r\n                    //log(loadRow[7 - i])\r\n                    for (var j = 0; j < loadRow[7 - i].length; j++) {\r\n                        var pcType = loadRow[7 - i][j];\r\n                        if (genFunc_7.genFunc.isNumber(pcType)) {\r\n                            offset = Number(pcType);\r\n                            jx += offset;\r\n                        }\r\n                        else {\r\n                            var chessPos = String.fromCharCode(jx + col) + (row + i).toString();\r\n                            jx += 1;\r\n                            _this.piecesSet[idx] = new pieces_1.ChessPieces(idx, _this.pivotPos, pcType, chessPos, _this.scale);\r\n                            //log(idx, pcType, chessPos, this.piecesSet[idx].localPos)\r\n                            engine.addEntity(_this.piecesSet[idx].entity);\r\n                            idx += 1;\r\n                        }\r\n                    }\r\n                }\r\n                engine.removeEntity(delayEnt);\r\n            }));\r\n            engine.addEntity(delayEnt);\r\n        };\r\n        BoardPieces.prototype.getEntityFromPos = function (chessPos) {\r\n            for (var i = 0; i < this.piecesSet.length; i++) {\r\n                if (this.piecesSet[i] !== undefined) {\r\n                    if (this.piecesSet[i].chessPos === chessPos) {\r\n                        return this.piecesSet[i];\r\n                    }\r\n                }\r\n            }\r\n            return undefined;\r\n        };\r\n        BoardPieces.prototype.movePieces = function (chessMove, moveFlag) {\r\n            this.moveAudio.playOnce();\r\n            /*\r\n             * general move\r\n             */\r\n            var posOrigin = chessMove.substr(1, 2);\r\n            var posTarget = chessMove.substr(3, 2);\r\n            var pieceToMove = this.getEntityFromPos(chessMove.substr(1, 2));\r\n            var pieceTarget = this.getEntityFromPos(chessMove.substr(3, 2)); //if any\r\n            /*\r\n             * special move (enpassan and promotion type)\r\n             */\r\n            var typePromotion = pieceToMove.type; //if not a promotion movement set to origin type\r\n            if (chessMove.length > 5)\r\n                typePromotion = chessMove.substr(6, 1); //if promotion\r\n            var enPassantTarget = undefined;\r\n            if (moveFlag === 'e')\r\n                enPassantTarget = this.getEntityFromPos(chessMove.substr(3, 1) + chessMove.substr(2, 1)); //if enpassant move\r\n            /*---*/\r\n            var moveData = {\r\n                typeOrigin: pieceToMove.type,\r\n                posOrigin: posOrigin,\r\n                posTarget: posTarget,\r\n                typePromotion: typePromotion,\r\n                enPassantTarget: enPassantTarget,\r\n            };\r\n            //moving piece to Target\r\n            pieceToMove.movePiecePos(moveData.posTarget);\r\n            /*\r\n            log(\r\n                moveData.typeOrigin,\r\n                moveData.posOrigin,\r\n                moveData.typePromotion,\r\n                moveData.posTarget,\r\n                (() => {\r\n                    if (moveFlag === 'e') return moveData.enPassantTarget.chessPos\r\n                    else if (moveFlag === 'c' || moveFlag === 'cp' || moveFlag === 'pc') return moveData.posTarget\r\n                    else return undefined\r\n                })()\r\n            )\r\n            */\r\n            this.boardFen = this.gameLogicParent.chessPlay.fen();\r\n            this.gameLogicParent.UIEvents.fireEvent(new controllerUIEvent_7.UI2DBoardEvent('boardUpdate', moveData.typeOrigin, moveData.posOrigin, moveData.typePromotion, moveData.posTarget, (function () {\r\n                if (moveFlag === 'e')\r\n                    return moveData.enPassantTarget.chessPos;\r\n                else if (moveFlag === 'c' || moveFlag === 'cp' || moveFlag === 'pc')\r\n                    return moveData.posTarget;\r\n                else\r\n                    return undefined;\r\n            })()));\r\n            //standard move - non capture\r\n            if (moveFlag === 'n' || moveFlag === 'b') {\r\n                //do nothing\r\n            }\r\n            //castling move - king side\r\n            else if (moveFlag === 'k') {\r\n                //move the rook\r\n                var rookToMove = this.getEntityFromPos('h' + moveData.posTarget[1]);\r\n                var rookTargetPos = 'f' + moveData.posTarget[1];\r\n                rookToMove.movePiecePos(rookTargetPos);\r\n                this.gameLogicParent.UIEvents.fireEvent(new controllerUIEvent_7.UI2DBoardEvent('boardUpdate', (function () {\r\n                    if (gameData_5.gameDat.getGamePlay().turn === 'w')\r\n                        return 'R';\r\n                    else\r\n                        return 'r';\r\n                })(), 'h' + moveData.posTarget[1], (function () {\r\n                    if (gameData_5.gameDat.getGamePlay().turn === 'w')\r\n                        return 'R';\r\n                    else\r\n                        return 'r';\r\n                })(), 'f' + moveData.posTarget[1], undefined));\r\n            }\r\n            //castling move - queen side\r\n            else if (moveFlag === 'q') {\r\n                //move the rook\r\n                var rookToMove = this.getEntityFromPos('a' + moveData.posTarget[1]);\r\n                var rookTargetPos = 'd' + moveData.posTarget[1];\r\n                rookToMove.movePiecePos(rookTargetPos);\r\n                this.gameLogicParent.UIEvents.fireEvent(new controllerUIEvent_7.UI2DBoardEvent('boardUpdate', (function () {\r\n                    if (gameData_5.gameDat.getGamePlay().turn === 'w')\r\n                        return 'R';\r\n                    else\r\n                        return 'r';\r\n                })(), 'a' + moveData.posTarget[1], (function () {\r\n                    if (gameData_5.gameDat.getGamePlay().turn === 'w')\r\n                        return 'R';\r\n                    else\r\n                        return 'r';\r\n                })(), 'd' + moveData.posTarget[1], undefined));\r\n            }\r\n            //standard capture\r\n            else if (moveFlag === 'c') {\r\n                /*\r\n                this.placePawnCapture(piecesTarget.type, (() => {\r\n                    if (moveFlag.color === 'b') return 'w'\r\n                    else return 'b'\r\n                })())\r\n                */\r\n                this.placePawnCapture(pieceTarget.type);\r\n                pieceTarget.removePieceFromBoard();\r\n            }\r\n            //en passant capture\r\n            else if (moveFlag === 'e') {\r\n                this.placePawnCapture(moveData.enPassantTarget.type);\r\n                moveData.enPassantTarget.removePieceFromBoard();\r\n            }\r\n            //normal pawn promotion\r\n            else if (moveFlag === 'np' || moveFlag === 'pn') {\r\n                pieceToMove.changePiece(moveData.typePromotion);\r\n            }\r\n            else if (moveFlag === 'cp' || moveFlag === 'pc') {\r\n                this.placePawnCapture(pieceTarget.type);\r\n                pieceTarget.removePieceFromBoard();\r\n                pieceToMove.changePiece(moveData.typePromotion);\r\n            }\r\n        };\r\n        BoardPieces.prototype.placePawnCapture = function (pieceType) {\r\n            var color;\r\n            if (pieceType === pieceType.toUpperCase())\r\n                color = 'w';\r\n            else\r\n                color = 'b';\r\n            var weigh;\r\n            var pieceToPlace;\r\n            //color white\r\n            if (pieceType === 'P') {\r\n                weigh = 1;\r\n            }\r\n            else if (pieceType === 'N') {\r\n                weigh = 2;\r\n            }\r\n            else if (pieceType === 'B') {\r\n                weigh = 3;\r\n            }\r\n            else if (pieceType === 'R') {\r\n                weigh = 4;\r\n            }\r\n            else if (pieceType === 'Q') {\r\n                weigh = 5;\r\n            }\r\n            //color black\r\n            else if (pieceType === 'p') {\r\n                weigh = 1;\r\n            }\r\n            else if (pieceType === 'n') {\r\n                weigh = 2;\r\n            }\r\n            else if (pieceType === 'b') {\r\n                weigh = 3;\r\n            }\r\n            else if (pieceType === 'r') {\r\n                weigh = 4;\r\n            }\r\n            else if (pieceType === 'q') {\r\n                weigh = 5;\r\n            }\r\n            pieceToPlace = new pieces_1.ChessPieces(0, this.pivotPos, pieceType, undefined, this.scale);\r\n            pieceToPlace.entity.setParent(this.boardPivot);\r\n            //log('PLACING CAPTURED PIECE', pieceType, color, weigh)\r\n            //rearrange array\r\n            if (color === 'w') {\r\n                var insertIdx = 0;\r\n                var i = 0;\r\n                for (i = 0; i < this.piecesCaptureWhite.length; i++) {\r\n                    if (weigh <= this.piecesCaptureWhite[i].weigh) {\r\n                        //log(i, this.piecesCaptureWhite[i].type, this.piecesCaptureWhite[i].weigh, weigh)\r\n                        break;\r\n                    }\r\n                }\r\n                insertIdx = i;\r\n                //log('INSERT IN: ', insertIdx)\r\n                //this.piecesCaptureWhite.push(pieceToPlace)\r\n                pieceToPlace.ID = insertIdx;\r\n                this.piecesCaptureWhite.splice(insertIdx, 0, pieceToPlace);\r\n                var countRow = 0;\r\n                var rowPos = 0.6 * this.scale;\r\n                var colPos = -1.8 * this.scale;\r\n                for (i = 0; i < this.piecesCaptureWhite.length; i++) {\r\n                    if (countRow % 5 === 0) {\r\n                        //log(countRow)\r\n                        colPos = (colPos * 10 - 3 * this.scale) / 10;\r\n                        rowPos = 0.6 * this.scale;\r\n                    }\r\n                    this.piecesCaptureWhite[i].entity.getComponent(Transform).position = new Vector3(colPos, 0, rowPos);\r\n                    //log(i, this.piecesCaptureWhite[i].type, this.piecesCaptureWhite[i].weigh)\r\n                    rowPos = (rowPos * 10 - 3 * this.scale) / 10;\r\n                    countRow += 1;\r\n                }\r\n            }\r\n            else if (color === 'b') {\r\n                var insertIdx = 0;\r\n                var i = 0;\r\n                for (i = 0; i < this.piecesCaptureBlack.length; i++) {\r\n                    if (weigh <= this.piecesCaptureBlack[i].weigh) {\r\n                        break;\r\n                    }\r\n                }\r\n                insertIdx = i;\r\n                pieceToPlace.ID = insertIdx;\r\n                this.piecesCaptureBlack.splice(insertIdx, 0, pieceToPlace);\r\n                var countRow = 0;\r\n                var rowPos = -0.6 * this.scale;\r\n                var colPos = 1.8 * this.scale;\r\n                for (i = 0; i < this.piecesCaptureBlack.length; i++) {\r\n                    if (countRow % 5 === 0) {\r\n                        //log(countRow)\r\n                        colPos = (colPos * 10 + 3 * this.scale) / 10;\r\n                        rowPos = -0.6 * this.scale;\r\n                    }\r\n                    this.piecesCaptureBlack[i].entity.getComponent(Transform).position = new Vector3(colPos, 0, rowPos);\r\n                    //log(i, this.piecesCaptureBlack[i].type, this.piecesCaptureBlack[i].weigh)\r\n                    rowPos = (rowPos * 10 + 3 * this.scale) / 10;\r\n                    countRow += 1;\r\n                }\r\n            }\r\n        };\r\n        return BoardPieces;\r\n    }());\r\n    exports.BoardPieces = BoardPieces;\r\n});\r\n/*\r\nconst board = new BoardPieces()\r\nlet ent = new Entity()\r\nboard.loadPieces('rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1')\r\nent.addComponent(new utils.Delay(5000, () => {\r\n    board.movePieces('Pe2e4', 'n')\r\n    board.movePieces('pd7d6', 'n')\r\n\n    board.movePieces('Ng1f3', 'n')\r\n    board.movePieces('nb8c6', 'n')\r\n\n    board.movePieces('Bf1c4', 'n')\r\n    board.movePieces('bc8e6', 'n')\r\n\n    board.movePieces('Bc4b3', 'n')\r\n    board.movePieces('qd8d7', 'n')\r\n\n    board.movePieces('Ke1g1', 'k')\r\n    board.movePieces('ke8c8', 'q')\r\n\n    board.movePieces('Bb3e6', 'c')\r\n    board.movePieces('pf7e6', 'c')\r\n\n    board.movePieces('Pa2a4', 'n')\r\n    board.movePieces('ng8f6', 'n')\r\n\n    board.movePieces('Pa4a5', 'n')\r\n    board.movePieces('pb7b5', 'n')\r\n\n    board.movePieces('Pa5b6', 'e')\r\n    board.movePieces('pc7b6', 'c')\r\n}))\r\nengine.addEntity(ent)\r\n*/ \r\ndefine(\"metas/pawnssquare/modules/logic/gameLogic\", [\"require\", \"exports\", \"metas/pawnssquare/modules/dat/gameData\", \"metas/pawnssquare/modules/logic/chess\", \"metas/pawnssquare/modules/logic/movement\", \"metas/pawnssquare/modules/board/board\", \"metas/pawnssquare/modules/UI/controllerUIEvent\", \"node_modules/decentraland-ecs-utils/index\", \"metas/pawnssquare/modules/resources/modelResources\", \"metas/pawnssquare/modules/genFunc/genFunc\", \"metas/pawnssquare/modules/resources/soundResources\", \"metas/pawnssquare/modules/dat/enumTypes\"], function (require, exports, gameData_6, chess_1, movement_1, board_1, controllerUIEvent_8, index_17, modelResources_4, genFunc_8, soundResources_4, enumTypes_7) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.GameLogic = void 0;\r\n    var GameLogic = /** @class */ (function () {\r\n        function GameLogic(_msgBus, _UIEvents, _ServerEvents, _HOST_ID) {\r\n            this.MODE = null;\r\n            this.UID = undefined;\r\n            this.opponentID = undefined;\r\n            this.isPrepare = false;\r\n            this.startGameLoop = false;\r\n            this.reqAckMovementMsg = false;\r\n            this.resendMsgCount = 0;\r\n            this._resendMsgInterval = 2;\r\n            this.lastMove = undefined;\r\n            this._updateTimerInterval = 0.5;\r\n            this.updTimerCount = 0;\r\n            this.reqAckGameEndMsg = false;\r\n            this.pivot = new Vector3(8, 0.5, 8);\r\n            this.scale = 1;\r\n            this.resign = false;\r\n            this.offerDraw = false;\r\n            this.acceptDraw = false;\r\n            this.gameEnd = false;\r\n            this.gameResult = {\r\n                result: undefined,\r\n                note: undefined,\r\n            };\r\n            this.HOST_ID = _HOST_ID;\r\n            this.UID = gameData_6.userDat.getUID();\r\n            this.chessPlay = chess_1.Chess();\r\n            this.msgBus = _msgBus;\r\n            this.UIEvents = _UIEvents;\r\n            this.ServerEvents = _ServerEvents;\r\n            //create Board\r\n            //create Movement System\r\n            this.movementSys = new movement_1.MovementSys(this);\r\n            this.boardPieces = new board_1.BoardPieces(this);\r\n            this.boardPieces.loadPieces(gameData_6.gameDat.getGameData().gameplay.fen);\r\n            this.MODE = enumTypes_7.CONN_MODE.P2P;\r\n            log('MODE GL: ', enumTypes_7.CONN_MODE[this.MODE]);\r\n            this._onMessageHandler();\r\n            this._UIEventHandler();\r\n            this._loadingModel();\r\n            engine.addSystem(this);\r\n        }\r\n        GameLogic.prototype.updatePivot = function (_pivotx, _pivoty, _pivotz, scale) {\r\n            this.pivot.x = _pivotx;\r\n            this.pivot.y = _pivoty;\r\n            this.pivot.z = _pivotz;\r\n            this.scale = scale;\r\n            this.markLastMove_1\r\n                .getComponent(Transform)\r\n                .position.set(this.pivot.x, 0, this.pivot.z);\r\n            this.markLastMove_1.getComponent(Transform).scale.setAll(scale);\r\n            this.markLastMove_2\r\n                .getComponent(Transform)\r\n                .position.set(this.pivot.x, 0, this.pivot.z);\r\n            this.markLastMove_2.getComponent(Transform).scale.setAll(scale);\r\n            this.movementSys.updatePivot(this.pivot, scale);\r\n            this.boardPieces.updatePivot(this.pivot, scale);\r\n            log('GL UPDATE POS: ', _pivotx, _pivoty, _pivotz);\r\n        };\r\n        GameLogic.prototype._loadingModel = function () {\r\n            //last move mark model\r\n            this.markLastMove_1 = new Entity();\r\n            this.markLastMove_1.addComponent(modelResources_4.default.defaultMovementModel.last_move_mark);\r\n            this.markLastMove_1.addComponent(new Transform({\r\n                position: new Vector3(this.pivot.x, 0, this.pivot.z),\r\n            }));\r\n            this.markLastMove_2 = new Entity();\r\n            this.markLastMove_2.addComponent(modelResources_4.default.defaultMovementModel.last_move_mark);\r\n            this.markLastMove_2.addComponent(new Transform({\r\n                position: new Vector3(this.pivot.x, 0, this.pivot.z),\r\n            }));\r\n            engine.addEntity(this.markLastMove_1);\r\n            engine.addEntity(this.markLastMove_2);\r\n            //audio model\r\n            this.endAudioEnt = new Entity();\r\n            this.endAudioEnt.addComponent(new Transform({ position: new Vector3(8, 1, 8) }));\r\n            engine.addEntity(this.endAudioEnt);\r\n            this.endAudio = soundResources_4.default.defaultAudioSource.game_end;\r\n            this.endAudioEnt.addComponent(this.endAudio);\r\n            this.endAudio.loop = false;\r\n            this.endAudio.volume = 1;\r\n            this.endAudio.playing = false;\r\n        };\r\n        GameLogic.prototype._setLastMoveEntity = function (chessMove) {\r\n            var pos1 = chessMove.substr(1, 2);\r\n            var pos2 = chessMove.substr(3, 2);\r\n            this.markLastMove_1.getComponent(Transform).position = genFunc_8.genFunc.chessPosToWorldPos(pos1, this.pivot, this.scale);\r\n            this.markLastMove_2.getComponent(Transform).position = genFunc_8.genFunc.chessPosToWorldPos(pos2, this.pivot, this.scale);\r\n        };\r\n        GameLogic.prototype._onMessageHandler = function () {\r\n            var _this = this;\r\n            this.msgBus.on('move_piece' + this.HOST_ID.toString(), function (data) {\r\n                if (genFunc_8.genFunc.isInBorder(_this.pivot)) {\r\n                    //ONLY PROCESS MESSAGE BUS WHEN GAME IS ESTABLISHED\r\n                    if (_this.startGameLoop) {\r\n                        var players = gameData_6.gameDat.getPlayer();\r\n                        var dataMsg = data.dataMsg;\r\n                        if (data.sender !== _this.UID &&\r\n                            (data.sender === players.w || data.sender === players.b)) {\r\n                            //log('rcv full move: ', dataMsg.fen.split(' ')[5], ' current full move: ', this.chessPlay.fen().split(' ')[5])\r\n                            //in-case not receiving ack, don't resend data anymore,\r\n                            //move on to processing move piece by opponent\r\n                            _this.resendMsgCount = 0;\r\n                            _this.reqAckMovementMsg = false;\r\n                            //check move data for next process --method 2--\r\n                            var fullMoveRcv = +dataMsg.fen.split(' ')[5];\r\n                            var fullMoveSelf = +_this.chessPlay.fen().split(' ')[5];\r\n                            /*\r\n                                      if (fullMoveRcv < fullMoveSelf) {\r\n                                          log(\"------------------\\nreceiving same move from opponent\\n\" +\r\n                                              \"probably ack message is lost\\n\" +\r\n                                              \"ignoring movement\")\r\n                                      }\r\n                                      */\r\n                            /*\r\n                                      //check move data for next process --method 1--\r\n                                      if (gameDat.getGameData().gameplay.lastMove === dataMsg.move) {\r\n                                          log(\"------------------\\nreceiving same move from opponent\\n\" +\r\n                                              \"probably ack message is lost\\n\" +\r\n                                              \"ignoring movement\")\r\n                                      }\r\n                                      */\r\n                            if (fullMoveRcv >= fullMoveSelf) {\r\n                                var isMoveSuccess = _this.chessPlay.move(dataMsg.move, {\r\n                                    sloppy: true,\r\n                                });\r\n                                _this.movementSys.syncChessPlay(dataMsg.fen);\r\n                                log('OPPONENT MOVE: ', dataMsg.move);\r\n                                if (_this.chessPlay.fen() === dataMsg.fen &&\r\n                                    isMoveSuccess !== null) {\r\n                                    log('MOVE VALID');\r\n                                    //sync chessplay in MovementSystem & Board\r\n                                    _this.boardPieces.movePieces(dataMsg.move, isMoveSuccess.flags);\r\n                                    _this.UIEvents.fireEvent(new controllerUIEvent_8.NotationMovementEvent('piece_movementSan', isMoveSuccess.san));\r\n                                }\r\n                                else {\r\n                                    log('MOVE NOT VALID, SYNC FEN', _this.chessPlay.fen(), dataMsg.fen);\r\n                                    _this.chessPlay.load(dataMsg.fen);\r\n                                    _this.boardPieces.loadPieces(dataMsg.fen);\r\n                                }\r\n                                //sync all gamedata, fen, move, turn, time\r\n                                gameData_6.gameDat.setGamePlay({\r\n                                    fen: dataMsg.fen,\r\n                                    move: dataMsg.move,\r\n                                    turn: dataMsg.turn,\r\n                                });\r\n                                gameData_6.gameDat.setTimeData(dataMsg.times.w, dataMsg.times.b);\r\n                                gameData_6.gameDat.startTimerCount();\r\n                                _this._setLastMoveEntity(dataMsg.move);\r\n                            }\r\n                            _this.UIEvents.fireEvent(new controllerUIEvent_8.Init2DBoardEvent('setUserStatus', gameData_6.userDat.getInGameStatus()));\r\n                            _this.UIEvents.fireEvent(new controllerUIEvent_8.Init2DBoardEvent('receiveAck', undefined));\r\n                            //sending acknowledgement message when received movement data\r\n                            if (data.recipient === _this.UID) {\r\n                                log('SEND MOVE ACK: ', dataMsg.move);\r\n                                _this.msgBus.emit('move_ack' + _this.HOST_ID.toString(), {\r\n                                    sender: _this.UID,\r\n                                    recipient: _this.opponentID,\r\n                                    dataMsg: dataMsg.move,\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this.msgBus.on('move_ack' + this.HOST_ID.toString(), function (data) {\r\n                if (genFunc_8.genFunc.isInBorder(_this.pivot)) {\r\n                    //if (this.startGameLoop) {\r\n                    if (data.recipient === _this.UID && data.sender === _this.opponentID) {\r\n                        log('RCV MOVE ACK: ', data.dataMsg);\r\n                        if (gameData_6.gameDat.getGamePlay().lastMove === data.dataMsg) {\r\n                            log('MOVE ACK VALID');\r\n                            _this.reqAckMovementMsg = false;\r\n                            //this.UIEvents.fireEvent(new Init2DBoardEvent('receiveAck', userDat.getInGameStatus()))\r\n                        }\r\n                        else {\r\n                            log('ACK NOT VALID');\r\n                        }\r\n                    }\r\n                    //}\r\n                }\r\n            });\r\n            this.msgBus.on('game_end_ack' + this.HOST_ID.toString(), function (data) {\r\n                if (genFunc_8.genFunc.isInBorder(_this.pivot)) {\r\n                    //if (this.startGameLoop) {\r\n                    if (data.recipient == _this.UID && data.sender === _this.opponentID) {\r\n                        log('RCV GAME END ACK');\r\n                        _this.reqAckGameEndMsg = false;\r\n                    }\r\n                    //}\r\n                }\r\n            });\r\n            this.msgBus.on('game_end' + this.HOST_ID.toString(), function (data) {\r\n                if (genFunc_8.genFunc.isInBorder(_this.pivot)) {\r\n                    //if (this.startGameLoop) {\r\n                    var players = gameData_6.gameDat.getPlayer();\r\n                    if (data.sender === players.b || data.sender === players.w) {\r\n                        if (data.recipient === _this.UID && data.sender === _this.opponentID) {\r\n                            log('GAME END: ', data.dataMsg);\r\n                            _this.gameResult = data.dataMsg;\r\n                            var msgToSend = {\r\n                                sender: _this.UID,\r\n                                recipient: _this.opponentID,\r\n                            };\r\n                            _this.msgBus.emit('game_end_ack' + _this.HOST_ID.toString(), msgToSend);\r\n                            log('SEND GAME END ACK');\r\n                            _this.gameEnd = true;\r\n                        }\r\n                        else if (data.sender !== _this.UID) {\r\n                            _this.gameResult = data.dataMsg;\r\n                            _this.gameEnd = true;\r\n                        }\r\n                    }\r\n                    //}\r\n                }\r\n            });\r\n            this.msgBus.on('offer_draw' + this.HOST_ID.toString(), function (data) {\r\n                if (genFunc_8.genFunc.isInBorder(_this.pivot)) {\r\n                    if (_this.startGameLoop) {\r\n                        if (_this.UID === data.recipient) {\r\n                            _this.UIEvents.fireEvent(new controllerUIEvent_8.UINotificationEvent('drawAccUI', true, ''));\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            log('GL EVENT BUS HANDLER LOADED');\r\n        };\r\n        GameLogic.prototype._UIEventHandler = function () {\r\n            var _this = this;\r\n            this.UIEvents.addListener(controllerUIEvent_8.UIGamePlayEvent, null, function (_a) {\r\n                var uiType = _a.uiType, eventType = _a.eventType;\r\n                if (uiType === 'resign') {\r\n                    _this.resign = true;\r\n                }\r\n                if (uiType === 'offer_draw') {\r\n                    _this.msgBus.emit('offer_draw' + _this.HOST_ID.toString(), {\r\n                        sender: _this.UID,\r\n                        recipient: _this.opponentID,\r\n                    });\r\n                }\r\n                if (uiType === 'draw_accepted') {\r\n                    _this.acceptDraw = true;\r\n                }\r\n            });\r\n            log('GL UI HANDLER LOADED');\r\n        };\r\n        GameLogic.prototype.makeMovement = function (chessMove) {\r\n            this.lastMove = chessMove;\r\n            var moveReturn = this.chessPlay.move(chessMove, { sloppy: true });\r\n            if (moveReturn !== null)\r\n                log('MOVE SUCCESS: ' + moveReturn.san);\r\n            else\r\n                log('MOVE FAILED, please contact developer');\r\n            this.UIEvents.fireEvent(new controllerUIEvent_8.NotationMovementEvent('piece_movementSan', moveReturn.san));\r\n            gameData_6.gameDat.setGamePlay({\r\n                fen: this.chessPlay.fen(),\r\n                move: chessMove,\r\n                turn: this.chessPlay.turn(),\r\n            });\r\n            gameData_6.gameDat.setTimeData(gameData_6.gameDat.getTimeData().w, gameData_6.gameDat.getTimeData().b);\r\n            gameData_6.gameDat.startTimerCount();\r\n            this.boardPieces.movePieces(chessMove, moveReturn.flags);\r\n            this._setLastMoveEntity(this.lastMove);\r\n            if (this.MODE === enumTypes_7.CONN_MODE.P2P) {\r\n                if (this.UID !== this.opponentID)\r\n                    this.reqAckMovementMsg = true;\r\n                this._emitLastMove();\r\n            }\r\n            this.UIEvents.fireEvent(new controllerUIEvent_8.UINotificationEvent('drawAccUI', false, ''));\r\n            this.UIEvents.fireEvent(new controllerUIEvent_8.Init2DBoardEvent('setUserStatus', gameData_6.userDat.getInGameStatus()));\r\n        };\r\n        GameLogic.prototype._emitLastMove = function () {\r\n            var dataMsg = {\r\n                move: this.lastMove,\r\n                fen: this.chessPlay.fen(),\r\n                turn: this.chessPlay.turn(),\r\n                times: gameData_6.gameDat.getTimeData(),\r\n            };\r\n            var msgToSend = {\r\n                sender: this.UID,\r\n                recipient: this.opponentID,\r\n                dataMsg: dataMsg,\r\n            };\r\n            this.msgBus.emit('move_piece' + this.HOST_ID.toString(), msgToSend);\r\n            log('SEND MOVE: ', dataMsg.move);\r\n        };\r\n        GameLogic.prototype._emitGameEnd = function () {\r\n            var userStatus = gameData_6.userDat.getInGameStatus();\r\n            if (userStatus === enumTypes_7.PlayerStatus.White ||\r\n                userStatus === enumTypes_7.PlayerStatus.Black) {\r\n                this.reqAckGameEndMsg = true;\r\n            }\r\n            var dataMsg = this.gameResult;\r\n            var msgToSend = {\r\n                sender: this.UID,\r\n                recipient: this.opponentID,\r\n                dataMsg: dataMsg,\r\n            };\r\n            this.msgBus.emit('game_end' + this.HOST_ID.toString(), msgToSend);\r\n            log('GAME END: ', dataMsg);\r\n        };\r\n        GameLogic.prototype.reSync = function () {\r\n            log('GL SYNC');\r\n            this.startGameLoop = false;\r\n            this.isPrepare = false;\r\n            this.reqAckMovementMsg = false;\r\n            this.reqAckGameEndMsg = false;\r\n            gameData_6.gameDat.reset();\r\n            gameData_6.userDat.reset();\r\n        };\r\n        GameLogic.prototype.update = function (dt) {\r\n            var _this = this;\r\n            if (genFunc_8.genFunc.isInBorder(this.pivot)) {\r\n                this.updTimerCount += dt;\r\n                if (this.updTimerCount > this._updateTimerInterval) {\r\n                    this.UIEvents.fireEvent(new controllerUIEvent_8.UINotificationEvent('updateTimer', true, ''));\r\n                    this.updTimerCount = 0;\r\n                }\r\n                //PASSED FROM PLAYER MATCHING, AFTER HAVE 2 PLAYERS THIS WILL BE CALLED\r\n                if (gameData_6.gameDat.getIsReady()) {\r\n                    var players = gameData_6.gameDat.getPlayer();\r\n                    var userStatus_1 = gameData_6.userDat.getInGameStatus();\r\n                    var initialFEN = gameData_6.gameDat.getGameData().gameplay.fen;\r\n                    //PREPARE THE GAME\r\n                    if (!this.isPrepare) {\r\n                        this.isPrepare = true;\r\n                        log('PREPARE BOARD: ', initialFEN);\r\n                        if (userStatus_1 === enumTypes_7.PlayerStatus.White)\r\n                            this.opponentID = players.b;\r\n                        else if (userStatus_1 === enumTypes_7.PlayerStatus.Black)\r\n                            this.opponentID = players.w;\r\n                        else if (userStatus_1 === enumTypes_7.PlayerStatus.WhiteAndBlack)\r\n                            this.opponentID = this.UID;\r\n                        else if (userStatus_1 === enumTypes_7.PlayerStatus.Spectator)\r\n                            this.opponentID = undefined;\r\n                        this.UIEvents.fireEvent(new controllerUIEvent_8.UINotificationEvent('waitingOpponent', false, '1'));\r\n                        this.UIEvents.fireEvent(new controllerUIEvent_8.UINotificationEvent('lookingOpponent', false, '1'));\r\n                        this.UIEvents.fireEvent(new controllerUIEvent_8.UINotificationEvent('gameReady', true, '1'));\r\n                        this.UIEvents.fireEvent(new controllerUIEvent_8.NotationMovementEvent('resetNotation', ''));\r\n                        this.UIEvents.fireEvent(new controllerUIEvent_8.Init2DBoardEvent('setup2DBoard', userStatus_1));\r\n                        this.markLastMove_1.getComponent(Transform).position = new Vector3(this.pivot.x, 0, this.pivot.z);\r\n                        this.markLastMove_2.getComponent(Transform).position = new Vector3(this.pivot.x, 0, this.pivot.z);\r\n                        //sync chessPlay of: gameLogic, movementSys\r\n                        this.chessPlay.load(initialFEN);\r\n                        gameData_6.gameDat.setGamePlay({\r\n                            fen: initialFEN,\r\n                            lastMove: undefined,\r\n                            turn: this.chessPlay.turn(),\r\n                        });\r\n                        this.movementSys.chessplay.load(initialFEN);\r\n                        //load pieces model position by FEN\r\n                        this.boardPieces.loadPieces(initialFEN);\r\n                        //set time data\r\n                        gameData_6.gameDat.setTimeData(gameData_6.gameDat.getTimeData().w, gameData_6.gameDat.getTimeData().b);\r\n                        if (this.MODE === enumTypes_7.CONN_MODE.P2P) {\r\n                            //add 5 second delay before game start to give time load data and model\r\n                            var delayEnt_1 = new Entity();\r\n                            delayEnt_1.addComponent(new index_17.default.Delay(6000, function () {\r\n                                _this.UIEvents.fireEvent(new controllerUIEvent_8.UINotificationEvent('gameReady', false, '1'));\r\n                                //else then spectator, show the game button\r\n                                if (userStatus_1 !== enumTypes_7.PlayerStatus.Spectator) {\r\n                                    _this.UIEvents.fireEvent(new controllerUIEvent_8.UINotificationEvent('gameBtnUI', true, '1'));\r\n                                }\r\n                                _this.startGameLoop = true;\r\n                                gameData_6.gameDat.setIsStart(true);\r\n                                gameData_6.gameDat.startTimerCount();\r\n                                log('GAME START');\r\n                                engine.removeEntity(delayEnt_1);\r\n                            }));\r\n                            engine.addEntity(delayEnt_1);\r\n                        }\r\n                    }\r\n                    //flag for resend ack movement, for P2P\r\n                    if (this.MODE === enumTypes_7.CONN_MODE.P2P) {\r\n                        if (this.reqAckMovementMsg) {\r\n                            this.resendMsgCount += dt;\r\n                            if (this.resendMsgCount > this._resendMsgInterval) {\r\n                                this.resendMsgCount = 0;\r\n                                log('RESEND MOVE');\r\n                                this._emitLastMove();\r\n                            }\r\n                        }\r\n                        if (this.reqAckGameEndMsg) {\r\n                            this.resendMsgCount += dt;\r\n                            if (this.resendMsgCount > this._resendMsgInterval) {\r\n                                this.resendMsgCount = 0;\r\n                                log('RESEND GAME END');\r\n                                this._emitGameEnd();\r\n                            }\r\n                        }\r\n                    }\r\n                    //game logic loop\r\n                    if (this.startGameLoop) {\r\n                        this.UIEvents.fireEvent(new controllerUIEvent_8.UINotificationEvent('gameReady', false, '1'));\r\n                        /*\r\n                         * flag for movement turn system\r\n                         */\r\n                        var turn = this.chessPlay.turn();\r\n                        if (userStatus_1 === enumTypes_7.PlayerStatus.White && turn === 'w') {\r\n                            this.movementSys.turn(true);\r\n                        }\r\n                        else if (userStatus_1 === enumTypes_7.PlayerStatus.Black && turn === 'b') {\r\n                            this.movementSys.turn(true);\r\n                        }\r\n                        else if (userStatus_1 === enumTypes_7.PlayerStatus.WhiteAndBlack) {\r\n                            this.movementSys.turn(true);\r\n                        }\r\n                        else {\r\n                            this.movementSys.turn(false);\r\n                        }\r\n                        /*\r\n                         * --END GAME DETECTION--\r\n                         * checkmate check\r\n                         * draw check: stalemate, repetition, insufficient material, 50 moves rule\r\n                         * resign check\r\n                         * offer draw & accept draw check\r\n                         */\r\n                        if (this.resign) {\r\n                            if (userStatus_1 === enumTypes_7.PlayerStatus.White) {\r\n                                this.gameResult = {\r\n                                    result: 'b',\r\n                                    note: 'WHITE RESIGN',\r\n                                };\r\n                            }\r\n                            else if (userStatus_1 === enumTypes_7.PlayerStatus.Black) {\r\n                                this.gameResult = {\r\n                                    result: 'w',\r\n                                    note: 'BLACK RESIGN',\r\n                                };\r\n                            }\r\n                            this._emitGameEnd();\r\n                            //this.reqAckGameEndMsg = true\r\n                            this.gameEnd = true;\r\n                        }\r\n                        if (userStatus_1 !== enumTypes_7.PlayerStatus.Spectator) {\r\n                            //log(turn)\r\n                            if (gameData_6.gameDat.getTimeData()[turn] === 0) {\r\n                                if (this.chessPlay.turn() === 'w') {\r\n                                    this.gameResult = {\r\n                                        result: 'b',\r\n                                        note: 'TIME',\r\n                                    };\r\n                                }\r\n                                if (this.chessPlay.turn() === 'b') {\r\n                                    this.gameResult = {\r\n                                        result: 'w',\r\n                                        note: 'TIME',\r\n                                    };\r\n                                }\r\n                                if ((userStatus_1 === enumTypes_7.PlayerStatus.White && turn === 'w') ||\r\n                                    (userStatus_1 === enumTypes_7.PlayerStatus.Black && turn === 'b')) {\r\n                                    this._emitGameEnd();\r\n                                    this.gameEnd = true;\r\n                                }\r\n                                //this.reqAckGameEndMsg = true\r\n                            }\r\n                        }\r\n                        if (this.acceptDraw) {\r\n                            this.gameResult = {\r\n                                result: 'd',\r\n                                note: 'AGREEMENT',\r\n                            };\r\n                            this._emitGameEnd();\r\n                            //this.reqAckGameEndMsg = true\r\n                            this.gameEnd = true;\r\n                        }\r\n                        //if checkmate\r\n                        if (this.chessPlay.in_checkmate()) {\r\n                            if (this.chessPlay.turn() === 'w')\r\n                                this.gameResult.result = 'b';\r\n                            if (this.chessPlay.turn() === 'b')\r\n                                this.gameResult.result = 'w';\r\n                            this.gameResult.note = 'CHECKMATE';\r\n                            this.gameEnd = true;\r\n                        }\r\n                        //if stalemate\r\n                        if (this.chessPlay.in_stalemate()) {\r\n                            this.gameResult = {\r\n                                result: 'd',\r\n                                note: 'STALEMATE',\r\n                            };\r\n                            this.gameEnd = true;\r\n                        }\r\n                        //if draw insufficient material\r\n                        if (this.chessPlay.insufficient_material()) {\r\n                            this.gameResult = {\r\n                                result: 'd',\r\n                                note: 'MATERIAL',\r\n                            };\r\n                            this.gameEnd = true;\r\n                        }\r\n                        //if draw cause of repetition\r\n                        if (this.chessPlay.in_threefold_repetition()) {\r\n                            this.gameResult = {\r\n                                result: 'd',\r\n                                note: 'REPETITION',\r\n                            };\r\n                            this.gameEnd = true;\r\n                        }\r\n                    }\r\n                    //game end handling\r\n                    if (this.gameEnd) {\r\n                        gameData_6.gameDat.pauseTime();\r\n                        gameData_6.gameDat.setIsStart(false);\r\n                        this.endAudio.playOnce();\r\n                        this.startGameLoop = false;\r\n                        this.resign = false;\r\n                        this.acceptDraw = false;\r\n                        this.offerDraw = false;\r\n                        this.movementSys.turn(false);\r\n                        this.gameEnd = false;\r\n                        log('GAME END: ', this.gameResult.result, this.gameResult.note);\r\n                        gameData_6.gameDat.setResult(this.gameResult.result, this.gameResult.note);\r\n                        this.UIEvents.fireEvent(new controllerUIEvent_8.NotationMovementEvent('finalResult', this.gameResult.result));\r\n                        this.UIEvents.fireEvent(new controllerUIEvent_8.UINotificationEvent('gameBtnUI', false, ''));\r\n                        this.UIEvents.fireEvent(new controllerUIEvent_8.UINotificationEvent('resultUI', true, ''));\r\n                        var gameEndTOEnt_1 = new Entity();\r\n                        gameEndTOEnt_1.addComponent(new index_17.default.Delay(6000, function () {\r\n                            _this.UIEvents.fireEvent(new controllerUIEvent_8.Init2DBoardEvent('resetUserStatus', enumTypes_7.PlayerStatus.Spectator));\r\n                            _this.UIEvents.fireEvent(new controllerUIEvent_8.UINotificationEvent('resultUI', false, ''));\r\n                            _this.isPrepare = false;\r\n                            _this.reqAckGameEndMsg = false;\r\n                            _this.reqAckMovementMsg = false;\r\n                            _this.gameResult = {\r\n                                result: undefined,\r\n                                note: undefined,\r\n                            };\r\n                            gameData_6.gameDat.reset();\r\n                            engine.removeEntity(gameEndTOEnt_1);\r\n                        }));\r\n                        engine.addEntity(gameEndTOEnt_1);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                //player leave arena when game is already started = player resign\r\n                if (gameData_6.gameDat.getIsReady()) {\r\n                    var userStatus = gameData_6.userDat.getInGameStatus();\r\n                    if (userStatus === enumTypes_7.PlayerStatus.White) {\r\n                        this.gameResult = {\r\n                            result: 'b',\r\n                            note: 'WHITE RESIGN',\r\n                        };\r\n                    }\r\n                    else if (userStatus === enumTypes_7.PlayerStatus.Black) {\r\n                        this.gameResult = {\r\n                            result: 'w',\r\n                            note: 'BLACK RESIGN',\r\n                        };\r\n                    }\r\n                    this._emitGameEnd();\r\n                    //------//\r\n                    gameData_6.gameDat.pauseTime();\r\n                    this.endAudio.playOnce();\r\n                    this.startGameLoop = false;\r\n                    this.resign = false;\r\n                    this.acceptDraw = false;\r\n                    this.offerDraw = false;\r\n                    this.movementSys.turn(false);\r\n                    this.gameEnd = false;\r\n                    this.isPrepare = false;\r\n                    this.reqAckGameEndMsg = false;\r\n                    this.reqAckMovementMsg = false;\r\n                    this.gameResult = {\r\n                        result: undefined,\r\n                        note: undefined,\r\n                    };\r\n                    this.UIEvents.fireEvent(new controllerUIEvent_8.UINotificationEvent('gameBtnUI', false, ''));\r\n                    this.UIEvents.fireEvent(new controllerUIEvent_8.Init2DBoardEvent('resetUserStatus', enumTypes_7.PlayerStatus.Spectator));\r\n                    gameData_6.gameDat.reset();\r\n                }\r\n            }\r\n        };\r\n        return GameLogic;\r\n    }());\r\n    exports.GameLogic = GameLogic;\r\n});\r\ndefine(\"metas/metazone-api\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.MetaZoneAPI = void 0;\r\n    var MetaZoneAPI = /** @class */ (function () {\r\n        /**\r\n         * Stores initial user and parcel info to send to the backend on every request.\r\n         *\r\n         * @param callback        Callback after all async calls completed\r\n         */\r\n        function MetaZoneAPI(getProvider, getUserData, getCurrentRealm, EthereumController, EthConnect, dcl, callback) {\r\n            var _this = this;\r\n            this.server = {\r\n                realm: ''\r\n            };\r\n            this.user = {\r\n                name: 'Guest' + Math.floor(Math.random() * 1000000),\r\n                email: '',\r\n                eth_address: '',\r\n                data: null\r\n            };\r\n            this.parcel = {\r\n                plot_owner: '',\r\n                plot_x: 0,\r\n                plot_y: 0,\r\n                plot_contact: '',\r\n                plot_email: '',\r\n                plot_count: 0\r\n            };\r\n            this.eth = null;\r\n            this.getProvider = null;\r\n            this.EthConnect = null;\r\n            this.eth = EthereumController;\r\n            this.EthConnect = EthConnect;\r\n            this.getProvider = getProvider;\r\n            executeTask(function () { return __awaiter(_this, void 0, void 0, function () {\r\n                var _a, error_2, data, currentRealm;\r\n                var _this = this;\r\n                return __generator(this, function (_b) {\r\n                    switch (_b.label) {\r\n                        case 0:\r\n                            _b.trys.push([0, 2, , 3]);\r\n                            _a = this.user;\r\n                            return [4 /*yield*/, this.eth.getUserAccount()];\r\n                        case 1:\r\n                            _a.eth_address = _b.sent();\r\n                            log('ETH address: ', this.user.eth_address);\r\n                            return [3 /*break*/, 3];\r\n                        case 2:\r\n                            error_2 = _b.sent();\r\n                            log('ETH address: ', error_2.toString());\r\n                            return [3 /*break*/, 3];\r\n                        case 3: return [4 /*yield*/, getUserData()];\r\n                        case 4:\r\n                            data = _b.sent();\r\n                            log('User Data: ', data);\r\n                            if (data) {\r\n                                this.user.data = data;\r\n                                this.user.name = data.displayName ? data.displayName : this.user.name;\r\n                            }\r\n                            return [4 /*yield*/, getCurrentRealm()];\r\n                        case 5:\r\n                            currentRealm = _b.sent();\r\n                            log('Realm: ', currentRealm);\r\n                            if (currentRealm) {\r\n                                this.server.realm = currentRealm.displayName;\r\n                            }\r\n                            // Retrieve Parcel Data\r\n                            dcl.loadModule('ParcelIdentity').then(function () {\r\n                                dcl.callRpc('ParcelIdentity', 'getParcel', []).then(function (data) {\r\n                                    log('Parcel', data);\r\n                                    // Store scene data\r\n                                    var sceneBase = data.land.sceneJsonData ? data.land.sceneJsonData.scene.base : data.land.scene.scene.base;\r\n                                    var sceenBaseAxis = sceneBase.split(',');\r\n                                    _this.parcel.plot_x = sceenBaseAxis[0];\r\n                                    _this.parcel.plot_y = sceenBaseAxis[1];\r\n                                    _this.parcel.plot_owner = data.land.sceneJsonData ? data.land.sceneJsonData.owner : data.land.scene.owner;\r\n                                    _this.parcel.plot_contact = data.land.sceneJsonData ? data.land.sceneJsonData.contact.name : data.land.scene.contact.name;\r\n                                    _this.parcel.plot_email = data.land.sceneJsonData ? data.land.sceneJsonData.contact.email : data.land.scene.contact.email;\r\n                                    _this.parcel.plot_count = data.land.sceneJsonData ? data.land.sceneJsonData.scene.parcels.length : data.land.scene.parcels.length;\r\n                                    callback();\r\n                                });\r\n                            });\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            }); });\r\n        }\r\n        return MetaZoneAPI;\r\n    }());\r\n    exports.MetaZoneAPI = MetaZoneAPI;\r\n});\r\ndefine(\"metas/pawnssquare/pawnssquare\", [\"require\", \"exports\", \"metas/pawnssquare/modules/dat/gameData\", \"metas/pawnssquare/modules/logic/playerMatching\", \"metas/pawnssquare/modules/logic/gameLogic\", \"metas/pawnssquare/modules/resources/modelResources\", \"metas/pawnssquare/modules/UI/controllerUIEvent\", \"metas/pawnssquare/modules/UI/UIData\"], function (require, exports, gameData_7, playerMatching_1, gameLogic_1, modelResources_5, controllerUIEvent_9, UIData_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.PawnsSquare = void 0;\r\n    var PawnsSquare = /** @class */ (function () {\r\n        function PawnsSquare(host_data) {\r\n            this.META_ID = 1;\r\n            this.HOST_ID = 1;\r\n            this.api = null;\r\n            this.host = null;\r\n            this.UID = null;\r\n            this.UEth = null;\r\n            this.URealm = null;\r\n            this.SID = null;\r\n            this.host = JSON.parse(host_data.host_data);\r\n            log(\"LOADING PAWN'S SQUARE\");\r\n            if (host_data.id !== undefined) {\r\n                this.HOST_ID = host_data.id;\r\n            }\r\n            this.UID = gameData_7.userDat.getUID();\r\n            this.UEth = gameData_7.userDat.getETHAdd();\r\n            this.URealm = gameData_7.userDat.getURealm();\r\n            this.msgBus = new MessageBus();\r\n            this.UIEvents = new EventManager();\r\n            this._loadingModel();\r\n            //time control update\r\n            gameData_7.gameDat.changeTimeControl(Number(this.host.time_control));\r\n            this._gameSetup();\r\n            this.updatePivot();\r\n        }\r\n        PawnsSquare.prototype._loadingModel = function () {\r\n            this.scenePivot = new Entity();\r\n            this.scenePivot.addComponent(new Transform({\r\n                position: new Vector3(this.host.system_pivot.position.x, this.host.system_pivot.position.y, this.host.system_pivot.position.z),\r\n                scale: new Vector3(this.host.system_pivot.scale.x, this.host.system_pivot.scale.y, this.host.system_pivot.scale.z),\r\n            }));\r\n            this.boardEnt = new Entity();\r\n            this.boardEnt.addComponent(modelResources_5.default.defaultSceneModel.static_board);\r\n            this.boardEnt.setParent(this.scenePivot);\r\n            this.scenePivotBottom = new Entity();\r\n            this.scenePivotBottom.addComponent(new Transform({\r\n                position: new Vector3(this.host.decoration_bottom.position.x, this.host.decoration_bottom.position.y, this.host.decoration_bottom.position.z),\r\n                scale: new Vector3(this.host.decoration_bottom.scale.x, this.host.decoration_bottom.scale.y, this.host.decoration_bottom.scale.z),\r\n            }));\r\n            this.staticBottom = new Entity();\r\n            this.staticBottom.addComponent(modelResources_5.default.defaultSceneModel.static_bottom);\r\n            this.staticBottom.setParent(this.scenePivotBottom);\r\n            engine.addEntity(this.scenePivot);\r\n            engine.addEntity(this.scenePivotBottom);\r\n        };\r\n        PawnsSquare.prototype._gameSetup = function () {\r\n            var _this = this;\r\n            this.SID = this.URealm + this.META_ID.toString();\r\n            /*\r\n                log('<init> user_display_name: ', this.UID)\r\n                log('<init> user_realm: ', this.URealm)\r\n                log('<init> HOST_ID: ', this.HOST_ID)\r\n                */\r\n            //player matching\r\n            this.playerMatching = new playerMatching_1.PlayerMatching(this.msgBus, this.UIEvents, this.HOST_ID);\r\n            //game logic\r\n            this.gameLogic = new gameLogic_1.GameLogic(this.msgBus, this.UIEvents, this.ServerEvents, this.HOST_ID);\r\n            //setup UI Receiver\r\n            this.uiData = new UIData_1.UIData(this.HOST_ID.toString(), this.UID, this.UIEvents);\r\n            this.UIEventReceiver = new controllerUIEvent_9.UIEventReceiver(this.UID, this.UIEvents, this.uiData);\r\n            this.UIEvents.addListener(controllerUIEvent_9.UISyncEvent, null, function () {\r\n                //this.gameLogic.boardPieces.clearBoard()\r\n                _this.playerMatching.reSync();\r\n                _this.gameLogic.reSync();\r\n            });\r\n        };\r\n        PawnsSquare.prototype.updatePivot = function () {\r\n            //player matching update (player play button)\r\n            //game logic update (system pivot)\r\n            this.playerMatching.updatePivot(this.host.system_pivot.position.x, this.host.system_pivot.position.y, this.host.system_pivot.position.z, this.host.system_pivot.scale.x);\r\n            this.gameLogic.updatePivot(this.host.system_pivot.position.x, this.host.system_pivot.position.y, this.host.system_pivot.position.z, this.host.system_pivot.scale.x);\r\n            this.uiData.UIPivot.set(this.host.system_pivot.position.x, this.host.system_pivot.position.y, this.host.system_pivot.position.z);\r\n        };\r\n        return PawnsSquare;\r\n    }());\r\n    exports.PawnsSquare = PawnsSquare;\r\n});\r\ndefine(\"src/game\", [\"require\", \"exports\", \"src/modules/teleports\", \"src/modules/platforms\", \"src/modules/wearables\", \"src/modules/museumItems\", \"src/modules/video\", \"src/modules/buildings\", \"src/modules/npcFaceUserSystem\", \"src/modules/npcRobotBuilder\", \"src/modules/nftBuilder\", \"src/piano/pianoBuilder\", \"src/modules/serverHandler\", \"src/modules/ambientSound\", \"src/zenquencer/zenquencerBuilder\", \"src/modules/eventBoard\", \"src/modules/Utils\", \"@decentraland/Identity\", \"metas/sammich/sammich\", \"metas/pawnssquare/pawnssquare\", \"@decentraland/EnvironmentAPI\", \"metas/pawnssquare/modules/dat/gameData\"], function (require, exports, teleports_2, platforms_1, wearables_2, museumItems_2, video_1, buildings_1, npcFaceUserSystem_4, npcRobotBuilder_4, nftBuilder_2, pianoBuilder_1, serverHandler_13, ambientSound_1, zenquencerBuilder_2, eventBoard_1, Utils_1, Identity_1, sammich_1, pawnssquare_1, EnvironmentAPI_2, gameData_8) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    //////// LOG PLAYER POSITION\r\n    Input.instance.subscribe('BUTTON_DOWN', ActionButton.PRIMARY, false, function (e) {\r\n        log(\"pos: \", Camera.instance.position);\r\n        log(\"rot: \", Camera.instance.rotation);\r\n    });\r\n    //// ADD BUILDINGS\r\n    buildings_1.addBuildings();\r\n    /// MOVING PLATFORMS\r\n    platforms_1.placePlatforms();\r\n    ///TELEPORTERS\r\n    teleports_2.placeTeleports();\r\n    /// VIDEO SCEREEN\r\n    video_1.addScreen();\r\n    /// EVENTS BOARD\r\n    eventBoard_1.createEventsBoard({\r\n        position: new Vector3(175.8, 3.5, 168),\r\n        rotation: Quaternion.Euler(0, 225, 0),\r\n    });\r\n    /// WEARABLES\r\n    Utils_1.addOneTimeTrigger(new Vector3(180, 2, 244), new Vector3(60, 60, 60), function () {\r\n        museumItems_2.placeMuseumPieces();\r\n    });\r\n    /// MUSEUM\r\n    Utils_1.addOneTimeTrigger(new Vector3(273, 2, 127), new Vector3(50, 50, 50), function () {\r\n        wearables_2.addWearables();\r\n        museumItems_2.placeWearablePieces();\r\n    });\r\n    /// TRADE CENTER\r\n    Utils_1.addOneTimeTrigger(new Vector3(269, 5, 37), new Vector3(80, 80, 80), function () {\r\n        serverHandler_13.updateMarketData();\r\n        museumItems_2.placeTradecenterPieces();\r\n    });\r\n    /// GARDEN\r\n    Utils_1.addOneTimeTrigger(new Vector3(118, 3, 39), new Vector3(60, 60, 60), function () {\r\n        museumItems_2.placeGardenPieces();\r\n    });\r\n    /// ROBOTS\r\n    var dummyTarget = new Entity();\r\n    dummyTarget.addComponent(new PlaneShape());\r\n    dummyTarget.addComponent(new Transform());\r\n    npcFaceUserSystem_4.addFaceUserSystem(dummyTarget);\r\n    npcRobotBuilder_4.addRobots(dummyTarget);\r\n    /// NFTS\r\n    nftBuilder_2.addNFTs();\r\n    /// Piano\r\n    // BUG: need to hot reload for the red out of bound indicators to disappear - works fine when deployed\r\n    pianoBuilder_1.addPiano();\r\n    /// Sequencer Fountain\r\n    zenquencerBuilder_2.addZenquencer();\r\n    /// AMBIENT SOUNDS\r\n    var forest1 = new ambientSound_1.AmbientSound({ position: new Vector3(215, 2, 183) }, 'sounds/Forest.mp3', 0, true, 0.6);\r\n    var forest2 = new ambientSound_1.AmbientSound({ position: new Vector3(117, 2, 42) }, 'sounds/Forest2.mp3', 0, true, 0.6);\r\n    // let thunder = new AmbientSound(\r\n    //   { position: new Vector3(43, 45, 113) },\r\n    //   'sounds/thunder.mp3',\r\n    //   0,\r\n    //   true,\r\n    //   0.2\r\n    // )\r\n    /// METAS\r\n    /***\r\n     * SAMMICH-GAME CODE BELLOW\r\n     */\r\n    var landOwnerData = {\r\n        host_data: \"{\\n\\t  \\\"sammichgame\\\":{\\n\\t\\t\\\"position\\\":{\\\"x\\\":\" + (9 * 16 - 11.1) + \",\\\"y\\\":1.4,\\\"z\\\":\" + (9 * 16 + 8) + \"},\\n\\t\\t\\\"rotation\\\":{\\\"x\\\":0,\\\"y\\\":270,\\\"z\\\":0},\\n\\t\\t\\\"scale\\\":{\\\"x\\\":1.2, \\\"y\\\":1.05, \\\"z\\\":1},     \\n\\t\\t\\\"hideBoard\\\": false,\\n\\t\\t\\\"hideAd\\\": true,\\n\\t\\t\\\"gameID\\\": \\\"0,0\\\",\\n\\t\\t\\\"soundDistance\\\": 16,\\n\\t\\t\\\"showScenario\\\": false,\\n\\t\\t\\\"hideFrame\\\": true,\\n\\t\\t\\\"showJoinVoice\\\": false,\\n\\t\\t\\\"voiceChannel\\\": \\\"dcl-sammich-game\\\",\\n\\t\\t\\\"serverWs\\\": \\\"wss://foo.mana-fever.fun\\\",\\n\\t\\t\\\"serverHttp\\\": \\\"https://foo.mana-fever.fun\\\"\\n\\t  }\\n   }\",\r\n    };\r\n    var sammichFrame = new Entity();\r\n    var sammichFrameShape = new GLTFShape('models/sammich-screen.glb');\r\n    sammichFrameShape.isPointerBlocker = false;\r\n    sammichFrame.addComponent(sammichFrameShape);\r\n    sammichFrame.addComponent(new Transform({\r\n        position: new Vector3(9 * 16 - 11, 0.5, 9 * 16 + 8),\r\n        scale: new Vector3(1.2, 1.2, 1.2),\r\n        rotation: Quaternion.Euler(0, 90, 0),\r\n    }));\r\n    engine.addEntity(sammichFrame);\r\n    engine.addSystem(new sammich_1.default({ getUserData: Identity_1.getUserData }, landOwnerData));\r\n    var FetchuserInformation = function () { return __awaiter(void 0, void 0, void 0, function () {\r\n        var userInfo, publicKeyInfo, realm;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, Identity_1.getUserData()];\r\n                case 1:\r\n                    userInfo = _a.sent();\r\n                    if (userInfo !== undefined)\r\n                        gameData_8.userDat.setUID(userInfo.displayName);\r\n                    else\r\n                        gameData_8.userDat.setUID('Guest' + Math.floor(Math.random() * 1000000));\r\n                    return [4 /*yield*/, Identity_1.getUserPublicKey()];\r\n                case 2:\r\n                    publicKeyInfo = _a.sent();\r\n                    gameData_8.userDat.setETHAdd(publicKeyInfo);\r\n                    return [4 /*yield*/, EnvironmentAPI_2.getCurrentRealm()];\r\n                case 3:\r\n                    realm = _a.sent();\r\n                    gameData_8.userDat.setRealm(realm.displayName);\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    FetchuserInformation()\r\n        .then(function () {\r\n        var chessBoardLandOwnerData = {\r\n            host_data: \"{\\n              \\\"time_control\\\": 600,\\n              \\\"system_pivot\\\": {\\n\\t\\t\\t\\t\\\"position\\\": {\\\"x\\\":180, \\\"y\\\":1.2, \\\"z\\\":152},\\n\\t\\t\\t\\t\\\"scale\\\": {\\\"x\\\":1, \\\"y\\\":1, \\\"z\\\":1}\\n              },\\n              \\\"chessboard\\\": {\\n                  \\\"visible\\\": true,\\n\\t\\t\\t\\t  \\\"position\\\": {\\\"x\\\":180, \\\"y\\\":1.2, \\\"z\\\":152},\\n                  \\\"scale\\\": {\\\"x\\\":1.1, \\\"y\\\":1.1, \\\"z\\\":1.1}\\n              },\\n              \\\"decoration_bottom\\\": {\\n                  \\\"visible\\\": true,\\n                  \\\"position\\\": {\\\"x\\\":180, \\\"y\\\":0.7, \\\"z\\\":152},\\n                  \\\"rotation\\\": {\\\"x\\\":0, \\\"y\\\":0, \\\"z\\\":0},\\n                  \\\"scale\\\": {\\\"x\\\":0.8, \\\"y\\\":0.8, \\\"z\\\":0.8}\\n              }\\n          }\",\r\n        };\r\n        new pawnssquare_1.PawnsSquare(chessBoardLandOwnerData);\r\n    })\r\n        .catch(function (err) {\r\n        log(\"Can't load Pawn's Square, fetch user data failed\", err);\r\n    });\r\n});\r\n// const mzAPI = new MetaZoneAPI(\r\n//   getProvider,\r\n//   getUserData,\r\n//   getCurrentRealm,\r\n//   EthereumController,\r\n//   EthConnect,\r\n//   dcl,\r\n//   () => {\r\n//     const chessBoardLandOwnerData = {\r\n//       host_data: `{\r\n//               \"time_control\": 600,\r\n//               \"system_pivot\": {\r\n//                   \"position\": {\"x\":180, \"y\":1.2, \"z\":152},\r\n//                   \"scale\": {\"x\":1, \"y\":1, \"z\":1}\r\n//               },\r\n//               \"chessboard\": {\r\n//                   \"visible\": true,\r\n// \t\t\t\t  \"position\": {\"x\":180, \"y\":1.2, \"z\":152},\r\n//                   \"scale\": {\"x\":1, \"y\":1, \"z\":1}\r\n//               },\r\n//               \"decoration_bottom\": {\r\n//                   \"visible\": true,\r\n// \t\t\t\t  \"position\": {\"x\":180, \"y\":0.7, \"z\":152},\r\n//                   \"rotation\": {\"x\":0, \"y\":0, \"z\":0},\r\n//                   \"scale\": {\"x\":1, \"y\":1, \"z\":1}\r\n//               },\r\n//               \"decoration_top\":{\r\n//                   \"visible\": true,\r\n// \t\t\t\t  \"position\": {\"x\":180, \"y\":0.7, \"z\":152},\r\n//                   \"rotation\": {\"x\":0, \"y\":0, \"z\":0},\r\n//                   \"scale\": {\"x\":1, \"y\":1, \"z\":1}\r\n//               }\r\n//           }`,\r\n//     }\r\n//     engine.addSystem(new PawnsSquare(mzAPI, chessBoardLandOwnerData))\r\n//   }\r\n// )\r\ndefine(\"src/modules/artichoke\", [\"require\", \"exports\", \"src/modules/serverHandler\", \"node_modules/decentraland-ecs-utils/index\"], function (require, exports, serverHandler_14, index_18) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.ConsoleButton = exports.Radios = void 0;\r\n    var Radios;\r\n    (function (Radios) {\r\n        Radios[\"RAVE\"] = \"https://icecast.ravepartyradio.org/ravepartyradio-192.mp3\";\r\n        Radios[\"INTERVIEW\"] = \"https://dclcoreradio.com/dclradio.ogg\";\r\n        Radios[\"DELTA\"] = \"https://cdn.instream.audio/:9069/stream?_=171cd6c2b6e\";\r\n        Radios[\"SIGNS\"] = \"https://edge.singsingmusic.net/MC2.mp3\";\r\n        Radios[\"MKLAB\"] = \"https://freeuk13.listen2myradio.com/live.mp3?typeportmount=s2_20223_stream_944192845\";\r\n    })(Radios = exports.Radios || (exports.Radios = {}));\r\n    var isInRadioRange = false;\r\n    var currentRadio = null;\r\n    var musicStreamEnt = new Entity();\r\n    engine.addEntity(musicStreamEnt);\r\n    var musicStream = null;\r\n    var baseConsole = new Entity();\r\n    baseConsole.addComponent(new GLTFShape('models/console-artichoke/base_console.glb'));\r\n    baseConsole.addComponent(new Transform({\r\n        position: new Vector3(44.8, 8.5, 36.8),\r\n        rotation: Quaternion.Euler(0, 60, 0),\r\n    }));\r\n    engine.addEntity(baseConsole);\r\n    var ConsoleButton = /** @class */ (function (_super) {\r\n        __extends(ConsoleButton, _super);\r\n        function ConsoleButton(model, parent, animationName) {\r\n            var _this = _super.call(this) || this;\r\n            engine.addEntity(_this);\r\n            _this.addComponent(model);\r\n            _this.setParent(parent);\r\n            _this.addComponent(new AudioSource(new AudioClip('sounds/click.mp3')));\r\n            _this.addComponent(new Animator());\r\n            _this.clickAnim = new AnimationState(animationName, { looping: false });\r\n            _this.getComponent(Animator).addClip(_this.clickAnim);\r\n            return _this;\r\n        }\r\n        /**\r\n         * A button can be pressed.  At the moment this just plays a sound effect\r\n         * but maybe an animation will be added in the future as well.\r\n         */\r\n        ConsoleButton.prototype.press = function () {\r\n            this.clickAnim.stop(); // bug workaround\r\n            this.clickAnim.play();\r\n            this.getComponent(AudioSource).playOnce();\r\n        };\r\n        return ConsoleButton;\r\n    }(Entity));\r\n    exports.ConsoleButton = ConsoleButton;\r\n    var blueButton = new ConsoleButton(new GLTFShape('models/console-artichoke/blue_button.glb'), baseConsole, 'Blue_ButtonAction');\r\n    blueButton.addComponent(new OnPointerDown(function () {\r\n        serverHandler_14.sceneMessageBus.emit('setRadio', {\r\n            station: Radios.RAVE,\r\n        });\r\n        blueButton.press();\r\n    }, {\r\n        button: ActionButton.PRIMARY,\r\n        hoverText: 'Rave',\r\n    }));\r\n    var greenButton = new ConsoleButton(new GLTFShape('models/console-artichoke/green_button.glb'), baseConsole, 'Green_ButtonAction');\r\n    greenButton.addComponent(new OnPointerDown(function () {\r\n        serverHandler_14.sceneMessageBus.emit('setRadio', {\r\n            station: Radios.INTERVIEW,\r\n        });\r\n        greenButton.press();\r\n    }, {\r\n        button: ActionButton.PRIMARY,\r\n        hoverText: 'DCL Interviews',\r\n    }));\r\n    var lightBlueButton = new ConsoleButton(new GLTFShape('models/console-artichoke/lightblue_button.glb'), baseConsole, 'Lightblue_ButtonAction');\r\n    lightBlueButton.addComponent(new OnPointerDown(function () {\r\n        serverHandler_14.sceneMessageBus.emit('setRadio', {\r\n            station: Radios.DELTA,\r\n        });\r\n        lightBlueButton.press();\r\n    }, {\r\n        button: ActionButton.PRIMARY,\r\n        hoverText: 'Delta',\r\n    }));\r\n    var redButton = new ConsoleButton(new GLTFShape('models/console-artichoke/red_button.glb'), baseConsole, 'Red_ButtonAction');\r\n    redButton.addComponent(new OnPointerDown(function () {\r\n        serverHandler_14.sceneMessageBus.emit('setRadio', {\r\n            station: Radios.SIGNS,\r\n        });\r\n        redButton.press();\r\n    }, {\r\n        button: ActionButton.PRIMARY,\r\n        hoverText: 'Signs',\r\n    }));\r\n    var yellowButton = new ConsoleButton(new GLTFShape('models/console-artichoke/yellow_button.glb'), baseConsole, 'Yellow_ButtonAction');\r\n    yellowButton.addComponent(new OnPointerDown(function () {\r\n        serverHandler_14.sceneMessageBus.emit('setRadio', {\r\n            station: Radios.MKLAB,\r\n        });\r\n        yellowButton.press();\r\n    }, {\r\n        button: ActionButton.PRIMARY,\r\n        hoverText: 'Signs',\r\n    }));\r\n    serverHandler_14.sceneMessageBus.on('setRadio', function (e) {\r\n        //  if()  if close\r\n        if (musicStream) {\r\n            musicStream.playing = false;\r\n            musicStream = null;\r\n        }\r\n        currentRadio = e.station;\r\n        radioOn(e.station);\r\n    });\r\n    function radioOn(station) {\r\n        LightsA.play();\r\n        LightsB.play();\r\n        LightsC.play();\r\n        if (isInRadioRange) {\r\n            musicStreamEnt.addComponent(new index_18.default.Delay(100, function () {\r\n                musicStream = new AudioStream(station);\r\n                musicStreamEnt.addComponentOrReplace(musicStream);\r\n            }));\r\n        }\r\n    }\r\n    function radioOff() {\r\n        LightsA.stop();\r\n        LightsB.stop();\r\n        LightsC.stop();\r\n        if (musicStream) {\r\n            musicStream.playing = false;\r\n        }\r\n    }\r\n    ///// LIGTHS\r\n    var LightsA = new AnimationState('Lights_Anim');\r\n    var LightsB = new AnimationState('LightsB_Artichoke');\r\n    var LightsC = new AnimationState('LightsC_Artichoke');\r\n    var artichokeLightsA = new Entity();\r\n    artichokeLightsA.addComponent(new GLTFShape('models/LightsA_Artichoke.glb'));\r\n    artichokeLightsA.addComponent(new Transform({\r\n        rotation: Quaternion.Euler(0, 180, 0),\r\n    }));\r\n    artichokeLightsA.addComponent(new Animator()).addClip(LightsA);\r\n    engine.addEntity(artichokeLightsA);\r\n    var artichokeLightsB = new Entity();\r\n    artichokeLightsB.addComponent(new GLTFShape('models/LightsB_Artichoke.glb'));\r\n    artichokeLightsB.addComponent(new Transform({\r\n        rotation: Quaternion.Euler(0, 180, 0),\r\n    }));\r\n    artichokeLightsB.addComponent(new Animator()).addClip(LightsB);\r\n    engine.addEntity(artichokeLightsB);\r\n    var artichokeLightsC = new Entity();\r\n    artichokeLightsC.addComponent(new GLTFShape('models/LightsC_Artichoke.glb'));\r\n    artichokeLightsC.addComponent(new Transform({\r\n        rotation: Quaternion.Euler(0, 180, 0),\r\n    }));\r\n    artichokeLightsC.addComponent(new Animator()).addClip(LightsC);\r\n    engine.addEntity(artichokeLightsC);\r\n    LightsA.stop();\r\n    LightsB.stop();\r\n    LightsC.stop();\r\n    var artichokeTrigger = new Entity();\r\n    artichokeTrigger.addComponent(new Transform({ position: new Vector3(47, 6, 46) }));\r\n    var artichokeTriggerBox = new index_18.default.TriggerBoxShape(new Vector3(90, 14, 90), Vector3.Zero());\r\n    artichokeTrigger.addComponent(new index_18.default.TriggerComponent(artichokeTriggerBox, //shape\r\n    0, //layer\r\n    0, //triggeredByLayer\r\n    null, //onTriggerEnter\r\n    null, //onTriggerExit\r\n    function () {\r\n        serverHandler_14.sceneMessageBus.emit('enteredRadioRange', {});\r\n        isInRadioRange = true;\r\n        if (currentRadio) {\r\n            radioOn(currentRadio);\r\n        }\r\n        log('triggered!');\r\n    }, function () {\r\n        isInRadioRange = false;\r\n        radioOff();\r\n    }, //onCameraExit\r\n    false));\r\n    engine.addEntity(artichokeTrigger);\r\n    serverHandler_14.sceneMessageBus.on('enteredRadioRange', function (e) {\r\n        if (!isInRadioRange || currentRadio == null)\r\n            return;\r\n        serverHandler_14.sceneMessageBus.emit('setRadio', {\r\n            station: currentRadio,\r\n        });\r\n    });\r\n});\r\n//# sourceMappingURL=data:application/json;base64,\n//# sourceURL=dcl:///bin/game.js");